//+-----------------------------------------------
//
//  Microsoft Site Server v3.00
//  Copyright (C) 1997-1998 Microsoft Corporation.  All rights reserved.
//
//  File:		idxadminsdk.idl
//
//  Contents:   Defines Site Server Indexer admin interfaces
//
//  Interfaces: 
//				IIndexDs
//				ICatalogSearchServerList
//
//+-----------------------------------------------

[
    object,
    public,
    uuid(798e43e0-c659-11d0-8f55-00c04fb67f46),
    dual,
    helpstring("Search Server Information"),
    pointer_default(unique)
]
interface IIndexDs: IDispatch
{
    import "oaidl.idl";
    
    [propget, helpstring("Returns the name of the Search Server.") ]
    HRESULT Name( [out, retval] BSTR * pbstrName );

    [propget, helpstring("Returns the prop destination location.")]
    HRESULT PropDestination([out, retval] BSTR * pbstrDestination );

    [propput, helpstring("Sets the prop destination location.")]
    HRESULT PropDestination([in] BSTR bstrDestination );

};

[
    object,
    public,
    uuid(549b5add-c1d1-11d0-8107-00c04fc29723),
    dual,
    helpstring("A Catalog's List of Search Servers to propagate to"),
    pointer_default(unique)
]
interface ICatalogSearchServerList: IDispatch
{
    import "oaidl.idl";
    
    [propget, helpstring("Returns number of search servers in collection.")]
    HRESULT Count([out, retval] long* pCount);

    [propget, id(DISPID_VALUE),
        helpstring("Given name, returns an item in the collection.")]
    HRESULT Item([in] BSTR bstrName, [out, retval] VARIANT* pCatalog );

    [propget, restricted, id(DISPID_NEWENUM),
        helpstring("returns an enumerator for the collection.")]
    HRESULT _NewEnum([out, retval] IUnknown** pNewEnum);        

    HRESULT Add([in] BSTR bstrServer, [out, retval] VARIANT * pIndexDs );

    HRESULT Remove([in] BSTR bstrServer);

};


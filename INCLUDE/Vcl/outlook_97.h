// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.151.1.0.1.21  $
// File generated on 1/28/2002 7:55:38 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\program files\microsoft office\office97\office\msoutl8.olb (1)
// LIBID: {00062FFF-0000-0000-C000-000000000046}
// LCID: 0
// Helpfile: C:\Program Files\Microsoft Office\office97\Office\VBAOUTL.HLP
// HelpString: Microsoft Outlook 8.0 Object Library
// DepndLst: 
//   (1) v1.0 stdole, (C:\WINNT\System32\stdole32.tlb)
//   (2) v2.0 Office, (C:\Program Files\Microsoft Office\office97\Office\MSO97.DLL)
//   (3) v2.0 MSForms, (C:\WINNT\System32\FM20.DLL)
//   (4) v2.0 StdType, (C:\WINNT\System32\olepro32.dll)
// ************************************************************************ //
#ifndef   Outlook_97H
#define   Outlook_97H

#pragma option push -b -w-inl

#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if defined(USING_ATLVCL) || defined(USING_ATL)
#if !defined(__TLB_NO_EVENT_WRAPPERS)
#include <atl/atlmod.h>
#endif
#endif
#include "Office_97.h"
#include "MSForms_97.h"


// *********************************************************************//
// Forward reference of some VCL types (to avoid including STDVCL.HPP)    
// *********************************************************************//
namespace Stdvcl {class IStrings; class IStringsDisp;}
using namespace Stdvcl;
typedef TComInterface<IStrings> IStringsPtr;
typedef TComInterface<IStringsDisp> IStringsDispPtr;

namespace Outlook_97
{

// *********************************************************************//
// HelpString: Microsoft Outlook 8.0 Object Library
// Version:    8.0
// *********************************************************************//

/*   **********************************************************

  Type Library Options: 
  Generate C++ Import file
  Expose namespace with 'using'.
  Generate files for dependant type libraries
  Map HRESULT to safecall on dual interfaces
  Place warnings in imported files
  Generate IDE registration for component wrappers
  Generate dispinterfaces
  Generate CoClassCreator wrappers
  Generate C++Builder 4.0 event wrappers for servers
  Generate VCL component wrappers for servers
  Force use of a _TLB file
  Ignore Standard Type Libraries
  Show Debug Output
  Place comments in imported files
   ******************************************************** */

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLSID_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
extern __declspec (package) const GUID LIBID_Outlook;
extern __declspec (package) const GUID GUID_OlAttachmentType;
extern __declspec (package) const GUID GUID_OlBusyStatus;
extern __declspec (package) const GUID GUID_OlDaysOfWeek;
extern __declspec (package) const GUID GUID_OlDefaultFolders;
extern __declspec (package) const GUID GUID_OlFolderDisplayMode;
extern __declspec (package) const GUID GUID_OlFormRegistry;
extern __declspec (package) const GUID GUID_OlGender;
extern __declspec (package) const GUID GUID_OlImportance;
extern __declspec (package) const GUID GUID_OlInspectorClose;
extern __declspec (package) const GUID GUID_OlItems;
extern __declspec (package) const GUID GUID_OlJournalRecipientType;
extern __declspec (package) const GUID GUID_OlMailingAddress;
extern __declspec (package) const GUID GUID_OlMailRecipientType;
extern __declspec (package) const GUID GUID_OlMeetingRecipientType;
extern __declspec (package) const GUID GUID_OlMeetingStatus;
extern __declspec (package) const GUID GUID_OlNoteColor;
extern __declspec (package) const GUID GUID_OlRecurrenceType;
extern __declspec (package) const GUID GUID_OlRemoteStatus;
extern __declspec (package) const GUID GUID_OlMeetingResponse;
extern __declspec (package) const GUID GUID_OlResponseStatus;
extern __declspec (package) const GUID GUID_OlSaveAsType;
extern __declspec (package) const GUID GUID_OlSensitivity;
extern __declspec (package) const GUID GUID_OlFlagStatus;
extern __declspec (package) const GUID GUID_OlTaskDelegationState;
extern __declspec (package) const GUID GUID_OlTaskOwnership;
extern __declspec (package) const GUID GUID_OlTaskRecipientType;
extern __declspec (package) const GUID GUID_OlTaskResponse;
extern __declspec (package) const GUID GUID_OlTaskStatus;
extern __declspec (package) const GUID GUID_OlTrackingStatus;
extern __declspec (package) const GUID GUID_OlUserPropertyType;
extern __declspec (package) const GUID GUID_OlActionCopyLike;
extern __declspec (package) const GUID GUID_OlActionReplyStyle;
extern __declspec (package) const GUID GUID_OlActionResponseStyle;
extern __declspec (package) const GUID GUID_OlActionShowOn;
extern __declspec (package) const GUID IID__IItemEvents;
extern __declspec (package) const GUID DIID__DItemEvents;
extern __declspec (package) const GUID IID__IAction;
extern __declspec (package) const GUID DIID_Action;
extern __declspec (package) const GUID IID__IActions;
extern __declspec (package) const GUID DIID_Actions;
extern __declspec (package) const GUID IID__IApplication;
extern __declspec (package) const GUID DIID__DApplication;
extern __declspec (package) const GUID CLSID_OutlookApplication;
extern __declspec (package) const GUID IID__IAppointmentItem;
extern __declspec (package) const GUID DIID__DAppointmentItem;
extern __declspec (package) const GUID CLSID_AppointmentItem;
extern __declspec (package) const GUID IID__IAttachment;
extern __declspec (package) const GUID DIID_Attachment;
extern __declspec (package) const GUID IID__IAttachments;
extern __declspec (package) const GUID DIID_Attachments;
extern __declspec (package) const GUID IID__IContactItem;
extern __declspec (package) const GUID DIID__DContactItem;
extern __declspec (package) const GUID CLSID_ContactItem;
extern __declspec (package) const GUID IID__IExplorer;
extern __declspec (package) const GUID DIID_Explorer;
extern __declspec (package) const GUID IID__IFolders;
extern __declspec (package) const GUID DIID_Folders;
extern __declspec (package) const GUID IID__IFormDescription;
extern __declspec (package) const GUID DIID_FormDescription;
extern __declspec (package) const GUID IID__IInspector;
extern __declspec (package) const GUID DIID_Inspector;
extern __declspec (package) const GUID IID__IItems;
extern __declspec (package) const GUID DIID_Items;
extern __declspec (package) const GUID IID__IJournalItem;
extern __declspec (package) const GUID DIID__DJournalItem;
extern __declspec (package) const GUID CLSID_JournalItem;
extern __declspec (package) const GUID IID__IMailItem;
extern __declspec (package) const GUID DIID__DMailItem;
extern __declspec (package) const GUID CLSID_MailItem;
extern __declspec (package) const GUID IID__IMAPIFolder;
extern __declspec (package) const GUID DIID_MAPIFolder;
extern __declspec (package) const GUID IID__IMeetingCanceledItem;
extern __declspec (package) const GUID DIID__DMeetingCanceledItem;
extern __declspec (package) const GUID CLSID__MeetingCanceledItem;
extern __declspec (package) const GUID IID__IMeetingRequestAcceptedItem;
extern __declspec (package) const GUID DIID__DMeetingRequestAcceptedItem;
extern __declspec (package) const GUID CLSID__MeetingRequestAcceptedItem;
extern __declspec (package) const GUID IID__IMeetingRequestDeclinedItem;
extern __declspec (package) const GUID DIID__DMeetingRequestDeclinedItem;
extern __declspec (package) const GUID CLSID__MeetingRequestDeclinedItem;
extern __declspec (package) const GUID IID__IMeetingRequestItem;
extern __declspec (package) const GUID DIID__DMeetingRequestItem;
extern __declspec (package) const GUID CLSID_MeetingRequestItem;
extern __declspec (package) const GUID IID__IMeetingRequestTentativeItem;
extern __declspec (package) const GUID DIID__DMeetingRequestTentativeItem;
extern __declspec (package) const GUID CLSID__MeetingRequestTentativeItem;
extern __declspec (package) const GUID IID__INameSpace;
extern __declspec (package) const GUID DIID_NameSpace;
extern __declspec (package) const GUID IID__INoteItem;
extern __declspec (package) const GUID DIID__DNoteItem;
extern __declspec (package) const GUID CLSID_NoteItem;
extern __declspec (package) const GUID IID__IOfficeDocumentItem;
extern __declspec (package) const GUID DIID__DOfficeDocumentItem;
extern __declspec (package) const GUID CLSID__OfficeDocumentItem;
extern __declspec (package) const GUID IID__IPages;
extern __declspec (package) const GUID DIID_Pages;
extern __declspec (package) const GUID IID__IPostItem;
extern __declspec (package) const GUID DIID__DPostItem;
extern __declspec (package) const GUID CLSID_PostItem;
extern __declspec (package) const GUID IID__IRecipient;
extern __declspec (package) const GUID DIID_Recipient;
extern __declspec (package) const GUID IID__IRecipients;
extern __declspec (package) const GUID DIID_Recipients;
extern __declspec (package) const GUID IID__IRecurrencePattern;
extern __declspec (package) const GUID DIID_RecurrencePattern;
extern __declspec (package) const GUID IID__IRemoteItem;
extern __declspec (package) const GUID DIID__DRemoteItem;
extern __declspec (package) const GUID CLSID_RemoteItem;
extern __declspec (package) const GUID IID__IReportItem;
extern __declspec (package) const GUID DIID__DReportItem;
extern __declspec (package) const GUID CLSID_ReportItem;
extern __declspec (package) const GUID IID__ITaskItem;
extern __declspec (package) const GUID DIID__DTaskItem;
extern __declspec (package) const GUID CLSID_TaskItem;
extern __declspec (package) const GUID IID__ITaskRequestAcceptItem;
extern __declspec (package) const GUID DIID__DTaskRequestAcceptItem;
extern __declspec (package) const GUID CLSID__TaskRequestAcceptItem;
extern __declspec (package) const GUID IID__ITaskRequestDeclineItem;
extern __declspec (package) const GUID DIID__DTaskRequestDeclineItem;
extern __declspec (package) const GUID CLSID__TaskRequestDeclineItem;
extern __declspec (package) const GUID IID__ITaskRequestItem;
extern __declspec (package) const GUID DIID__DTaskRequestItem;
extern __declspec (package) const GUID CLSID_TaskRequestItem;
extern __declspec (package) const GUID IID__ITaskRequestUpdateItem;
extern __declspec (package) const GUID DIID__DTaskRequestUpdateItem;
extern __declspec (package) const GUID CLSID__TaskRequestUpdateItem;
extern __declspec (package) const GUID IID__IUserProperties;
extern __declspec (package) const GUID DIID_UserProperties;
extern __declspec (package) const GUID IID__IUserProperty;
extern __declspec (package) const GUID DIID_UserProperty;
extern __declspec (package) const GUID IID__IRecipientControl;
extern __declspec (package) const GUID DIID__DRecipientControl;
extern __declspec (package) const GUID DIID__DRecipientControlEvents;
extern __declspec (package) const GUID CLSID__RecipientControl;
extern __declspec (package) const GUID IID__IDocSiteControl;
extern __declspec (package) const GUID DIID__DDocSiteControl;
extern __declspec (package) const GUID DIID__DDocSiteControlEvents;
extern __declspec (package) const GUID CLSID__DocSiteControl;

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
enum      OlAttachmentType;
enum      OlBusyStatus;
enum      OlDaysOfWeek;
enum      OlDefaultFolders;
enum      OlFolderDisplayMode;
enum      OlFormRegistry;
enum      OlGender;
enum      OlImportance;
enum      OlInspectorClose;
enum      OlItems;
enum      OlJournalRecipientType;
enum      OlMailingAddress;
enum      OlMailRecipientType;
enum      OlMeetingRecipientType;
enum      OlMeetingStatus;
enum      OlNoteColor;
enum      OlRecurrenceType;
enum      OlRemoteStatus;
enum      OlMeetingResponse;
enum      OlResponseStatus;
enum      OlSaveAsType;
enum      OlSensitivity;
enum      OlFlagStatus;
enum      OlTaskDelegationState;
enum      OlTaskOwnership;
enum      OlTaskRecipientType;
enum      OlTaskResponse;
enum      OlTaskStatus;
enum      OlTrackingStatus;
enum      OlUserPropertyType;
enum      OlActionCopyLike;
enum      OlActionReplyStyle;
enum      OlActionResponseStyle;
enum      OlActionShowOn;
interface DECLSPEC_UUID("{0006313A-0000-0000-C000-000000000046}") _IItemEvents;
typedef TComInterface<_IItemEvents, &IID__IItemEvents> _IItemEventsPtr;

interface DECLSPEC_UUID("{0006303A-0000-0000-C000-000000000046}") _DItemEvents;
typedef TComInterface<_DItemEvents, &DIID__DItemEvents> _DItemEventsPtr;

interface DECLSPEC_UUID("{00063143-0000-0000-C000-000000000046}") _IAction;
typedef TComInterface<_IAction, &IID__IAction> _IActionPtr;

interface DECLSPEC_UUID("{00063043-0000-0000-C000-000000000046}") Action;
typedef TComInterface<Action, &DIID_Action> ActionPtr;

interface DECLSPEC_UUID("{0006313E-0000-0000-C000-000000000046}") _IActions;
typedef TComInterface<_IActions, &IID__IActions> _IActionsPtr;

interface DECLSPEC_UUID("{0006303E-0000-0000-C000-000000000046}") Actions;
typedef TComInterface<Actions, &DIID_Actions> ActionsPtr;

interface DECLSPEC_UUID("{00063101-0000-0000-C000-000000000046}") _IApplication;
typedef TComInterface<_IApplication, &IID__IApplication> _IApplicationPtr;

interface DECLSPEC_UUID("{00063001-0000-0000-C000-000000000046}") _DApplication;
typedef TComInterface<_DApplication, &DIID__DApplication> _DApplicationPtr;

interface DECLSPEC_UUID("{00063133-0000-0000-C000-000000000046}") _IAppointmentItem;
typedef TComInterface<_IAppointmentItem, &IID__IAppointmentItem> _IAppointmentItemPtr;

interface DECLSPEC_UUID("{00063033-0000-0000-C000-000000000046}") _DAppointmentItem;
typedef TComInterface<_DAppointmentItem, &DIID__DAppointmentItem> _DAppointmentItemPtr;

interface DECLSPEC_UUID("{00063107-0000-0000-C000-000000000046}") _IAttachment;
typedef TComInterface<_IAttachment, &IID__IAttachment> _IAttachmentPtr;

interface DECLSPEC_UUID("{00063007-0000-0000-C000-000000000046}") Attachment;
typedef TComInterface<Attachment, &DIID_Attachment> AttachmentPtr;

interface DECLSPEC_UUID("{0006313C-0000-0000-C000-000000000046}") _IAttachments;
typedef TComInterface<_IAttachments, &IID__IAttachments> _IAttachmentsPtr;

interface DECLSPEC_UUID("{0006303C-0000-0000-C000-000000000046}") Attachments;
typedef TComInterface<Attachments, &DIID_Attachments> AttachmentsPtr;

interface DECLSPEC_UUID("{00063121-0000-0000-C000-000000000046}") _IContactItem;
typedef TComInterface<_IContactItem, &IID__IContactItem> _IContactItemPtr;

interface DECLSPEC_UUID("{00063021-0000-0000-C000-000000000046}") _DContactItem;
typedef TComInterface<_DContactItem, &DIID__DContactItem> _DContactItemPtr;

interface DECLSPEC_UUID("{00063103-0000-0000-C000-000000000046}") _IExplorer;
typedef TComInterface<_IExplorer, &IID__IExplorer> _IExplorerPtr;

interface DECLSPEC_UUID("{00063003-0000-0000-C000-000000000046}") Explorer;
typedef TComInterface<Explorer, &DIID_Explorer> ExplorerPtr;

interface DECLSPEC_UUID("{00063140-0000-0000-C000-000000000046}") _IFolders;
typedef TComInterface<_IFolders, &IID__IFolders> _IFoldersPtr;

interface DECLSPEC_UUID("{00063040-0000-0000-C000-000000000046}") Folders;
typedef TComInterface<Folders, &DIID_Folders> FoldersPtr;

interface DECLSPEC_UUID("{00063146-0000-0000-C000-000000000046}") _IFormDescription;
typedef TComInterface<_IFormDescription, &IID__IFormDescription> _IFormDescriptionPtr;

interface DECLSPEC_UUID("{00063046-0000-0000-C000-000000000046}") FormDescription;
typedef TComInterface<FormDescription, &DIID_FormDescription> FormDescriptionPtr;

interface DECLSPEC_UUID("{00063105-0000-0000-C000-000000000046}") _IInspector;
typedef TComInterface<_IInspector, &IID__IInspector> _IInspectorPtr;

interface DECLSPEC_UUID("{00063005-0000-0000-C000-000000000046}") Inspector;
typedef TComInterface<Inspector, &DIID_Inspector> InspectorPtr;

interface DECLSPEC_UUID("{00063141-0000-0000-C000-000000000046}") _IItems;
typedef TComInterface<_IItems, &IID__IItems> _IItemsPtr;

interface DECLSPEC_UUID("{00063041-0000-0000-C000-000000000046}") Items;
typedef TComInterface<Items, &DIID_Items> ItemsPtr;

interface DECLSPEC_UUID("{00063122-0000-0000-C000-000000000046}") _IJournalItem;
typedef TComInterface<_IJournalItem, &IID__IJournalItem> _IJournalItemPtr;

interface DECLSPEC_UUID("{00063022-0000-0000-C000-000000000046}") _DJournalItem;
typedef TComInterface<_DJournalItem, &DIID__DJournalItem> _DJournalItemPtr;

interface DECLSPEC_UUID("{00063134-0000-0000-C000-000000000046}") _IMailItem;
typedef TComInterface<_IMailItem, &IID__IMailItem> _IMailItemPtr;

interface DECLSPEC_UUID("{00063034-0000-0000-C000-000000000046}") _DMailItem;
typedef TComInterface<_DMailItem, &DIID__DMailItem> _DMailItemPtr;

interface DECLSPEC_UUID("{00063106-0000-0000-C000-000000000046}") _IMAPIFolder;
typedef TComInterface<_IMAPIFolder, &IID__IMAPIFolder> _IMAPIFolderPtr;

interface DECLSPEC_UUID("{00063006-0000-0000-C000-000000000046}") MAPIFolder;
typedef TComInterface<MAPIFolder, &DIID_MAPIFolder> MAPIFolderPtr;

interface DECLSPEC_UUID("{00063128-0000-0000-C000-000000000046}") _IMeetingCanceledItem;
typedef TComInterface<_IMeetingCanceledItem, &IID__IMeetingCanceledItem> _IMeetingCanceledItemPtr;

interface DECLSPEC_UUID("{00063028-0000-0000-C000-000000000046}") _DMeetingCanceledItem;
typedef TComInterface<_DMeetingCanceledItem, &DIID__DMeetingCanceledItem> _DMeetingCanceledItemPtr;

interface DECLSPEC_UUID("{00063130-0000-0000-C000-000000000046}") _IMeetingRequestAcceptedItem;
typedef TComInterface<_IMeetingRequestAcceptedItem, &IID__IMeetingRequestAcceptedItem> _IMeetingRequestAcceptedItemPtr;

interface DECLSPEC_UUID("{00063030-0000-0000-C000-000000000046}") _DMeetingRequestAcceptedItem;
typedef TComInterface<_DMeetingRequestAcceptedItem, &DIID__DMeetingRequestAcceptedItem> _DMeetingRequestAcceptedItemPtr;

interface DECLSPEC_UUID("{00063131-0000-0000-C000-000000000046}") _IMeetingRequestDeclinedItem;
typedef TComInterface<_IMeetingRequestDeclinedItem, &IID__IMeetingRequestDeclinedItem> _IMeetingRequestDeclinedItemPtr;

interface DECLSPEC_UUID("{00063031-0000-0000-C000-000000000046}") _DMeetingRequestDeclinedItem;
typedef TComInterface<_DMeetingRequestDeclinedItem, &DIID__DMeetingRequestDeclinedItem> _DMeetingRequestDeclinedItemPtr;

interface DECLSPEC_UUID("{00063129-0000-0000-C000-000000000046}") _IMeetingRequestItem;
typedef TComInterface<_IMeetingRequestItem, &IID__IMeetingRequestItem> _IMeetingRequestItemPtr;

interface DECLSPEC_UUID("{00063029-0000-0000-C000-000000000046}") _DMeetingRequestItem;
typedef TComInterface<_DMeetingRequestItem, &DIID__DMeetingRequestItem> _DMeetingRequestItemPtr;

interface DECLSPEC_UUID("{00063132-0000-0000-C000-000000000046}") _IMeetingRequestTentativeItem;
typedef TComInterface<_IMeetingRequestTentativeItem, &IID__IMeetingRequestTentativeItem> _IMeetingRequestTentativeItemPtr;

interface DECLSPEC_UUID("{00063032-0000-0000-C000-000000000046}") _DMeetingRequestTentativeItem;
typedef TComInterface<_DMeetingRequestTentativeItem, &DIID__DMeetingRequestTentativeItem> _DMeetingRequestTentativeItemPtr;

interface DECLSPEC_UUID("{00063102-0000-0000-C000-000000000046}") _INameSpace;
typedef TComInterface<_INameSpace, &IID__INameSpace> _INameSpacePtr;

interface DECLSPEC_UUID("{00063002-0000-0000-C000-000000000046}") NameSpace;
typedef TComInterface<NameSpace, &DIID_NameSpace> NameSpacePtr;

interface DECLSPEC_UUID("{00063125-0000-0000-C000-000000000046}") _INoteItem;
typedef TComInterface<_INoteItem, &IID__INoteItem> _INoteItemPtr;

interface DECLSPEC_UUID("{00063025-0000-0000-C000-000000000046}") _DNoteItem;
typedef TComInterface<_DNoteItem, &DIID__DNoteItem> _DNoteItemPtr;

interface DECLSPEC_UUID("{00063120-0000-0000-C000-000000000046}") _IOfficeDocumentItem;
typedef TComInterface<_IOfficeDocumentItem, &IID__IOfficeDocumentItem> _IOfficeDocumentItemPtr;

interface DECLSPEC_UUID("{00063020-0000-0000-C000-000000000046}") _DOfficeDocumentItem;
typedef TComInterface<_DOfficeDocumentItem, &DIID__DOfficeDocumentItem> _DOfficeDocumentItemPtr;

interface DECLSPEC_UUID("{0006313F-0000-0000-C000-000000000046}") _IPages;
typedef TComInterface<_IPages, &IID__IPages> _IPagesPtr;

interface DECLSPEC_UUID("{0006303F-0000-0000-C000-000000000046}") Pages;
typedef TComInterface<Pages, &DIID_Pages> PagesPtr;

interface DECLSPEC_UUID("{00063124-0000-0000-C000-000000000046}") _IPostItem;
typedef TComInterface<_IPostItem, &IID__IPostItem> _IPostItemPtr;

interface DECLSPEC_UUID("{00063024-0000-0000-C000-000000000046}") _DPostItem;
typedef TComInterface<_DPostItem, &DIID__DPostItem> _DPostItemPtr;

interface DECLSPEC_UUID("{00063145-0000-0000-C000-000000000046}") _IRecipient;
typedef TComInterface<_IRecipient, &IID__IRecipient> _IRecipientPtr;

interface DECLSPEC_UUID("{00063045-0000-0000-C000-000000000046}") Recipient;
typedef TComInterface<Recipient, &DIID_Recipient> RecipientPtr;

interface DECLSPEC_UUID("{0006313B-0000-0000-C000-000000000046}") _IRecipients;
typedef TComInterface<_IRecipients, &IID__IRecipients> _IRecipientsPtr;

interface DECLSPEC_UUID("{0006303B-0000-0000-C000-000000000046}") Recipients;
typedef TComInterface<Recipients, &DIID_Recipients> RecipientsPtr;

interface DECLSPEC_UUID("{00063144-0000-0000-C000-000000000046}") _IRecurrencePattern;
typedef TComInterface<_IRecurrencePattern, &IID__IRecurrencePattern> _IRecurrencePatternPtr;

interface DECLSPEC_UUID("{00063044-0000-0000-C000-000000000046}") RecurrencePattern;
typedef TComInterface<RecurrencePattern, &DIID_RecurrencePattern> RecurrencePatternPtr;

interface DECLSPEC_UUID("{00063123-0000-0000-C000-000000000046}") _IRemoteItem;
typedef TComInterface<_IRemoteItem, &IID__IRemoteItem> _IRemoteItemPtr;

interface DECLSPEC_UUID("{00063023-0000-0000-C000-000000000046}") _DRemoteItem;
typedef TComInterface<_DRemoteItem, &DIID__DRemoteItem> _DRemoteItemPtr;

interface DECLSPEC_UUID("{00063126-0000-0000-C000-000000000046}") _IReportItem;
typedef TComInterface<_IReportItem, &IID__IReportItem> _IReportItemPtr;

interface DECLSPEC_UUID("{00063026-0000-0000-C000-000000000046}") _DReportItem;
typedef TComInterface<_DReportItem, &DIID__DReportItem> _DReportItemPtr;

interface DECLSPEC_UUID("{00063135-0000-0000-C000-000000000046}") _ITaskItem;
typedef TComInterface<_ITaskItem, &IID__ITaskItem> _ITaskItemPtr;

interface DECLSPEC_UUID("{00063035-0000-0000-C000-000000000046}") _DTaskItem;
typedef TComInterface<_DTaskItem, &DIID__DTaskItem> _DTaskItemPtr;

interface DECLSPEC_UUID("{00063138-0000-0000-C000-000000000046}") _ITaskRequestAcceptItem;
typedef TComInterface<_ITaskRequestAcceptItem, &IID__ITaskRequestAcceptItem> _ITaskRequestAcceptItemPtr;

interface DECLSPEC_UUID("{00063038-0000-0000-C000-000000000046}") _DTaskRequestAcceptItem;
typedef TComInterface<_DTaskRequestAcceptItem, &DIID__DTaskRequestAcceptItem> _DTaskRequestAcceptItemPtr;

interface DECLSPEC_UUID("{00063139-0000-0000-C000-000000000046}") _ITaskRequestDeclineItem;
typedef TComInterface<_ITaskRequestDeclineItem, &IID__ITaskRequestDeclineItem> _ITaskRequestDeclineItemPtr;

interface DECLSPEC_UUID("{00063039-0000-0000-C000-000000000046}") _DTaskRequestDeclineItem;
typedef TComInterface<_DTaskRequestDeclineItem, &DIID__DTaskRequestDeclineItem> _DTaskRequestDeclineItemPtr;

interface DECLSPEC_UUID("{00063136-0000-0000-C000-000000000046}") _ITaskRequestItem;
typedef TComInterface<_ITaskRequestItem, &IID__ITaskRequestItem> _ITaskRequestItemPtr;

interface DECLSPEC_UUID("{00063036-0000-0000-C000-000000000046}") _DTaskRequestItem;
typedef TComInterface<_DTaskRequestItem, &DIID__DTaskRequestItem> _DTaskRequestItemPtr;

interface DECLSPEC_UUID("{00063137-0000-0000-C000-000000000046}") _ITaskRequestUpdateItem;
typedef TComInterface<_ITaskRequestUpdateItem, &IID__ITaskRequestUpdateItem> _ITaskRequestUpdateItemPtr;

interface DECLSPEC_UUID("{00063037-0000-0000-C000-000000000046}") _DTaskRequestUpdateItem;
typedef TComInterface<_DTaskRequestUpdateItem, &DIID__DTaskRequestUpdateItem> _DTaskRequestUpdateItemPtr;

interface DECLSPEC_UUID("{0006313D-0000-0000-C000-000000000046}") _IUserProperties;
typedef TComInterface<_IUserProperties, &IID__IUserProperties> _IUserPropertiesPtr;

interface DECLSPEC_UUID("{0006303D-0000-0000-C000-000000000046}") UserProperties;
typedef TComInterface<UserProperties, &DIID_UserProperties> UserPropertiesPtr;

interface DECLSPEC_UUID("{00063142-0000-0000-C000-000000000046}") _IUserProperty;
typedef TComInterface<_IUserProperty, &IID__IUserProperty> _IUserPropertyPtr;

interface DECLSPEC_UUID("{00063042-0000-0000-C000-000000000046}") UserProperty;
typedef TComInterface<UserProperty, &DIID_UserProperty> UserPropertyPtr;

interface DECLSPEC_UUID("{D87E7E16-6897-11CE-A6C0-00AA00608FAA}") _IRecipientControl;
typedef TComInterface<_IRecipientControl, &IID__IRecipientControl> _IRecipientControlPtr;

interface DECLSPEC_UUID("{0006F025-0000-0000-C000-000000000046}") _DRecipientControl;
typedef TComInterface<_DRecipientControl, &DIID__DRecipientControl> _DRecipientControlPtr;

interface DECLSPEC_UUID("{D87E7E17-6897-11CE-A6C0-00AA00608FAA}") _DRecipientControlEvents;
typedef TComInterface<_DRecipientControlEvents, &DIID__DRecipientControlEvents> _DRecipientControlEventsPtr;

interface DECLSPEC_UUID("{43507DD0-811D-11CE-B565-00AA00608FAA}") _IDocSiteControl;
typedef TComInterface<_IDocSiteControl, &IID__IDocSiteControl> _IDocSiteControlPtr;

interface DECLSPEC_UUID("{0006F026-0000-0000-C000-000000000046}") _DDocSiteControl;
typedef TComInterface<_DDocSiteControl, &DIID__DDocSiteControl> _DDocSiteControlPtr;

interface DECLSPEC_UUID("{50BB9B50-811D-11CE-B565-00AA00608FAA}") _DDocSiteControlEvents;
typedef TComInterface<_DDocSiteControlEvents, &DIID__DDocSiteControlEvents> _DDocSiteControlEventsPtr;


// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
//                                                                        
// The LIBID_OF_ macro(s) map a LIBID_OF_CoClassName to the GUID of this  
// TypeLibrary. It simplifies the updating of macros when CoClass name    
// change.                                                                
// *********************************************************************//
typedef _DApplication OutlookApplication;
typedef _DApplicationPtr OutlookApplicationPtr;
typedef _DAppointmentItem AppointmentItem;
typedef _DAppointmentItemPtr AppointmentItemPtr;
typedef _DContactItem ContactItem;
typedef _DContactItemPtr ContactItemPtr;
typedef _DJournalItem JournalItem;
typedef _DJournalItemPtr JournalItemPtr;
typedef _DMailItem MailItem;
typedef _DMailItemPtr MailItemPtr;
typedef _DMeetingCanceledItem _MeetingCanceledItem;
typedef _DMeetingCanceledItemPtr _MeetingCanceledItemPtr;
typedef _DMeetingRequestAcceptedItem _MeetingRequestAcceptedItem;
typedef _DMeetingRequestAcceptedItemPtr _MeetingRequestAcceptedItemPtr;
typedef _DMeetingRequestDeclinedItem _MeetingRequestDeclinedItem;
typedef _DMeetingRequestDeclinedItemPtr _MeetingRequestDeclinedItemPtr;
typedef _DMeetingRequestItem MeetingRequestItem;
typedef _DMeetingRequestItemPtr MeetingRequestItemPtr;
typedef _DMeetingRequestTentativeItem _MeetingRequestTentativeItem;
typedef _DMeetingRequestTentativeItemPtr _MeetingRequestTentativeItemPtr;
typedef _DNoteItem NoteItem;
typedef _DNoteItemPtr NoteItemPtr;
typedef _DOfficeDocumentItem _OfficeDocumentItem;
typedef _DOfficeDocumentItemPtr _OfficeDocumentItemPtr;
typedef _DPostItem PostItem;
typedef _DPostItemPtr PostItemPtr;
typedef _DRemoteItem RemoteItem;
typedef _DRemoteItemPtr RemoteItemPtr;
typedef _DReportItem ReportItem;
typedef _DReportItemPtr ReportItemPtr;
typedef _DTaskItem TaskItem;
typedef _DTaskItemPtr TaskItemPtr;
typedef _DTaskRequestAcceptItem _TaskRequestAcceptItem;
typedef _DTaskRequestAcceptItemPtr _TaskRequestAcceptItemPtr;
typedef _DTaskRequestDeclineItem _TaskRequestDeclineItem;
typedef _DTaskRequestDeclineItemPtr _TaskRequestDeclineItemPtr;
typedef _DTaskRequestItem TaskRequestItem;
typedef _DTaskRequestItemPtr TaskRequestItemPtr;
typedef _DTaskRequestUpdateItem _TaskRequestUpdateItem;
typedef _DTaskRequestUpdateItemPtr _TaskRequestUpdateItemPtr;
typedef _DRecipientControl _RecipientControl;
typedef _DRecipientControlPtr _RecipientControlPtr;
typedef _DDocSiteControl _DocSiteControl;
typedef _DDocSiteControlPtr _DocSiteControlPtr;

#define LIBID_OF_OutlookApplication (&LIBID_Outlook)
#define LIBID_OF_AppointmentItem (&LIBID_Outlook)
#define LIBID_OF_ContactItem (&LIBID_Outlook)
#define LIBID_OF_JournalItem (&LIBID_Outlook)
#define LIBID_OF_MailItem (&LIBID_Outlook)
#define LIBID_OF__MeetingCanceledItem (&LIBID_Outlook)
#define LIBID_OF__MeetingRequestAcceptedItem (&LIBID_Outlook)
#define LIBID_OF__MeetingRequestDeclinedItem (&LIBID_Outlook)
#define LIBID_OF_MeetingRequestItem (&LIBID_Outlook)
#define LIBID_OF__MeetingRequestTentativeItem (&LIBID_Outlook)
#define LIBID_OF_NoteItem (&LIBID_Outlook)
#define LIBID_OF__OfficeDocumentItem (&LIBID_Outlook)
#define LIBID_OF_PostItem (&LIBID_Outlook)
#define LIBID_OF_RemoteItem (&LIBID_Outlook)
#define LIBID_OF_ReportItem (&LIBID_Outlook)
#define LIBID_OF_TaskItem (&LIBID_Outlook)
#define LIBID_OF__TaskRequestAcceptItem (&LIBID_Outlook)
#define LIBID_OF__TaskRequestDeclineItem (&LIBID_Outlook)
#define LIBID_OF_TaskRequestItem (&LIBID_Outlook)
#define LIBID_OF__TaskRequestUpdateItem (&LIBID_Outlook)
#define LIBID_OF__RecipientControl (&LIBID_Outlook)
#define LIBID_OF__DocSiteControl (&LIBID_Outlook)

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
typedef enum OlAttachmentType
{
  olByValue = 1, 
  olByReference = 4, 
  olEmbeddedItem = 5, 
  olOLE = 6
} OlAttachmentType;

typedef enum OlBusyStatus
{
  olFree = 0, 
  olTentative = 1, 
  olBusy = 2, 
  olOutOfOffice = 3
} OlBusyStatus;

typedef enum OlDaysOfWeek
{
  olSunday = 1, 
  olMonday = 2, 
  olTuesday = 4, 
  olWednesday = 8, 
  olThursday = 16, 
  olFriday = 32, 
  olSaturday = 64
} OlDaysOfWeek;

typedef enum OlDefaultFolders
{
  olFolderDeletedItems = 3, 
  olFolderOutbox = 4, 
  olFolderSentMail = 5, 
  olFolderInbox = 6, 
  olFolderCalendar = 9, 
  olFolderContacts = 10, 
  olFolderJournal = 11, 
  olFolderNotes = 12, 
  olFolderTasks = 13
} OlDefaultFolders;

typedef enum OlFolderDisplayMode
{
  olFolderDisplayNormal = 0, 
  olFolderDisplayFolderOnly = 1, 
  olFolderDisplayNoNavigation = 2
} OlFolderDisplayMode;

typedef enum OlFormRegistry
{
  olDefaultRegistry = 0, 
  olOrganizationRegistry = 4, 
  olPersonalRegistry = 2, 
  olFolderRegistry = 3
} OlFormRegistry;

typedef enum OlGender
{
  olUnspecified = 0, 
  olFemale = 1, 
  olMale = 2
} OlGender;

typedef enum OlImportance
{
  olImportanceLow = 0, 
  olImportanceNormal = 1, 
  olImportanceHigh = 2
} OlImportance;

typedef enum OlInspectorClose
{
  olSave = 0, 
  olDiscard = 1, 
  olPromptForSave = 2
} OlInspectorClose;

typedef enum OlItems
{
  olMailItem = 0, 
  olAppointmentItem = 1, 
  olContactItem = 2, 
  olTaskItem = 3, 
  olJournalItem = 4, 
  olNoteItem = 5, 
  olPostItem = 6
} OlItems;

typedef enum OlJournalRecipientType
{
  olAssociatedContact = 1
} OlJournalRecipientType;

typedef enum OlMailingAddress
{
  olNone = 0, 
  olHome = 1, 
  olBusiness = 2, 
  olOther = 3
} OlMailingAddress;

typedef enum OlMailRecipientType
{
  olOriginator = 0, 
  olTo = 1, 
  olCC = 2, 
  olBCC = 3
} OlMailRecipientType;

typedef enum OlMeetingRecipientType
{
  olOrganizer = 0, 
  olRequired = 1, 
  olOptional = 2, 
  olResource = 3
} OlMeetingRecipientType;

typedef enum OlMeetingStatus
{
  olNonMeeting = 0, 
  olMeeting = 1, 
  olMeetingReceived = 3, 
  olMeetingCanceled = 5
} OlMeetingStatus;

typedef enum OlNoteColor
{
  olBlue = 0, 
  olGreen = 1, 
  olPink = 2, 
  olYellow = 3, 
  olWhite = 4
} OlNoteColor;

typedef enum OlRecurrenceType
{
  olRecursDaily = 0, 
  olRecursWeekly = 1, 
  olRecursMonthly = 2, 
  olRecursMonthNth = 3, 
  olRecursYearly = 5, 
  olRecursYearNth = 6
} OlRecurrenceType;

typedef enum OlRemoteStatus
{
  olRemoteStatusNone = 0, 
  olUnMarked = 1, 
  olMarkedForDownload = 2, 
  olMarkedForCopy = 3, 
  olMarkedForDelete = 4
} OlRemoteStatus;

typedef enum OlMeetingResponse
{
  olMeetingAccepted = 3, 
  olMeetingDeclined = 4, 
  olMeetingTentative = 2
} OlMeetingResponse;

typedef enum OlResponseStatus
{
  olResponseNone = 0, 
  olResponseOrganized = 1, 
  olResponseTentative = 2, 
  olResponseAccepted = 3, 
  olResponseDeclined = 4, 
  olResponseNotResponded = 5
} OlResponseStatus;

typedef enum OlSaveAsType
{
  olTXT = 0, 
  olRTF = 1, 
  olTemplate = 2, 
  olMSG = 3, 
  olDoc = 4
} OlSaveAsType;

typedef enum OlSensitivity
{
  olNormal = 0, 
  olPersonal = 1, 
  olPrivate = 2, 
  olConfidential = 3
} OlSensitivity;

typedef enum OlFlagStatus
{
  olNoFlag = 0, 
  olFlagComplete = 1, 
  olFlagMarked = 2
} OlFlagStatus;

typedef enum OlTaskDelegationState
{
  olTaskNotDelegated = 0, 
  olTaskDelegationUnknown = 1, 
  olTaskDelegationAccepted = 2, 
  olTaskDelegationDeclined = 3
} OlTaskDelegationState;

typedef enum OlTaskOwnership
{
  olNewTask = 0, 
  olDelegatedTask = 1, 
  olOwnTask = 2
} OlTaskOwnership;

typedef enum OlTaskRecipientType
{
  olUpdate = 1, 
  olFinalStatus = 2
} OlTaskRecipientType;

typedef enum OlTaskResponse
{
  olTaskSimple = 0, 
  olTaskAssign = 1, 
  olTaskAccept = 2, 
  olTaskDecline = 3
} OlTaskResponse;

typedef enum OlTaskStatus
{
  olTaskNotStarted = 0, 
  olTaskInProgress = 1, 
  olTaskComplete = 2, 
  olTaskWaiting = 3, 
  olTaskDeferred = 4
} OlTaskStatus;

typedef enum OlTrackingStatus
{
  olTrackingNone = 0, 
  olTrackingDelivered = 1, 
  olTrackingNotDelivered = 2, 
  olTrackingNotRead = 3, 
  olTrackingRecallFailure = 4, 
  olTrackingRecallSuccess = 5, 
  olTrackingRead = 6, 
  olTrackingReplied = 7
} OlTrackingStatus;

typedef enum OlUserPropertyType
{
  olText = 1, 
  olNumber = 3, 
  olDateTime = 5, 
  olYesNo = 6, 
  olDuration = 7, 
  olKeywords = 11, 
  olPercent = 12, 
  olCurrency = 14, 
  olFormula = 18, 
  olCombination = 19
} OlUserPropertyType;

typedef enum OlActionCopyLike
{
  olReply = 0, 
  olReplyAll = 1, 
  olForward = 2, 
  olReplyFolder = 3, 
  olRespond = 4
} OlActionCopyLike;

typedef enum OlActionReplyStyle
{
  olOmitOriginalText = 0, 
  olEmbedOriginalItem = 1, 
  olIncludeOriginalText = 2, 
  olIndentOriginalText = 3, 
  olLinkOriginalItem = 4, 
  olUserPreference = 5
} OlActionReplyStyle;

typedef enum OlActionResponseStyle
{
  olOpen = 0, 
  olSend = 1, 
  olPrompt = 2
} OlActionResponseStyle;

typedef enum OlActionShowOn
{
  olDontShow = 0, 
  olMenu = 1, 
  olMenuAndToolbar = 2
} OlActionShowOn;

// *********************************************************************//
// Interface: _IItemEvents
// Flags:     (4096) Dispatchable
// GUID:      {0006313A-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IItemEvents  : public IDispatch
{
public:
   VARIANT_BOOL STDMETHODCALLTYPE Read(void); // [61441]
   VARIANT_BOOL STDMETHODCALLTYPE Write(void); // [61442]
   VARIANT_BOOL STDMETHODCALLTYPE Open(void); // [61443]
   VARIANT_BOOL STDMETHODCALLTYPE Close(void); // [61444]
   VARIANT_BOOL STDMETHODCALLTYPE Send(void); // [61445]
   VARIANT_BOOL STDMETHODCALLTYPE Reply(LPDISPATCH Response/*[in]*/); // [62566]
   VARIANT_BOOL STDMETHODCALLTYPE ReplyAll(LPDISPATCH Response/*[in]*/); // [62567]
   VARIANT_BOOL STDMETHODCALLTYPE Forward(LPDISPATCH Forward/*[in]*/); // [62568]
   VARIANT_BOOL STDMETHODCALLTYPE CustomAction(LPDISPATCH Action/*[in]*/, 
                                               LPDISPATCH Response/*[in]*/); // [61446]
   void STDMETHODCALLTYPE CustomPropertyChange(BSTR Name/*[in]*/); // [61448]
   void STDMETHODCALLTYPE PropertyChange(BSTR Name/*[in]*/); // [61449]
};

// *********************************************************************//
// Interface: _DItemEvents
// Flags:     (4096) Dispatchable
// GUID:      {0006303A-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DItemEvents : public TDispWrapper<IDispatch>
{
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Read()
  {
    _TDispID _dispid(/* Read */ DISPID(61441));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Write()
  {
    _TDispID _dispid(/* Write */ DISPID(61442));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Open()
  {
    _TDispID _dispid(/* Open */ DISPID(61443));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Close()
  {
    _TDispID _dispid(/* Close */ DISPID(61444));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61445));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Reply(LPDISPATCH Response/*[in]*/)
  {
    _TDispID _dispid(/* Reply */ DISPID(62566));
    TAutoArgs<1> _args;
    _args[1] = Response /*[VT_DISPATCH:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall ReplyAll(LPDISPATCH Response/*[in]*/)
  {
    _TDispID _dispid(/* ReplyAll */ DISPID(62567));
    TAutoArgs<1> _args;
    _args[1] = Response /*[VT_DISPATCH:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Forward(LPDISPATCH Forward/*[in]*/)
  {
    _TDispID _dispid(/* Forward */ DISPID(62568));
    TAutoArgs<1> _args;
    _args[1] = Forward /*[VT_DISPATCH:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall CustomAction(LPDISPATCH Action/*[in]*/, 
                                                       LPDISPATCH Response/*[in]*/)
  {
    _TDispID _dispid(/* CustomAction */ DISPID(61446));
    TAutoArgs<2> _args;
    _args[1] = Action /*[VT_DISPATCH:0]*/;
    _args[2] = Response /*[VT_DISPATCH:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall CustomPropertyChange(BSTR Name/*[in]*/)
  {
    _TDispID _dispid(/* CustomPropertyChange */ DISPID(61448));
    TAutoArgs<1> _args;
    _args[1] = Name /*[VT_BSTR:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PropertyChange(BSTR Name/*[in]*/)
  {
    _TDispID _dispid(/* PropertyChange */ DISPID(61449));
    TAutoArgs<1> _args;
    _args[1] = Name /*[VT_BSTR:0]*/;
    OleProcedure(_dispid, _args);
  }


};
// *********************************************************************//
// Interface: _IAction
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063143-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IAction  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_CopyLike(Outlook_97::OlActionCopyLike* CopyLike/*[out,retval]*/); // [100]
   HRESULT STDMETHODCALLTYPE set_CopyLike(Outlook_97::OlActionCopyLike CopyLike/*[in]*/); // [100]
   HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* Enabled/*[out,retval]*/); // [103]
   HRESULT STDMETHODCALLTYPE set_Enabled(VARIANT_BOOL Enabled/*[in]*/); // [103]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Name(BSTR* Name/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE set_Name(BSTR Name/*[in]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Prefix(BSTR* Prefix/*[out,retval]*/); // [61]
   HRESULT STDMETHODCALLTYPE set_Prefix(BSTR Prefix/*[in]*/); // [61]
   HRESULT STDMETHODCALLTYPE get_ReplyStyle(Outlook_97::OlActionReplyStyle* ReplyStyle/*[out,retval]*/); // [101]
   HRESULT STDMETHODCALLTYPE set_ReplyStyle(Outlook_97::OlActionReplyStyle ReplyStyle/*[in]*/); // [101]
   HRESULT STDMETHODCALLTYPE get_ResponseStyle(Outlook_97::OlActionResponseStyle* ResponseStyle/*[out,retval]*/); // [102]
   HRESULT STDMETHODCALLTYPE set_ResponseStyle(Outlook_97::OlActionResponseStyle ResponseStyle/*[in]*/); // [102]
   HRESULT STDMETHODCALLTYPE get_ShowOn(Outlook_97::OlActionShowOn* ShowOn/*[out,retval]*/); // [105]
   HRESULT STDMETHODCALLTYPE set_ShowOn(Outlook_97::OlActionShowOn ShowOn/*[in]*/); // [105]
   HRESULT STDMETHODCALLTYPE Delete(void); // [108]
   HRESULT STDMETHODCALLTYPE Execute(LPDISPATCH* Item/*[out,retval]*/); // [106]
};

// *********************************************************************//
// Interface: Action
// Flags:     (4096) Dispatchable
// GUID:      {00063043-0000-0000-C000-000000000046}
// *********************************************************************//
interface Action : public TDispWrapper<IDispatch>
{
  Outlook_97::OlActionCopyLike /*[VT_USERDEFINED:0]*/ __fastcall get_CopyLike()
  {
    _TDispID _dispid(/* CopyLike */ DISPID(100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlActionCopyLike /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CopyLike(Outlook_97::OlActionCopyLike Param1/*[in]*/)
  {
    _TDispID _dispid(/* CopyLike */ DISPID(100));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Enabled()
  {
    _TDispID _dispid(/* Enabled */ DISPID(103));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Enabled(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Enabled */ DISPID(103));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name()
  {
    _TDispID _dispid(/* Name */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Name(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Name */ DISPID(12289));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Prefix()
  {
    _TDispID _dispid(/* Prefix */ DISPID(61));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Prefix(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Prefix */ DISPID(61));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlActionReplyStyle /*[VT_USERDEFINED:0]*/ __fastcall get_ReplyStyle()
  {
    _TDispID _dispid(/* ReplyStyle */ DISPID(101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlActionReplyStyle /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReplyStyle(Outlook_97::OlActionReplyStyle Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReplyStyle */ DISPID(101));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlActionResponseStyle /*[VT_USERDEFINED:0]*/ __fastcall get_ResponseStyle()
  {
    _TDispID _dispid(/* ResponseStyle */ DISPID(102));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlActionResponseStyle /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ResponseStyle(Outlook_97::OlActionResponseStyle Param1/*[in]*/)
  {
    _TDispID _dispid(/* ResponseStyle */ DISPID(102));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlActionShowOn /*[VT_USERDEFINED:0]*/ __fastcall get_ShowOn()
  {
    _TDispID _dispid(/* ShowOn */ DISPID(105));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlActionShowOn /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ShowOn(Outlook_97::OlActionShowOn Param1/*[in]*/)
  {
    _TDispID _dispid(/* ShowOn */ DISPID(105));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(108));
    OleProcedure(_dispid);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Execute()
  {
    _TDispID _dispid(/* Execute */ DISPID(106));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }


  __property   Outlook_97::OlActionCopyLike CopyLike = {read = get_CopyLike, write = set_CopyLike};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            Prefix = {read = get_Prefix};
  __property   Outlook_97::OlActionReplyStyle ReplyStyle = {read = get_ReplyStyle, write = set_ReplyStyle};
  __property   Outlook_97::OlActionResponseStyle ResponseStyle = {read = get_ResponseStyle, write = set_ResponseStyle};
  __property   Outlook_97::OlActionShowOn ShowOn = {read = get_ShowOn, write = set_ShowOn};
};
// *********************************************************************//
// Interface: _IActions
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313E-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IActions  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE Add(Outlook_97::Action** Action/*[out,retval]*/); // [100]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, Outlook_97::Action** Action/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [82]
};

// *********************************************************************//
// Interface: Actions
// Flags:     (4096) Dispatchable
// GUID:      {0006303E-0000-0000-C000-000000000046}
// *********************************************************************//
interface Actions : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Action* /*[VT_USERDEFINED:1]*/ __fastcall Add()
  {
    _TDispID _dispid(/* Add */ DISPID(100));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::Action* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Action* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Action* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(82));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   long            Count = {read = get_Count};
};
// *********************************************************************//
// Interface: _IApplication
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063101-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IApplication  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Assistant(Office_97::Assistant** Assistant/*[out,retval]*/); // [276]
   HRESULT STDMETHODCALLTYPE ActiveExplorer(Outlook_97::Explorer** ActiveExplorer/*[out,retval]*/); // [273]
   HRESULT STDMETHODCALLTYPE ActiveInspector(Outlook_97::Inspector** ActiveInspector/*[out,retval]*/); // [274]
   HRESULT STDMETHODCALLTYPE CreateItem(Outlook_97::OlItems ItemType/*[in]*/, 
                                        LPDISPATCH* Item/*[out,retval]*/); // [266]
   HRESULT STDMETHODCALLTYPE CreateItemFromTemplate(BSTR TemplatePath/*[in]*/, 
                                                    VARIANT InFolder/*[in]*/, 
                                                    LPDISPATCH* Item/*[out,retval]*/); // [267]
   HRESULT STDMETHODCALLTYPE CreateObject(BSTR ObjectName/*[in]*/, 
                                          LPDISPATCH* Object/*[out,retval]*/); // [277]
   HRESULT STDMETHODCALLTYPE GetNamespace(BSTR Type/*[in]*/, 
                                          Outlook_97::NameSpace** NameSpace/*[out,retval]*/); // [272]
   HRESULT STDMETHODCALLTYPE Quit(void); // [275]
};

// *********************************************************************//
// Interface: _DApplication
// Flags:     (4096) Dispatchable
// GUID:      {00063001-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DApplication : public TDispWrapper<IDispatch>
{
  Office_97::Assistant* /*[VT_USERDEFINED:1]*/ __fastcall get_Assistant()
  {
    _TDispID _dispid(/* Assistant */ DISPID(276));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Office_97::Assistant* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Explorer* /*[VT_USERDEFINED:1]*/ __fastcall ActiveExplorer()
  {
    _TDispID _dispid(/* ActiveExplorer */ DISPID(273));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::Explorer* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall ActiveInspector()
  {
    _TDispID _dispid(/* ActiveInspector */ DISPID(274));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall CreateItem(Outlook_97::OlItems ItemType/*[in]*/)
  {
    _TDispID _dispid(/* CreateItem */ DISPID(266));
    TAutoArgs<1> _args;
    _args[1] = (int)ItemType /*[VT_USERDEFINED:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall CreateItemFromTemplate(BSTR TemplatePath/*[in]*/, 
                                                                   VARIANT InFolder/*[in]*/)
  {
    _TDispID _dispid(/* CreateItemFromTemplate */ DISPID(267));
    TAutoArgs<2> _args;
    _args[1] = TemplatePath /*[VT_BSTR:0]*/;
    _args[2] = InFolder /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall CreateObject(BSTR ObjectName/*[in]*/)
  {
    _TDispID _dispid(/* CreateObject */ DISPID(277));
    TAutoArgs<1> _args;
    _args[1] = ObjectName /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::NameSpace* /*[VT_USERDEFINED:1]*/ __fastcall GetNamespace(BSTR Type/*[in]*/)
  {
    _TDispID _dispid(/* GetNamespace */ DISPID(272));
    TAutoArgs<1> _args;
    _args[1] = Type /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::NameSpace* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Quit()
  {
    _TDispID _dispid(/* Quit */ DISPID(275));
    OleProcedure(_dispid);
  }


  __property   Office_97::Assistant* Assistant = {read = get_Assistant};
};
// *********************************************************************//
// Interface: _IAppointmentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063133-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IAppointmentItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_AllDayEvent(VARIANT_BOOL* AllDayEvent/*[out,retval]*/); // [33301]
   HRESULT STDMETHODCALLTYPE set_AllDayEvent(VARIANT_BOOL AllDayEvent/*[in]*/); // [33301]
   HRESULT STDMETHODCALLTYPE get_BusyStatus(Outlook_97::OlBusyStatus* BusyStatus/*[out,retval]*/); // [33285]
   HRESULT STDMETHODCALLTYPE set_BusyStatus(Outlook_97::OlBusyStatus BusyStatus/*[in]*/); // [33285]
   HRESULT STDMETHODCALLTYPE get_Duration(long* Duration/*[out,retval]*/); // [33299]
   HRESULT STDMETHODCALLTYPE set_Duration(long Duration/*[in]*/); // [33299]
   HRESULT STDMETHODCALLTYPE get_End(DATE* End/*[out,retval]*/); // [33294]
   HRESULT STDMETHODCALLTYPE set_End(DATE End/*[in]*/); // [33294]
   HRESULT STDMETHODCALLTYPE get_IsRecurring(VARIANT_BOOL* IsRecurring/*[out,retval]*/); // [33315]
   HRESULT STDMETHODCALLTYPE get_Location(BSTR* Location/*[out,retval]*/); // [33288]
   HRESULT STDMETHODCALLTYPE set_Location(BSTR Location/*[in]*/); // [33288]
   HRESULT STDMETHODCALLTYPE get_MeetingStatus(Outlook_97::OlMeetingStatus* MeetingStatus/*[out,retval]*/); // [33303]
   HRESULT STDMETHODCALLTYPE set_MeetingStatus(Outlook_97::OlMeetingStatus MeetingStatus/*[in]*/); // [33303]
   HRESULT STDMETHODCALLTYPE get_OptionalAttendees(BSTR* OptionalAttendees/*[out,retval]*/); // [3587]
   HRESULT STDMETHODCALLTYPE set_OptionalAttendees(BSTR OptionalAttendees/*[in]*/); // [3587]
   HRESULT STDMETHODCALLTYPE get_Organizer(BSTR* Organizer/*[out,retval]*/); // [66]
   HRESULT STDMETHODCALLTYPE get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/); // [63508]
   HRESULT STDMETHODCALLTYPE get_ReminderMinutesBeforeStart(long* ReminderMinutesBeforeStart/*[out,retval]*/); // [34049]
   HRESULT STDMETHODCALLTYPE set_ReminderMinutesBeforeStart(long ReminderMinutesBeforeStart/*[in]*/); // [34049]
   HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault(VARIANT_BOOL* ReminderOverrideDefault/*[out,retval]*/); // [34076]
   HRESULT STDMETHODCALLTYPE set_ReminderOverrideDefault(VARIANT_BOOL ReminderOverrideDefault/*[in]*/); // [34076]
   HRESULT STDMETHODCALLTYPE get_ReminderPlaySound(VARIANT_BOOL* ReminderPlaySound/*[out,retval]*/); // [34078]
   HRESULT STDMETHODCALLTYPE set_ReminderPlaySound(VARIANT_BOOL ReminderPlaySound/*[in]*/); // [34078]
   HRESULT STDMETHODCALLTYPE get_ReminderSet(VARIANT_BOOL* ReminderSet/*[out,retval]*/); // [34051]
   HRESULT STDMETHODCALLTYPE set_ReminderSet(VARIANT_BOOL ReminderSet/*[in]*/); // [34051]
   HRESULT STDMETHODCALLTYPE get_ReminderSoundFile(BSTR* ReminderSoundFile/*[out,retval]*/); // [34079]
   HRESULT STDMETHODCALLTYPE set_ReminderSoundFile(BSTR ReminderSoundFile/*[in]*/); // [34079]
   HRESULT STDMETHODCALLTYPE get_ReplyTime(DATE* ReplyTime/*[out,retval]*/); // [33312]
   HRESULT STDMETHODCALLTYPE set_ReplyTime(DATE ReplyTime/*[in]*/); // [33312]
   HRESULT STDMETHODCALLTYPE get_RequiredAttendees(BSTR* RequiredAttendees/*[out,retval]*/); // [3588]
   HRESULT STDMETHODCALLTYPE set_RequiredAttendees(BSTR RequiredAttendees/*[in]*/); // [3588]
   HRESULT STDMETHODCALLTYPE get_Resources(BSTR* Resources/*[out,retval]*/); // [3586]
   HRESULT STDMETHODCALLTYPE set_Resources(BSTR Resources/*[in]*/); // [3586]
   HRESULT STDMETHODCALLTYPE get_ResponseRequested(VARIANT_BOOL* ResponseRequested/*[out,retval]*/); // [99]
   HRESULT STDMETHODCALLTYPE set_ResponseRequested(VARIANT_BOOL ResponseRequested/*[in]*/); // [99]
   HRESULT STDMETHODCALLTYPE get_ResponseStatus(Outlook_97::OlResponseStatus* ResponseStatus/*[out,retval]*/); // [33304]
   HRESULT STDMETHODCALLTYPE get_Start(DATE* Start/*[out,retval]*/); // [33293]
   HRESULT STDMETHODCALLTYPE set_Start(DATE Start/*[in]*/); // [33293]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE ClearRecurrencePattern(void); // [61605]
   HRESULT STDMETHODCALLTYPE GetRecurrencePattern(Outlook_97::RecurrencePattern** RecurrencPattern/*[out,retval]*/); // [61604]
   HRESULT STDMETHODCALLTYPE Respond(Outlook_97::OlMeetingResponse Response/*[in]*/, 
                                     VARIANT fNoUI/*[in]*/, VARIANT fAdditionalTextDialog/*[in]*/, 
                                     LPDISPATCH* ResponseItem/*[out,retval]*/); // [62722]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
};

// *********************************************************************//
// Interface: _DAppointmentItem
// Flags:     (4096) Dispatchable
// GUID:      {00063033-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DAppointmentItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_AllDayEvent()
  {
    _TDispID _dispid(/* AllDayEvent */ DISPID(33301));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_AllDayEvent(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* AllDayEvent */ DISPID(33301));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlBusyStatus /*[VT_USERDEFINED:0]*/ __fastcall get_BusyStatus()
  {
    _TDispID _dispid(/* BusyStatus */ DISPID(33285));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlBusyStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusyStatus(Outlook_97::OlBusyStatus Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusyStatus */ DISPID(33285));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Duration()
  {
    _TDispID _dispid(/* Duration */ DISPID(33299));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Duration(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Duration */ DISPID(33299));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_End()
  {
    _TDispID _dispid(/* End */ DISPID(33294));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_End(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* End */ DISPID(33294));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_IsRecurring()
  {
    _TDispID _dispid(/* IsRecurring */ DISPID(33315));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Location()
  {
    _TDispID _dispid(/* Location */ DISPID(33288));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Location(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Location */ DISPID(33288));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlMeetingStatus /*[VT_USERDEFINED:0]*/ __fastcall get_MeetingStatus()
  {
    _TDispID _dispid(/* MeetingStatus */ DISPID(33303));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlMeetingStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MeetingStatus(Outlook_97::OlMeetingStatus Param1/*[in]*/)
  {
    _TDispID _dispid(/* MeetingStatus */ DISPID(33303));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OptionalAttendees()
  {
    _TDispID _dispid(/* OptionalAttendees */ DISPID(3587));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OptionalAttendees(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OptionalAttendees */ DISPID(3587));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Organizer()
  {
    _TDispID _dispid(/* Organizer */ DISPID(66));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients()
  {
    _TDispID _dispid(/* Recipients */ DISPID(63508));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_ReminderMinutesBeforeStart()
  {
    _TDispID _dispid(/* ReminderMinutesBeforeStart */ DISPID(34049));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderMinutesBeforeStart(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderMinutesBeforeStart */ DISPID(34049));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderOverrideDefault()
  {
    _TDispID _dispid(/* ReminderOverrideDefault */ DISPID(34076));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderOverrideDefault */ DISPID(34076));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderPlaySound()
  {
    _TDispID _dispid(/* ReminderPlaySound */ DISPID(34078));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderPlaySound */ DISPID(34078));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderSet()
  {
    _TDispID _dispid(/* ReminderSet */ DISPID(34051));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderSet */ DISPID(34051));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReminderSoundFile()
  {
    _TDispID _dispid(/* ReminderSoundFile */ DISPID(34079));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderSoundFile(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderSoundFile */ DISPID(34079));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ReplyTime()
  {
    _TDispID _dispid(/* ReplyTime */ DISPID(33312));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReplyTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReplyTime */ DISPID(33312));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_RequiredAttendees()
  {
    _TDispID _dispid(/* RequiredAttendees */ DISPID(3588));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_RequiredAttendees(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* RequiredAttendees */ DISPID(3588));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Resources()
  {
    _TDispID _dispid(/* Resources */ DISPID(3586));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Resources(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Resources */ DISPID(3586));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ResponseRequested()
  {
    _TDispID _dispid(/* ResponseRequested */ DISPID(99));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ResponseRequested(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ResponseRequested */ DISPID(99));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlResponseStatus /*[VT_USERDEFINED:0]*/ __fastcall get_ResponseStatus()
  {
    _TDispID _dispid(/* ResponseStatus */ DISPID(33304));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlResponseStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_Start()
  {
    _TDispID _dispid(/* Start */ DISPID(33293));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Start(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* Start */ DISPID(33293));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall ClearRecurrencePattern()
  {
    _TDispID _dispid(/* ClearRecurrencePattern */ DISPID(61605));
    OleProcedure(_dispid);
  }

  Outlook_97::RecurrencePattern* /*[VT_USERDEFINED:1]*/ __fastcall GetRecurrencePattern()
  {
    _TDispID _dispid(/* GetRecurrencePattern */ DISPID(61604));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::RecurrencePattern* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Respond(Outlook_97::OlMeetingResponse Response/*[in]*/, 
                                                    VARIANT fNoUI/*[in]*/, 
                                                    VARIANT fAdditionalTextDialog/*[in]*/)
  {
    _TDispID _dispid(/* Respond */ DISPID(62722));
    TAutoArgs<3> _args;
    _args[1] = (int)Response /*[VT_USERDEFINED:0]*/;
    _args[2] = fNoUI /*[VT_VARIANT:0]*/;
    _args[3] = fAdditionalTextDialog /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    AllDayEvent = {read = get_AllDayEvent, write = set_AllDayEvent};
  __property   Outlook_97::OlBusyStatus BusyStatus = {read = get_BusyStatus, write = set_BusyStatus};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            End = {read = get_End, write = set_End};
  __property   VARIANT_BOOL    IsRecurring = {read = get_IsRecurring};
  __property   BSTR            Location = {read = get_Location};
  __property   Outlook_97::OlMeetingStatus MeetingStatus = {read = get_MeetingStatus, write = set_MeetingStatus};
  __property   BSTR            OptionalAttendees = {read = get_OptionalAttendees};
  __property   BSTR            Organizer = {read = get_Organizer};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   long            ReminderMinutesBeforeStart = {read = get_ReminderMinutesBeforeStart, write = set_ReminderMinutesBeforeStart};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReplyTime = {read = get_ReplyTime, write = set_ReplyTime};
  __property   BSTR            RequiredAttendees = {read = get_RequiredAttendees};
  __property   BSTR            Resources = {read = get_Resources};
  __property   VARIANT_BOOL    ResponseRequested = {read = get_ResponseRequested, write = set_ResponseRequested};
  __property   Outlook_97::OlResponseStatus ResponseStatus = {read = get_ResponseStatus};
  __property   DATE            Start = {read = get_Start, write = set_Start};
};
// *********************************************************************//
// Interface: _IAttachment
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063107-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IAttachment  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_DisplayName(BSTR* DisplayName/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE set_DisplayName(BSTR DisplayName/*[in]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_FileName(BSTR* FileName/*[out,retval]*/); // [14084]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [113]
   HRESULT STDMETHODCALLTYPE get_PathName(BSTR* PathName/*[out,retval]*/); // [14088]
   HRESULT STDMETHODCALLTYPE get_Position(long* Position/*[out,retval]*/); // [114]
   HRESULT STDMETHODCALLTYPE set_Position(long Position/*[in]*/); // [114]
   HRESULT STDMETHODCALLTYPE get_Type(Outlook_97::OlAttachmentType* Type/*[out,retval]*/); // [14085]
   HRESULT STDMETHODCALLTYPE Delete(void); // [105]
   HRESULT STDMETHODCALLTYPE SaveAsFile(BSTR Path/*[in]*/); // [104]
};

// *********************************************************************//
// Interface: Attachment
// Flags:     (4096) Dispatchable
// GUID:      {00063007-0000-0000-C000-000000000046}
// *********************************************************************//
interface Attachment : public TDispWrapper<IDispatch>
{
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_DisplayName()
  {
    _TDispID _dispid(/* DisplayName */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DisplayName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* DisplayName */ DISPID(12289));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FileName()
  {
    _TDispID _dispid(/* FileName */ DISPID(14084));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(113));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_PathName()
  {
    _TDispID _dispid(/* PathName */ DISPID(14088));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_Position()
  {
    _TDispID _dispid(/* Position */ DISPID(114));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Position(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Position */ DISPID(114));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlAttachmentType /*[VT_USERDEFINED:0]*/ __fastcall get_Type()
  {
    _TDispID _dispid(/* Type */ DISPID(14085));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlAttachmentType /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(105));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAsFile(BSTR Path/*[in]*/)
  {
    _TDispID _dispid(/* SaveAsFile */ DISPID(104));
    TAutoArgs<1> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            FileName = {read = get_FileName};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            PathName = {read = get_PathName};
  __property   long            Position = {read = get_Position, write = set_Position};
  __property   Outlook_97::OlAttachmentType Type = {read = get_Type};
};
// *********************************************************************//
// Interface: _IAttachments
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313C-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IAttachments  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE Add(VARIANT Source/*[in]*/, VARIANT Type/*[in]*/, 
                                 VARIANT Position/*[in]*/, VARIANT DisplayName/*[in]*/, 
                                 Outlook_97::Attachment** Attachment/*[out,retval]*/); // [101]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, 
                                  Outlook_97::Attachment** Attachment/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [84]
};

// *********************************************************************//
// Interface: Attachments
// Flags:     (4096) Dispatchable
// GUID:      {0006303C-0000-0000-C000-000000000046}
// *********************************************************************//
interface Attachments : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Attachment* /*[VT_USERDEFINED:1]*/ __fastcall Add(VARIANT Source/*[in]*/, 
                                                                VARIANT Type/*[in]*/, 
                                                                VARIANT Position/*[in]*/, 
                                                                VARIANT DisplayName/*[in]*/)
  {
    _TDispID _dispid(/* Add */ DISPID(101));
    TAutoArgs<4> _args;
    _args[1] = Source /*[VT_VARIANT:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    _args[3] = Position /*[VT_VARIANT:0]*/;
    _args[4] = DisplayName /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Attachment* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachment* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Attachment* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(84));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   long            Count = {read = get_Count};
  __property   LPDISPATCH      Parent = {read = get_Parent};
};
// *********************************************************************//
// Interface: _IContactItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063121-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IContactItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_Account(BSTR* Account/*[out,retval]*/); // [14848]
   HRESULT STDMETHODCALLTYPE set_Account(BSTR Account/*[in]*/); // [14848]
   HRESULT STDMETHODCALLTYPE get_Anniversary(DATE* Anniversary/*[out,retval]*/); // [14913]
   HRESULT STDMETHODCALLTYPE set_Anniversary(DATE Anniversary/*[in]*/); // [14913]
   HRESULT STDMETHODCALLTYPE get_AssistantName(BSTR* AssistantName/*[out,retval]*/); // [14896]
   HRESULT STDMETHODCALLTYPE set_AssistantName(BSTR AssistantName/*[in]*/); // [14896]
   HRESULT STDMETHODCALLTYPE get_AssistantTelephoneNumber(BSTR* AssistantTelephoneNumber/*[out,retval]*/); // [14894]
   HRESULT STDMETHODCALLTYPE set_AssistantTelephoneNumber(BSTR AssistantTelephoneNumber/*[in]*/); // [14894]
   HRESULT STDMETHODCALLTYPE get_Birthday(DATE* Birthday/*[out,retval]*/); // [14914]
   HRESULT STDMETHODCALLTYPE set_Birthday(DATE Birthday/*[in]*/); // [14914]
   HRESULT STDMETHODCALLTYPE get_Business2TelephoneNumber(BSTR* Business2TelephoneNumber/*[out,retval]*/); // [14875]
   HRESULT STDMETHODCALLTYPE set_Business2TelephoneNumber(BSTR Business2TelephoneNumber/*[in]*/); // [14875]
   HRESULT STDMETHODCALLTYPE get_BusinessAddress(BSTR* BusinessAddress/*[out,retval]*/); // [32795]
   HRESULT STDMETHODCALLTYPE set_BusinessAddress(BSTR BusinessAddress/*[in]*/); // [32795]
   HRESULT STDMETHODCALLTYPE get_BusinessAddressCity(BSTR* BusinessAddressCity/*[out,retval]*/); // [32838]
   HRESULT STDMETHODCALLTYPE set_BusinessAddressCity(BSTR BusinessAddressCity/*[in]*/); // [32838]
   HRESULT STDMETHODCALLTYPE get_BusinessAddressCountry(BSTR* BusinessAddressCountry/*[out,retval]*/); // [32841]
   HRESULT STDMETHODCALLTYPE set_BusinessAddressCountry(BSTR BusinessAddressCountry/*[in]*/); // [32841]
   HRESULT STDMETHODCALLTYPE get_BusinessAddressPostalCode(BSTR* BusinessAddressPostalCode/*[out,retval]*/); // [32840]
   HRESULT STDMETHODCALLTYPE set_BusinessAddressPostalCode(BSTR BusinessAddressPostalCode/*[in]*/); // [32840]
   HRESULT STDMETHODCALLTYPE get_BusinessAddressPostOfficeBox(BSTR* BusinessAddressPostOfficeBox/*[out,retval]*/); // [32842]
   HRESULT STDMETHODCALLTYPE set_BusinessAddressPostOfficeBox(BSTR BusinessAddressPostOfficeBox/*[in]*/); // [32842]
   HRESULT STDMETHODCALLTYPE get_BusinessAddressState(BSTR* BusinessAddressState/*[out,retval]*/); // [32839]
   HRESULT STDMETHODCALLTYPE set_BusinessAddressState(BSTR BusinessAddressState/*[in]*/); // [32839]
   HRESULT STDMETHODCALLTYPE get_BusinessAddressStreet(BSTR* BusinessAddressStreet/*[out,retval]*/); // [32837]
   HRESULT STDMETHODCALLTYPE set_BusinessAddressStreet(BSTR BusinessAddressStreet/*[in]*/); // [32837]
   HRESULT STDMETHODCALLTYPE get_BusinessFaxNumber(BSTR* BusinessFaxNumber/*[out,retval]*/); // [14884]
   HRESULT STDMETHODCALLTYPE set_BusinessFaxNumber(BSTR BusinessFaxNumber/*[in]*/); // [14884]
   HRESULT STDMETHODCALLTYPE get_BusinessHomePage(BSTR* BusinessHomePage/*[out,retval]*/); // [14929]
   HRESULT STDMETHODCALLTYPE set_BusinessHomePage(BSTR BusinessHomePage/*[in]*/); // [14929]
   HRESULT STDMETHODCALLTYPE get_BusinessTelephoneNumber(BSTR* BusinessTelephoneNumber/*[out,retval]*/); // [14856]
   HRESULT STDMETHODCALLTYPE set_BusinessTelephoneNumber(BSTR BusinessTelephoneNumber/*[in]*/); // [14856]
   HRESULT STDMETHODCALLTYPE get_CallbackTelephoneNumber(BSTR* CallbackTelephoneNumber/*[out,retval]*/); // [14850]
   HRESULT STDMETHODCALLTYPE set_CallbackTelephoneNumber(BSTR CallbackTelephoneNumber/*[in]*/); // [14850]
   HRESULT STDMETHODCALLTYPE get_CarTelephoneNumber(BSTR* CarTelephoneNumber/*[out,retval]*/); // [14878]
   HRESULT STDMETHODCALLTYPE set_CarTelephoneNumber(BSTR CarTelephoneNumber/*[in]*/); // [14878]
   HRESULT STDMETHODCALLTYPE get_Children(BSTR* Children/*[out,retval]*/); // [32780]
   HRESULT STDMETHODCALLTYPE set_Children(BSTR Children/*[in]*/); // [32780]
   HRESULT STDMETHODCALLTYPE get_CompanyAndFullName(BSTR* CompanyAndFullName/*[out,retval]*/); // [32792]
   HRESULT STDMETHODCALLTYPE get_CompanyMainTelephoneNumber(BSTR* CompanyMainTelephoneNumber/*[out,retval]*/); // [14935]
   HRESULT STDMETHODCALLTYPE set_CompanyMainTelephoneNumber(BSTR CompanyMainTelephoneNumber/*[in]*/); // [14935]
   HRESULT STDMETHODCALLTYPE get_CompanyName(BSTR* CompanyName/*[out,retval]*/); // [14870]
   HRESULT STDMETHODCALLTYPE set_CompanyName(BSTR CompanyName/*[in]*/); // [14870]
   HRESULT STDMETHODCALLTYPE get_ComputerNetworkName(BSTR* ComputerNetworkName/*[out,retval]*/); // [14921]
   HRESULT STDMETHODCALLTYPE set_ComputerNetworkName(BSTR ComputerNetworkName/*[in]*/); // [14921]
   HRESULT STDMETHODCALLTYPE get_CustomerID(BSTR* CustomerID/*[out,retval]*/); // [14922]
   HRESULT STDMETHODCALLTYPE set_CustomerID(BSTR CustomerID/*[in]*/); // [14922]
   HRESULT STDMETHODCALLTYPE get_Department(BSTR* Department/*[out,retval]*/); // [14872]
   HRESULT STDMETHODCALLTYPE set_Department(BSTR Department/*[in]*/); // [14872]
   HRESULT STDMETHODCALLTYPE get_Email1Address(BSTR* Email1Address/*[out,retval]*/); // [32899]
   HRESULT STDMETHODCALLTYPE set_Email1Address(BSTR Email1Address/*[in]*/); // [32899]
   HRESULT STDMETHODCALLTYPE get_Email1AddressType(BSTR* Email1AddressType/*[out,retval]*/); // [32898]
   HRESULT STDMETHODCALLTYPE set_Email1AddressType(BSTR Email1AddressType/*[in]*/); // [32898]
   HRESULT STDMETHODCALLTYPE get_Email1DisplayName(BSTR* Email1DisplayName/*[out,retval]*/); // [32896]
   HRESULT STDMETHODCALLTYPE get_Email1EntryID(BSTR* Email1EntryID/*[out,retval]*/); // [32901]
   HRESULT STDMETHODCALLTYPE get_Email2Address(BSTR* Email2Address/*[out,retval]*/); // [32915]
   HRESULT STDMETHODCALLTYPE set_Email2Address(BSTR Email2Address/*[in]*/); // [32915]
   HRESULT STDMETHODCALLTYPE get_Email2AddressType(BSTR* Email2AddressType/*[out,retval]*/); // [32914]
   HRESULT STDMETHODCALLTYPE set_Email2AddressType(BSTR Email2AddressType/*[in]*/); // [32914]
   HRESULT STDMETHODCALLTYPE get_Email2DisplayName(BSTR* Email2DisplayName/*[out,retval]*/); // [32912]
   HRESULT STDMETHODCALLTYPE get_Email2EntryID(BSTR* Email2EntryID/*[out,retval]*/); // [32917]
   HRESULT STDMETHODCALLTYPE get_Email3Address(BSTR* Email3Address/*[out,retval]*/); // [32931]
   HRESULT STDMETHODCALLTYPE set_Email3Address(BSTR Email3Address/*[in]*/); // [32931]
   HRESULT STDMETHODCALLTYPE get_Email3AddressType(BSTR* Email3AddressType/*[out,retval]*/); // [32930]
   HRESULT STDMETHODCALLTYPE set_Email3AddressType(BSTR Email3AddressType/*[in]*/); // [32930]
   HRESULT STDMETHODCALLTYPE get_Email3DisplayName(BSTR* Email3DisplayName/*[out,retval]*/); // [32928]
   HRESULT STDMETHODCALLTYPE get_Email3EntryID(BSTR* Email3EntryID/*[out,retval]*/); // [32933]
   HRESULT STDMETHODCALLTYPE get_FileAs(BSTR* FileAs/*[out,retval]*/); // [32773]
   HRESULT STDMETHODCALLTYPE set_FileAs(BSTR FileAs/*[in]*/); // [32773]
   HRESULT STDMETHODCALLTYPE get_FirstName(BSTR* FirstName/*[out,retval]*/); // [14854]
   HRESULT STDMETHODCALLTYPE set_FirstName(BSTR FirstName/*[in]*/); // [14854]
   HRESULT STDMETHODCALLTYPE get_FTPSite(BSTR* FTPSite/*[out,retval]*/); // [14924]
   HRESULT STDMETHODCALLTYPE set_FTPSite(BSTR FTPSite/*[in]*/); // [14924]
   HRESULT STDMETHODCALLTYPE get_FullName(BSTR* FullName/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE set_FullName(BSTR FullName/*[in]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_FullNameAndCompany(BSTR* FullNameAndCompany/*[out,retval]*/); // [32793]
   HRESULT STDMETHODCALLTYPE get_Gender(Outlook_97::OlGender* Gender/*[out,retval]*/); // [14925]
   HRESULT STDMETHODCALLTYPE set_Gender(Outlook_97::OlGender Gender/*[in]*/); // [14925]
   HRESULT STDMETHODCALLTYPE get_GovernmentIDNumber(BSTR* GovernmentIDNumber/*[out,retval]*/); // [14855]
   HRESULT STDMETHODCALLTYPE set_GovernmentIDNumber(BSTR GovernmentIDNumber/*[in]*/); // [14855]
   HRESULT STDMETHODCALLTYPE get_Hobby(BSTR* Hobby/*[out,retval]*/); // [14915]
   HRESULT STDMETHODCALLTYPE set_Hobby(BSTR Hobby/*[in]*/); // [14915]
   HRESULT STDMETHODCALLTYPE get_Home2TelephoneNumber(BSTR* Home2TelephoneNumber/*[out,retval]*/); // [14895]
   HRESULT STDMETHODCALLTYPE set_Home2TelephoneNumber(BSTR Home2TelephoneNumber/*[in]*/); // [14895]
   HRESULT STDMETHODCALLTYPE get_HomeAddress(BSTR* HomeAddress/*[out,retval]*/); // [32794]
   HRESULT STDMETHODCALLTYPE set_HomeAddress(BSTR HomeAddress/*[in]*/); // [32794]
   HRESULT STDMETHODCALLTYPE get_HomeAddressCity(BSTR* HomeAddressCity/*[out,retval]*/); // [14937]
   HRESULT STDMETHODCALLTYPE set_HomeAddressCity(BSTR HomeAddressCity/*[in]*/); // [14937]
   HRESULT STDMETHODCALLTYPE get_HomeAddressCountry(BSTR* HomeAddressCountry/*[out,retval]*/); // [14938]
   HRESULT STDMETHODCALLTYPE set_HomeAddressCountry(BSTR HomeAddressCountry/*[in]*/); // [14938]
   HRESULT STDMETHODCALLTYPE get_HomeAddressPostalCode(BSTR* HomeAddressPostalCode/*[out,retval]*/); // [14939]
   HRESULT STDMETHODCALLTYPE set_HomeAddressPostalCode(BSTR HomeAddressPostalCode/*[in]*/); // [14939]
   HRESULT STDMETHODCALLTYPE get_HomeAddressPostOfficeBox(BSTR* HomeAddressPostOfficeBox/*[out,retval]*/); // [14942]
   HRESULT STDMETHODCALLTYPE set_HomeAddressPostOfficeBox(BSTR HomeAddressPostOfficeBox/*[in]*/); // [14942]
   HRESULT STDMETHODCALLTYPE get_HomeAddressState(BSTR* HomeAddressState/*[out,retval]*/); // [14940]
   HRESULT STDMETHODCALLTYPE set_HomeAddressState(BSTR HomeAddressState/*[in]*/); // [14940]
   HRESULT STDMETHODCALLTYPE get_HomeAddressStreet(BSTR* HomeAddressStreet/*[out,retval]*/); // [14941]
   HRESULT STDMETHODCALLTYPE set_HomeAddressStreet(BSTR HomeAddressStreet/*[in]*/); // [14941]
   HRESULT STDMETHODCALLTYPE get_HomeFaxNumber(BSTR* HomeFaxNumber/*[out,retval]*/); // [14885]
   HRESULT STDMETHODCALLTYPE set_HomeFaxNumber(BSTR HomeFaxNumber/*[in]*/); // [14885]
   HRESULT STDMETHODCALLTYPE get_HomeTelephoneNumber(BSTR* HomeTelephoneNumber/*[out,retval]*/); // [14857]
   HRESULT STDMETHODCALLTYPE set_HomeTelephoneNumber(BSTR HomeTelephoneNumber/*[in]*/); // [14857]
   HRESULT STDMETHODCALLTYPE get_Initials(BSTR* Initials/*[out,retval]*/); // [14858]
   HRESULT STDMETHODCALLTYPE set_Initials(BSTR Initials/*[in]*/); // [14858]
   HRESULT STDMETHODCALLTYPE get_ISDNNumber(BSTR* ISDNNumber/*[out,retval]*/); // [14893]
   HRESULT STDMETHODCALLTYPE set_ISDNNumber(BSTR ISDNNumber/*[in]*/); // [14893]
   HRESULT STDMETHODCALLTYPE get_JobTitle(BSTR* JobTitle/*[out,retval]*/); // [14871]
   HRESULT STDMETHODCALLTYPE set_JobTitle(BSTR JobTitle/*[in]*/); // [14871]
   HRESULT STDMETHODCALLTYPE get_Journal(VARIANT_BOOL* Journal/*[out,retval]*/); // [32805]
   HRESULT STDMETHODCALLTYPE set_Journal(VARIANT_BOOL Journal/*[in]*/); // [32805]
   HRESULT STDMETHODCALLTYPE get_Language(BSTR* Language/*[out,retval]*/); // [14860]
   HRESULT STDMETHODCALLTYPE set_Language(BSTR Language/*[in]*/); // [14860]
   HRESULT STDMETHODCALLTYPE get_LastName(BSTR* LastName/*[out,retval]*/); // [14865]
   HRESULT STDMETHODCALLTYPE set_LastName(BSTR LastName/*[in]*/); // [14865]
   HRESULT STDMETHODCALLTYPE get_LastNameAndFirstName(BSTR* LastNameAndFirstName/*[out,retval]*/); // [32791]
   HRESULT STDMETHODCALLTYPE get_MailingAddress(BSTR* MailingAddress/*[out,retval]*/); // [14869]
   HRESULT STDMETHODCALLTYPE set_MailingAddress(BSTR MailingAddress/*[in]*/); // [14869]
   HRESULT STDMETHODCALLTYPE get_MailingAddressCity(BSTR* MailingAddressCity/*[out,retval]*/); // [14887]
   HRESULT STDMETHODCALLTYPE set_MailingAddressCity(BSTR MailingAddressCity/*[in]*/); // [14887]
   HRESULT STDMETHODCALLTYPE get_MailingAddressCountry(BSTR* MailingAddressCountry/*[out,retval]*/); // [14886]
   HRESULT STDMETHODCALLTYPE set_MailingAddressCountry(BSTR MailingAddressCountry/*[in]*/); // [14886]
   HRESULT STDMETHODCALLTYPE get_MailingAddressPostalCode(BSTR* MailingAddressPostalCode/*[out,retval]*/); // [14890]
   HRESULT STDMETHODCALLTYPE set_MailingAddressPostalCode(BSTR MailingAddressPostalCode/*[in]*/); // [14890]
   HRESULT STDMETHODCALLTYPE get_MailingAddressPostOfficeBox(BSTR* MailingAddressPostOfficeBox/*[out,retval]*/); // [14891]
   HRESULT STDMETHODCALLTYPE set_MailingAddressPostOfficeBox(BSTR MailingAddressPostOfficeBox/*[in]*/); // [14891]
   HRESULT STDMETHODCALLTYPE get_MailingAddressState(BSTR* MailingAddressState/*[out,retval]*/); // [14888]
   HRESULT STDMETHODCALLTYPE set_MailingAddressState(BSTR MailingAddressState/*[in]*/); // [14888]
   HRESULT STDMETHODCALLTYPE get_MailingAddressStreet(BSTR* MailingAddressStreet/*[out,retval]*/); // [14889]
   HRESULT STDMETHODCALLTYPE set_MailingAddressStreet(BSTR MailingAddressStreet/*[in]*/); // [14889]
   HRESULT STDMETHODCALLTYPE get_ManagerName(BSTR* ManagerName/*[out,retval]*/); // [14926]
   HRESULT STDMETHODCALLTYPE set_ManagerName(BSTR ManagerName/*[in]*/); // [14926]
   HRESULT STDMETHODCALLTYPE get_MiddleName(BSTR* MiddleName/*[out,retval]*/); // [14916]
   HRESULT STDMETHODCALLTYPE set_MiddleName(BSTR MiddleName/*[in]*/); // [14916]
   HRESULT STDMETHODCALLTYPE get_MobileTelephoneNumber(BSTR* MobileTelephoneNumber/*[out,retval]*/); // [14876]
   HRESULT STDMETHODCALLTYPE set_MobileTelephoneNumber(BSTR MobileTelephoneNumber/*[in]*/); // [14876]
   HRESULT STDMETHODCALLTYPE get_NickName(BSTR* NickName/*[out,retval]*/); // [14927]
   HRESULT STDMETHODCALLTYPE set_NickName(BSTR NickName/*[in]*/); // [14927]
   HRESULT STDMETHODCALLTYPE get_OfficeLocation(BSTR* OfficeLocation/*[out,retval]*/); // [14873]
   HRESULT STDMETHODCALLTYPE set_OfficeLocation(BSTR OfficeLocation/*[in]*/); // [14873]
   HRESULT STDMETHODCALLTYPE get_OrganizationalIDNumber(BSTR* OrganizationalIDNumber/*[out,retval]*/); // [14864]
   HRESULT STDMETHODCALLTYPE set_OrganizationalIDNumber(BSTR OrganizationalIDNumber/*[in]*/); // [14864]
   HRESULT STDMETHODCALLTYPE get_OtherAddress(BSTR* OtherAddress/*[out,retval]*/); // [32796]
   HRESULT STDMETHODCALLTYPE set_OtherAddress(BSTR OtherAddress/*[in]*/); // [32796]
   HRESULT STDMETHODCALLTYPE get_OtherAddressCity(BSTR* OtherAddressCity/*[out,retval]*/); // [14943]
   HRESULT STDMETHODCALLTYPE set_OtherAddressCity(BSTR OtherAddressCity/*[in]*/); // [14943]
   HRESULT STDMETHODCALLTYPE get_OtherAddressCountry(BSTR* OtherAddressCountry/*[out,retval]*/); // [14944]
   HRESULT STDMETHODCALLTYPE set_OtherAddressCountry(BSTR OtherAddressCountry/*[in]*/); // [14944]
   HRESULT STDMETHODCALLTYPE get_OtherAddressPostalCode(BSTR* OtherAddressPostalCode/*[out,retval]*/); // [14945]
   HRESULT STDMETHODCALLTYPE set_OtherAddressPostalCode(BSTR OtherAddressPostalCode/*[in]*/); // [14945]
   HRESULT STDMETHODCALLTYPE get_OtherAddressPostOfficeBox(BSTR* OtherAddressPostOfficeBox/*[out,retval]*/); // [14948]
   HRESULT STDMETHODCALLTYPE set_OtherAddressPostOfficeBox(BSTR OtherAddressPostOfficeBox/*[in]*/); // [14948]
   HRESULT STDMETHODCALLTYPE get_OtherAddressState(BSTR* OtherAddressState/*[out,retval]*/); // [14946]
   HRESULT STDMETHODCALLTYPE set_OtherAddressState(BSTR OtherAddressState/*[in]*/); // [14946]
   HRESULT STDMETHODCALLTYPE get_OtherAddressStreet(BSTR* OtherAddressStreet/*[out,retval]*/); // [14947]
   HRESULT STDMETHODCALLTYPE set_OtherAddressStreet(BSTR OtherAddressStreet/*[in]*/); // [14947]
   HRESULT STDMETHODCALLTYPE get_OtherFaxNumber(BSTR* OtherFaxNumber/*[out,retval]*/); // [14883]
   HRESULT STDMETHODCALLTYPE set_OtherFaxNumber(BSTR OtherFaxNumber/*[in]*/); // [14883]
   HRESULT STDMETHODCALLTYPE get_OtherTelephoneNumber(BSTR* OtherTelephoneNumber/*[out,retval]*/); // [14879]
   HRESULT STDMETHODCALLTYPE set_OtherTelephoneNumber(BSTR OtherTelephoneNumber/*[in]*/); // [14879]
   HRESULT STDMETHODCALLTYPE get_PagerNumber(BSTR* PagerNumber/*[out,retval]*/); // [14881]
   HRESULT STDMETHODCALLTYPE set_PagerNumber(BSTR PagerNumber/*[in]*/); // [14881]
   HRESULT STDMETHODCALLTYPE get_PersonalHomePage(BSTR* PersonalHomePage/*[out,retval]*/); // [14928]
   HRESULT STDMETHODCALLTYPE set_PersonalHomePage(BSTR PersonalHomePage/*[in]*/); // [14928]
   HRESULT STDMETHODCALLTYPE get_PrimaryTelephoneNumber(BSTR* PrimaryTelephoneNumber/*[out,retval]*/); // [14874]
   HRESULT STDMETHODCALLTYPE set_PrimaryTelephoneNumber(BSTR PrimaryTelephoneNumber/*[in]*/); // [14874]
   HRESULT STDMETHODCALLTYPE get_Profession(BSTR* Profession/*[out,retval]*/); // [14918]
   HRESULT STDMETHODCALLTYPE set_Profession(BSTR Profession/*[in]*/); // [14918]
   HRESULT STDMETHODCALLTYPE get_RadioTelephoneNumber(BSTR* RadioTelephoneNumber/*[out,retval]*/); // [14877]
   HRESULT STDMETHODCALLTYPE set_RadioTelephoneNumber(BSTR RadioTelephoneNumber/*[in]*/); // [14877]
   HRESULT STDMETHODCALLTYPE get_ReferredBy(BSTR* ReferredBy/*[out,retval]*/); // [14919]
   HRESULT STDMETHODCALLTYPE set_ReferredBy(BSTR ReferredBy/*[in]*/); // [14919]
   HRESULT STDMETHODCALLTYPE get_SelectedMailingAddress(Outlook_97::OlMailingAddress* SelectedMailingAddress/*[out,retval]*/); // [32802]
   HRESULT STDMETHODCALLTYPE set_SelectedMailingAddress(Outlook_97::OlMailingAddress SelectedMailingAddress/*[in]*/); // [32802]
   HRESULT STDMETHODCALLTYPE get_Spouse(BSTR* Spouse/*[out,retval]*/); // [14920]
   HRESULT STDMETHODCALLTYPE set_Spouse(BSTR Spouse/*[in]*/); // [14920]
   HRESULT STDMETHODCALLTYPE get_Suffix(BSTR* Suffix/*[out,retval]*/); // [14853]
   HRESULT STDMETHODCALLTYPE set_Suffix(BSTR Suffix/*[in]*/); // [14853]
   HRESULT STDMETHODCALLTYPE get_TelexNumber(BSTR* TelexNumber/*[out,retval]*/); // [14892]
   HRESULT STDMETHODCALLTYPE set_TelexNumber(BSTR TelexNumber/*[in]*/); // [14892]
   HRESULT STDMETHODCALLTYPE get_Title(BSTR* Title/*[out,retval]*/); // [14917]
   HRESULT STDMETHODCALLTYPE set_Title(BSTR Title/*[in]*/); // [14917]
   HRESULT STDMETHODCALLTYPE get_TTYTDDTelephoneNumber(BSTR* TTYTDDTelephoneNumber/*[out,retval]*/); // [14923]
   HRESULT STDMETHODCALLTYPE set_TTYTDDTelephoneNumber(BSTR TTYTDDTelephoneNumber/*[in]*/); // [14923]
   HRESULT STDMETHODCALLTYPE get_User1(BSTR* User1/*[out,retval]*/); // [32847]
   HRESULT STDMETHODCALLTYPE set_User1(BSTR User1/*[in]*/); // [32847]
   HRESULT STDMETHODCALLTYPE get_User2(BSTR* User2/*[out,retval]*/); // [32848]
   HRESULT STDMETHODCALLTYPE set_User2(BSTR User2/*[in]*/); // [32848]
   HRESULT STDMETHODCALLTYPE get_User3(BSTR* User3/*[out,retval]*/); // [32849]
   HRESULT STDMETHODCALLTYPE set_User3(BSTR User3/*[in]*/); // [32849]
   HRESULT STDMETHODCALLTYPE get_User4(BSTR* User4/*[out,retval]*/); // [32850]
   HRESULT STDMETHODCALLTYPE set_User4(BSTR User4/*[in]*/); // [32850]
   HRESULT STDMETHODCALLTYPE get_UserCertificate(BSTR* UserCertificate/*[out,retval]*/); // [32790]
   HRESULT STDMETHODCALLTYPE set_UserCertificate(BSTR UserCertificate/*[in]*/); // [32790]
   HRESULT STDMETHODCALLTYPE get_WebPage(BSTR* WebPage/*[out,retval]*/); // [32811]
   HRESULT STDMETHODCALLTYPE set_WebPage(BSTR WebPage/*[in]*/); // [32811]
   HRESULT STDMETHODCALLTYPE get_YomiCompanyName(BSTR* YomiCompanyName/*[out,retval]*/); // [32814]
   HRESULT STDMETHODCALLTYPE set_YomiCompanyName(BSTR YomiCompanyName/*[in]*/); // [32814]
   HRESULT STDMETHODCALLTYPE get_YomiFirstName(BSTR* YomiFirstName/*[out,retval]*/); // [32812]
   HRESULT STDMETHODCALLTYPE set_YomiFirstName(BSTR YomiFirstName/*[in]*/); // [32812]
   HRESULT STDMETHODCALLTYPE get_YomiLastName(BSTR* YomiLastName/*[out,retval]*/); // [32813]
   HRESULT STDMETHODCALLTYPE set_YomiLastName(BSTR YomiLastName/*[in]*/); // [32813]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
};

// *********************************************************************//
// Interface: _DContactItem
// Flags:     (4096) Dispatchable
// GUID:      {00063021-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DContactItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Account()
  {
    _TDispID _dispid(/* Account */ DISPID(14848));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Account(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Account */ DISPID(14848));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_Anniversary()
  {
    _TDispID _dispid(/* Anniversary */ DISPID(14913));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Anniversary(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* Anniversary */ DISPID(14913));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_AssistantName()
  {
    _TDispID _dispid(/* AssistantName */ DISPID(14896));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_AssistantName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* AssistantName */ DISPID(14896));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_AssistantTelephoneNumber()
  {
    _TDispID _dispid(/* AssistantTelephoneNumber */ DISPID(14894));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_AssistantTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* AssistantTelephoneNumber */ DISPID(14894));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_Birthday()
  {
    _TDispID _dispid(/* Birthday */ DISPID(14914));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Birthday(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* Birthday */ DISPID(14914));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Business2TelephoneNumber()
  {
    _TDispID _dispid(/* Business2TelephoneNumber */ DISPID(14875));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Business2TelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Business2TelephoneNumber */ DISPID(14875));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddress()
  {
    _TDispID _dispid(/* BusinessAddress */ DISPID(32795));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddress(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddress */ DISPID(32795));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressCity()
  {
    _TDispID _dispid(/* BusinessAddressCity */ DISPID(32838));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressCity(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddressCity */ DISPID(32838));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressCountry()
  {
    _TDispID _dispid(/* BusinessAddressCountry */ DISPID(32841));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressCountry(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddressCountry */ DISPID(32841));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressPostalCode()
  {
    _TDispID _dispid(/* BusinessAddressPostalCode */ DISPID(32840));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressPostalCode(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddressPostalCode */ DISPID(32840));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressPostOfficeBox()
  {
    _TDispID _dispid(/* BusinessAddressPostOfficeBox */ DISPID(32842));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressPostOfficeBox(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddressPostOfficeBox */ DISPID(32842));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressState()
  {
    _TDispID _dispid(/* BusinessAddressState */ DISPID(32839));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressState(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddressState */ DISPID(32839));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressStreet()
  {
    _TDispID _dispid(/* BusinessAddressStreet */ DISPID(32837));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressStreet(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessAddressStreet */ DISPID(32837));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessFaxNumber()
  {
    _TDispID _dispid(/* BusinessFaxNumber */ DISPID(14884));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessFaxNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessFaxNumber */ DISPID(14884));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessHomePage()
  {
    _TDispID _dispid(/* BusinessHomePage */ DISPID(14929));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessHomePage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessHomePage */ DISPID(14929));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessTelephoneNumber()
  {
    _TDispID _dispid(/* BusinessTelephoneNumber */ DISPID(14856));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BusinessTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BusinessTelephoneNumber */ DISPID(14856));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CallbackTelephoneNumber()
  {
    _TDispID _dispid(/* CallbackTelephoneNumber */ DISPID(14850));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CallbackTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CallbackTelephoneNumber */ DISPID(14850));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CarTelephoneNumber()
  {
    _TDispID _dispid(/* CarTelephoneNumber */ DISPID(14878));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CarTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CarTelephoneNumber */ DISPID(14878));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Children()
  {
    _TDispID _dispid(/* Children */ DISPID(32780));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Children(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Children */ DISPID(32780));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CompanyAndFullName()
  {
    _TDispID _dispid(/* CompanyAndFullName */ DISPID(32792));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CompanyMainTelephoneNumber()
  {
    _TDispID _dispid(/* CompanyMainTelephoneNumber */ DISPID(14935));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CompanyMainTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CompanyMainTelephoneNumber */ DISPID(14935));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CompanyName()
  {
    _TDispID _dispid(/* CompanyName */ DISPID(14870));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CompanyName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CompanyName */ DISPID(14870));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ComputerNetworkName()
  {
    _TDispID _dispid(/* ComputerNetworkName */ DISPID(14921));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ComputerNetworkName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ComputerNetworkName */ DISPID(14921));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CustomerID()
  {
    _TDispID _dispid(/* CustomerID */ DISPID(14922));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CustomerID(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CustomerID */ DISPID(14922));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Department()
  {
    _TDispID _dispid(/* Department */ DISPID(14872));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Department(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Department */ DISPID(14872));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1Address()
  {
    _TDispID _dispid(/* Email1Address */ DISPID(32899));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Email1Address(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Email1Address */ DISPID(32899));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1AddressType()
  {
    _TDispID _dispid(/* Email1AddressType */ DISPID(32898));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Email1AddressType(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Email1AddressType */ DISPID(32898));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1DisplayName()
  {
    _TDispID _dispid(/* Email1DisplayName */ DISPID(32896));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1EntryID()
  {
    _TDispID _dispid(/* Email1EntryID */ DISPID(32901));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2Address()
  {
    _TDispID _dispid(/* Email2Address */ DISPID(32915));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Email2Address(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Email2Address */ DISPID(32915));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2AddressType()
  {
    _TDispID _dispid(/* Email2AddressType */ DISPID(32914));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Email2AddressType(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Email2AddressType */ DISPID(32914));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2DisplayName()
  {
    _TDispID _dispid(/* Email2DisplayName */ DISPID(32912));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2EntryID()
  {
    _TDispID _dispid(/* Email2EntryID */ DISPID(32917));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3Address()
  {
    _TDispID _dispid(/* Email3Address */ DISPID(32931));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Email3Address(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Email3Address */ DISPID(32931));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3AddressType()
  {
    _TDispID _dispid(/* Email3AddressType */ DISPID(32930));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Email3AddressType(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Email3AddressType */ DISPID(32930));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3DisplayName()
  {
    _TDispID _dispid(/* Email3DisplayName */ DISPID(32928));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3EntryID()
  {
    _TDispID _dispid(/* Email3EntryID */ DISPID(32933));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FileAs()
  {
    _TDispID _dispid(/* FileAs */ DISPID(32773));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FileAs(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* FileAs */ DISPID(32773));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FirstName()
  {
    _TDispID _dispid(/* FirstName */ DISPID(14854));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FirstName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* FirstName */ DISPID(14854));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FTPSite()
  {
    _TDispID _dispid(/* FTPSite */ DISPID(14924));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FTPSite(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* FTPSite */ DISPID(14924));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FullName()
  {
    _TDispID _dispid(/* FullName */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FullName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* FullName */ DISPID(12289));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FullNameAndCompany()
  {
    _TDispID _dispid(/* FullNameAndCompany */ DISPID(32793));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlGender /*[VT_USERDEFINED:0]*/ __fastcall get_Gender()
  {
    _TDispID _dispid(/* Gender */ DISPID(14925));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlGender /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Gender(Outlook_97::OlGender Param1/*[in]*/)
  {
    _TDispID _dispid(/* Gender */ DISPID(14925));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_GovernmentIDNumber()
  {
    _TDispID _dispid(/* GovernmentIDNumber */ DISPID(14855));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_GovernmentIDNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* GovernmentIDNumber */ DISPID(14855));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Hobby()
  {
    _TDispID _dispid(/* Hobby */ DISPID(14915));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Hobby(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Hobby */ DISPID(14915));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Home2TelephoneNumber()
  {
    _TDispID _dispid(/* Home2TelephoneNumber */ DISPID(14895));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Home2TelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Home2TelephoneNumber */ DISPID(14895));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddress()
  {
    _TDispID _dispid(/* HomeAddress */ DISPID(32794));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddress(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddress */ DISPID(32794));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressCity()
  {
    _TDispID _dispid(/* HomeAddressCity */ DISPID(14937));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressCity(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddressCity */ DISPID(14937));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressCountry()
  {
    _TDispID _dispid(/* HomeAddressCountry */ DISPID(14938));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressCountry(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddressCountry */ DISPID(14938));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressPostalCode()
  {
    _TDispID _dispid(/* HomeAddressPostalCode */ DISPID(14939));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressPostalCode(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddressPostalCode */ DISPID(14939));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressPostOfficeBox()
  {
    _TDispID _dispid(/* HomeAddressPostOfficeBox */ DISPID(14942));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressPostOfficeBox(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddressPostOfficeBox */ DISPID(14942));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressState()
  {
    _TDispID _dispid(/* HomeAddressState */ DISPID(14940));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressState(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddressState */ DISPID(14940));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressStreet()
  {
    _TDispID _dispid(/* HomeAddressStreet */ DISPID(14941));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressStreet(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeAddressStreet */ DISPID(14941));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeFaxNumber()
  {
    _TDispID _dispid(/* HomeFaxNumber */ DISPID(14885));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeFaxNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeFaxNumber */ DISPID(14885));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeTelephoneNumber()
  {
    _TDispID _dispid(/* HomeTelephoneNumber */ DISPID(14857));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_HomeTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* HomeTelephoneNumber */ DISPID(14857));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Initials()
  {
    _TDispID _dispid(/* Initials */ DISPID(14858));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Initials(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Initials */ DISPID(14858));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ISDNNumber()
  {
    _TDispID _dispid(/* ISDNNumber */ DISPID(14893));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ISDNNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ISDNNumber */ DISPID(14893));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_JobTitle()
  {
    _TDispID _dispid(/* JobTitle */ DISPID(14871));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_JobTitle(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* JobTitle */ DISPID(14871));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Journal()
  {
    _TDispID _dispid(/* Journal */ DISPID(32805));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Journal(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Journal */ DISPID(32805));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Language()
  {
    _TDispID _dispid(/* Language */ DISPID(14860));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Language(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Language */ DISPID(14860));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_LastName()
  {
    _TDispID _dispid(/* LastName */ DISPID(14865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_LastName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* LastName */ DISPID(14865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_LastNameAndFirstName()
  {
    _TDispID _dispid(/* LastNameAndFirstName */ DISPID(32791));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddress()
  {
    _TDispID _dispid(/* MailingAddress */ DISPID(14869));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddress(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddress */ DISPID(14869));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressCity()
  {
    _TDispID _dispid(/* MailingAddressCity */ DISPID(14887));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressCity(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddressCity */ DISPID(14887));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressCountry()
  {
    _TDispID _dispid(/* MailingAddressCountry */ DISPID(14886));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressCountry(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddressCountry */ DISPID(14886));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressPostalCode()
  {
    _TDispID _dispid(/* MailingAddressPostalCode */ DISPID(14890));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressPostalCode(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddressPostalCode */ DISPID(14890));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressPostOfficeBox()
  {
    _TDispID _dispid(/* MailingAddressPostOfficeBox */ DISPID(14891));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressPostOfficeBox(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddressPostOfficeBox */ DISPID(14891));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressState()
  {
    _TDispID _dispid(/* MailingAddressState */ DISPID(14888));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressState(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddressState */ DISPID(14888));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressStreet()
  {
    _TDispID _dispid(/* MailingAddressStreet */ DISPID(14889));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressStreet(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MailingAddressStreet */ DISPID(14889));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ManagerName()
  {
    _TDispID _dispid(/* ManagerName */ DISPID(14926));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ManagerName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ManagerName */ DISPID(14926));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MiddleName()
  {
    _TDispID _dispid(/* MiddleName */ DISPID(14916));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MiddleName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MiddleName */ DISPID(14916));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MobileTelephoneNumber()
  {
    _TDispID _dispid(/* MobileTelephoneNumber */ DISPID(14876));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MobileTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MobileTelephoneNumber */ DISPID(14876));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_NickName()
  {
    _TDispID _dispid(/* NickName */ DISPID(14927));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NickName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* NickName */ DISPID(14927));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OfficeLocation()
  {
    _TDispID _dispid(/* OfficeLocation */ DISPID(14873));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OfficeLocation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OfficeLocation */ DISPID(14873));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OrganizationalIDNumber()
  {
    _TDispID _dispid(/* OrganizationalIDNumber */ DISPID(14864));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OrganizationalIDNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OrganizationalIDNumber */ DISPID(14864));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddress()
  {
    _TDispID _dispid(/* OtherAddress */ DISPID(32796));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddress(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddress */ DISPID(32796));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressCity()
  {
    _TDispID _dispid(/* OtherAddressCity */ DISPID(14943));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressCity(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddressCity */ DISPID(14943));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressCountry()
  {
    _TDispID _dispid(/* OtherAddressCountry */ DISPID(14944));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressCountry(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddressCountry */ DISPID(14944));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressPostalCode()
  {
    _TDispID _dispid(/* OtherAddressPostalCode */ DISPID(14945));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressPostalCode(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddressPostalCode */ DISPID(14945));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressPostOfficeBox()
  {
    _TDispID _dispid(/* OtherAddressPostOfficeBox */ DISPID(14948));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressPostOfficeBox(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddressPostOfficeBox */ DISPID(14948));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressState()
  {
    _TDispID _dispid(/* OtherAddressState */ DISPID(14946));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressState(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddressState */ DISPID(14946));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressStreet()
  {
    _TDispID _dispid(/* OtherAddressStreet */ DISPID(14947));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressStreet(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherAddressStreet */ DISPID(14947));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherFaxNumber()
  {
    _TDispID _dispid(/* OtherFaxNumber */ DISPID(14883));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherFaxNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherFaxNumber */ DISPID(14883));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherTelephoneNumber()
  {
    _TDispID _dispid(/* OtherTelephoneNumber */ DISPID(14879));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OtherTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* OtherTelephoneNumber */ DISPID(14879));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_PagerNumber()
  {
    _TDispID _dispid(/* PagerNumber */ DISPID(14881));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_PagerNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* PagerNumber */ DISPID(14881));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_PersonalHomePage()
  {
    _TDispID _dispid(/* PersonalHomePage */ DISPID(14928));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_PersonalHomePage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* PersonalHomePage */ DISPID(14928));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_PrimaryTelephoneNumber()
  {
    _TDispID _dispid(/* PrimaryTelephoneNumber */ DISPID(14874));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_PrimaryTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* PrimaryTelephoneNumber */ DISPID(14874));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Profession()
  {
    _TDispID _dispid(/* Profession */ DISPID(14918));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Profession(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Profession */ DISPID(14918));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_RadioTelephoneNumber()
  {
    _TDispID _dispid(/* RadioTelephoneNumber */ DISPID(14877));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_RadioTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* RadioTelephoneNumber */ DISPID(14877));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReferredBy()
  {
    _TDispID _dispid(/* ReferredBy */ DISPID(14919));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReferredBy(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReferredBy */ DISPID(14919));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlMailingAddress /*[VT_USERDEFINED:0]*/ __fastcall get_SelectedMailingAddress()
  {
    _TDispID _dispid(/* SelectedMailingAddress */ DISPID(32802));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlMailingAddress /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_SelectedMailingAddress(Outlook_97::OlMailingAddress Param1/*[in]*/)
  {
    _TDispID _dispid(/* SelectedMailingAddress */ DISPID(32802));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Spouse()
  {
    _TDispID _dispid(/* Spouse */ DISPID(14920));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Spouse(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Spouse */ DISPID(14920));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Suffix()
  {
    _TDispID _dispid(/* Suffix */ DISPID(14853));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Suffix(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Suffix */ DISPID(14853));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_TelexNumber()
  {
    _TDispID _dispid(/* TelexNumber */ DISPID(14892));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_TelexNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* TelexNumber */ DISPID(14892));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Title()
  {
    _TDispID _dispid(/* Title */ DISPID(14917));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Title(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Title */ DISPID(14917));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_TTYTDDTelephoneNumber()
  {
    _TDispID _dispid(/* TTYTDDTelephoneNumber */ DISPID(14923));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_TTYTDDTelephoneNumber(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* TTYTDDTelephoneNumber */ DISPID(14923));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_User1()
  {
    _TDispID _dispid(/* User1 */ DISPID(32847));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_User1(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* User1 */ DISPID(32847));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_User2()
  {
    _TDispID _dispid(/* User2 */ DISPID(32848));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_User2(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* User2 */ DISPID(32848));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_User3()
  {
    _TDispID _dispid(/* User3 */ DISPID(32849));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_User3(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* User3 */ DISPID(32849));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_User4()
  {
    _TDispID _dispid(/* User4 */ DISPID(32850));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_User4(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* User4 */ DISPID(32850));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_UserCertificate()
  {
    _TDispID _dispid(/* UserCertificate */ DISPID(32790));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UserCertificate(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* UserCertificate */ DISPID(32790));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_WebPage()
  {
    _TDispID _dispid(/* WebPage */ DISPID(32811));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_WebPage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* WebPage */ DISPID(32811));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_YomiCompanyName()
  {
    _TDispID _dispid(/* YomiCompanyName */ DISPID(32814));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_YomiCompanyName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* YomiCompanyName */ DISPID(32814));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_YomiFirstName()
  {
    _TDispID _dispid(/* YomiFirstName */ DISPID(32812));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_YomiFirstName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* YomiFirstName */ DISPID(32812));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_YomiLastName()
  {
    _TDispID _dispid(/* YomiLastName */ DISPID(32813));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_YomiLastName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* YomiLastName */ DISPID(32813));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            Account = {read = get_Account};
  __property   DATE            Anniversary = {read = get_Anniversary, write = set_Anniversary};
  __property   BSTR            AssistantName = {read = get_AssistantName};
  __property   BSTR            AssistantTelephoneNumber = {read = get_AssistantTelephoneNumber};
  __property   DATE            Birthday = {read = get_Birthday, write = set_Birthday};
  __property   BSTR            Business2TelephoneNumber = {read = get_Business2TelephoneNumber};
  __property   BSTR            BusinessAddress = {read = get_BusinessAddress};
  __property   BSTR            BusinessAddressCity = {read = get_BusinessAddressCity};
  __property   BSTR            BusinessAddressCountry = {read = get_BusinessAddressCountry};
  __property   BSTR            BusinessAddressPostalCode = {read = get_BusinessAddressPostalCode};
  __property   BSTR            BusinessAddressPostOfficeBox = {read = get_BusinessAddressPostOfficeBox};
  __property   BSTR            BusinessAddressState = {read = get_BusinessAddressState};
  __property   BSTR            BusinessAddressStreet = {read = get_BusinessAddressStreet};
  __property   BSTR            BusinessFaxNumber = {read = get_BusinessFaxNumber};
  __property   BSTR            BusinessHomePage = {read = get_BusinessHomePage};
  __property   BSTR            BusinessTelephoneNumber = {read = get_BusinessTelephoneNumber};
  __property   BSTR            CallbackTelephoneNumber = {read = get_CallbackTelephoneNumber};
  __property   BSTR            CarTelephoneNumber = {read = get_CarTelephoneNumber};
  __property   BSTR            Children = {read = get_Children};
  __property   BSTR            CompanyAndFullName = {read = get_CompanyAndFullName};
  __property   BSTR            CompanyMainTelephoneNumber = {read = get_CompanyMainTelephoneNumber};
  __property   BSTR            CompanyName = {read = get_CompanyName};
  __property   BSTR            ComputerNetworkName = {read = get_ComputerNetworkName};
  __property   BSTR            CustomerID = {read = get_CustomerID};
  __property   BSTR            Department = {read = get_Department};
  __property   BSTR            Email1Address = {read = get_Email1Address};
  __property   BSTR            Email1AddressType = {read = get_Email1AddressType};
  __property   BSTR            Email1DisplayName = {read = get_Email1DisplayName};
  __property   BSTR            Email1EntryID = {read = get_Email1EntryID};
  __property   BSTR            Email2Address = {read = get_Email2Address};
  __property   BSTR            Email2AddressType = {read = get_Email2AddressType};
  __property   BSTR            Email2DisplayName = {read = get_Email2DisplayName};
  __property   BSTR            Email2EntryID = {read = get_Email2EntryID};
  __property   BSTR            Email3Address = {read = get_Email3Address};
  __property   BSTR            Email3AddressType = {read = get_Email3AddressType};
  __property   BSTR            Email3DisplayName = {read = get_Email3DisplayName};
  __property   BSTR            Email3EntryID = {read = get_Email3EntryID};
  __property   BSTR            FileAs = {read = get_FileAs};
  __property   BSTR            FirstName = {read = get_FirstName};
  __property   BSTR            FTPSite = {read = get_FTPSite};
  __property   BSTR            FullName = {read = get_FullName};
  __property   BSTR            FullNameAndCompany = {read = get_FullNameAndCompany};
  __property   Outlook_97::OlGender Gender = {read = get_Gender, write = set_Gender};
  __property   BSTR            GovernmentIDNumber = {read = get_GovernmentIDNumber};
  __property   BSTR            Hobby = {read = get_Hobby};
  __property   BSTR            Home2TelephoneNumber = {read = get_Home2TelephoneNumber};
  __property   BSTR            HomeAddress = {read = get_HomeAddress};
  __property   BSTR            HomeAddressCity = {read = get_HomeAddressCity};
  __property   BSTR            HomeAddressCountry = {read = get_HomeAddressCountry};
  __property   BSTR            HomeAddressPostalCode = {read = get_HomeAddressPostalCode};
  __property   BSTR            HomeAddressPostOfficeBox = {read = get_HomeAddressPostOfficeBox};
  __property   BSTR            HomeAddressState = {read = get_HomeAddressState};
  __property   BSTR            HomeAddressStreet = {read = get_HomeAddressStreet};
  __property   BSTR            HomeFaxNumber = {read = get_HomeFaxNumber};
  __property   BSTR            HomeTelephoneNumber = {read = get_HomeTelephoneNumber};
  __property   BSTR            Initials = {read = get_Initials};
  __property   BSTR            ISDNNumber = {read = get_ISDNNumber};
  __property   BSTR            JobTitle = {read = get_JobTitle};
  __property   VARIANT_BOOL    Journal = {read = get_Journal, write = set_Journal};
  __property   BSTR            Language = {read = get_Language};
  __property   BSTR            LastName = {read = get_LastName};
  __property   BSTR            LastNameAndFirstName = {read = get_LastNameAndFirstName};
  __property   BSTR            MailingAddress = {read = get_MailingAddress};
  __property   BSTR            MailingAddressCity = {read = get_MailingAddressCity};
  __property   BSTR            MailingAddressCountry = {read = get_MailingAddressCountry};
  __property   BSTR            MailingAddressPostalCode = {read = get_MailingAddressPostalCode};
  __property   BSTR            MailingAddressPostOfficeBox = {read = get_MailingAddressPostOfficeBox};
  __property   BSTR            MailingAddressState = {read = get_MailingAddressState};
  __property   BSTR            MailingAddressStreet = {read = get_MailingAddressStreet};
  __property   BSTR            ManagerName = {read = get_ManagerName};
  __property   BSTR            MiddleName = {read = get_MiddleName};
  __property   BSTR            MobileTelephoneNumber = {read = get_MobileTelephoneNumber};
  __property   BSTR            NickName = {read = get_NickName};
  __property   BSTR            OfficeLocation = {read = get_OfficeLocation};
  __property   BSTR            OrganizationalIDNumber = {read = get_OrganizationalIDNumber};
  __property   BSTR            OtherAddress = {read = get_OtherAddress};
  __property   BSTR            OtherAddressCity = {read = get_OtherAddressCity};
  __property   BSTR            OtherAddressCountry = {read = get_OtherAddressCountry};
  __property   BSTR            OtherAddressPostalCode = {read = get_OtherAddressPostalCode};
  __property   BSTR            OtherAddressPostOfficeBox = {read = get_OtherAddressPostOfficeBox};
  __property   BSTR            OtherAddressState = {read = get_OtherAddressState};
  __property   BSTR            OtherAddressStreet = {read = get_OtherAddressStreet};
  __property   BSTR            OtherFaxNumber = {read = get_OtherFaxNumber};
  __property   BSTR            OtherTelephoneNumber = {read = get_OtherTelephoneNumber};
  __property   BSTR            PagerNumber = {read = get_PagerNumber};
  __property   BSTR            PersonalHomePage = {read = get_PersonalHomePage};
  __property   BSTR            PrimaryTelephoneNumber = {read = get_PrimaryTelephoneNumber};
  __property   BSTR            Profession = {read = get_Profession};
  __property   BSTR            RadioTelephoneNumber = {read = get_RadioTelephoneNumber};
  __property   BSTR            ReferredBy = {read = get_ReferredBy};
  __property   Outlook_97::OlMailingAddress SelectedMailingAddress = {read = get_SelectedMailingAddress, write = set_SelectedMailingAddress};
  __property   BSTR            Spouse = {read = get_Spouse};
  __property   BSTR            Suffix = {read = get_Suffix};
  __property   BSTR            TelexNumber = {read = get_TelexNumber};
  __property   BSTR            Title = {read = get_Title};
  __property   BSTR            TTYTDDTelephoneNumber = {read = get_TTYTDDTelephoneNumber};
  __property   BSTR            User1 = {read = get_User1};
  __property   BSTR            User2 = {read = get_User2};
  __property   BSTR            User3 = {read = get_User3};
  __property   BSTR            User4 = {read = get_User4};
  __property   BSTR            UserCertificate = {read = get_UserCertificate};
  __property   BSTR            WebPage = {read = get_WebPage};
  __property   BSTR            YomiCompanyName = {read = get_YomiCompanyName};
  __property   BSTR            YomiFirstName = {read = get_YomiFirstName};
  __property   BSTR            YomiLastName = {read = get_YomiLastName};
};
// *********************************************************************//
// Interface: _IExplorer
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063103-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IExplorer  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_CommandBars(Office_97::CommandBars** CommandBars/*[out,retval]*/); // [8448]
   HRESULT STDMETHODCALLTYPE get_CurrentFolder(Outlook_97::MAPIFolder** CurrentFolder/*[out,retval]*/); // [8449]
   HRESULT STDMETHODCALLTYPE _set_CurrentFolder(Outlook_97::MAPIFolder* CurrentFolder/*[in]*/); // [8449]
   HRESULT STDMETHODCALLTYPE get_Parent(Outlook_97::OutlookApplication** Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE Close(void); // [8451]
   HRESULT STDMETHODCALLTYPE Display(void); // [8452]
};

// *********************************************************************//
// Interface: Explorer
// Flags:     (4096) Dispatchable
// GUID:      {00063003-0000-0000-C000-000000000046}
// *********************************************************************//
interface Explorer : public TDispWrapper<IDispatch>
{
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Office_97::CommandBars* /*[VT_USERDEFINED:1]*/ __fastcall get_CommandBars()
  {
    _TDispID _dispid(/* CommandBars */ DISPID(8448));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Office_97::CommandBars* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall get_CurrentFolder()
  {
    _TDispID _dispid(/* CurrentFolder */ DISPID(8449));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall _set_CurrentFolder(Outlook_97::MAPIFolder* Param1/*[in]*/)
  {
    _TDispID _dispid(/* CurrentFolder */ DISPID(8449));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)Param1 /*[VT_USERDEFINED:1]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close()
  {
    _TDispID _dispid(/* Close */ DISPID(8451));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display()
  {
    _TDispID _dispid(/* Display */ DISPID(8452));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Office_97::CommandBars* CommandBars = {read = get_CommandBars};
  __property   Outlook_97::MAPIFolder* CurrentFolder = {read = get_CurrentFolder, write = _set_CurrentFolder};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
};
// *********************************************************************//
// Interface: _IFolders
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063140-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IFolders  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE Add(BSTR Name/*[in]*/, VARIANT Type/*[in]*/, 
                                 Outlook_97::MAPIFolder** Folder/*[out,retval]*/); // [100]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, 
                                  Outlook_97::MAPIFolder** Folder/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [84]
};

// *********************************************************************//
// Interface: Folders
// Flags:     (4096) Dispatchable
// GUID:      {00063040-0000-0000-C000-000000000046}
// *********************************************************************//
interface Folders : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall Add(BSTR Name/*[in]*/, 
                                                                VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* Add */ DISPID(100));
    TAutoArgs<2> _args;
    _args[1] = Name /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(84));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   long            Count = {read = get_Count};
};
// *********************************************************************//
// Interface: _IFormDescription
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063146-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IFormDescription  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Category(BSTR* Category/*[out,retval]*/); // [13060]
   HRESULT STDMETHODCALLTYPE set_Category(BSTR Category/*[in]*/); // [13060]
   HRESULT STDMETHODCALLTYPE get_CategorySub(BSTR* CategorySub/*[out,retval]*/); // [13061]
   HRESULT STDMETHODCALLTYPE set_CategorySub(BSTR CategorySub/*[in]*/); // [13061]
   HRESULT STDMETHODCALLTYPE get_Comment(BSTR* Comment/*[out,retval]*/); // [12292]
   HRESULT STDMETHODCALLTYPE set_Comment(BSTR Comment/*[in]*/); // [12292]
   HRESULT STDMETHODCALLTYPE get_ContactName(BSTR* ContactName/*[out,retval]*/); // [13059]
   HRESULT STDMETHODCALLTYPE set_ContactName(BSTR ContactName/*[in]*/); // [13059]
   HRESULT STDMETHODCALLTYPE get_DisplayName(BSTR* DisplayName/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE set_DisplayName(BSTR DisplayName/*[in]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_Hidden(VARIANT_BOOL* Hidden/*[out,retval]*/); // [13063]
   HRESULT STDMETHODCALLTYPE set_Hidden(VARIANT_BOOL Hidden/*[in]*/); // [13063]
   HRESULT STDMETHODCALLTYPE get_Icon(BSTR* Icon/*[out,retval]*/); // [4093]
   HRESULT STDMETHODCALLTYPE set_Icon(BSTR Icon/*[in]*/); // [4093]
   HRESULT STDMETHODCALLTYPE get_Locked(VARIANT_BOOL* Locked/*[out,retval]*/); // [102]
   HRESULT STDMETHODCALLTYPE set_Locked(VARIANT_BOOL Locked/*[in]*/); // [102]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_MiniIcon(BSTR* MiniIcon/*[out,retval]*/); // [4092]
   HRESULT STDMETHODCALLTYPE set_MiniIcon(BSTR MiniIcon/*[in]*/); // [4092]
   HRESULT STDMETHODCALLTYPE get_Name(BSTR* Name/*[out,retval]*/); // [61469]
   HRESULT STDMETHODCALLTYPE set_Name(BSTR Name/*[in]*/); // [61469]
   HRESULT STDMETHODCALLTYPE get_Number(BSTR* Number/*[out,retval]*/); // [104]
   HRESULT STDMETHODCALLTYPE set_Number(BSTR Number/*[in]*/); // [104]
   HRESULT STDMETHODCALLTYPE get_OneOff(VARIANT_BOOL* OneOff/*[out,retval]*/); // [101]
   HRESULT STDMETHODCALLTYPE set_OneOff(VARIANT_BOOL OneOff/*[in]*/); // [101]
   HRESULT STDMETHODCALLTYPE get_Password(BSTR* Password/*[out,retval]*/); // [103]
   HRESULT STDMETHODCALLTYPE set_Password(BSTR Password/*[in]*/); // [103]
   HRESULT STDMETHODCALLTYPE get_Template(BSTR* Template/*[out,retval]*/); // [106]
   HRESULT STDMETHODCALLTYPE set_Template(BSTR Template/*[in]*/); // [106]
   HRESULT STDMETHODCALLTYPE get_UseWordMail(VARIANT_BOOL* UseWordMail/*[out,retval]*/); // [105]
   HRESULT STDMETHODCALLTYPE set_UseWordMail(VARIANT_BOOL UseWordMail/*[in]*/); // [105]
   HRESULT STDMETHODCALLTYPE get_Version(BSTR* Version/*[out,retval]*/); // [13057]
   HRESULT STDMETHODCALLTYPE set_Version(BSTR Version/*[in]*/); // [13057]
   HRESULT STDMETHODCALLTYPE PublishForm(Outlook_97::OlFormRegistry Registry/*[in]*/, 
                                         VARIANT Folder/*[in]*/); // [107]
};

// *********************************************************************//
// Interface: FormDescription
// Flags:     (4096) Dispatchable
// GUID:      {00063046-0000-0000-C000-000000000046}
// *********************************************************************//
interface FormDescription : public TDispWrapper<IDispatch>
{
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Category()
  {
    _TDispID _dispid(/* Category */ DISPID(13060));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Category(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Category */ DISPID(13060));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CategorySub()
  {
    _TDispID _dispid(/* CategorySub */ DISPID(13061));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CategorySub(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CategorySub */ DISPID(13061));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Comment()
  {
    _TDispID _dispid(/* Comment */ DISPID(12292));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Comment(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Comment */ DISPID(12292));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ContactName()
  {
    _TDispID _dispid(/* ContactName */ DISPID(13059));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ContactName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ContactName */ DISPID(13059));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_DisplayName()
  {
    _TDispID _dispid(/* DisplayName */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DisplayName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* DisplayName */ DISPID(12289));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Hidden()
  {
    _TDispID _dispid(/* Hidden */ DISPID(13063));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Hidden(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Hidden */ DISPID(13063));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Icon()
  {
    _TDispID _dispid(/* Icon */ DISPID(4093));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Icon(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Icon */ DISPID(4093));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Locked()
  {
    _TDispID _dispid(/* Locked */ DISPID(102));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Locked(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Locked */ DISPID(102));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MiniIcon()
  {
    _TDispID _dispid(/* MiniIcon */ DISPID(4092));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MiniIcon(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MiniIcon */ DISPID(4092));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name()
  {
    _TDispID _dispid(/* Name */ DISPID(61469));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Name(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Name */ DISPID(61469));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Number()
  {
    _TDispID _dispid(/* Number */ DISPID(104));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Number(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Number */ DISPID(104));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_OneOff()
  {
    _TDispID _dispid(/* OneOff */ DISPID(101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OneOff(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* OneOff */ DISPID(101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Password()
  {
    _TDispID _dispid(/* Password */ DISPID(103));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Password(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Password */ DISPID(103));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Template()
  {
    _TDispID _dispid(/* Template */ DISPID(106));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Template(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Template */ DISPID(106));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UseWordMail()
  {
    _TDispID _dispid(/* UseWordMail */ DISPID(105));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UseWordMail(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UseWordMail */ DISPID(105));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Version()
  {
    _TDispID _dispid(/* Version */ DISPID(13057));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Version(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Version */ DISPID(13057));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PublishForm(Outlook_97::OlFormRegistry Registry/*[in]*/, 
                                              VARIANT Folder/*[in]*/)
  {
    _TDispID _dispid(/* PublishForm */ DISPID(107));
    TAutoArgs<2> _args;
    _args[1] = (int)Registry /*[VT_USERDEFINED:0]*/;
    _args[2] = Folder /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   BSTR            Category = {read = get_Category};
  __property   BSTR            CategorySub = {read = get_CategorySub};
  __property   BSTR            Comment = {read = get_Comment};
  __property   BSTR            ContactName = {read = get_ContactName};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   VARIANT_BOOL    Hidden = {read = get_Hidden, write = set_Hidden};
  __property   BSTR            Icon = {read = get_Icon};
  __property   VARIANT_BOOL    Locked = {read = get_Locked, write = set_Locked};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            MiniIcon = {read = get_MiniIcon};
  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Number = {read = get_Number};
  __property   VARIANT_BOOL    OneOff = {read = get_OneOff, write = set_OneOff};
  __property   BSTR            Password = {read = get_Password};
  __property   BSTR            Template = {read = get_Template};
  __property   VARIANT_BOOL    UseWordMail = {read = get_UseWordMail, write = set_UseWordMail};
  __property   BSTR            Version = {read = get_Version};
};
// *********************************************************************//
// Interface: _IInspector
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063105-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IInspector  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_CommandBars(Office_97::CommandBars** CommandBars/*[out,retval]*/); // [8448]
   HRESULT STDMETHODCALLTYPE get_CurrentItem(LPDISPATCH* CurrentItem/*[out,retval]*/); // [8450]
   HRESULT STDMETHODCALLTYPE get_ModifiedFormPages(Outlook_97::Pages** ModifiedFormPages/*[out,retval]*/); // [8454]
   HRESULT STDMETHODCALLTYPE get_Parent(Outlook_97::OutlookApplication** Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [8451]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [8452]
   HRESULT STDMETHODCALLTYPE HideFormPage(BSTR PageName/*[in]*/); // [8456]
   HRESULT STDMETHODCALLTYPE IsWordMail(VARIANT_BOOL* IsWordMail/*[out,retval]*/); // [8453]
   HRESULT STDMETHODCALLTYPE SetCurrentFormPage(BSTR PageName/*[in]*/); // [8460]
   HRESULT STDMETHODCALLTYPE ShowFormPage(BSTR PageName/*[in]*/); // [8457]
};

// *********************************************************************//
// Interface: Inspector
// Flags:     (4096) Dispatchable
// GUID:      {00063005-0000-0000-C000-000000000046}
// *********************************************************************//
interface Inspector : public TDispWrapper<IDispatch>
{
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Office_97::CommandBars* /*[VT_USERDEFINED:1]*/ __fastcall get_CommandBars()
  {
    _TDispID _dispid(/* CommandBars */ DISPID(8448));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Office_97::CommandBars* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_CurrentItem()
  {
    _TDispID _dispid(/* CurrentItem */ DISPID(8450));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Pages* /*[VT_USERDEFINED:1]*/ __fastcall get_ModifiedFormPages()
  {
    _TDispID _dispid(/* ModifiedFormPages */ DISPID(8454));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Pages* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(8451));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(8452));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall HideFormPage(BSTR PageName/*[in]*/)
  {
    _TDispID _dispid(/* HideFormPage */ DISPID(8456));
    TAutoArgs<1> _args;
    _args[1] = PageName /*[VT_BSTR:0]*/;
    OleProcedure(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall IsWordMail()
  {
    _TDispID _dispid(/* IsWordMail */ DISPID(8453));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall SetCurrentFormPage(BSTR PageName/*[in]*/)
  {
    _TDispID _dispid(/* SetCurrentFormPage */ DISPID(8460));
    TAutoArgs<1> _args;
    _args[1] = PageName /*[VT_BSTR:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall ShowFormPage(BSTR PageName/*[in]*/)
  {
    _TDispID _dispid(/* ShowFormPage */ DISPID(8457));
    TAutoArgs<1> _args;
    _args[1] = PageName /*[VT_BSTR:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Office_97::CommandBars* CommandBars = {read = get_CommandBars};
  __property   LPDISPATCH      CurrentItem = {read = get_CurrentItem};
  __property   Outlook_97::Pages* ModifiedFormPages = {read = get_ModifiedFormPages};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
};
// *********************************************************************//
// Interface: _IItems
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063141-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IItems  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE get_IncludeRecurrences(VARIANT_BOOL* IncludeRecurrences/*[out,retval]*/); // [206]
   HRESULT STDMETHODCALLTYPE set_IncludeRecurrences(VARIANT_BOOL IncludeRecurrences/*[in]*/); // [206]
   HRESULT STDMETHODCALLTYPE Add(VARIANT Type/*[in]*/, LPDISPATCH* Item/*[out,retval]*/); // [200]
   HRESULT STDMETHODCALLTYPE Find(BSTR Filter/*[in]*/, LPDISPATCH* Item/*[out,retval]*/); // [203]
   HRESULT STDMETHODCALLTYPE FindNext(LPDISPATCH* Item/*[out,retval]*/); // [204]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, LPDISPATCH* Item/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [84]
   HRESULT STDMETHODCALLTYPE Restrict(BSTR Filter/*[in]*/, Outlook_97::Items** Items/*[out,retval]*/); // [202]
   HRESULT STDMETHODCALLTYPE Sort(BSTR Property/*[in]*/, VARIANT Descending/*[in]*/); // [205]
};

// *********************************************************************//
// Interface: Items
// Flags:     (4096) Dispatchable
// GUID:      {00063041-0000-0000-C000-000000000046}
// *********************************************************************//
interface Items : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_IncludeRecurrences()
  {
    _TDispID _dispid(/* IncludeRecurrences */ DISPID(206));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_IncludeRecurrences(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* IncludeRecurrences */ DISPID(206));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Add(VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* Add */ DISPID(200));
    TAutoArgs<1> _args;
    _args[1] = Type /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Find(BSTR Filter/*[in]*/)
  {
    _TDispID _dispid(/* Find */ DISPID(203));
    TAutoArgs<1> _args;
    _args[1] = Filter /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall FindNext()
  {
    _TDispID _dispid(/* FindNext */ DISPID(204));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(84));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }

  Outlook_97::Items* /*[VT_USERDEFINED:1]*/ __fastcall Restrict(BSTR Filter/*[in]*/)
  {
    _TDispID _dispid(/* Restrict */ DISPID(202));
    TAutoArgs<1> _args;
    _args[1] = Filter /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Items* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Sort(BSTR Property/*[in]*/, VARIANT Descending/*[in]*/)
  {
    _TDispID _dispid(/* Sort */ DISPID(205));
    TAutoArgs<2> _args;
    _args[1] = Property /*[VT_BSTR:0]*/;
    _args[2] = Descending /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   long            Count = {read = get_Count};
  __property   VARIANT_BOOL    IncludeRecurrences = {read = get_IncludeRecurrences, write = set_IncludeRecurrences};
};
// *********************************************************************//
// Interface: _IJournalItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063122-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IJournalItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_ContactNames(BSTR* ContactNames/*[out,retval]*/); // [3588]
   HRESULT STDMETHODCALLTYPE set_ContactNames(BSTR ContactNames/*[in]*/); // [3588]
   HRESULT STDMETHODCALLTYPE get_DocPosted(VARIANT_BOOL* DocPosted/*[out,retval]*/); // [34577]
   HRESULT STDMETHODCALLTYPE set_DocPosted(VARIANT_BOOL DocPosted/*[in]*/); // [34577]
   HRESULT STDMETHODCALLTYPE get_DocPrinted(VARIANT_BOOL* DocPrinted/*[out,retval]*/); // [34574]
   HRESULT STDMETHODCALLTYPE set_DocPrinted(VARIANT_BOOL DocPrinted/*[in]*/); // [34574]
   HRESULT STDMETHODCALLTYPE get_DocRouted(VARIANT_BOOL* DocRouted/*[out,retval]*/); // [34576]
   HRESULT STDMETHODCALLTYPE set_DocRouted(VARIANT_BOOL DocRouted/*[in]*/); // [34576]
   HRESULT STDMETHODCALLTYPE get_DocSaved(VARIANT_BOOL* DocSaved/*[out,retval]*/); // [34575]
   HRESULT STDMETHODCALLTYPE set_DocSaved(VARIANT_BOOL DocSaved/*[in]*/); // [34575]
   HRESULT STDMETHODCALLTYPE get_Duration(long* Duration/*[out,retval]*/); // [34567]
   HRESULT STDMETHODCALLTYPE set_Duration(long Duration/*[in]*/); // [34567]
   HRESULT STDMETHODCALLTYPE get_End(DATE* End/*[out,retval]*/); // [34568]
   HRESULT STDMETHODCALLTYPE set_End(DATE End/*[in]*/); // [34568]
   HRESULT STDMETHODCALLTYPE get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/); // [63508]
   HRESULT STDMETHODCALLTYPE get_Start(DATE* Start/*[out,retval]*/); // [34566]
   HRESULT STDMETHODCALLTYPE set_Start(DATE Start/*[in]*/); // [34566]
   HRESULT STDMETHODCALLTYPE get_Type(BSTR* Type/*[out,retval]*/); // [34560]
   HRESULT STDMETHODCALLTYPE set_Type(BSTR Type/*[in]*/); // [34560]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE Forward(Outlook_97::MailItem** Item/*[out,retval]*/); // [63507]
   HRESULT STDMETHODCALLTYPE Reply(Outlook_97::MailItem** Item/*[out,retval]*/); // [63504]
   HRESULT STDMETHODCALLTYPE ReplyAll(Outlook_97::MailItem** Item/*[out,retval]*/); // [63505]
   HRESULT STDMETHODCALLTYPE StartTimer(void); // [63269]
   HRESULT STDMETHODCALLTYPE StopTimer(void); // [63270]
};

// *********************************************************************//
// Interface: _DJournalItem
// Flags:     (4096) Dispatchable
// GUID:      {00063022-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DJournalItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ContactNames()
  {
    _TDispID _dispid(/* ContactNames */ DISPID(3588));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ContactNames(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ContactNames */ DISPID(3588));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocPosted()
  {
    _TDispID _dispid(/* DocPosted */ DISPID(34577));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DocPosted(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* DocPosted */ DISPID(34577));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocPrinted()
  {
    _TDispID _dispid(/* DocPrinted */ DISPID(34574));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DocPrinted(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* DocPrinted */ DISPID(34574));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocRouted()
  {
    _TDispID _dispid(/* DocRouted */ DISPID(34576));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DocRouted(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* DocRouted */ DISPID(34576));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocSaved()
  {
    _TDispID _dispid(/* DocSaved */ DISPID(34575));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DocSaved(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* DocSaved */ DISPID(34575));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Duration()
  {
    _TDispID _dispid(/* Duration */ DISPID(34567));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Duration(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Duration */ DISPID(34567));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_End()
  {
    _TDispID _dispid(/* End */ DISPID(34568));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_End(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* End */ DISPID(34568));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients()
  {
    _TDispID _dispid(/* Recipients */ DISPID(63508));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_Start()
  {
    _TDispID _dispid(/* Start */ DISPID(34566));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Start(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* Start */ DISPID(34566));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Type()
  {
    _TDispID _dispid(/* Type */ DISPID(34560));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Type(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Type */ DISPID(34560));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Forward()
  {
    _TDispID _dispid(/* Forward */ DISPID(63507));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Reply()
  {
    _TDispID _dispid(/* Reply */ DISPID(63504));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall ReplyAll()
  {
    _TDispID _dispid(/* ReplyAll */ DISPID(63505));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall StartTimer()
  {
    _TDispID _dispid(/* StartTimer */ DISPID(63269));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall StopTimer()
  {
    _TDispID _dispid(/* StopTimer */ DISPID(63270));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            ContactNames = {read = get_ContactNames};
  __property   VARIANT_BOOL    DocPosted = {read = get_DocPosted, write = set_DocPosted};
  __property   VARIANT_BOOL    DocPrinted = {read = get_DocPrinted, write = set_DocPrinted};
  __property   VARIANT_BOOL    DocRouted = {read = get_DocRouted, write = set_DocRouted};
  __property   VARIANT_BOOL    DocSaved = {read = get_DocSaved, write = set_DocSaved};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            End = {read = get_End, write = set_End};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   DATE            Start = {read = get_Start, write = set_Start};
  __property   BSTR            Type = {read = get_Type};
};
// *********************************************************************//
// Interface: _IMailItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063134-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMailItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_AlternateRecipientAllowed(VARIANT_BOOL* AlternateRecipientAllowed/*[out,retval]*/); // [2]
   HRESULT STDMETHODCALLTYPE set_AlternateRecipientAllowed(VARIANT_BOOL AlternateRecipientAllowed/*[in]*/); // [2]
   HRESULT STDMETHODCALLTYPE get_AutoForwarded(VARIANT_BOOL* AutoForwarded/*[out,retval]*/); // [5]
   HRESULT STDMETHODCALLTYPE set_AutoForwarded(VARIANT_BOOL AutoForwarded/*[in]*/); // [5]
   HRESULT STDMETHODCALLTYPE get_BCC(BSTR* BCC/*[out,retval]*/); // [3586]
   HRESULT STDMETHODCALLTYPE set_BCC(BSTR BCC/*[in]*/); // [3586]
   HRESULT STDMETHODCALLTYPE get_CC(BSTR* CC/*[out,retval]*/); // [3587]
   HRESULT STDMETHODCALLTYPE set_CC(BSTR CC/*[in]*/); // [3587]
   HRESULT STDMETHODCALLTYPE get_ConversationIndex(BSTR* ConversationIndex/*[out,retval]*/); // [113]
   HRESULT STDMETHODCALLTYPE get_ConversationTopic(BSTR* ConversationTopic/*[out,retval]*/); // [112]
   HRESULT STDMETHODCALLTYPE get_DeferredDeliveryTime(DATE* DeferredDeliveryTime/*[out,retval]*/); // [15]
   HRESULT STDMETHODCALLTYPE set_DeferredDeliveryTime(DATE DeferredDeliveryTime/*[in]*/); // [15]
   HRESULT STDMETHODCALLTYPE get_DeleteAfterSubmit(VARIANT_BOOL* DeleteAfterSubmit/*[out,retval]*/); // [3585]
   HRESULT STDMETHODCALLTYPE set_DeleteAfterSubmit(VARIANT_BOOL DeleteAfterSubmit/*[in]*/); // [3585]
   HRESULT STDMETHODCALLTYPE get_ExpiryTime(DATE* ExpiryTime/*[out,retval]*/); // [21]
   HRESULT STDMETHODCALLTYPE set_ExpiryTime(DATE ExpiryTime/*[in]*/); // [21]
   HRESULT STDMETHODCALLTYPE get_FlagDueBy(DATE* FlagDueBy/*[out,retval]*/); // [48]
   HRESULT STDMETHODCALLTYPE set_FlagDueBy(DATE FlagDueBy/*[in]*/); // [48]
   HRESULT STDMETHODCALLTYPE get_FlagRequest(BSTR* FlagRequest/*[out,retval]*/); // [34096]
   HRESULT STDMETHODCALLTYPE set_FlagRequest(BSTR FlagRequest/*[in]*/); // [34096]
   HRESULT STDMETHODCALLTYPE get_FlagStatus(Outlook_97::OlFlagStatus* FlagStatus/*[out,retval]*/); // [4240]
   HRESULT STDMETHODCALLTYPE set_FlagStatus(Outlook_97::OlFlagStatus FlagStatus/*[in]*/); // [4240]
   HRESULT STDMETHODCALLTYPE get_OriginatorDeliveryReportRequested(VARIANT_BOOL* OriginatorDeliveryReportRequested/*[out,retval]*/); // [35]
   HRESULT STDMETHODCALLTYPE set_OriginatorDeliveryReportRequested(VARIANT_BOOL OriginatorDeliveryReportRequested/*[in]*/); // [35]
   HRESULT STDMETHODCALLTYPE get_ReadReceiptRequested(VARIANT_BOOL* ReadReceiptRequested/*[out,retval]*/); // [41]
   HRESULT STDMETHODCALLTYPE set_ReadReceiptRequested(VARIANT_BOOL ReadReceiptRequested/*[in]*/); // [41]
   HRESULT STDMETHODCALLTYPE get_ReceivedByEntryID(BSTR* ReceivedByEntryID/*[out,retval]*/); // [63]
   HRESULT STDMETHODCALLTYPE get_ReceivedByName(BSTR* ReceivedByName/*[out,retval]*/); // [64]
   HRESULT STDMETHODCALLTYPE get_ReceivedOnBehalfOfEntryID(BSTR* ReceivedOnBehalfOfEntryID/*[out,retval]*/); // [67]
   HRESULT STDMETHODCALLTYPE get_ReceivedOnBehalfOfName(BSTR* ReceivedOnBehalfOfName/*[out,retval]*/); // [68]
   HRESULT STDMETHODCALLTYPE get_ReceivedTime(DATE* ReceivedTime/*[out,retval]*/); // [3590]
   HRESULT STDMETHODCALLTYPE get_RecipientReassignmentProhibited(VARIANT_BOOL* RecipientReassignmentProhibited/*[out,retval]*/); // [43]
   HRESULT STDMETHODCALLTYPE set_RecipientReassignmentProhibited(VARIANT_BOOL RecipientReassignmentProhibited/*[in]*/); // [43]
   HRESULT STDMETHODCALLTYPE get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/); // [63508]
   HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault(VARIANT_BOOL* ReminderOverrideDefault/*[out,retval]*/); // [34076]
   HRESULT STDMETHODCALLTYPE set_ReminderOverrideDefault(VARIANT_BOOL ReminderOverrideDefault/*[in]*/); // [34076]
   HRESULT STDMETHODCALLTYPE get_ReminderPlaySound(VARIANT_BOOL* ReminderPlaySound/*[out,retval]*/); // [34078]
   HRESULT STDMETHODCALLTYPE set_ReminderPlaySound(VARIANT_BOOL ReminderPlaySound/*[in]*/); // [34078]
   HRESULT STDMETHODCALLTYPE get_ReminderSet(VARIANT_BOOL* ReminderSet/*[out,retval]*/); // [34051]
   HRESULT STDMETHODCALLTYPE set_ReminderSet(VARIANT_BOOL ReminderSet/*[in]*/); // [34051]
   HRESULT STDMETHODCALLTYPE get_ReminderSoundFile(BSTR* ReminderSoundFile/*[out,retval]*/); // [34079]
   HRESULT STDMETHODCALLTYPE set_ReminderSoundFile(BSTR ReminderSoundFile/*[in]*/); // [34079]
   HRESULT STDMETHODCALLTYPE get_ReminderTime(DATE* ReminderTime/*[out,retval]*/); // [34050]
   HRESULT STDMETHODCALLTYPE set_ReminderTime(DATE ReminderTime/*[in]*/); // [34050]
   HRESULT STDMETHODCALLTYPE get_RemoteStatus(Outlook_97::OlRemoteStatus* RemoteStatus/*[out,retval]*/); // [34065]
   HRESULT STDMETHODCALLTYPE get_ReplyRecipientNames(BSTR* ReplyRecipientNames/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE get_ReplyRecipients(Outlook_97::Recipients** ReplyRecipients/*[out,retval]*/); // [61459]
   HRESULT STDMETHODCALLTYPE get_SaveSentMessageFolder(Outlook_97::MAPIFolder** SaveSentMessageFolder/*[out,retval]*/); // [62465]
   HRESULT STDMETHODCALLTYPE _set_SaveSentMessageFolder(Outlook_97::MAPIFolder* SaveSentMessageFolder/*[in]*/); // [62465]
   HRESULT STDMETHODCALLTYPE get_SenderName(BSTR* SenderName/*[out,retval]*/); // [3098]
   HRESULT STDMETHODCALLTYPE get_SentOn(DATE* SentOn/*[out,retval]*/); // [57]
   HRESULT STDMETHODCALLTYPE get_SentOnBehalfOfName(BSTR* SentOnBehalfOfName/*[out,retval]*/); // [66]
   HRESULT STDMETHODCALLTYPE set_SentOnBehalfOfName(BSTR SentOnBehalfOfName/*[in]*/); // [66]
   HRESULT STDMETHODCALLTYPE get_To(BSTR* To/*[out,retval]*/); // [3588]
   HRESULT STDMETHODCALLTYPE set_To(BSTR To/*[in]*/); // [3588]
   HRESULT STDMETHODCALLTYPE get_VotingOptions(BSTR* VotingOptions/*[out,retval]*/); // [61467]
   HRESULT STDMETHODCALLTYPE set_VotingOptions(BSTR VotingOptions/*[in]*/); // [61467]
   HRESULT STDMETHODCALLTYPE get_VotingResponse(BSTR* VotingResponse/*[out,retval]*/); // [34084]
   HRESULT STDMETHODCALLTYPE set_VotingResponse(BSTR VotingResponse/*[in]*/); // [34084]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE ClearConversationIndex(void); // [63522]
   HRESULT STDMETHODCALLTYPE Forward(Outlook_97::MailItem** Item/*[out,retval]*/); // [63507]
   HRESULT STDMETHODCALLTYPE Reply(Outlook_97::MailItem** Item/*[out,retval]*/); // [63504]
   HRESULT STDMETHODCALLTYPE ReplyAll(Outlook_97::MailItem** Item/*[out,retval]*/); // [63505]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
};

// *********************************************************************//
// Interface: _DMailItem
// Flags:     (4096) Dispatchable
// GUID:      {00063034-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DMailItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_AlternateRecipientAllowed()
  {
    _TDispID _dispid(/* AlternateRecipientAllowed */ DISPID(2));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_AlternateRecipientAllowed(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* AlternateRecipientAllowed */ DISPID(2));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_AutoForwarded()
  {
    _TDispID _dispid(/* AutoForwarded */ DISPID(5));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_AutoForwarded(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* AutoForwarded */ DISPID(5));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BCC()
  {
    _TDispID _dispid(/* BCC */ DISPID(3586));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BCC(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BCC */ DISPID(3586));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CC()
  {
    _TDispID _dispid(/* CC */ DISPID(3587));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CC(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CC */ DISPID(3587));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationIndex()
  {
    _TDispID _dispid(/* ConversationIndex */ DISPID(113));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationTopic()
  {
    _TDispID _dispid(/* ConversationTopic */ DISPID(112));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_DeferredDeliveryTime()
  {
    _TDispID _dispid(/* DeferredDeliveryTime */ DISPID(15));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DeferredDeliveryTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* DeferredDeliveryTime */ DISPID(15));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DeleteAfterSubmit()
  {
    _TDispID _dispid(/* DeleteAfterSubmit */ DISPID(3585));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DeleteAfterSubmit(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* DeleteAfterSubmit */ DISPID(3585));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ExpiryTime()
  {
    _TDispID _dispid(/* ExpiryTime */ DISPID(21));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ExpiryTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* ExpiryTime */ DISPID(21));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_FlagDueBy()
  {
    _TDispID _dispid(/* FlagDueBy */ DISPID(48));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FlagDueBy(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* FlagDueBy */ DISPID(48));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_FlagRequest()
  {
    _TDispID _dispid(/* FlagRequest */ DISPID(34096));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FlagRequest(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* FlagRequest */ DISPID(34096));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlFlagStatus /*[VT_USERDEFINED:0]*/ __fastcall get_FlagStatus()
  {
    _TDispID _dispid(/* FlagStatus */ DISPID(4240));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlFlagStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_FlagStatus(Outlook_97::OlFlagStatus Param1/*[in]*/)
  {
    _TDispID _dispid(/* FlagStatus */ DISPID(4240));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_OriginatorDeliveryReportRequested()
  {
    _TDispID _dispid(/* OriginatorDeliveryReportRequested */ DISPID(35));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_OriginatorDeliveryReportRequested(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* OriginatorDeliveryReportRequested */ DISPID(35));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReadReceiptRequested()
  {
    _TDispID _dispid(/* ReadReceiptRequested */ DISPID(41));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReadReceiptRequested(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReadReceiptRequested */ DISPID(41));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedByEntryID()
  {
    _TDispID _dispid(/* ReceivedByEntryID */ DISPID(63));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedByName()
  {
    _TDispID _dispid(/* ReceivedByName */ DISPID(64));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedOnBehalfOfEntryID()
  {
    _TDispID _dispid(/* ReceivedOnBehalfOfEntryID */ DISPID(67));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedOnBehalfOfName()
  {
    _TDispID _dispid(/* ReceivedOnBehalfOfName */ DISPID(68));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ReceivedTime()
  {
    _TDispID _dispid(/* ReceivedTime */ DISPID(3590));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_RecipientReassignmentProhibited()
  {
    _TDispID _dispid(/* RecipientReassignmentProhibited */ DISPID(43));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_RecipientReassignmentProhibited(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* RecipientReassignmentProhibited */ DISPID(43));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients()
  {
    _TDispID _dispid(/* Recipients */ DISPID(63508));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderOverrideDefault()
  {
    _TDispID _dispid(/* ReminderOverrideDefault */ DISPID(34076));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderOverrideDefault */ DISPID(34076));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderPlaySound()
  {
    _TDispID _dispid(/* ReminderPlaySound */ DISPID(34078));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderPlaySound */ DISPID(34078));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderSet()
  {
    _TDispID _dispid(/* ReminderSet */ DISPID(34051));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderSet */ DISPID(34051));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReminderSoundFile()
  {
    _TDispID _dispid(/* ReminderSoundFile */ DISPID(34079));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderSoundFile(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderSoundFile */ DISPID(34079));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ReminderTime()
  {
    _TDispID _dispid(/* ReminderTime */ DISPID(34050));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderTime */ DISPID(34050));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlRemoteStatus /*[VT_USERDEFINED:0]*/ __fastcall get_RemoteStatus()
  {
    _TDispID _dispid(/* RemoteStatus */ DISPID(34065));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlRemoteStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReplyRecipientNames()
  {
    _TDispID _dispid(/* ReplyRecipientNames */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_ReplyRecipients()
  {
    _TDispID _dispid(/* ReplyRecipients */ DISPID(61459));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall get_SaveSentMessageFolder()
  {
    _TDispID _dispid(/* SaveSentMessageFolder */ DISPID(62465));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall _set_SaveSentMessageFolder(Outlook_97::MAPIFolder* Param1/*[in]*/)
  {
    _TDispID _dispid(/* SaveSentMessageFolder */ DISPID(62465));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)Param1 /*[VT_USERDEFINED:1]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_SenderName()
  {
    _TDispID _dispid(/* SenderName */ DISPID(3098));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_SentOn()
  {
    _TDispID _dispid(/* SentOn */ DISPID(57));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_SentOnBehalfOfName()
  {
    _TDispID _dispid(/* SentOnBehalfOfName */ DISPID(66));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_SentOnBehalfOfName(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* SentOnBehalfOfName */ DISPID(66));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_To()
  {
    _TDispID _dispid(/* To */ DISPID(3588));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_To(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* To */ DISPID(3588));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_VotingOptions()
  {
    _TDispID _dispid(/* VotingOptions */ DISPID(61467));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_VotingOptions(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* VotingOptions */ DISPID(61467));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_VotingResponse()
  {
    _TDispID _dispid(/* VotingResponse */ DISPID(34084));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_VotingResponse(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* VotingResponse */ DISPID(34084));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall ClearConversationIndex()
  {
    _TDispID _dispid(/* ClearConversationIndex */ DISPID(63522));
    OleProcedure(_dispid);
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Forward()
  {
    _TDispID _dispid(/* Forward */ DISPID(63507));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Reply()
  {
    _TDispID _dispid(/* Reply */ DISPID(63504));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall ReplyAll()
  {
    _TDispID _dispid(/* ReplyAll */ DISPID(63505));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    AlternateRecipientAllowed = {read = get_AlternateRecipientAllowed, write = set_AlternateRecipientAllowed};
  __property   VARIANT_BOOL    AutoForwarded = {read = get_AutoForwarded, write = set_AutoForwarded};
  __property   BSTR            BCC = {read = get_BCC};
  __property   BSTR            CC = {read = get_CC};
  __property   BSTR            ConversationIndex = {read = get_ConversationIndex};
  __property   BSTR            ConversationTopic = {read = get_ConversationTopic};
  __property   DATE            DeferredDeliveryTime = {read = get_DeferredDeliveryTime, write = set_DeferredDeliveryTime};
  __property   VARIANT_BOOL    DeleteAfterSubmit = {read = get_DeleteAfterSubmit, write = set_DeleteAfterSubmit};
  __property   DATE            ExpiryTime = {read = get_ExpiryTime, write = set_ExpiryTime};
  __property   DATE            FlagDueBy = {read = get_FlagDueBy, write = set_FlagDueBy};
  __property   BSTR            FlagRequest = {read = get_FlagRequest};
  __property   Outlook_97::OlFlagStatus FlagStatus = {read = get_FlagStatus, write = set_FlagStatus};
  __property   VARIANT_BOOL    OriginatorDeliveryReportRequested = {read = get_OriginatorDeliveryReportRequested, write = set_OriginatorDeliveryReportRequested};
  __property   VARIANT_BOOL    ReadReceiptRequested = {read = get_ReadReceiptRequested, write = set_ReadReceiptRequested};
  __property   BSTR            ReceivedByEntryID = {read = get_ReceivedByEntryID};
  __property   BSTR            ReceivedByName = {read = get_ReceivedByName};
  __property   BSTR            ReceivedOnBehalfOfEntryID = {read = get_ReceivedOnBehalfOfEntryID};
  __property   BSTR            ReceivedOnBehalfOfName = {read = get_ReceivedOnBehalfOfName};
  __property   DATE            ReceivedTime = {read = get_ReceivedTime};
  __property   VARIANT_BOOL    RecipientReassignmentProhibited = {read = get_RecipientReassignmentProhibited, write = set_RecipientReassignmentProhibited};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReminderTime = {read = get_ReminderTime, write = set_ReminderTime};
  __property   Outlook_97::OlRemoteStatus RemoteStatus = {read = get_RemoteStatus};
  __property   BSTR            ReplyRecipientNames = {read = get_ReplyRecipientNames};
  __property   Outlook_97::Recipients* ReplyRecipients = {read = get_ReplyRecipients};
  __property   Outlook_97::MAPIFolder* SaveSentMessageFolder = {read = get_SaveSentMessageFolder, write = _set_SaveSentMessageFolder};
  __property   BSTR            SenderName = {read = get_SenderName};
  __property   DATE            SentOn = {read = get_SentOn};
  __property   BSTR            SentOnBehalfOfName = {read = get_SentOnBehalfOfName};
  __property   BSTR            To = {read = get_To};
  __property   BSTR            VotingOptions = {read = get_VotingOptions};
  __property   BSTR            VotingResponse = {read = get_VotingResponse};
};
// *********************************************************************//
// Interface: _IMAPIFolder
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063106-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMAPIFolder  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_DefaultItemType(Outlook_97::OlItems* DefaultItemType/*[out,retval]*/); // [12550]
   HRESULT STDMETHODCALLTYPE get_DefaultMessageClass(BSTR* DefaultMessageClass/*[out,retval]*/); // [12551]
   HRESULT STDMETHODCALLTYPE get_Description(BSTR* Description/*[out,retval]*/); // [12292]
   HRESULT STDMETHODCALLTYPE set_Description(BSTR Description/*[in]*/); // [12292]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_Folders(Outlook_97::Folders** Folders/*[out,retval]*/); // [8451]
   HRESULT STDMETHODCALLTYPE get_Items(Outlook_97::Items** Items/*[out,retval]*/); // [12544]
   HRESULT STDMETHODCALLTYPE get_Name(BSTR* Name/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE set_Name(BSTR Name/*[in]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_StoreID(BSTR* StoreID/*[out,retval]*/); // [12552]
   HRESULT STDMETHODCALLTYPE get_UnReadItemCount(long* UnReadItemCount/*[out,retval]*/); // [13827]
   HRESULT STDMETHODCALLTYPE CopyTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/, 
                                    Outlook_97::MAPIFolder** Folder/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61509]
   HRESULT STDMETHODCALLTYPE Display(void); // [12548]
   HRESULT STDMETHODCALLTYPE GetExplorer(VARIANT DisplayMode/*[in]*/, 
                                         Outlook_97::Explorer** Explorer/*[out,retval]*/); // [12545]
   HRESULT STDMETHODCALLTYPE MoveTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/); // [61492]
};

// *********************************************************************//
// Interface: MAPIFolder
// Flags:     (4096) Dispatchable
// GUID:      {00063006-0000-0000-C000-000000000046}
// *********************************************************************//
interface MAPIFolder : public TDispWrapper<IDispatch>
{
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlItems /*[VT_USERDEFINED:0]*/ __fastcall get_DefaultItemType()
  {
    _TDispID _dispid(/* DefaultItemType */ DISPID(12550));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlItems /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_DefaultMessageClass()
  {
    _TDispID _dispid(/* DefaultMessageClass */ DISPID(12551));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Description()
  {
    _TDispID _dispid(/* Description */ DISPID(12292));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Description(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Description */ DISPID(12292));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Folders* /*[VT_USERDEFINED:1]*/ __fastcall get_Folders()
  {
    _TDispID _dispid(/* Folders */ DISPID(8451));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Folders* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Items* /*[VT_USERDEFINED:1]*/ __fastcall get_Items()
  {
    _TDispID _dispid(/* Items */ DISPID(12544));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Items* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name()
  {
    _TDispID _dispid(/* Name */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Name(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Name */ DISPID(12289));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_StoreID()
  {
    _TDispID _dispid(/* StoreID */ DISPID(12552));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_UnReadItemCount()
  {
    _TDispID _dispid(/* UnReadItemCount */ DISPID(13827));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall CopyTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/)
  {
    _TDispID _dispid(/* CopyTo */ DISPID(61490));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestinationFolder /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61509));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display()
  {
    _TDispID _dispid(/* Display */ DISPID(12548));
    OleProcedure(_dispid);
  }

  Outlook_97::Explorer* /*[VT_USERDEFINED:1]*/ __fastcall GetExplorer(VARIANT DisplayMode/*[in]*/)
  {
    _TDispID _dispid(/* GetExplorer */ DISPID(12545));
    TAutoArgs<1> _args;
    _args[1] = DisplayMode /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Explorer* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall MoveTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/)
  {
    _TDispID _dispid(/* MoveTo */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestinationFolder /*[VT_USERDEFINED:1]*/;
    OleProcedure(_dispid, _args);
  }


  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::OlItems DefaultItemType = {read = get_DefaultItemType};
  __property   BSTR            DefaultMessageClass = {read = get_DefaultMessageClass};
  __property   BSTR            Description = {read = get_Description};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::Folders* Folders = {read = get_Folders};
  __property   Outlook_97::Items* Items = {read = get_Items};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            StoreID = {read = get_StoreID};
  __property   long            UnReadItemCount = {read = get_UnReadItemCount};
};
// *********************************************************************//
// Interface: _IMeetingCanceledItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063128-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMeetingCanceledItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/, 
                                                      Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/); // [63328]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
};

// *********************************************************************//
// Interface: _DMeetingCanceledItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063028-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DMeetingCanceledItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedAppointment */ DISPID(63328));
    TAutoArgs<1> _args;
    _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _IMeetingRequestAcceptedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063130-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMeetingRequestAcceptedItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/, 
                                                      Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/); // [63328]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
};

// *********************************************************************//
// Interface: _DMeetingRequestAcceptedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063030-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DMeetingRequestAcceptedItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedAppointment */ DISPID(63328));
    TAutoArgs<1> _args;
    _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _IMeetingRequestDeclinedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063131-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMeetingRequestDeclinedItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/, 
                                                      Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/); // [63328]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
};

// *********************************************************************//
// Interface: _DMeetingRequestDeclinedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063031-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DMeetingRequestDeclinedItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedAppointment */ DISPID(63328));
    TAutoArgs<1> _args;
    _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _IMeetingRequestItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063129-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMeetingRequestItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/, 
                                                      Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/); // [63328]
};

// *********************************************************************//
// Interface: _DMeetingRequestItem
// Flags:     (4096) Dispatchable
// GUID:      {00063029-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DMeetingRequestItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedAppointment */ DISPID(63328));
    TAutoArgs<1> _args;
    _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _IMeetingRequestTentativeItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063132-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IMeetingRequestTentativeItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/, 
                                                      Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/); // [63328]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
};

// *********************************************************************//
// Interface: _DMeetingRequestTentativeItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063032-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DMeetingRequestTentativeItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedAppointment */ DISPID(63328));
    TAutoArgs<1> _args;
    _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _INameSpace
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063102-0000-0000-C000-000000000046}
// *********************************************************************//
interface _INameSpace  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_CurrentUser(Outlook_97::Recipient** CurrentUser/*[out,retval]*/); // [8449]
   HRESULT STDMETHODCALLTYPE get_Folders(Outlook_97::Folders** Folders/*[out,retval]*/); // [8451]
   HRESULT STDMETHODCALLTYPE get_Parent(Outlook_97::OutlookApplication** Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Type(BSTR* Type/*[out,retval]*/); // [8452]
   HRESULT STDMETHODCALLTYPE CreateRecipient(BSTR RecipientName/*[in]*/, 
                                             Outlook_97::Recipient** Recipient/*[out,retval]*/); // [8458]
   HRESULT STDMETHODCALLTYPE GetDefaultFolder(Outlook_97::OlDefaultFolders FolderType/*[in]*/, 
                                              Outlook_97::MAPIFolder** Folder/*[out,retval]*/); // [8459]
   HRESULT STDMETHODCALLTYPE GetFolderFromID(BSTR EntryIDFolder/*[in]*/, 
                                             VARIANT EntryIDStore/*[in]*/, 
                                             Outlook_97::MAPIFolder** Folder/*[out,retval]*/); // [8456]
   HRESULT STDMETHODCALLTYPE GetItemFromID(BSTR EntryIDItem/*[in]*/, VARIANT EntryIDStore/*[in]*/, 
                                           LPDISPATCH* Item/*[out,retval]*/); // [8457]
   HRESULT STDMETHODCALLTYPE GetRecipientFromID(BSTR EntryID/*[in]*/, 
                                                Outlook_97::Recipient** Recipient/*[out,retval]*/); // [8455]
   HRESULT STDMETHODCALLTYPE GetSharedDefaultFolder(Outlook_97::Recipient* Recipient/*[in]*/, 
                                                    Outlook_97::OlDefaultFolders FolderType/*[in]*/, 
                                                    Outlook_97::MAPIFolder** Folder/*[out,retval]*/); // [8460]
   HRESULT STDMETHODCALLTYPE Logoff(void); // [8454]
   HRESULT STDMETHODCALLTYPE Logon(VARIANT Profile/*[in]*/, VARIANT Password/*[in]*/, 
                                   VARIANT ShowDialog/*[in]*/, VARIANT NewSession/*[in]*/); // [8453]
};

// *********************************************************************//
// Interface: NameSpace
// Flags:     (4096) Dispatchable
// GUID:      {00063002-0000-0000-C000-000000000046}
// *********************************************************************//
interface NameSpace : public TDispWrapper<IDispatch>
{
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall get_CurrentUser()
  {
    _TDispID _dispid(/* CurrentUser */ DISPID(8449));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Folders* /*[VT_USERDEFINED:1]*/ __fastcall get_Folders()
  {
    _TDispID _dispid(/* Folders */ DISPID(8451));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Folders* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Type()
  {
    _TDispID _dispid(/* Type */ DISPID(8452));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall CreateRecipient(BSTR RecipientName/*[in]*/)
  {
    _TDispID _dispid(/* CreateRecipient */ DISPID(8458));
    TAutoArgs<1> _args;
    _args[1] = RecipientName /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall GetDefaultFolder(Outlook_97::OlDefaultFolders FolderType/*[in]*/)
  {
    _TDispID _dispid(/* GetDefaultFolder */ DISPID(8459));
    TAutoArgs<1> _args;
    _args[1] = (int)FolderType /*[VT_USERDEFINED:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall GetFolderFromID(BSTR EntryIDFolder/*[in]*/
                                                                            , 
                                                                            VARIANT EntryIDStore/*[in]*/)
  {
    _TDispID _dispid(/* GetFolderFromID */ DISPID(8456));
    TAutoArgs<2> _args;
    _args[1] = EntryIDFolder /*[VT_BSTR:0]*/;
    _args[2] = EntryIDStore /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall GetItemFromID(BSTR EntryIDItem/*[in]*/, 
                                                          VARIANT EntryIDStore/*[in]*/)
  {
    _TDispID _dispid(/* GetItemFromID */ DISPID(8457));
    TAutoArgs<2> _args;
    _args[1] = EntryIDItem /*[VT_BSTR:0]*/;
    _args[2] = EntryIDStore /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall GetRecipientFromID(BSTR EntryID/*[in]*/)
  {
    _TDispID _dispid(/* GetRecipientFromID */ DISPID(8455));
    TAutoArgs<1> _args;
    _args[1] = EntryID /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall GetSharedDefaultFolder(Outlook_97::Recipient* Recipient/*[in]*/
                                                                                   , 
                                                                                   Outlook_97::OlDefaultFolders FolderType/*[in]*/)
  {
    _TDispID _dispid(/* GetSharedDefaultFolder */ DISPID(8460));
    TAutoArgs<2> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::Recipient*)Recipient /*[VT_USERDEFINED:1]*/;
    _args[2] = (int)FolderType /*[VT_USERDEFINED:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Logoff()
  {
    _TDispID _dispid(/* Logoff */ DISPID(8454));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Logon(VARIANT Profile/*[in]*/, VARIANT Password/*[in]*/, 
                                        VARIANT ShowDialog/*[in]*/, VARIANT NewSession/*[in]*/)
  {
    _TDispID _dispid(/* Logon */ DISPID(8453));
    TAutoArgs<4> _args;
    _args[1] = Profile /*[VT_VARIANT:0]*/;
    _args[2] = Password /*[VT_VARIANT:0]*/;
    _args[3] = ShowDialog /*[VT_VARIANT:0]*/;
    _args[4] = NewSession /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Recipient* CurrentUser = {read = get_CurrentUser};
  __property   Outlook_97::Folders* Folders = {read = get_Folders};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
  __property   BSTR            Type = {read = get_Type};
};
// *********************************************************************//
// Interface: _INoteItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063125-0000-0000-C000-000000000046}
// *********************************************************************//
interface _INoteItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Color(Outlook_97::OlNoteColor* Color/*[out,retval]*/); // [35584]
   HRESULT STDMETHODCALLTYPE set_Color(Outlook_97::OlNoteColor Color/*[in]*/); // [35584]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Height(long* Height/*[out,retval]*/); // [35587]
   HRESULT STDMETHODCALLTYPE set_Height(long Height/*[in]*/); // [35587]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_Left(long* Left/*[out,retval]*/); // [35588]
   HRESULT STDMETHODCALLTYPE set_Left(long Left/*[in]*/); // [35588]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Parent(Outlook_97::MAPIFolder** Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [63392]
   HRESULT STDMETHODCALLTYPE get_Top(long* Top/*[out,retval]*/); // [35589]
   HRESULT STDMETHODCALLTYPE set_Top(long Top/*[in]*/); // [35589]
   HRESULT STDMETHODCALLTYPE get_Width(long* Width/*[out,retval]*/); // [35586]
   HRESULT STDMETHODCALLTYPE set_Width(long Width/*[in]*/); // [35586]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
};

// *********************************************************************//
// Interface: _DNoteItem
// Flags:     (4096) Dispatchable
// GUID:      {00063025-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DNoteItem : public TDispWrapper<IDispatch>
{
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlNoteColor /*[VT_USERDEFINED:0]*/ __fastcall get_Color()
  {
    _TDispID _dispid(/* Color */ DISPID(35584));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlNoteColor /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Color(Outlook_97::OlNoteColor Param1/*[in]*/)
  {
    _TDispID _dispid(/* Color */ DISPID(35584));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_Height()
  {
    _TDispID _dispid(/* Height */ DISPID(35587));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Height(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Height */ DISPID(35587));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_Left()
  {
    _TDispID _dispid(/* Left */ DISPID(35588));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Left(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Left */ DISPID(35588));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(63392));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_Top()
  {
    _TDispID _dispid(/* Top */ DISPID(35589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Top(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Top */ DISPID(35589));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Width()
  {
    _TDispID _dispid(/* Width */ DISPID(35586));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Width(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Width */ DISPID(35586));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   Outlook_97::OlNoteColor Color = {read = get_Color, write = set_Color};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   long            Height = {read = get_Height, write = set_Height};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   long            Left = {read = get_Left, write = set_Left};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   Outlook_97::MAPIFolder* Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   long            Top = {read = get_Top, write = set_Top};
  __property   long            Width = {read = get_Width, write = set_Width};
};
// *********************************************************************//
// Interface: _IOfficeDocumentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063120-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IOfficeDocumentItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
};

// *********************************************************************//
// Interface: _DOfficeDocumentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063020-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DOfficeDocumentItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _IPages
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313F-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IPages  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE Add(VARIANT Name/*[in]*/, Msforms_97::Page** Page/*[out,retval]*/); // [300]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, Msforms_97::Page** Page/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [301]
};

// *********************************************************************//
// Interface: Pages
// Flags:     (4096) Dispatchable
// GUID:      {0006303F-0000-0000-C000-000000000046}
// *********************************************************************//
interface Pages : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Msforms_97::Page* /*[VT_USERDEFINED:1]*/ __fastcall Add(VARIANT Name/*[in]*/)
  {
    _TDispID _dispid(/* Add */ DISPID(300));
    TAutoArgs<1> _args;
    _args[1] = Name /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Msforms_97::Page* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Msforms_97::Page* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Msforms_97::Page* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(301));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   long            Count = {read = get_Count};
};
// *********************************************************************//
// Interface: _IPostItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063124-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IPostItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_ConversationIndex(BSTR* ConversationIndex/*[out,retval]*/); // [113]
   HRESULT STDMETHODCALLTYPE get_ConversationTopic(BSTR* ConversationTopic/*[out,retval]*/); // [112]
   HRESULT STDMETHODCALLTYPE get_ExpiryTime(DATE* ExpiryTime/*[out,retval]*/); // [21]
   HRESULT STDMETHODCALLTYPE set_ExpiryTime(DATE ExpiryTime/*[in]*/); // [21]
   HRESULT STDMETHODCALLTYPE get_ReceivedTime(DATE* ReceivedTime/*[out,retval]*/); // [3590]
   HRESULT STDMETHODCALLTYPE get_SenderName(BSTR* SenderName/*[out,retval]*/); // [3098]
   HRESULT STDMETHODCALLTYPE get_SentOn(DATE* SentOn/*[out,retval]*/); // [57]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE ClearConversationIndex(void); // [63522]
   HRESULT STDMETHODCALLTYPE Forward(Outlook_97::MailItem** Item/*[out,retval]*/); // [63507]
   HRESULT STDMETHODCALLTYPE Post(void); // [61557]
   HRESULT STDMETHODCALLTYPE Reply(Outlook_97::MailItem** Item/*[out,retval]*/); // [63504]
};

// *********************************************************************//
// Interface: _DPostItem
// Flags:     (4096) Dispatchable
// GUID:      {00063024-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DPostItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationIndex()
  {
    _TDispID _dispid(/* ConversationIndex */ DISPID(113));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationTopic()
  {
    _TDispID _dispid(/* ConversationTopic */ DISPID(112));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ExpiryTime()
  {
    _TDispID _dispid(/* ExpiryTime */ DISPID(21));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ExpiryTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* ExpiryTime */ DISPID(21));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ReceivedTime()
  {
    _TDispID _dispid(/* ReceivedTime */ DISPID(3590));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_SenderName()
  {
    _TDispID _dispid(/* SenderName */ DISPID(3098));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_SentOn()
  {
    _TDispID _dispid(/* SentOn */ DISPID(57));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall ClearConversationIndex()
  {
    _TDispID _dispid(/* ClearConversationIndex */ DISPID(63522));
    OleProcedure(_dispid);
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Forward()
  {
    _TDispID _dispid(/* Forward */ DISPID(63507));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Post()
  {
    _TDispID _dispid(/* Post */ DISPID(61557));
    OleProcedure(_dispid);
  }

  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Reply()
  {
    _TDispID _dispid(/* Reply */ DISPID(63504));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            ConversationIndex = {read = get_ConversationIndex};
  __property   BSTR            ConversationTopic = {read = get_ConversationTopic};
  __property   DATE            ExpiryTime = {read = get_ExpiryTime, write = set_ExpiryTime};
  __property   DATE            ReceivedTime = {read = get_ReceivedTime};
  __property   BSTR            SenderName = {read = get_SenderName};
  __property   DATE            SentOn = {read = get_SentOn};
};
// *********************************************************************//
// Interface: _IRecipient
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063145-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IRecipient  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Address(BSTR* Address/*[out,retval]*/); // [12291]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_AutoResponse(BSTR* AutoResponse/*[out,retval]*/); // [106]
   HRESULT STDMETHODCALLTYPE set_AutoResponse(BSTR AutoResponse/*[in]*/); // [106]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_MeetingResponseStatus(Outlook_97::OlResponseStatus* MeetingResponseStatus/*[out,retval]*/); // [102]
   HRESULT STDMETHODCALLTYPE set_MeetingResponseStatus(Outlook_97::OlResponseStatus MeetingResponseStatus/*[in]*/); // [102]
   HRESULT STDMETHODCALLTYPE get_Name(BSTR* Name/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [109]
   HRESULT STDMETHODCALLTYPE get_Resolved(VARIANT_BOOL* Resolved/*[out,retval]*/); // [100]
   HRESULT STDMETHODCALLTYPE get_TrackingStatus(Outlook_97::OlTrackingStatus* TrackingStatus/*[out,retval]*/); // [118]
   HRESULT STDMETHODCALLTYPE set_TrackingStatus(Outlook_97::OlTrackingStatus TrackingStatus/*[in]*/); // [118]
   HRESULT STDMETHODCALLTYPE get_TrackingStatusTime(DATE* TrackingStatusTime/*[out,retval]*/); // [119]
   HRESULT STDMETHODCALLTYPE set_TrackingStatusTime(DATE TrackingStatusTime/*[in]*/); // [119]
   HRESULT STDMETHODCALLTYPE get_Type(long* Type/*[out,retval]*/); // [112]
   HRESULT STDMETHODCALLTYPE set_Type(long Type/*[in]*/); // [112]
   HRESULT STDMETHODCALLTYPE Delete(void); // [110]
   HRESULT STDMETHODCALLTYPE FreeBusy(DATE Start/*[in]*/, long MinPerChar/*[in]*/, 
                                      VARIANT CompleteFormat/*[in]*/, 
                                      BSTR* FreeBusyInfo/*[out,retval]*/); // [111]
   HRESULT STDMETHODCALLTYPE Resolve(VARIANT_BOOL* Success/*[out,retval]*/); // [113]
};

// *********************************************************************//
// Interface: Recipient
// Flags:     (4096) Dispatchable
// GUID:      {00063045-0000-0000-C000-000000000046}
// *********************************************************************//
interface Recipient : public TDispWrapper<IDispatch>
{
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Address()
  {
    _TDispID _dispid(/* Address */ DISPID(12291));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_AutoResponse()
  {
    _TDispID _dispid(/* AutoResponse */ DISPID(106));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_AutoResponse(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* AutoResponse */ DISPID(106));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlResponseStatus /*[VT_USERDEFINED:0]*/ __fastcall get_MeetingResponseStatus()
  {
    _TDispID _dispid(/* MeetingResponseStatus */ DISPID(102));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlResponseStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MeetingResponseStatus(Outlook_97::OlResponseStatus Param1/*[in]*/)
  {
    _TDispID _dispid(/* MeetingResponseStatus */ DISPID(102));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name()
  {
    _TDispID _dispid(/* Name */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(109));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Resolved()
  {
    _TDispID _dispid(/* Resolved */ DISPID(100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlTrackingStatus /*[VT_USERDEFINED:0]*/ __fastcall get_TrackingStatus()
  {
    _TDispID _dispid(/* TrackingStatus */ DISPID(118));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlTrackingStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_TrackingStatus(Outlook_97::OlTrackingStatus Param1/*[in]*/)
  {
    _TDispID _dispid(/* TrackingStatus */ DISPID(118));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_TrackingStatusTime()
  {
    _TDispID _dispid(/* TrackingStatusTime */ DISPID(119));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_TrackingStatusTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* TrackingStatusTime */ DISPID(119));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Type()
  {
    _TDispID _dispid(/* Type */ DISPID(112));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Type(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Type */ DISPID(112));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(110));
    OleProcedure(_dispid);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall FreeBusy(DATE Start/*[in]*/, long MinPerChar/*[in]*/, 
                                           VARIANT CompleteFormat/*[in]*/)
  {
    _TDispID _dispid(/* FreeBusy */ DISPID(111));
    TAutoArgs<3> _args;
    _args[1] = Start /*[VT_DATE:0]*/;
    _args[2] = MinPerChar /*[VT_I4:0]*/;
    _args[3] = CompleteFormat /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Resolve()
  {
    _TDispID _dispid(/* Resolve */ DISPID(113));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }


  __property   BSTR            Address = {read = get_Address};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            AutoResponse = {read = get_AutoResponse};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::OlResponseStatus MeetingResponseStatus = {read = get_MeetingResponseStatus, write = set_MeetingResponseStatus};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Resolved = {read = get_Resolved};
  __property   Outlook_97::OlTrackingStatus TrackingStatus = {read = get_TrackingStatus, write = set_TrackingStatus};
  __property   DATE            TrackingStatusTime = {read = get_TrackingStatusTime, write = set_TrackingStatusTime};
  __property   long            Type = {read = get_Type, write = set_Type};
};
// *********************************************************************//
// Interface: _IRecipients
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313B-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IRecipients  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE Add(BSTR Name/*[in]*/, 
                                 Outlook_97::Recipient** Recipient/*[out,retval]*/); // [111]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, 
                                  Outlook_97::Recipient** Recipient/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [84]
   HRESULT STDMETHODCALLTYPE ResolveAll(VARIANT_BOOL* Success/*[out,retval]*/); // [126]
};

// *********************************************************************//
// Interface: Recipients
// Flags:     (4096) Dispatchable
// GUID:      {0006303B-0000-0000-C000-000000000046}
// *********************************************************************//
interface Recipients : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall Add(BSTR Name/*[in]*/)
  {
    _TDispID _dispid(/* Add */ DISPID(111));
    TAutoArgs<1> _args;
    _args[1] = Name /*[VT_BSTR:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(84));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall ResolveAll()
  {
    _TDispID _dispid(/* ResolveAll */ DISPID(126));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }


  __property   long            Count = {read = get_Count};
};
// *********************************************************************//
// Interface: _IRecurrencePattern
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063144-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IRecurrencePattern  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_DayOfMonth(long* DayOfMonth/*[out,retval]*/); // [4096]
   HRESULT STDMETHODCALLTYPE set_DayOfMonth(long DayOfMonth/*[in]*/); // [4096]
   HRESULT STDMETHODCALLTYPE get_DayOfWeekMask(Outlook_97::OlDaysOfWeek* DayOfWeekMask/*[out,retval]*/); // [4097]
   HRESULT STDMETHODCALLTYPE set_DayOfWeekMask(Outlook_97::OlDaysOfWeek DayOfWeekMask/*[in]*/); // [4097]
   HRESULT STDMETHODCALLTYPE get_Duration(long* Duration/*[out,retval]*/); // [4109]
   HRESULT STDMETHODCALLTYPE set_Duration(long Duration/*[in]*/); // [4109]
   HRESULT STDMETHODCALLTYPE get_EndTime(DATE* EndTime/*[out,retval]*/); // [4108]
   HRESULT STDMETHODCALLTYPE set_EndTime(DATE EndTime/*[in]*/); // [4108]
   HRESULT STDMETHODCALLTYPE get_Instance(long* Instance/*[out,retval]*/); // [4099]
   HRESULT STDMETHODCALLTYPE set_Instance(long Instance/*[in]*/); // [4099]
   HRESULT STDMETHODCALLTYPE get_Interval(long* Interval/*[out,retval]*/); // [4100]
   HRESULT STDMETHODCALLTYPE set_Interval(long Interval/*[in]*/); // [4100]
   HRESULT STDMETHODCALLTYPE get_MonthOfYear(long* MonthOfYear/*[out,retval]*/); // [4102]
   HRESULT STDMETHODCALLTYPE set_MonthOfYear(long MonthOfYear/*[in]*/); // [4102]
   HRESULT STDMETHODCALLTYPE get_NoEndDate(VARIANT_BOOL* NoEndDate/*[out,retval]*/); // [4107]
   HRESULT STDMETHODCALLTYPE set_NoEndDate(VARIANT_BOOL NoEndDate/*[in]*/); // [4107]
   HRESULT STDMETHODCALLTYPE get_Occurrences(long* Occurrences/*[out,retval]*/); // [4101]
   HRESULT STDMETHODCALLTYPE set_Occurrences(long Occurrences/*[in]*/); // [4101]
   HRESULT STDMETHODCALLTYPE get_PatternEndDate(DATE* PatternEndDate/*[out,retval]*/); // [4098]
   HRESULT STDMETHODCALLTYPE set_PatternEndDate(DATE PatternEndDate/*[in]*/); // [4098]
   HRESULT STDMETHODCALLTYPE get_PatternStartDate(DATE* PatternStartDate/*[out,retval]*/); // [4104]
   HRESULT STDMETHODCALLTYPE set_PatternStartDate(DATE PatternStartDate/*[in]*/); // [4104]
   HRESULT STDMETHODCALLTYPE get_RecurrenceType(Outlook_97::OlRecurrenceType* RecurrenceType/*[out,retval]*/); // [4103]
   HRESULT STDMETHODCALLTYPE set_RecurrenceType(Outlook_97::OlRecurrenceType RecurrenceType/*[in]*/); // [4103]
   HRESULT STDMETHODCALLTYPE get_Regenerate(VARIANT_BOOL* Regenerate/*[out,retval]*/); // [4106]
   HRESULT STDMETHODCALLTYPE set_Regenerate(VARIANT_BOOL Regenerate/*[in]*/); // [4106]
   HRESULT STDMETHODCALLTYPE get_StartTime(DATE* StartTime/*[out,retval]*/); // [4105]
   HRESULT STDMETHODCALLTYPE set_StartTime(DATE StartTime/*[in]*/); // [4105]
};

// *********************************************************************//
// Interface: RecurrencePattern
// Flags:     (4096) Dispatchable
// GUID:      {00063044-0000-0000-C000-000000000046}
// *********************************************************************//
interface RecurrencePattern : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_DayOfMonth()
  {
    _TDispID _dispid(/* DayOfMonth */ DISPID(4096));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DayOfMonth(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* DayOfMonth */ DISPID(4096));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlDaysOfWeek /*[VT_USERDEFINED:0]*/ __fastcall get_DayOfWeekMask()
  {
    _TDispID _dispid(/* DayOfWeekMask */ DISPID(4097));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlDaysOfWeek /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DayOfWeekMask(Outlook_97::OlDaysOfWeek Param1/*[in]*/)
  {
    _TDispID _dispid(/* DayOfWeekMask */ DISPID(4097));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Duration()
  {
    _TDispID _dispid(/* Duration */ DISPID(4109));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Duration(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Duration */ DISPID(4109));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_EndTime()
  {
    _TDispID _dispid(/* EndTime */ DISPID(4108));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_EndTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* EndTime */ DISPID(4108));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Instance()
  {
    _TDispID _dispid(/* Instance */ DISPID(4099));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Instance(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Instance */ DISPID(4099));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Interval()
  {
    _TDispID _dispid(/* Interval */ DISPID(4100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Interval(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Interval */ DISPID(4100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_MonthOfYear()
  {
    _TDispID _dispid(/* MonthOfYear */ DISPID(4102));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MonthOfYear(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* MonthOfYear */ DISPID(4102));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoEndDate()
  {
    _TDispID _dispid(/* NoEndDate */ DISPID(4107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoEndDate(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoEndDate */ DISPID(4107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Occurrences()
  {
    _TDispID _dispid(/* Occurrences */ DISPID(4101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Occurrences(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Occurrences */ DISPID(4101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_PatternEndDate()
  {
    _TDispID _dispid(/* PatternEndDate */ DISPID(4098));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_PatternEndDate(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* PatternEndDate */ DISPID(4098));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_PatternStartDate()
  {
    _TDispID _dispid(/* PatternStartDate */ DISPID(4104));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_PatternStartDate(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* PatternStartDate */ DISPID(4104));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlRecurrenceType /*[VT_USERDEFINED:0]*/ __fastcall get_RecurrenceType()
  {
    _TDispID _dispid(/* RecurrenceType */ DISPID(4103));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlRecurrenceType /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_RecurrenceType(Outlook_97::OlRecurrenceType Param1/*[in]*/)
  {
    _TDispID _dispid(/* RecurrenceType */ DISPID(4103));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Regenerate()
  {
    _TDispID _dispid(/* Regenerate */ DISPID(4106));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Regenerate(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Regenerate */ DISPID(4106));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_StartTime()
  {
    _TDispID _dispid(/* StartTime */ DISPID(4105));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_StartTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* StartTime */ DISPID(4105));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }


  __property   long            DayOfMonth = {read = get_DayOfMonth, write = set_DayOfMonth};
  __property   Outlook_97::OlDaysOfWeek DayOfWeekMask = {read = get_DayOfWeekMask, write = set_DayOfWeekMask};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            EndTime = {read = get_EndTime, write = set_EndTime};
  __property   long            Instance = {read = get_Instance, write = set_Instance};
  __property   long            Interval = {read = get_Interval, write = set_Interval};
  __property   long            MonthOfYear = {read = get_MonthOfYear, write = set_MonthOfYear};
  __property   VARIANT_BOOL    NoEndDate = {read = get_NoEndDate, write = set_NoEndDate};
  __property   long            Occurrences = {read = get_Occurrences, write = set_Occurrences};
  __property   DATE            PatternEndDate = {read = get_PatternEndDate, write = set_PatternEndDate};
  __property   DATE            PatternStartDate = {read = get_PatternStartDate, write = set_PatternStartDate};
  __property   Outlook_97::OlRecurrenceType RecurrenceType = {read = get_RecurrenceType, write = set_RecurrenceType};
  __property   VARIANT_BOOL    Regenerate = {read = get_Regenerate, write = set_Regenerate};
  __property   DATE            StartTime = {read = get_StartTime, write = set_StartTime};
};
// *********************************************************************//
// Interface: _IRemoteItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063123-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IRemoteItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_HasAttachment(VARIANT_BOOL* HasAttachment/*[out,retval]*/); // [36615]
   HRESULT STDMETHODCALLTYPE get_RemoteMessageClass(BSTR* RemoteMessageClass/*[out,retval]*/); // [36610]
   HRESULT STDMETHODCALLTYPE get_TransferSize(long* TransferSize/*[out,retval]*/); // [36613]
   HRESULT STDMETHODCALLTYPE get_TransferTime(long* TransferTime/*[out,retval]*/); // [36612]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
};

// *********************************************************************//
// Interface: _DRemoteItem
// Flags:     (4096) Dispatchable
// GUID:      {00063023-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DRemoteItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_HasAttachment()
  {
    _TDispID _dispid(/* HasAttachment */ DISPID(36615));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_RemoteMessageClass()
  {
    _TDispID _dispid(/* RemoteMessageClass */ DISPID(36610));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_TransferSize()
  {
    _TDispID _dispid(/* TransferSize */ DISPID(36613));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_TransferTime()
  {
    _TDispID _dispid(/* TransferTime */ DISPID(36612));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    HasAttachment = {read = get_HasAttachment};
  __property   BSTR            RemoteMessageClass = {read = get_RemoteMessageClass};
  __property   long            TransferSize = {read = get_TransferSize};
  __property   long            TransferTime = {read = get_TransferTime};
};
// *********************************************************************//
// Interface: _IReportItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063126-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IReportItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
};

// *********************************************************************//
// Interface: _DReportItem
// Flags:     (4096) Dispatchable
// GUID:      {00063026-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DReportItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _ITaskItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063135-0000-0000-C000-000000000046}
// *********************************************************************//
interface _ITaskItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE get_ActualWork(long* ActualWork/*[out,retval]*/); // [33040]
   HRESULT STDMETHODCALLTYPE set_ActualWork(long ActualWork/*[in]*/); // [33040]
   HRESULT STDMETHODCALLTYPE get_CardData(BSTR* CardData/*[out,retval]*/); // [33067]
   HRESULT STDMETHODCALLTYPE set_CardData(BSTR CardData/*[in]*/); // [33067]
   HRESULT STDMETHODCALLTYPE get_Complete(VARIANT_BOOL* Complete/*[out,retval]*/); // [33052]
   HRESULT STDMETHODCALLTYPE set_Complete(VARIANT_BOOL Complete/*[in]*/); // [33052]
   HRESULT STDMETHODCALLTYPE get_Contacts(BSTR* Contacts/*[out,retval]*/); // [34106]
   HRESULT STDMETHODCALLTYPE set_Contacts(BSTR Contacts/*[in]*/); // [34106]
   HRESULT STDMETHODCALLTYPE get_DateCompleted(DATE* DateCompleted/*[out,retval]*/); // [33039]
   HRESULT STDMETHODCALLTYPE set_DateCompleted(DATE DateCompleted/*[in]*/); // [33039]
   HRESULT STDMETHODCALLTYPE get_DelegationState(Outlook_97::OlTaskDelegationState* DelegationState/*[out,retval]*/); // [33066]
   HRESULT STDMETHODCALLTYPE get_Delegator(BSTR* Delegator/*[out,retval]*/); // [33057]
   HRESULT STDMETHODCALLTYPE get_DueDate(DATE* DueDate/*[out,retval]*/); // [33029]
   HRESULT STDMETHODCALLTYPE set_DueDate(DATE DueDate/*[in]*/); // [33029]
   HRESULT STDMETHODCALLTYPE get_IsRecurring(VARIANT_BOOL* IsRecurring/*[out,retval]*/); // [62999]
   HRESULT STDMETHODCALLTYPE get_Ordinal(long* Ordinal/*[out,retval]*/); // [33059]
   HRESULT STDMETHODCALLTYPE set_Ordinal(long Ordinal/*[in]*/); // [33059]
   HRESULT STDMETHODCALLTYPE get_Owner(BSTR* Owner/*[out,retval]*/); // [33055]
   HRESULT STDMETHODCALLTYPE set_Owner(BSTR Owner/*[in]*/); // [33055]
   HRESULT STDMETHODCALLTYPE get_Ownership(Outlook_97::OlTaskOwnership* Ownership/*[out,retval]*/); // [33065]
   HRESULT STDMETHODCALLTYPE get_PercentComplete(long* PercentComplete/*[out,retval]*/); // [63007]
   HRESULT STDMETHODCALLTYPE set_PercentComplete(long PercentComplete/*[in]*/); // [63007]
   HRESULT STDMETHODCALLTYPE get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/); // [63508]
   HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault(VARIANT_BOOL* ReminderOverrideDefault/*[out,retval]*/); // [34076]
   HRESULT STDMETHODCALLTYPE set_ReminderOverrideDefault(VARIANT_BOOL ReminderOverrideDefault/*[in]*/); // [34076]
   HRESULT STDMETHODCALLTYPE get_ReminderPlaySound(VARIANT_BOOL* ReminderPlaySound/*[out,retval]*/); // [34078]
   HRESULT STDMETHODCALLTYPE set_ReminderPlaySound(VARIANT_BOOL ReminderPlaySound/*[in]*/); // [34078]
   HRESULT STDMETHODCALLTYPE get_ReminderSet(VARIANT_BOOL* ReminderSet/*[out,retval]*/); // [34051]
   HRESULT STDMETHODCALLTYPE set_ReminderSet(VARIANT_BOOL ReminderSet/*[in]*/); // [34051]
   HRESULT STDMETHODCALLTYPE get_ReminderSoundFile(BSTR* ReminderSoundFile/*[out,retval]*/); // [34079]
   HRESULT STDMETHODCALLTYPE set_ReminderSoundFile(BSTR ReminderSoundFile/*[in]*/); // [34079]
   HRESULT STDMETHODCALLTYPE get_ReminderTime(DATE* ReminderTime/*[out,retval]*/); // [34050]
   HRESULT STDMETHODCALLTYPE set_ReminderTime(DATE ReminderTime/*[in]*/); // [34050]
   HRESULT STDMETHODCALLTYPE get_ResponseState(Outlook_97::OlTaskResponse* ResponseState/*[out,retval]*/); // [63011]
   HRESULT STDMETHODCALLTYPE get_Role(BSTR* Role/*[out,retval]*/); // [33063]
   HRESULT STDMETHODCALLTYPE set_Role(BSTR Role/*[in]*/); // [33063]
   HRESULT STDMETHODCALLTYPE get_SchedulePlusPriority(BSTR* SchedulePlusPriority/*[out,retval]*/); // [33071]
   HRESULT STDMETHODCALLTYPE set_SchedulePlusPriority(BSTR SchedulePlusPriority/*[in]*/); // [33071]
   HRESULT STDMETHODCALLTYPE get_StartDate(DATE* StartDate/*[out,retval]*/); // [33028]
   HRESULT STDMETHODCALLTYPE set_StartDate(DATE StartDate/*[in]*/); // [33028]
   HRESULT STDMETHODCALLTYPE get_Status(Outlook_97::OlTaskStatus* Status/*[out,retval]*/); // [33025]
   HRESULT STDMETHODCALLTYPE set_Status(Outlook_97::OlTaskStatus Status/*[in]*/); // [33025]
   HRESULT STDMETHODCALLTYPE get_StatusOnCompletionRecipients(BSTR* StatusOnCompletionRecipients/*[out,retval]*/); // [3586]
   HRESULT STDMETHODCALLTYPE set_StatusOnCompletionRecipients(BSTR StatusOnCompletionRecipients/*[in]*/); // [3586]
   HRESULT STDMETHODCALLTYPE get_StatusUpdateRecipients(BSTR* StatusUpdateRecipients/*[out,retval]*/); // [3587]
   HRESULT STDMETHODCALLTYPE set_StatusUpdateRecipients(BSTR StatusUpdateRecipients/*[in]*/); // [3587]
   HRESULT STDMETHODCALLTYPE get_TeamTask(VARIANT_BOOL* TeamTask/*[out,retval]*/); // [33027]
   HRESULT STDMETHODCALLTYPE set_TeamTask(VARIANT_BOOL TeamTask/*[in]*/); // [33027]
   HRESULT STDMETHODCALLTYPE get_TotalWork(long* TotalWork/*[out,retval]*/); // [33041]
   HRESULT STDMETHODCALLTYPE set_TotalWork(long TotalWork/*[in]*/); // [33041]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE Assign(Outlook_97::TaskItem** Item/*[out,retval]*/); // [63008]
   HRESULT STDMETHODCALLTYPE CancelResponseState(void); // [63010]
   HRESULT STDMETHODCALLTYPE ClearRecurrencePattern(void); // [61605]
   HRESULT STDMETHODCALLTYPE GetRecurrencePattern(void); // [61604]
   HRESULT STDMETHODCALLTYPE MarkComplete(void); // [62989]
   HRESULT STDMETHODCALLTYPE Respond(Outlook_97::OlTaskResponse Response/*[in]*/, 
                                     VARIANT fNoUI/*[in]*/, VARIANT fAdditionalTextDialog/*[in]*/, 
                                     Outlook_97::TaskItem** Item/*[out,retval]*/); // [63009]
   HRESULT STDMETHODCALLTYPE Send(void); // [61557]
   VARIANT_BOOL STDMETHODCALLTYPE SkipRecurrence(void); // [63012]
   HRESULT STDMETHODCALLTYPE StatusReport(LPDISPATCH* StatusReport/*[out,retval]*/); // [62994]
};

// *********************************************************************//
// Interface: _DTaskItem
// Flags:     (4096) Dispatchable
// GUID:      {00063035-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DTaskItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_ActualWork()
  {
    _TDispID _dispid(/* ActualWork */ DISPID(33040));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ActualWork(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* ActualWork */ DISPID(33040));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_CardData()
  {
    _TDispID _dispid(/* CardData */ DISPID(33067));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_CardData(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* CardData */ DISPID(33067));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Complete()
  {
    _TDispID _dispid(/* Complete */ DISPID(33052));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Complete(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Complete */ DISPID(33052));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Contacts()
  {
    _TDispID _dispid(/* Contacts */ DISPID(34106));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Contacts(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Contacts */ DISPID(34106));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_DateCompleted()
  {
    _TDispID _dispid(/* DateCompleted */ DISPID(33039));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DateCompleted(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* DateCompleted */ DISPID(33039));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlTaskDelegationState /*[VT_USERDEFINED:0]*/ __fastcall get_DelegationState()
  {
    _TDispID _dispid(/* DelegationState */ DISPID(33066));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlTaskDelegationState /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Delegator()
  {
    _TDispID _dispid(/* Delegator */ DISPID(33057));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_DueDate()
  {
    _TDispID _dispid(/* DueDate */ DISPID(33029));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_DueDate(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* DueDate */ DISPID(33029));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_IsRecurring()
  {
    _TDispID _dispid(/* IsRecurring */ DISPID(62999));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_Ordinal()
  {
    _TDispID _dispid(/* Ordinal */ DISPID(33059));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Ordinal(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* Ordinal */ DISPID(33059));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Owner()
  {
    _TDispID _dispid(/* Owner */ DISPID(33055));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Owner(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Owner */ DISPID(33055));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlTaskOwnership /*[VT_USERDEFINED:0]*/ __fastcall get_Ownership()
  {
    _TDispID _dispid(/* Ownership */ DISPID(33065));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlTaskOwnership /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  long /*[VT_I4:0]*/ __fastcall get_PercentComplete()
  {
    _TDispID _dispid(/* PercentComplete */ DISPID(63007));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_PercentComplete(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* PercentComplete */ DISPID(63007));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients()
  {
    _TDispID _dispid(/* Recipients */ DISPID(63508));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderOverrideDefault()
  {
    _TDispID _dispid(/* ReminderOverrideDefault */ DISPID(34076));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderOverrideDefault */ DISPID(34076));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderPlaySound()
  {
    _TDispID _dispid(/* ReminderPlaySound */ DISPID(34078));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderPlaySound */ DISPID(34078));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderSet()
  {
    _TDispID _dispid(/* ReminderSet */ DISPID(34051));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderSet */ DISPID(34051));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReminderSoundFile()
  {
    _TDispID _dispid(/* ReminderSoundFile */ DISPID(34079));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderSoundFile(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderSoundFile */ DISPID(34079));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_ReminderTime()
  {
    _TDispID _dispid(/* ReminderTime */ DISPID(34050));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReminderTime(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReminderTime */ DISPID(34050));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlTaskResponse /*[VT_USERDEFINED:0]*/ __fastcall get_ResponseState()
  {
    _TDispID _dispid(/* ResponseState */ DISPID(63011));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlTaskResponse /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Role()
  {
    _TDispID _dispid(/* Role */ DISPID(33063));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Role(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Role */ DISPID(33063));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_SchedulePlusPriority()
  {
    _TDispID _dispid(/* SchedulePlusPriority */ DISPID(33071));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_SchedulePlusPriority(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* SchedulePlusPriority */ DISPID(33071));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_StartDate()
  {
    _TDispID _dispid(/* StartDate */ DISPID(33028));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_StartDate(DATE Param1/*[in]*/)
  {
    _TDispID _dispid(/* StartDate */ DISPID(33028));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_DATE:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::OlTaskStatus /*[VT_USERDEFINED:0]*/ __fastcall get_Status()
  {
    _TDispID _dispid(/* Status */ DISPID(33025));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlTaskStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Status(Outlook_97::OlTaskStatus Param1/*[in]*/)
  {
    _TDispID _dispid(/* Status */ DISPID(33025));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_StatusOnCompletionRecipients()
  {
    _TDispID _dispid(/* StatusOnCompletionRecipients */ DISPID(3586));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_StatusOnCompletionRecipients(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* StatusOnCompletionRecipients */ DISPID(3586));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_StatusUpdateRecipients()
  {
    _TDispID _dispid(/* StatusUpdateRecipients */ DISPID(3587));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_StatusUpdateRecipients(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* StatusUpdateRecipients */ DISPID(3587));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_TeamTask()
  {
    _TDispID _dispid(/* TeamTask */ DISPID(33027));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_TeamTask(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* TeamTask */ DISPID(33027));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_TotalWork()
  {
    _TDispID _dispid(/* TotalWork */ DISPID(33041));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_TotalWork(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* TotalWork */ DISPID(33041));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall Assign()
  {
    _TDispID _dispid(/* Assign */ DISPID(63008));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall CancelResponseState()
  {
    _TDispID _dispid(/* CancelResponseState */ DISPID(63010));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall ClearRecurrencePattern()
  {
    _TDispID _dispid(/* ClearRecurrencePattern */ DISPID(61605));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall GetRecurrencePattern()
  {
    _TDispID _dispid(/* GetRecurrencePattern */ DISPID(61604));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall MarkComplete()
  {
    _TDispID _dispid(/* MarkComplete */ DISPID(62989));
    OleProcedure(_dispid);
  }

  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall Respond(Outlook_97::OlTaskResponse Response/*[in]*/
                                                                  , VARIANT fNoUI/*[in]*/, 
                                                                  VARIANT fAdditionalTextDialog/*[in]*/)
  {
    _TDispID _dispid(/* Respond */ DISPID(63009));
    TAutoArgs<3> _args;
    _args[1] = (int)Response /*[VT_USERDEFINED:0]*/;
    _args[2] = fNoUI /*[VT_VARIANT:0]*/;
    _args[3] = fAdditionalTextDialog /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Send()
  {
    _TDispID _dispid(/* Send */ DISPID(61557));
    OleProcedure(_dispid);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall SkipRecurrence()
  {
    _TDispID _dispid(/* SkipRecurrence */ DISPID(63012));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall StatusReport()
  {
    _TDispID _dispid(/* StatusReport */ DISPID(62994));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   long            ActualWork = {read = get_ActualWork, write = set_ActualWork};
  __property   BSTR            CardData = {read = get_CardData};
  __property   VARIANT_BOOL    Complete = {read = get_Complete, write = set_Complete};
  __property   BSTR            Contacts = {read = get_Contacts};
  __property   DATE            DateCompleted = {read = get_DateCompleted, write = set_DateCompleted};
  __property   Outlook_97::OlTaskDelegationState DelegationState = {read = get_DelegationState};
  __property   BSTR            Delegator = {read = get_Delegator};
  __property   DATE            DueDate = {read = get_DueDate, write = set_DueDate};
  __property   VARIANT_BOOL    IsRecurring = {read = get_IsRecurring};
  __property   long            Ordinal = {read = get_Ordinal, write = set_Ordinal};
  __property   BSTR            Owner = {read = get_Owner};
  __property   Outlook_97::OlTaskOwnership Ownership = {read = get_Ownership};
  __property   long            PercentComplete = {read = get_PercentComplete, write = set_PercentComplete};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReminderTime = {read = get_ReminderTime, write = set_ReminderTime};
  __property   Outlook_97::OlTaskResponse ResponseState = {read = get_ResponseState};
  __property   BSTR            Role = {read = get_Role};
  __property   BSTR            SchedulePlusPriority = {read = get_SchedulePlusPriority};
  __property   DATE            StartDate = {read = get_StartDate, write = set_StartDate};
  __property   Outlook_97::OlTaskStatus Status = {read = get_Status, write = set_Status};
  __property   BSTR            StatusOnCompletionRecipients = {read = get_StatusOnCompletionRecipients};
  __property   BSTR            StatusUpdateRecipients = {read = get_StatusUpdateRecipients};
  __property   VARIANT_BOOL    TeamTask = {read = get_TeamTask, write = set_TeamTask};
  __property   long            TotalWork = {read = get_TotalWork, write = set_TotalWork};
};
// *********************************************************************//
// Interface: _ITaskRequestAcceptItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063138-0000-0000-C000-000000000046}
// *********************************************************************//
interface _ITaskRequestAcceptItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                               Outlook_97::TaskItem** Item/*[out,retval]*/); // [61460]
};

// *********************************************************************//
// Interface: _DTaskRequestAcceptItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063038-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DTaskRequestAcceptItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedTask */ DISPID(61460));
    TAutoArgs<1> _args;
    _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _ITaskRequestDeclineItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063139-0000-0000-C000-000000000046}
// *********************************************************************//
interface _ITaskRequestDeclineItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                               Outlook_97::TaskItem** Item/*[out,retval]*/); // [61460]
};

// *********************************************************************//
// Interface: _DTaskRequestDeclineItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063039-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DTaskRequestDeclineItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedTask */ DISPID(61460));
    TAutoArgs<1> _args;
    _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _ITaskRequestItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063136-0000-0000-C000-000000000046}
// *********************************************************************//
interface _ITaskRequestItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                               Outlook_97::TaskItem** Item/*[out,retval]*/); // [61460]
};

// *********************************************************************//
// Interface: _DTaskRequestItem
// Flags:     (4096) Dispatchable
// GUID:      {00063036-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DTaskRequestItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedTask */ DISPID(61460));
    TAutoArgs<1> _args;
    _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _ITaskRequestUpdateItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063137-0000-0000-C000-000000000046}
// *********************************************************************//
interface _ITaskRequestUpdateItem  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/); // [63511]
   HRESULT STDMETHODCALLTYPE get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/); // [61440]
   HRESULT STDMETHODCALLTYPE get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/); // [63509]
   HRESULT STDMETHODCALLTYPE get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/); // [34101]
   HRESULT STDMETHODCALLTYPE set_BillingInformation(BSTR BillingInformation/*[in]*/); // [34101]
   HRESULT STDMETHODCALLTYPE get_Body(BSTR* Body/*[out,retval]*/); // [37120]
   HRESULT STDMETHODCALLTYPE set_Body(BSTR Body/*[in]*/); // [37120]
   HRESULT STDMETHODCALLTYPE get_Categories(BSTR* Categories/*[out,retval]*/); // [36865]
   HRESULT STDMETHODCALLTYPE set_Categories(BSTR Categories/*[in]*/); // [36865]
   HRESULT STDMETHODCALLTYPE get_Companies(BSTR* Companies/*[out,retval]*/); // [34107]
   HRESULT STDMETHODCALLTYPE set_Companies(BSTR Companies/*[in]*/); // [34107]
   HRESULT STDMETHODCALLTYPE get_CreationTime(DATE* CreationTime/*[out,retval]*/); // [12295]
   HRESULT STDMETHODCALLTYPE get_EntryID(BSTR* EntryID/*[out,retval]*/); // [61470]
   HRESULT STDMETHODCALLTYPE get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/); // [61589]
   HRESULT STDMETHODCALLTYPE get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/); // [61502]
   HRESULT STDMETHODCALLTYPE get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/); // [23]
   HRESULT STDMETHODCALLTYPE set_Importance(Outlook_97::OlImportance Importance/*[in]*/); // [23]
   HRESULT STDMETHODCALLTYPE get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/); // [12296]
   HRESULT STDMETHODCALLTYPE get_MessageClass(BSTR* MessageClass/*[out,retval]*/); // [26]
   HRESULT STDMETHODCALLTYPE set_MessageClass(BSTR MessageClass/*[in]*/); // [26]
   HRESULT STDMETHODCALLTYPE get_Mileage(BSTR* Mileage/*[out,retval]*/); // [34100]
   HRESULT STDMETHODCALLTYPE set_Mileage(BSTR Mileage/*[in]*/); // [34100]
   HRESULT STDMETHODCALLTYPE get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/); // [34062]
   HRESULT STDMETHODCALLTYPE set_NoAging(VARIANT_BOOL NoAging/*[in]*/); // [34062]
   HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/); // [34130]
   HRESULT STDMETHODCALLTYPE get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/); // [34132]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/); // [61603]
   HRESULT STDMETHODCALLTYPE get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/); // [54]
   HRESULT STDMETHODCALLTYPE set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/); // [54]
   HRESULT STDMETHODCALLTYPE get_Size(long* Size/*[out,retval]*/); // [3592]
   HRESULT STDMETHODCALLTYPE get_Subject(BSTR* Subject/*[out,retval]*/); // [55]
   HRESULT STDMETHODCALLTYPE set_Subject(BSTR Subject/*[in]*/); // [55]
   HRESULT STDMETHODCALLTYPE get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/); // [61468]
   HRESULT STDMETHODCALLTYPE set_UnRead(VARIANT_BOOL UnRead/*[in]*/); // [61468]
   HRESULT STDMETHODCALLTYPE get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/); // [63510]
   HRESULT STDMETHODCALLTYPE Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/); // [61475]
   HRESULT STDMETHODCALLTYPE Copy(LPDISPATCH* Item/*[out,retval]*/); // [61490]
   HRESULT STDMETHODCALLTYPE Delete(void); // [61514]
   HRESULT STDMETHODCALLTYPE Display(VARIANT Modal/*[in]*/); // [61606]
   HRESULT STDMETHODCALLTYPE Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                  LPDISPATCH* Item/*[out,retval]*/); // [61492]
   HRESULT STDMETHODCALLTYPE Save(void); // [61512]
   HRESULT STDMETHODCALLTYPE SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/); // [61521]
   HRESULT STDMETHODCALLTYPE PrintOut(void); // [61491]
   HRESULT STDMETHODCALLTYPE GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                               Outlook_97::TaskItem** Item/*[out,retval]*/); // [61460]
};

// *********************************************************************//
// Interface: _DTaskRequestUpdateItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063037-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DTaskRequestUpdateItem : public TDispWrapper<IDispatch>
{
  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions()
  {
    _TDispID _dispid(/* Actions */ DISPID(63511));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application()
  {
    _TDispID _dispid(/* Application */ DISPID(61440));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments()
  {
    _TDispID _dispid(/* Attachments */ DISPID(63509));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation()
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* BillingInformation */ DISPID(34101));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body()
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Body */ DISPID(37120));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories()
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Categories */ DISPID(36865));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies()
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Companies */ DISPID(34107));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime()
  {
    _TDispID _dispid(/* CreationTime */ DISPID(12295));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID()
  {
    _TDispID _dispid(/* EntryID */ DISPID(61470));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription()
  {
    _TDispID _dispid(/* FormDescription */ DISPID(61589));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector()
  {
    _TDispID _dispid(/* GetInspector */ DISPID(61502));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance()
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
  {
    _TDispID _dispid(/* Importance */ DISPID(23));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime()
  {
    _TDispID _dispid(/* LastModificationTime */ DISPID(12296));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass()
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* MessageClass */ DISPID(26));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage()
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Mileage */ DISPID(34100));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging()
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* NoAging */ DISPID(34062));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion()
  {
    _TDispID _dispid(/* OutlookInternalVersion */ DISPID(34130));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion()
  {
    _TDispID _dispid(/* OutlookVersion */ DISPID(34132));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved()
  {
    _TDispID _dispid(/* Saved */ DISPID(61603));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity()
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
  {
    _TDispID _dispid(/* Sensitivity */ DISPID(54));
    TAutoArgs<1> _args;
    _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_Size()
  {
    _TDispID _dispid(/* Size */ DISPID(3592));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject()
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Subject */ DISPID(55));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead()
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* UnRead */ DISPID(61468));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties()
  {
    _TDispID _dispid(/* UserProperties */ DISPID(63510));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
  {
    _TDispID _dispid(/* Close */ DISPID(61475));
    TAutoArgs<1> _args;
    _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy()
  {
    _TDispID _dispid(/* Copy */ DISPID(61490));
    TAutoArgs<0> _args;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(61514));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/)
  {
    _TDispID _dispid(/* Display */ DISPID(61606));
    TAutoArgs<1> _args;
    _args[1] = Modal /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
  {
    _TDispID _dispid(/* Move */ DISPID(61492));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
    OleFunction(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Save()
  {
    _TDispID _dispid(/* Save */ DISPID(61512));
    OleProcedure(_dispid);
  }

  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
  {
    _TDispID _dispid(/* SaveAs */ DISPID(61521));
    TAutoArgs<2> _args;
    _args[1] = Path /*[VT_BSTR:0]*/;
    _args[2] = Type /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall PrintOut()
  {
    _TDispID _dispid(/* PrintOut */ DISPID(61491));
    OleProcedure(_dispid);
  }

  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
  {
    _TDispID _dispid(/* GetAssociatedTask */ DISPID(61460));
    TAutoArgs<1> _args;
    _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }


  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
// *********************************************************************//
// Interface: _IUserProperties
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313D-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IUserProperties  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Count(long* Count/*[out,retval]*/); // [80]
   HRESULT STDMETHODCALLTYPE Add(BSTR Name/*[in]*/, Outlook_97::OlUserPropertyType Type/*[in]*/, 
                                 VARIANT AddToFolderFields/*[in]*/, VARIANT DisplayFormat/*[in]*/, 
                                 Outlook_97::UserProperty** UserProperty/*[out,retval]*/); // [102]
   HRESULT STDMETHODCALLTYPE Find(BSTR Name/*[in]*/, VARIANT Custom/*[in]*/); // [103]
   HRESULT STDMETHODCALLTYPE Item(VARIANT Index/*[in]*/, 
                                  Outlook_97::UserProperty** UserProperty/*[out,retval]*/); // [81]
   HRESULT STDMETHODCALLTYPE Remove(long Index/*[in]*/); // [82]
};

// *********************************************************************//
// Interface: UserProperties
// Flags:     (4096) Dispatchable
// GUID:      {0006303D-0000-0000-C000-000000000046}
// *********************************************************************//
interface UserProperties : public TDispWrapper<IDispatch>
{
  long /*[VT_I4:0]*/ __fastcall get_Count()
  {
    _TDispID _dispid(/* Count */ DISPID(80));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::UserProperty* /*[VT_USERDEFINED:1]*/ __fastcall Add(BSTR Name/*[in]*/, 
                                                                  Outlook_97::OlUserPropertyType Type/*[in]*/
                                                                  , 
                                                                  VARIANT AddToFolderFields/*[in]*/
                                                                  , VARIANT DisplayFormat/*[in]*/)
  {
    _TDispID _dispid(/* Add */ DISPID(102));
    TAutoArgs<4> _args;
    _args[1] = Name /*[VT_BSTR:0]*/;
    _args[2] = (int)Type /*[VT_USERDEFINED:0]*/;
    _args[3] = AddToFolderFields /*[VT_VARIANT:0]*/;
    _args[4] = DisplayFormat /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::UserProperty* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Find(BSTR Name/*[in]*/, VARIANT Custom/*[in]*/)
  {
    _TDispID _dispid(/* Find */ DISPID(103));
    TAutoArgs<2> _args;
    _args[1] = Name /*[VT_BSTR:0]*/;
    _args[2] = Custom /*[VT_VARIANT:0]*/;
    OleProcedure(_dispid, _args);
  }

  Outlook_97::UserProperty* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/)
  {
    _TDispID _dispid(/* Item */ DISPID(81));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_VARIANT:0]*/;
    OleFunction(_dispid, _args);
    return (Outlook_97::UserProperty* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/)
  {
    _TDispID _dispid(/* Remove */ DISPID(82));
    TAutoArgs<1> _args;
    _args[1] = Index /*[VT_I4:0]*/;
    OleProcedure(_dispid, _args);
  }


  __property   long            Count = {read = get_Count};
};
// *********************************************************************//
// Interface: _IUserProperty
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063142-0000-0000-C000-000000000046}
// *********************************************************************//
interface _IUserProperty  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Formula(BSTR* Formula/*[out,retval]*/); // [103]
   HRESULT STDMETHODCALLTYPE set_Formula(BSTR Formula/*[in]*/); // [103]
   HRESULT STDMETHODCALLTYPE get_Name(BSTR* Name/*[out,retval]*/); // [12289]
   HRESULT STDMETHODCALLTYPE get_Parent(LPDISPATCH* Parent/*[out,retval]*/); // [61441]
   HRESULT STDMETHODCALLTYPE get_Type(Outlook_97::OlUserPropertyType* Type/*[out,retval]*/); // [109]
   HRESULT STDMETHODCALLTYPE get_ValidationFormula(BSTR* ValidationFormula/*[out,retval]*/); // [104]
   HRESULT STDMETHODCALLTYPE set_ValidationFormula(BSTR ValidationFormula/*[in]*/); // [104]
   HRESULT STDMETHODCALLTYPE get_ValidationText(BSTR* ValidationText/*[out,retval]*/); // [105]
   HRESULT STDMETHODCALLTYPE set_ValidationText(BSTR ValidationText/*[in]*/); // [105]
   HRESULT STDMETHODCALLTYPE get_Value(VARIANT* Value/*[out,retval]*/); // [0]
   HRESULT STDMETHODCALLTYPE set_Value(VARIANT Value/*[in]*/); // [0]
   HRESULT STDMETHODCALLTYPE Delete(void); // [108]
};

// *********************************************************************//
// Interface: UserProperty
// Flags:     (4096) Dispatchable
// GUID:      {00063042-0000-0000-C000-000000000046}
// *********************************************************************//
interface UserProperty : public TDispWrapper<IDispatch>
{
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Formula()
  {
    _TDispID _dispid(/* Formula */ DISPID(103));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Formula(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* Formula */ DISPID(103));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name()
  {
    _TDispID _dispid(/* Name */ DISPID(12289));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent()
  {
    _TDispID _dispid(/* Parent */ DISPID(61441));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  Outlook_97::OlUserPropertyType /*[VT_USERDEFINED:0]*/ __fastcall get_Type()
  {
    _TDispID _dispid(/* Type */ DISPID(109));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (Outlook_97::OlUserPropertyType /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ValidationFormula()
  {
    _TDispID _dispid(/* ValidationFormula */ DISPID(104));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ValidationFormula(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ValidationFormula */ DISPID(104));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_ValidationText()
  {
    _TDispID _dispid(/* ValidationText */ DISPID(105));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ValidationText(BSTR Param1/*[in]*/)
  {
    _TDispID _dispid(/* ValidationText */ DISPID(105));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BSTR:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT /*[VT_VARIANT:0]*/ __fastcall get_Value()
  {
    _TDispID _dispid(/* Value */ DISPID(0));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Value(VARIANT Param1/*[in]*/)
  {
    _TDispID _dispid(/* Value */ DISPID(0));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_VARIANT:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  void /*[VT_VOID:0]*/ __fastcall Delete()
  {
    _TDispID _dispid(/* Delete */ DISPID(108));
    OleProcedure(_dispid);
  }


  __property   BSTR            Formula = {read = get_Formula};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   Outlook_97::OlUserPropertyType Type = {read = get_Type};
  __property   BSTR            ValidationFormula = {read = get_ValidationFormula};
  __property   BSTR            ValidationText = {read = get_ValidationText};
};
// *********************************************************************//
// Interface: _IRecipientControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {D87E7E16-6897-11CE-A6C0-00AA00608FAA}
// *********************************************************************//
interface _IRecipientControl  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* Enabled/*[out,retval]*/); // [-514]
   HRESULT STDMETHODCALLTYPE set_Enabled(VARIANT_BOOL Enabled/*[in]*/); // [-514]
   HRESULT STDMETHODCALLTYPE get_BackColor(long* BackColor/*[out,retval]*/); // [-501]
   HRESULT STDMETHODCALLTYPE set_BackColor(long BackColor/*[in]*/); // [-501]
   HRESULT STDMETHODCALLTYPE get_ForeColor(long* ForeColor/*[out,retval]*/); // [-513]
   HRESULT STDMETHODCALLTYPE set_ForeColor(long ForeColor/*[in]*/); // [-513]
   HRESULT STDMETHODCALLTYPE get_ReadOnly(VARIANT_BOOL* ReadOnly/*[out,retval]*/); // [-2147356664]
   HRESULT STDMETHODCALLTYPE set_ReadOnly(VARIANT_BOOL ReadOnly/*[in]*/); // [-2147356664]
   HRESULT STDMETHODCALLTYPE get_Font(IFontDisp*** Font/*[out,retval]*/); // [-512]
   HRESULT STDMETHODCALLTYPE set_Font(IFontDisp** Font/*[in]*/); // [-512]
   HRESULT STDMETHODCALLTYPE get_SpecialEffect(long* Effect/*[out,retval]*/); // [12]
   HRESULT STDMETHODCALLTYPE set_SpecialEffect(long Effect/*[in]*/); // [12]
};

// *********************************************************************//
// Interface: _DRecipientControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006F025-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DRecipientControl : public TDispWrapper<IDispatch>
{
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Enabled()
  {
    _TDispID _dispid(/* Enabled */ DISPID(-514));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Enabled(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* Enabled */ DISPID(-514));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_BackColor()
  {
    _TDispID _dispid(/* BackColor */ DISPID(-501));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_BackColor(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* BackColor */ DISPID(-501));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_ForeColor()
  {
    _TDispID _dispid(/* ForeColor */ DISPID(-513));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ForeColor(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* ForeColor */ DISPID(-513));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReadOnly()
  {
    _TDispID _dispid(/* ReadOnly */ DISPID(-2147356664));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReadOnly(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReadOnly */ DISPID(-2147356664));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }

  IFontDisp** /*[VT_USERDEFINED:1]*/ __fastcall get_Font()
  {
    _TDispID _dispid(/* Font */ DISPID(-512));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return (IFontDisp** /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_Font(IFontDisp** Param1/*[in]*/)
  {
    _TDispID _dispid(/* Font */ DISPID(-512));
    TAutoArgs<1> _args;
    _args[1] = (LPDISPATCH)(IFontDisp**)Param1 /*[VT_USERDEFINED:1]*/;
    OlePropertyPut(_dispid, _args);
  }

  long /*[VT_I4:0]*/ __fastcall get_SpecialEffect()
  {
    _TDispID _dispid(/* SpecialEffect */ DISPID(12));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_SpecialEffect(long Param1/*[in]*/)
  {
    _TDispID _dispid(/* SpecialEffect */ DISPID(12));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_I4:0]*/;
    OlePropertyPut(_dispid, _args);
  }


  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   long            BackColor = {read = get_BackColor, write = set_BackColor};
  __property   long            ForeColor = {read = get_ForeColor, write = set_ForeColor};
  __property   VARIANT_BOOL    ReadOnly = {read = get_ReadOnly, write = set_ReadOnly};
  __property   IFontDisp**     Font = {read = get_Font, write = set_Font};
  __property   long            SpecialEffect = {read = get_SpecialEffect, write = set_SpecialEffect};
};
// *********************************************************************//
// Interface: _DRecipientControlEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {D87E7E17-6897-11CE-A6C0-00AA00608FAA}
// *********************************************************************//
interface _DRecipientControlEvents : public TDispWrapper<IDispatch>
{

};
// *********************************************************************//
// Interface: _IDocSiteControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {43507DD0-811D-11CE-B565-00AA00608FAA}
// *********************************************************************//
interface _IDocSiteControl  : public IDispatch
{
public:
   HRESULT STDMETHODCALLTYPE get_ReadOnly(VARIANT_BOOL* ReadOnly/*[out,retval]*/); // [-2147356664]
   HRESULT STDMETHODCALLTYPE set_ReadOnly(VARIANT_BOOL ReadOnly/*[in]*/); // [-2147356664]
};

// *********************************************************************//
// Interface: _DDocSiteControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006F026-0000-0000-C000-000000000046}
// *********************************************************************//
interface _DDocSiteControl : public TDispWrapper<IDispatch>
{
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReadOnly()
  {
    _TDispID _dispid(/* ReadOnly */ DISPID(-2147356664));
    TAutoArgs<0> _args;
    OlePropertyGet(_dispid, _args);
    return _args.GetRetVariant();
  }

  void /*[VT_VOID:0]*/ __fastcall set_ReadOnly(VARIANT_BOOL Param1/*[in]*/)
  {
    _TDispID _dispid(/* ReadOnly */ DISPID(-2147356664));
    TAutoArgs<1> _args;
    _args[1] = Param1 /*[VT_BOOL:0]*/;
    OlePropertyPut(_dispid, _args);
  }


  __property   VARIANT_BOOL    ReadOnly = {read = get_ReadOnly, write = set_ReadOnly};
};
// *********************************************************************//
// Interface: _DDocSiteControlEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {50BB9B50-811D-11CE-B565-00AA00608FAA}
// *********************************************************************//
interface _DDocSiteControlEvents : public TDispWrapper<IDispatch>
{

};
#if !defined(__TLB_NO_INTERFACE_WRAPPERS)
// *********************************************************************//
// DispIntf:  _IItemEvents
// Flags:     (4096) Dispatchable
// GUID:      {0006313A-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IItemEventsDispT : public TAutoDriver<_IItemEvents>
{
public:
  _IItemEventsDispT(){}

  _IItemEventsDispT(_IItemEvents *pintf)
  {
    TAutoDriver<_IItemEvents>::Bind(pintf, false);
  }

  _IItemEventsDispT(_IItemEventsPtr pintf)
  {
    TAutoDriver<_IItemEvents>::Bind(pintf, true);
  }

  _IItemEventsDispT& operator=(_IItemEvents *pintf)
  {
    TAutoDriver<_IItemEvents>::Bind(pintf, false);
    return *this;
  }

  _IItemEventsDispT& operator=(_IItemEventsPtr pintf)
  {
    TAutoDriver<_IItemEvents>::Bind(pintf, true);
    return *this;
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Read();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Write();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Open();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Close();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Send();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Reply(LPDISPATCH Response/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall ReplyAll(LPDISPATCH Response/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Forward(LPDISPATCH Forward/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall CustomAction(LPDISPATCH Action/*[in]*/, 
                                                       LPDISPATCH Response/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall CustomPropertyChange(BSTR Name/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PropertyChange(BSTR Name/*[in]*/);

};
typedef _IItemEventsDispT<_IItemEvents> _IItemEventsDisp;

// *********************************************************************//
// DispIntf:  _DItemEvents
// Flags:     (4096) Dispatchable
// GUID:      {0006303A-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T>
class _DItemEventsDispT : public TAutoDriver<_DItemEvents>
{
public:
  _DItemEventsDispT(){}

  void Attach(LPUNKNOWN punk)
  { m_Dispatch = static_cast<T*>(punk); }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Read();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Write();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Open();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Close();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Send();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Reply(LPDISPATCH Response/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall ReplyAll(LPDISPATCH Response/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Forward(LPDISPATCH Forward/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall CustomAction(LPDISPATCH Action/*[in]*/, 
                                                       LPDISPATCH Response/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall CustomPropertyChange(BSTR Name/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PropertyChange(BSTR Name/*[in]*/);

};
typedef _DItemEventsDispT<_DItemEvents> _DItemEventsDisp;

// *********************************************************************//
// DispIntf:  _IAction
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063143-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IActionDispT : public TAutoDriver<_IAction>
{
public:
  _IActionDispT(){}

  _IActionDispT(_IAction *pintf)
  {
    TAutoDriver<_IAction>::Bind(pintf, false);
  }

  _IActionDispT(_IActionPtr pintf)
  {
    TAutoDriver<_IAction>::Bind(pintf, true);
  }

  _IActionDispT& operator=(_IAction *pintf)
  {
    TAutoDriver<_IAction>::Bind(pintf, false);
    return *this;
  }

  _IActionDispT& operator=(_IActionPtr pintf)
  {
    TAutoDriver<_IAction>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CopyLike(Outlook_97::OlActionCopyLike* CopyLike/*[out,retval]*/);
  Outlook_97::OlActionCopyLike __fastcall get_CopyLike(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CopyLike(Outlook_97::OlActionCopyLike CopyLike/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Enabled(VARIANT_BOOL* Enabled/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Enabled(VARIANT_BOOL Enabled/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Name(BSTR* Name/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Name(BSTR Name/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Prefix(BSTR* Prefix/*[out,retval]*/);
  BSTR            __fastcall get_Prefix(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Prefix(BSTR Prefix/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReplyStyle(Outlook_97::OlActionReplyStyle* ReplyStyle/*[out,retval]*/);
  Outlook_97::OlActionReplyStyle __fastcall get_ReplyStyle(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReplyStyle(Outlook_97::OlActionReplyStyle ReplyStyle/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ResponseStyle(Outlook_97::OlActionResponseStyle* ResponseStyle/*[out,retval]*/);
  Outlook_97::OlActionResponseStyle __fastcall get_ResponseStyle(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ResponseStyle(Outlook_97::OlActionResponseStyle ResponseStyle/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ShowOn(Outlook_97::OlActionShowOn* ShowOn/*[out,retval]*/);
  Outlook_97::OlActionShowOn __fastcall get_ShowOn(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ShowOn(Outlook_97::OlActionShowOn ShowOn/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Execute(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Execute(void);

  __property   Outlook_97::OlActionCopyLike CopyLike = {read = get_CopyLike, write = set_CopyLike};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            Prefix = {read = get_Prefix};
  __property   Outlook_97::OlActionReplyStyle ReplyStyle = {read = get_ReplyStyle, write = set_ReplyStyle};
  __property   Outlook_97::OlActionResponseStyle ResponseStyle = {read = get_ResponseStyle, write = set_ResponseStyle};
  __property   Outlook_97::OlActionShowOn ShowOn = {read = get_ShowOn, write = set_ShowOn};
};
typedef _IActionDispT<_IAction> _IActionDisp;

// *********************************************************************//
// DispIntf:  Action
// Flags:     (4096) Dispatchable
// GUID:      {00063043-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class ActionDispT : public TAutoDriver<Action>
{
public:
  ActionDispT(){}

  ActionDispT(Action *pintf)
  {
    TAutoDriver<Action>::Bind(pintf, false);
  }

  ActionDispT(ActionPtr pintf)
  {
    TAutoDriver<Action>::Bind(pintf, true);
  }

  ActionDispT& operator=(Action *pintf)
  {
    TAutoDriver<Action>::Bind(pintf, false);
    return *this;
  }

  ActionDispT& operator=(ActionPtr pintf)
  {
    TAutoDriver<Action>::Bind(pintf, true);
    return *this;
  }

  Outlook_97::OlActionCopyLike /*[VT_USERDEFINED:0]*/ __fastcall get_CopyLike();
  void /*[VT_VOID:0]*/ __fastcall set_CopyLike(Outlook_97::OlActionCopyLike Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Enabled();
  void /*[VT_VOID:0]*/ __fastcall set_Enabled(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name();
  void /*[VT_VOID:0]*/ __fastcall set_Name(BSTR Param1/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Prefix();
  void /*[VT_VOID:0]*/ __fastcall set_Prefix(BSTR Param1/*[in]*/);
  Outlook_97::OlActionReplyStyle /*[VT_USERDEFINED:0]*/ __fastcall get_ReplyStyle();
  void /*[VT_VOID:0]*/ __fastcall set_ReplyStyle(Outlook_97::OlActionReplyStyle Param1/*[in]*/);
  Outlook_97::OlActionResponseStyle /*[VT_USERDEFINED:0]*/ __fastcall get_ResponseStyle();
  void /*[VT_VOID:0]*/ __fastcall set_ResponseStyle(Outlook_97::OlActionResponseStyle Param1/*[in]*/);
  Outlook_97::OlActionShowOn /*[VT_USERDEFINED:0]*/ __fastcall get_ShowOn();
  void /*[VT_VOID:0]*/ __fastcall set_ShowOn(Outlook_97::OlActionShowOn Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Delete();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Execute();

  __property   Outlook_97::OlActionCopyLike CopyLike = {read = get_CopyLike, write = set_CopyLike};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            Prefix = {read = get_Prefix};
  __property   Outlook_97::OlActionReplyStyle ReplyStyle = {read = get_ReplyStyle, write = set_ReplyStyle};
  __property   Outlook_97::OlActionResponseStyle ResponseStyle = {read = get_ResponseStyle, write = set_ResponseStyle};
  __property   Outlook_97::OlActionShowOn ShowOn = {read = get_ShowOn, write = set_ShowOn};
};
typedef ActionDispT<Action> ActionDisp;

// *********************************************************************//
// DispIntf:  _IActions
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313E-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IActionsDispT : public TAutoDriver<_IActions>
{
public:
  _IActionsDispT(){}

  _IActionsDispT(_IActions *pintf)
  {
    TAutoDriver<_IActions>::Bind(pintf, false);
  }

  _IActionsDispT(_IActionsPtr pintf)
  {
    TAutoDriver<_IActions>::Bind(pintf, true);
  }

  _IActionsDispT& operator=(_IActions *pintf)
  {
    TAutoDriver<_IActions>::Bind(pintf, false);
    return *this;
  }

  _IActionsDispT& operator=(_IActionsPtr pintf)
  {
    TAutoDriver<_IActions>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(Outlook_97::Action** Action/*[out,retval]*/);
  Outlook_97::Action* __fastcall Add(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, 
                                             Outlook_97::Action** Action/*[out,retval]*/);
  Outlook_97::Action* __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef _IActionsDispT<_IActions> _IActionsDisp;

// *********************************************************************//
// DispIntf:  Actions
// Flags:     (4096) Dispatchable
// GUID:      {0006303E-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class ActionsDispT : public TAutoDriver<Actions>
{
public:
  ActionsDispT(){}

  ActionsDispT(Actions *pintf)
  {
    TAutoDriver<Actions>::Bind(pintf, false);
  }

  ActionsDispT(ActionsPtr pintf)
  {
    TAutoDriver<Actions>::Bind(pintf, true);
  }

  ActionsDispT& operator=(Actions *pintf)
  {
    TAutoDriver<Actions>::Bind(pintf, false);
    return *this;
  }

  ActionsDispT& operator=(ActionsPtr pintf)
  {
    TAutoDriver<Actions>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  Outlook_97::Action* /*[VT_USERDEFINED:1]*/ __fastcall Add();
  Outlook_97::Action* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef ActionsDispT<Actions> ActionsDisp;

// *********************************************************************//
// DispIntf:  _IApplication
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063101-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IApplicationDispT : public TAutoDriver<_IApplication>
{
public:
  _IApplicationDispT(){}

  _IApplicationDispT(_IApplication *pintf)
  {
    TAutoDriver<_IApplication>::Bind(pintf, false);
  }

  _IApplicationDispT(_IApplicationPtr pintf)
  {
    TAutoDriver<_IApplication>::Bind(pintf, true);
  }

  _IApplicationDispT& operator=(_IApplication *pintf)
  {
    TAutoDriver<_IApplication>::Bind(pintf, false);
    return *this;
  }

  _IApplicationDispT& operator=(_IApplicationPtr pintf)
  {
    TAutoDriver<_IApplication>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Assistant(Office_97::Assistant** Assistant/*[out,retval]*/);
  Office_97::Assistant* __fastcall get_Assistant(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ActiveExplorer(Outlook_97::Explorer** ActiveExplorer/*[out,retval]*/);
  Outlook_97::Explorer* __fastcall ActiveExplorer(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ActiveInspector(Outlook_97::Inspector** ActiveInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall ActiveInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall CreateItem(Outlook_97::OlItems ItemType/*[in]*/, 
                                                   LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall CreateItem(Outlook_97::OlItems ItemType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall CreateItemFromTemplate(BSTR TemplatePath/*[in]*/, 
                                                               VARIANT InFolder/*[in]*/, 
                                                               LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall CreateItemFromTemplate(BSTR TemplatePath/*[in]*/, 
                                                    VARIANT InFolder/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall CreateObject(BSTR ObjectName/*[in]*/, 
                                                     LPDISPATCH* Object/*[out,retval]*/);
  LPDISPATCH      __fastcall CreateObject(BSTR ObjectName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetNamespace(BSTR Type/*[in]*/, 
                                                     Outlook_97::NameSpace** NameSpace/*[out,retval]*/);
  Outlook_97::NameSpace* __fastcall GetNamespace(BSTR Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Quit();

  __property   Office_97::Assistant* Assistant = {read = get_Assistant};
};
typedef _IApplicationDispT<_IApplication> _IApplicationDisp;

// *********************************************************************//
// DispIntf:  _DApplication
// Flags:     (4096) Dispatchable
// GUID:      {00063001-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DApplicationDispT : public TAutoDriver<_DApplication>
{
public:
  _DApplicationDispT(){}

  _DApplicationDispT(_DApplication *pintf)
  {
    TAutoDriver<_DApplication>::Bind(pintf, false);
  }

  _DApplicationDispT(_DApplicationPtr pintf)
  {
    TAutoDriver<_DApplication>::Bind(pintf, true);
  }

  _DApplicationDispT& operator=(_DApplication *pintf)
  {
    TAutoDriver<_DApplication>::Bind(pintf, false);
    return *this;
  }

  _DApplicationDispT& operator=(_DApplicationPtr pintf)
  {
    TAutoDriver<_DApplication>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OutlookApplication));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OutlookApplication);
  }

  Office_97::Assistant* /*[VT_USERDEFINED:1]*/ __fastcall get_Assistant();
  Outlook_97::Explorer* /*[VT_USERDEFINED:1]*/ __fastcall ActiveExplorer();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall ActiveInspector();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall CreateItem(Outlook_97::OlItems ItemType/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall CreateItemFromTemplate(BSTR TemplatePath/*[in]*/, 
                                                                   VARIANT InFolder/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall CreateObject(BSTR ObjectName/*[in]*/);
  Outlook_97::NameSpace* /*[VT_USERDEFINED:1]*/ __fastcall GetNamespace(BSTR Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Quit();

  __property   Office_97::Assistant* Assistant = {read = get_Assistant};
};
typedef _DApplicationDispT<_DApplication> _DApplicationDisp;

// *********************************************************************//
// DispIntf:  _IAppointmentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063133-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IAppointmentItemDispT : public TAutoDriver<_IAppointmentItem>
{
public:
  _IAppointmentItemDispT(){}

  _IAppointmentItemDispT(_IAppointmentItem *pintf)
  {
    TAutoDriver<_IAppointmentItem>::Bind(pintf, false);
  }

  _IAppointmentItemDispT(_IAppointmentItemPtr pintf)
  {
    TAutoDriver<_IAppointmentItem>::Bind(pintf, true);
  }

  _IAppointmentItemDispT& operator=(_IAppointmentItem *pintf)
  {
    TAutoDriver<_IAppointmentItem>::Bind(pintf, false);
    return *this;
  }

  _IAppointmentItemDispT& operator=(_IAppointmentItemPtr pintf)
  {
    TAutoDriver<_IAppointmentItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_AllDayEvent(VARIANT_BOOL* AllDayEvent/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_AllDayEvent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_AllDayEvent(VARIANT_BOOL AllDayEvent/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusyStatus(Outlook_97::OlBusyStatus* BusyStatus/*[out,retval]*/);
  Outlook_97::OlBusyStatus __fastcall get_BusyStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusyStatus(Outlook_97::OlBusyStatus BusyStatus/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Duration(long* Duration/*[out,retval]*/);
  long            __fastcall get_Duration(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Duration(long Duration/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_End(DATE* End/*[out,retval]*/);
  DATE            __fastcall get_End(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_End(DATE End/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_IsRecurring(VARIANT_BOOL* IsRecurring/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsRecurring(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Location(BSTR* Location/*[out,retval]*/);
  BSTR            __fastcall get_Location(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Location(BSTR Location/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MeetingStatus(Outlook_97::OlMeetingStatus* MeetingStatus/*[out,retval]*/);
  Outlook_97::OlMeetingStatus __fastcall get_MeetingStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MeetingStatus(Outlook_97::OlMeetingStatus MeetingStatus/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OptionalAttendees(BSTR* OptionalAttendees/*[out,retval]*/);
  BSTR            __fastcall get_OptionalAttendees(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OptionalAttendees(BSTR OptionalAttendees/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Organizer(BSTR* Organizer/*[out,retval]*/);
  BSTR            __fastcall get_Organizer(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/);
  Outlook_97::Recipients* __fastcall get_Recipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderMinutesBeforeStart(long* ReminderMinutesBeforeStart/*[out,retval]*/);
  long            __fastcall get_ReminderMinutesBeforeStart(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderMinutesBeforeStart(long ReminderMinutesBeforeStart/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderOverrideDefault(VARIANT_BOOL* ReminderOverrideDefault/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderOverrideDefault(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL ReminderOverrideDefault/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderPlaySound(VARIANT_BOOL* ReminderPlaySound/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderPlaySound(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL ReminderPlaySound/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderSet(VARIANT_BOOL* ReminderSet/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderSet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL ReminderSet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderSoundFile(BSTR* ReminderSoundFile/*[out,retval]*/);
  BSTR            __fastcall get_ReminderSoundFile(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderSoundFile(BSTR ReminderSoundFile/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReplyTime(DATE* ReplyTime/*[out,retval]*/);
  DATE            __fastcall get_ReplyTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReplyTime(DATE ReplyTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_RequiredAttendees(BSTR* RequiredAttendees/*[out,retval]*/);
  BSTR            __fastcall get_RequiredAttendees(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_RequiredAttendees(BSTR RequiredAttendees/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Resources(BSTR* Resources/*[out,retval]*/);
  BSTR            __fastcall get_Resources(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Resources(BSTR Resources/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ResponseRequested(VARIANT_BOOL* ResponseRequested/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ResponseRequested(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ResponseRequested(VARIANT_BOOL ResponseRequested/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ResponseStatus(Outlook_97::OlResponseStatus* ResponseStatus/*[out,retval]*/);
  Outlook_97::OlResponseStatus __fastcall get_ResponseStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Start(DATE* Start/*[out,retval]*/);
  DATE            __fastcall get_Start(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Start(DATE Start/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ClearRecurrencePattern();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetRecurrencePattern(Outlook_97::RecurrencePattern** RecurrencPattern/*[out,retval]*/);
  Outlook_97::RecurrencePattern* __fastcall GetRecurrencePattern(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Respond(Outlook_97::OlMeetingResponse Response/*[in]*/, 
                                                VARIANT fNoUI/*[in]*/, 
                                                VARIANT fAdditionalTextDialog/*[in]*/, 
                                                LPDISPATCH* ResponseItem/*[out,retval]*/);
  LPDISPATCH      __fastcall Respond(Outlook_97::OlMeetingResponse Response/*[in]*/, 
                                     VARIANT fNoUI/*[in]*/, VARIANT fAdditionalTextDialog/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    AllDayEvent = {read = get_AllDayEvent, write = set_AllDayEvent};
  __property   Outlook_97::OlBusyStatus BusyStatus = {read = get_BusyStatus, write = set_BusyStatus};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            End = {read = get_End, write = set_End};
  __property   VARIANT_BOOL    IsRecurring = {read = get_IsRecurring};
  __property   BSTR            Location = {read = get_Location};
  __property   Outlook_97::OlMeetingStatus MeetingStatus = {read = get_MeetingStatus, write = set_MeetingStatus};
  __property   BSTR            OptionalAttendees = {read = get_OptionalAttendees};
  __property   BSTR            Organizer = {read = get_Organizer};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   long            ReminderMinutesBeforeStart = {read = get_ReminderMinutesBeforeStart, write = set_ReminderMinutesBeforeStart};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReplyTime = {read = get_ReplyTime, write = set_ReplyTime};
  __property   BSTR            RequiredAttendees = {read = get_RequiredAttendees};
  __property   BSTR            Resources = {read = get_Resources};
  __property   VARIANT_BOOL    ResponseRequested = {read = get_ResponseRequested, write = set_ResponseRequested};
  __property   Outlook_97::OlResponseStatus ResponseStatus = {read = get_ResponseStatus};
  __property   DATE            Start = {read = get_Start, write = set_Start};
};
typedef _IAppointmentItemDispT<_IAppointmentItem> _IAppointmentItemDisp;

// *********************************************************************//
// DispIntf:  _DAppointmentItem
// Flags:     (4096) Dispatchable
// GUID:      {00063033-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DAppointmentItemDispT : public TAutoDriver<_DAppointmentItem>
{
public:
  _DAppointmentItemDispT(){}

  _DAppointmentItemDispT(_DAppointmentItem *pintf)
  {
    TAutoDriver<_DAppointmentItem>::Bind(pintf, false);
  }

  _DAppointmentItemDispT(_DAppointmentItemPtr pintf)
  {
    TAutoDriver<_DAppointmentItem>::Bind(pintf, true);
  }

  _DAppointmentItemDispT& operator=(_DAppointmentItem *pintf)
  {
    TAutoDriver<_DAppointmentItem>::Bind(pintf, false);
    return *this;
  }

  _DAppointmentItemDispT& operator=(_DAppointmentItemPtr pintf)
  {
    TAutoDriver<_DAppointmentItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_AppointmentItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_AppointmentItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_AllDayEvent();
  void /*[VT_VOID:0]*/ __fastcall set_AllDayEvent(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::OlBusyStatus /*[VT_USERDEFINED:0]*/ __fastcall get_BusyStatus();
  void /*[VT_VOID:0]*/ __fastcall set_BusyStatus(Outlook_97::OlBusyStatus Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Duration();
  void /*[VT_VOID:0]*/ __fastcall set_Duration(long Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_End();
  void /*[VT_VOID:0]*/ __fastcall set_End(DATE Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_IsRecurring();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Location();
  void /*[VT_VOID:0]*/ __fastcall set_Location(BSTR Param1/*[in]*/);
  Outlook_97::OlMeetingStatus /*[VT_USERDEFINED:0]*/ __fastcall get_MeetingStatus();
  void /*[VT_VOID:0]*/ __fastcall set_MeetingStatus(Outlook_97::OlMeetingStatus Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OptionalAttendees();
  void /*[VT_VOID:0]*/ __fastcall set_OptionalAttendees(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Organizer();
  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients();
  long /*[VT_I4:0]*/ __fastcall get_ReminderMinutesBeforeStart();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderMinutesBeforeStart(long Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderOverrideDefault();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderPlaySound();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderSet();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReminderSoundFile();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderSoundFile(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_ReplyTime();
  void /*[VT_VOID:0]*/ __fastcall set_ReplyTime(DATE Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_RequiredAttendees();
  void /*[VT_VOID:0]*/ __fastcall set_RequiredAttendees(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Resources();
  void /*[VT_VOID:0]*/ __fastcall set_Resources(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ResponseRequested();
  void /*[VT_VOID:0]*/ __fastcall set_ResponseRequested(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::OlResponseStatus /*[VT_USERDEFINED:0]*/ __fastcall get_ResponseStatus();
  DATE /*[VT_DATE:0]*/ __fastcall get_Start();
  void /*[VT_VOID:0]*/ __fastcall set_Start(DATE Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  void /*[VT_VOID:0]*/ __fastcall ClearRecurrencePattern();
  Outlook_97::RecurrencePattern* /*[VT_USERDEFINED:1]*/ __fastcall GetRecurrencePattern();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Respond(Outlook_97::OlMeetingResponse Response/*[in]*/, 
                                                    VARIANT fNoUI/*[in]*/, 
                                                    VARIANT fAdditionalTextDialog/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    AllDayEvent = {read = get_AllDayEvent, write = set_AllDayEvent};
  __property   Outlook_97::OlBusyStatus BusyStatus = {read = get_BusyStatus, write = set_BusyStatus};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            End = {read = get_End, write = set_End};
  __property   VARIANT_BOOL    IsRecurring = {read = get_IsRecurring};
  __property   BSTR            Location = {read = get_Location};
  __property   Outlook_97::OlMeetingStatus MeetingStatus = {read = get_MeetingStatus, write = set_MeetingStatus};
  __property   BSTR            OptionalAttendees = {read = get_OptionalAttendees};
  __property   BSTR            Organizer = {read = get_Organizer};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   long            ReminderMinutesBeforeStart = {read = get_ReminderMinutesBeforeStart, write = set_ReminderMinutesBeforeStart};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReplyTime = {read = get_ReplyTime, write = set_ReplyTime};
  __property   BSTR            RequiredAttendees = {read = get_RequiredAttendees};
  __property   BSTR            Resources = {read = get_Resources};
  __property   VARIANT_BOOL    ResponseRequested = {read = get_ResponseRequested, write = set_ResponseRequested};
  __property   Outlook_97::OlResponseStatus ResponseStatus = {read = get_ResponseStatus};
  __property   DATE            Start = {read = get_Start, write = set_Start};
};
typedef _DAppointmentItemDispT<_DAppointmentItem> _DAppointmentItemDisp;

// *********************************************************************//
// DispIntf:  _IAttachment
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063107-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IAttachmentDispT : public TAutoDriver<_IAttachment>
{
public:
  _IAttachmentDispT(){}

  _IAttachmentDispT(_IAttachment *pintf)
  {
    TAutoDriver<_IAttachment>::Bind(pintf, false);
  }

  _IAttachmentDispT(_IAttachmentPtr pintf)
  {
    TAutoDriver<_IAttachment>::Bind(pintf, true);
  }

  _IAttachmentDispT& operator=(_IAttachment *pintf)
  {
    TAutoDriver<_IAttachment>::Bind(pintf, false);
    return *this;
  }

  _IAttachmentDispT& operator=(_IAttachmentPtr pintf)
  {
    TAutoDriver<_IAttachment>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DisplayName(BSTR* DisplayName/*[out,retval]*/);
  BSTR            __fastcall get_DisplayName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DisplayName(BSTR DisplayName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FileName(BSTR* FileName/*[out,retval]*/);
  BSTR            __fastcall get_FileName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PathName(BSTR* PathName/*[out,retval]*/);
  BSTR            __fastcall get_PathName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Position(long* Position/*[out,retval]*/);
  long            __fastcall get_Position(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Position(long Position/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Type(Outlook_97::OlAttachmentType* Type/*[out,retval]*/);
  Outlook_97::OlAttachmentType __fastcall get_Type(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAsFile(BSTR Path/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            FileName = {read = get_FileName};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            PathName = {read = get_PathName};
  __property   long            Position = {read = get_Position, write = set_Position};
  __property   Outlook_97::OlAttachmentType Type = {read = get_Type};
};
typedef _IAttachmentDispT<_IAttachment> _IAttachmentDisp;

// *********************************************************************//
// DispIntf:  Attachment
// Flags:     (4096) Dispatchable
// GUID:      {00063007-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class AttachmentDispT : public TAutoDriver<Attachment>
{
public:
  AttachmentDispT(){}

  AttachmentDispT(Attachment *pintf)
  {
    TAutoDriver<Attachment>::Bind(pintf, false);
  }

  AttachmentDispT(AttachmentPtr pintf)
  {
    TAutoDriver<Attachment>::Bind(pintf, true);
  }

  AttachmentDispT& operator=(Attachment *pintf)
  {
    TAutoDriver<Attachment>::Bind(pintf, false);
    return *this;
  }

  AttachmentDispT& operator=(AttachmentPtr pintf)
  {
    TAutoDriver<Attachment>::Bind(pintf, true);
    return *this;
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_DisplayName();
  void /*[VT_VOID:0]*/ __fastcall set_DisplayName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FileName();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_PathName();
  long /*[VT_I4:0]*/ __fastcall get_Position();
  void /*[VT_VOID:0]*/ __fastcall set_Position(long Param1/*[in]*/);
  Outlook_97::OlAttachmentType /*[VT_USERDEFINED:0]*/ __fastcall get_Type();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall SaveAsFile(BSTR Path/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            FileName = {read = get_FileName};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            PathName = {read = get_PathName};
  __property   long            Position = {read = get_Position, write = set_Position};
  __property   Outlook_97::OlAttachmentType Type = {read = get_Type};
};
typedef AttachmentDispT<Attachment> AttachmentDisp;

// *********************************************************************//
// DispIntf:  _IAttachments
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313C-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IAttachmentsDispT : public TAutoDriver<_IAttachments>
{
public:
  _IAttachmentsDispT(){}

  _IAttachmentsDispT(_IAttachments *pintf)
  {
    TAutoDriver<_IAttachments>::Bind(pintf, false);
  }

  _IAttachmentsDispT(_IAttachmentsPtr pintf)
  {
    TAutoDriver<_IAttachments>::Bind(pintf, true);
  }

  _IAttachmentsDispT& operator=(_IAttachments *pintf)
  {
    TAutoDriver<_IAttachments>::Bind(pintf, false);
    return *this;
  }

  _IAttachmentsDispT& operator=(_IAttachmentsPtr pintf)
  {
    TAutoDriver<_IAttachments>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(VARIANT Source/*[in]*/, VARIANT Type/*[in]*/, 
                                            VARIANT Position/*[in]*/, VARIANT DisplayName/*[in]*/, 
                                            Outlook_97::Attachment** Attachment/*[out,retval]*/);
  Outlook_97::Attachment* __fastcall Add(VARIANT Source/*[in]*/, VARIANT Type/*[in]*/, 
                                         VARIANT Position/*[in]*/, VARIANT DisplayName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, 
                                             Outlook_97::Attachment** Attachment/*[out,retval]*/);
  Outlook_97::Attachment* __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
  __property   LPDISPATCH      Parent = {read = get_Parent};
};
typedef _IAttachmentsDispT<_IAttachments> _IAttachmentsDisp;

// *********************************************************************//
// DispIntf:  Attachments
// Flags:     (4096) Dispatchable
// GUID:      {0006303C-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class AttachmentsDispT : public TAutoDriver<Attachments>
{
public:
  AttachmentsDispT(){}

  AttachmentsDispT(Attachments *pintf)
  {
    TAutoDriver<Attachments>::Bind(pintf, false);
  }

  AttachmentsDispT(AttachmentsPtr pintf)
  {
    TAutoDriver<Attachments>::Bind(pintf, true);
  }

  AttachmentsDispT& operator=(Attachments *pintf)
  {
    TAutoDriver<Attachments>::Bind(pintf, false);
    return *this;
  }

  AttachmentsDispT& operator=(AttachmentsPtr pintf)
  {
    TAutoDriver<Attachments>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  Outlook_97::Attachment* /*[VT_USERDEFINED:1]*/ __fastcall Add(VARIANT Source/*[in]*/, 
                                                                VARIANT Type/*[in]*/, 
                                                                VARIANT Position/*[in]*/, 
                                                                VARIANT DisplayName/*[in]*/);
  Outlook_97::Attachment* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
  __property   LPDISPATCH      Parent = {read = get_Parent};
};
typedef AttachmentsDispT<Attachments> AttachmentsDisp;

// *********************************************************************//
// DispIntf:  _IContactItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063121-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IContactItemDispT : public TAutoDriver<_IContactItem>
{
public:
  _IContactItemDispT(){}

  _IContactItemDispT(_IContactItem *pintf)
  {
    TAutoDriver<_IContactItem>::Bind(pintf, false);
  }

  _IContactItemDispT(_IContactItemPtr pintf)
  {
    TAutoDriver<_IContactItem>::Bind(pintf, true);
  }

  _IContactItemDispT& operator=(_IContactItem *pintf)
  {
    TAutoDriver<_IContactItem>::Bind(pintf, false);
    return *this;
  }

  _IContactItemDispT& operator=(_IContactItemPtr pintf)
  {
    TAutoDriver<_IContactItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Account(BSTR* Account/*[out,retval]*/);
  BSTR            __fastcall get_Account(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Account(BSTR Account/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Anniversary(DATE* Anniversary/*[out,retval]*/);
  DATE            __fastcall get_Anniversary(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Anniversary(DATE Anniversary/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_AssistantName(BSTR* AssistantName/*[out,retval]*/);
  BSTR            __fastcall get_AssistantName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_AssistantName(BSTR AssistantName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_AssistantTelephoneNumber(BSTR* AssistantTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_AssistantTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_AssistantTelephoneNumber(BSTR AssistantTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Birthday(DATE* Birthday/*[out,retval]*/);
  DATE            __fastcall get_Birthday(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Birthday(DATE Birthday/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Business2TelephoneNumber(BSTR* Business2TelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_Business2TelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Business2TelephoneNumber(BSTR Business2TelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddress(BSTR* BusinessAddress/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddress(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddress(BSTR BusinessAddress/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddressCity(BSTR* BusinessAddressCity/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddressCity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddressCity(BSTR BusinessAddressCity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddressCountry(BSTR* BusinessAddressCountry/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddressCountry(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddressCountry(BSTR BusinessAddressCountry/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddressPostalCode(BSTR* BusinessAddressPostalCode/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddressPostalCode(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddressPostalCode(BSTR BusinessAddressPostalCode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddressPostOfficeBox(BSTR* BusinessAddressPostOfficeBox/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddressPostOfficeBox(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddressPostOfficeBox(BSTR BusinessAddressPostOfficeBox/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddressState(BSTR* BusinessAddressState/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddressState(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddressState(BSTR BusinessAddressState/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessAddressStreet(BSTR* BusinessAddressStreet/*[out,retval]*/);
  BSTR            __fastcall get_BusinessAddressStreet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessAddressStreet(BSTR BusinessAddressStreet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessFaxNumber(BSTR* BusinessFaxNumber/*[out,retval]*/);
  BSTR            __fastcall get_BusinessFaxNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessFaxNumber(BSTR BusinessFaxNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessHomePage(BSTR* BusinessHomePage/*[out,retval]*/);
  BSTR            __fastcall get_BusinessHomePage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessHomePage(BSTR BusinessHomePage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BusinessTelephoneNumber(BSTR* BusinessTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_BusinessTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BusinessTelephoneNumber(BSTR BusinessTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CallbackTelephoneNumber(BSTR* CallbackTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_CallbackTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CallbackTelephoneNumber(BSTR CallbackTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CarTelephoneNumber(BSTR* CarTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_CarTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CarTelephoneNumber(BSTR CarTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Children(BSTR* Children/*[out,retval]*/);
  BSTR            __fastcall get_Children(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Children(BSTR Children/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CompanyAndFullName(BSTR* CompanyAndFullName/*[out,retval]*/);
  BSTR            __fastcall get_CompanyAndFullName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CompanyMainTelephoneNumber(BSTR* CompanyMainTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_CompanyMainTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CompanyMainTelephoneNumber(BSTR CompanyMainTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CompanyName(BSTR* CompanyName/*[out,retval]*/);
  BSTR            __fastcall get_CompanyName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CompanyName(BSTR CompanyName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ComputerNetworkName(BSTR* ComputerNetworkName/*[out,retval]*/);
  BSTR            __fastcall get_ComputerNetworkName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ComputerNetworkName(BSTR ComputerNetworkName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CustomerID(BSTR* CustomerID/*[out,retval]*/);
  BSTR            __fastcall get_CustomerID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CustomerID(BSTR CustomerID/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Department(BSTR* Department/*[out,retval]*/);
  BSTR            __fastcall get_Department(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Department(BSTR Department/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email1Address(BSTR* Email1Address/*[out,retval]*/);
  BSTR            __fastcall get_Email1Address(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Email1Address(BSTR Email1Address/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email1AddressType(BSTR* Email1AddressType/*[out,retval]*/);
  BSTR            __fastcall get_Email1AddressType(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Email1AddressType(BSTR Email1AddressType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email1DisplayName(BSTR* Email1DisplayName/*[out,retval]*/);
  BSTR            __fastcall get_Email1DisplayName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email1EntryID(BSTR* Email1EntryID/*[out,retval]*/);
  BSTR            __fastcall get_Email1EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email2Address(BSTR* Email2Address/*[out,retval]*/);
  BSTR            __fastcall get_Email2Address(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Email2Address(BSTR Email2Address/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email2AddressType(BSTR* Email2AddressType/*[out,retval]*/);
  BSTR            __fastcall get_Email2AddressType(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Email2AddressType(BSTR Email2AddressType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email2DisplayName(BSTR* Email2DisplayName/*[out,retval]*/);
  BSTR            __fastcall get_Email2DisplayName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email2EntryID(BSTR* Email2EntryID/*[out,retval]*/);
  BSTR            __fastcall get_Email2EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email3Address(BSTR* Email3Address/*[out,retval]*/);
  BSTR            __fastcall get_Email3Address(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Email3Address(BSTR Email3Address/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email3AddressType(BSTR* Email3AddressType/*[out,retval]*/);
  BSTR            __fastcall get_Email3AddressType(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Email3AddressType(BSTR Email3AddressType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email3DisplayName(BSTR* Email3DisplayName/*[out,retval]*/);
  BSTR            __fastcall get_Email3DisplayName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Email3EntryID(BSTR* Email3EntryID/*[out,retval]*/);
  BSTR            __fastcall get_Email3EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FileAs(BSTR* FileAs/*[out,retval]*/);
  BSTR            __fastcall get_FileAs(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FileAs(BSTR FileAs/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FirstName(BSTR* FirstName/*[out,retval]*/);
  BSTR            __fastcall get_FirstName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FirstName(BSTR FirstName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FTPSite(BSTR* FTPSite/*[out,retval]*/);
  BSTR            __fastcall get_FTPSite(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FTPSite(BSTR FTPSite/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FullName(BSTR* FullName/*[out,retval]*/);
  BSTR            __fastcall get_FullName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FullName(BSTR FullName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FullNameAndCompany(BSTR* FullNameAndCompany/*[out,retval]*/);
  BSTR            __fastcall get_FullNameAndCompany(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Gender(Outlook_97::OlGender* Gender/*[out,retval]*/);
  Outlook_97::OlGender __fastcall get_Gender(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Gender(Outlook_97::OlGender Gender/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GovernmentIDNumber(BSTR* GovernmentIDNumber/*[out,retval]*/);
  BSTR            __fastcall get_GovernmentIDNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_GovernmentIDNumber(BSTR GovernmentIDNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Hobby(BSTR* Hobby/*[out,retval]*/);
  BSTR            __fastcall get_Hobby(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Hobby(BSTR Hobby/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Home2TelephoneNumber(BSTR* Home2TelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_Home2TelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Home2TelephoneNumber(BSTR Home2TelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddress(BSTR* HomeAddress/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddress(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddress(BSTR HomeAddress/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddressCity(BSTR* HomeAddressCity/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddressCity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddressCity(BSTR HomeAddressCity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddressCountry(BSTR* HomeAddressCountry/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddressCountry(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddressCountry(BSTR HomeAddressCountry/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddressPostalCode(BSTR* HomeAddressPostalCode/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddressPostalCode(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddressPostalCode(BSTR HomeAddressPostalCode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddressPostOfficeBox(BSTR* HomeAddressPostOfficeBox/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddressPostOfficeBox(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddressPostOfficeBox(BSTR HomeAddressPostOfficeBox/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddressState(BSTR* HomeAddressState/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddressState(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddressState(BSTR HomeAddressState/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeAddressStreet(BSTR* HomeAddressStreet/*[out,retval]*/);
  BSTR            __fastcall get_HomeAddressStreet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeAddressStreet(BSTR HomeAddressStreet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeFaxNumber(BSTR* HomeFaxNumber/*[out,retval]*/);
  BSTR            __fastcall get_HomeFaxNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeFaxNumber(BSTR HomeFaxNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HomeTelephoneNumber(BSTR* HomeTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_HomeTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_HomeTelephoneNumber(BSTR HomeTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Initials(BSTR* Initials/*[out,retval]*/);
  BSTR            __fastcall get_Initials(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Initials(BSTR Initials/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ISDNNumber(BSTR* ISDNNumber/*[out,retval]*/);
  BSTR            __fastcall get_ISDNNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ISDNNumber(BSTR ISDNNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_JobTitle(BSTR* JobTitle/*[out,retval]*/);
  BSTR            __fastcall get_JobTitle(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_JobTitle(BSTR JobTitle/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Journal(VARIANT_BOOL* Journal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Journal(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Journal(VARIANT_BOOL Journal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Language(BSTR* Language/*[out,retval]*/);
  BSTR            __fastcall get_Language(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Language(BSTR Language/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastName(BSTR* LastName/*[out,retval]*/);
  BSTR            __fastcall get_LastName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_LastName(BSTR LastName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastNameAndFirstName(BSTR* LastNameAndFirstName/*[out,retval]*/);
  BSTR            __fastcall get_LastNameAndFirstName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddress(BSTR* MailingAddress/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddress(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddress(BSTR MailingAddress/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddressCity(BSTR* MailingAddressCity/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddressCity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddressCity(BSTR MailingAddressCity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddressCountry(BSTR* MailingAddressCountry/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddressCountry(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddressCountry(BSTR MailingAddressCountry/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddressPostalCode(BSTR* MailingAddressPostalCode/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddressPostalCode(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddressPostalCode(BSTR MailingAddressPostalCode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddressPostOfficeBox(BSTR* MailingAddressPostOfficeBox/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddressPostOfficeBox(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddressPostOfficeBox(BSTR MailingAddressPostOfficeBox/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddressState(BSTR* MailingAddressState/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddressState(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddressState(BSTR MailingAddressState/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MailingAddressStreet(BSTR* MailingAddressStreet/*[out,retval]*/);
  BSTR            __fastcall get_MailingAddressStreet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MailingAddressStreet(BSTR MailingAddressStreet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ManagerName(BSTR* ManagerName/*[out,retval]*/);
  BSTR            __fastcall get_ManagerName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ManagerName(BSTR ManagerName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MiddleName(BSTR* MiddleName/*[out,retval]*/);
  BSTR            __fastcall get_MiddleName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MiddleName(BSTR MiddleName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MobileTelephoneNumber(BSTR* MobileTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_MobileTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MobileTelephoneNumber(BSTR MobileTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NickName(BSTR* NickName/*[out,retval]*/);
  BSTR            __fastcall get_NickName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NickName(BSTR NickName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OfficeLocation(BSTR* OfficeLocation/*[out,retval]*/);
  BSTR            __fastcall get_OfficeLocation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OfficeLocation(BSTR OfficeLocation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OrganizationalIDNumber(BSTR* OrganizationalIDNumber/*[out,retval]*/);
  BSTR            __fastcall get_OrganizationalIDNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OrganizationalIDNumber(BSTR OrganizationalIDNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddress(BSTR* OtherAddress/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddress(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddress(BSTR OtherAddress/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddressCity(BSTR* OtherAddressCity/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddressCity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddressCity(BSTR OtherAddressCity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddressCountry(BSTR* OtherAddressCountry/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddressCountry(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddressCountry(BSTR OtherAddressCountry/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddressPostalCode(BSTR* OtherAddressPostalCode/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddressPostalCode(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddressPostalCode(BSTR OtherAddressPostalCode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddressPostOfficeBox(BSTR* OtherAddressPostOfficeBox/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddressPostOfficeBox(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddressPostOfficeBox(BSTR OtherAddressPostOfficeBox/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddressState(BSTR* OtherAddressState/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddressState(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddressState(BSTR OtherAddressState/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherAddressStreet(BSTR* OtherAddressStreet/*[out,retval]*/);
  BSTR            __fastcall get_OtherAddressStreet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherAddressStreet(BSTR OtherAddressStreet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherFaxNumber(BSTR* OtherFaxNumber/*[out,retval]*/);
  BSTR            __fastcall get_OtherFaxNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherFaxNumber(BSTR OtherFaxNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OtherTelephoneNumber(BSTR* OtherTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_OtherTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OtherTelephoneNumber(BSTR OtherTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PagerNumber(BSTR* PagerNumber/*[out,retval]*/);
  BSTR            __fastcall get_PagerNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_PagerNumber(BSTR PagerNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PersonalHomePage(BSTR* PersonalHomePage/*[out,retval]*/);
  BSTR            __fastcall get_PersonalHomePage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_PersonalHomePage(BSTR PersonalHomePage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PrimaryTelephoneNumber(BSTR* PrimaryTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_PrimaryTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_PrimaryTelephoneNumber(BSTR PrimaryTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Profession(BSTR* Profession/*[out,retval]*/);
  BSTR            __fastcall get_Profession(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Profession(BSTR Profession/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_RadioTelephoneNumber(BSTR* RadioTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_RadioTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_RadioTelephoneNumber(BSTR RadioTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReferredBy(BSTR* ReferredBy/*[out,retval]*/);
  BSTR            __fastcall get_ReferredBy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReferredBy(BSTR ReferredBy/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SelectedMailingAddress(Outlook_97::OlMailingAddress* SelectedMailingAddress/*[out,retval]*/);
  Outlook_97::OlMailingAddress __fastcall get_SelectedMailingAddress(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_SelectedMailingAddress(Outlook_97::OlMailingAddress SelectedMailingAddress/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Spouse(BSTR* Spouse/*[out,retval]*/);
  BSTR            __fastcall get_Spouse(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Spouse(BSTR Spouse/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Suffix(BSTR* Suffix/*[out,retval]*/);
  BSTR            __fastcall get_Suffix(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Suffix(BSTR Suffix/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TelexNumber(BSTR* TelexNumber/*[out,retval]*/);
  BSTR            __fastcall get_TelexNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_TelexNumber(BSTR TelexNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Title(BSTR* Title/*[out,retval]*/);
  BSTR            __fastcall get_Title(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Title(BSTR Title/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TTYTDDTelephoneNumber(BSTR* TTYTDDTelephoneNumber/*[out,retval]*/);
  BSTR            __fastcall get_TTYTDDTelephoneNumber(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_TTYTDDTelephoneNumber(BSTR TTYTDDTelephoneNumber/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_User1(BSTR* User1/*[out,retval]*/);
  BSTR            __fastcall get_User1(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_User1(BSTR User1/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_User2(BSTR* User2/*[out,retval]*/);
  BSTR            __fastcall get_User2(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_User2(BSTR User2/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_User3(BSTR* User3/*[out,retval]*/);
  BSTR            __fastcall get_User3(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_User3(BSTR User3/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_User4(BSTR* User4/*[out,retval]*/);
  BSTR            __fastcall get_User4(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_User4(BSTR User4/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserCertificate(BSTR* UserCertificate/*[out,retval]*/);
  BSTR            __fastcall get_UserCertificate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UserCertificate(BSTR UserCertificate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_WebPage(BSTR* WebPage/*[out,retval]*/);
  BSTR            __fastcall get_WebPage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_WebPage(BSTR WebPage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_YomiCompanyName(BSTR* YomiCompanyName/*[out,retval]*/);
  BSTR            __fastcall get_YomiCompanyName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_YomiCompanyName(BSTR YomiCompanyName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_YomiFirstName(BSTR* YomiFirstName/*[out,retval]*/);
  BSTR            __fastcall get_YomiFirstName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_YomiFirstName(BSTR YomiFirstName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_YomiLastName(BSTR* YomiLastName/*[out,retval]*/);
  BSTR            __fastcall get_YomiLastName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_YomiLastName(BSTR YomiLastName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            Account = {read = get_Account};
  __property   DATE            Anniversary = {read = get_Anniversary, write = set_Anniversary};
  __property   BSTR            AssistantName = {read = get_AssistantName};
  __property   BSTR            AssistantTelephoneNumber = {read = get_AssistantTelephoneNumber};
  __property   DATE            Birthday = {read = get_Birthday, write = set_Birthday};
  __property   BSTR            Business2TelephoneNumber = {read = get_Business2TelephoneNumber};
  __property   BSTR            BusinessAddress = {read = get_BusinessAddress};
  __property   BSTR            BusinessAddressCity = {read = get_BusinessAddressCity};
  __property   BSTR            BusinessAddressCountry = {read = get_BusinessAddressCountry};
  __property   BSTR            BusinessAddressPostalCode = {read = get_BusinessAddressPostalCode};
  __property   BSTR            BusinessAddressPostOfficeBox = {read = get_BusinessAddressPostOfficeBox};
  __property   BSTR            BusinessAddressState = {read = get_BusinessAddressState};
  __property   BSTR            BusinessAddressStreet = {read = get_BusinessAddressStreet};
  __property   BSTR            BusinessFaxNumber = {read = get_BusinessFaxNumber};
  __property   BSTR            BusinessHomePage = {read = get_BusinessHomePage};
  __property   BSTR            BusinessTelephoneNumber = {read = get_BusinessTelephoneNumber};
  __property   BSTR            CallbackTelephoneNumber = {read = get_CallbackTelephoneNumber};
  __property   BSTR            CarTelephoneNumber = {read = get_CarTelephoneNumber};
  __property   BSTR            Children = {read = get_Children};
  __property   BSTR            CompanyAndFullName = {read = get_CompanyAndFullName};
  __property   BSTR            CompanyMainTelephoneNumber = {read = get_CompanyMainTelephoneNumber};
  __property   BSTR            CompanyName = {read = get_CompanyName};
  __property   BSTR            ComputerNetworkName = {read = get_ComputerNetworkName};
  __property   BSTR            CustomerID = {read = get_CustomerID};
  __property   BSTR            Department = {read = get_Department};
  __property   BSTR            Email1Address = {read = get_Email1Address};
  __property   BSTR            Email1AddressType = {read = get_Email1AddressType};
  __property   BSTR            Email1DisplayName = {read = get_Email1DisplayName};
  __property   BSTR            Email1EntryID = {read = get_Email1EntryID};
  __property   BSTR            Email2Address = {read = get_Email2Address};
  __property   BSTR            Email2AddressType = {read = get_Email2AddressType};
  __property   BSTR            Email2DisplayName = {read = get_Email2DisplayName};
  __property   BSTR            Email2EntryID = {read = get_Email2EntryID};
  __property   BSTR            Email3Address = {read = get_Email3Address};
  __property   BSTR            Email3AddressType = {read = get_Email3AddressType};
  __property   BSTR            Email3DisplayName = {read = get_Email3DisplayName};
  __property   BSTR            Email3EntryID = {read = get_Email3EntryID};
  __property   BSTR            FileAs = {read = get_FileAs};
  __property   BSTR            FirstName = {read = get_FirstName};
  __property   BSTR            FTPSite = {read = get_FTPSite};
  __property   BSTR            FullName = {read = get_FullName};
  __property   BSTR            FullNameAndCompany = {read = get_FullNameAndCompany};
  __property   Outlook_97::OlGender Gender = {read = get_Gender, write = set_Gender};
  __property   BSTR            GovernmentIDNumber = {read = get_GovernmentIDNumber};
  __property   BSTR            Hobby = {read = get_Hobby};
  __property   BSTR            Home2TelephoneNumber = {read = get_Home2TelephoneNumber};
  __property   BSTR            HomeAddress = {read = get_HomeAddress};
  __property   BSTR            HomeAddressCity = {read = get_HomeAddressCity};
  __property   BSTR            HomeAddressCountry = {read = get_HomeAddressCountry};
  __property   BSTR            HomeAddressPostalCode = {read = get_HomeAddressPostalCode};
  __property   BSTR            HomeAddressPostOfficeBox = {read = get_HomeAddressPostOfficeBox};
  __property   BSTR            HomeAddressState = {read = get_HomeAddressState};
  __property   BSTR            HomeAddressStreet = {read = get_HomeAddressStreet};
  __property   BSTR            HomeFaxNumber = {read = get_HomeFaxNumber};
  __property   BSTR            HomeTelephoneNumber = {read = get_HomeTelephoneNumber};
  __property   BSTR            Initials = {read = get_Initials};
  __property   BSTR            ISDNNumber = {read = get_ISDNNumber};
  __property   BSTR            JobTitle = {read = get_JobTitle};
  __property   VARIANT_BOOL    Journal = {read = get_Journal, write = set_Journal};
  __property   BSTR            Language = {read = get_Language};
  __property   BSTR            LastName = {read = get_LastName};
  __property   BSTR            LastNameAndFirstName = {read = get_LastNameAndFirstName};
  __property   BSTR            MailingAddress = {read = get_MailingAddress};
  __property   BSTR            MailingAddressCity = {read = get_MailingAddressCity};
  __property   BSTR            MailingAddressCountry = {read = get_MailingAddressCountry};
  __property   BSTR            MailingAddressPostalCode = {read = get_MailingAddressPostalCode};
  __property   BSTR            MailingAddressPostOfficeBox = {read = get_MailingAddressPostOfficeBox};
  __property   BSTR            MailingAddressState = {read = get_MailingAddressState};
  __property   BSTR            MailingAddressStreet = {read = get_MailingAddressStreet};
  __property   BSTR            ManagerName = {read = get_ManagerName};
  __property   BSTR            MiddleName = {read = get_MiddleName};
  __property   BSTR            MobileTelephoneNumber = {read = get_MobileTelephoneNumber};
  __property   BSTR            NickName = {read = get_NickName};
  __property   BSTR            OfficeLocation = {read = get_OfficeLocation};
  __property   BSTR            OrganizationalIDNumber = {read = get_OrganizationalIDNumber};
  __property   BSTR            OtherAddress = {read = get_OtherAddress};
  __property   BSTR            OtherAddressCity = {read = get_OtherAddressCity};
  __property   BSTR            OtherAddressCountry = {read = get_OtherAddressCountry};
  __property   BSTR            OtherAddressPostalCode = {read = get_OtherAddressPostalCode};
  __property   BSTR            OtherAddressPostOfficeBox = {read = get_OtherAddressPostOfficeBox};
  __property   BSTR            OtherAddressState = {read = get_OtherAddressState};
  __property   BSTR            OtherAddressStreet = {read = get_OtherAddressStreet};
  __property   BSTR            OtherFaxNumber = {read = get_OtherFaxNumber};
  __property   BSTR            OtherTelephoneNumber = {read = get_OtherTelephoneNumber};
  __property   BSTR            PagerNumber = {read = get_PagerNumber};
  __property   BSTR            PersonalHomePage = {read = get_PersonalHomePage};
  __property   BSTR            PrimaryTelephoneNumber = {read = get_PrimaryTelephoneNumber};
  __property   BSTR            Profession = {read = get_Profession};
  __property   BSTR            RadioTelephoneNumber = {read = get_RadioTelephoneNumber};
  __property   BSTR            ReferredBy = {read = get_ReferredBy};
  __property   Outlook_97::OlMailingAddress SelectedMailingAddress = {read = get_SelectedMailingAddress, write = set_SelectedMailingAddress};
  __property   BSTR            Spouse = {read = get_Spouse};
  __property   BSTR            Suffix = {read = get_Suffix};
  __property   BSTR            TelexNumber = {read = get_TelexNumber};
  __property   BSTR            Title = {read = get_Title};
  __property   BSTR            TTYTDDTelephoneNumber = {read = get_TTYTDDTelephoneNumber};
  __property   BSTR            User1 = {read = get_User1};
  __property   BSTR            User2 = {read = get_User2};
  __property   BSTR            User3 = {read = get_User3};
  __property   BSTR            User4 = {read = get_User4};
  __property   BSTR            UserCertificate = {read = get_UserCertificate};
  __property   BSTR            WebPage = {read = get_WebPage};
  __property   BSTR            YomiCompanyName = {read = get_YomiCompanyName};
  __property   BSTR            YomiFirstName = {read = get_YomiFirstName};
  __property   BSTR            YomiLastName = {read = get_YomiLastName};
};
typedef _IContactItemDispT<_IContactItem> _IContactItemDisp;

// *********************************************************************//
// DispIntf:  _DContactItem
// Flags:     (4096) Dispatchable
// GUID:      {00063021-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DContactItemDispT : public TAutoDriver<_DContactItem>
{
public:
  _DContactItemDispT(){}

  _DContactItemDispT(_DContactItem *pintf)
  {
    TAutoDriver<_DContactItem>::Bind(pintf, false);
  }

  _DContactItemDispT(_DContactItemPtr pintf)
  {
    TAutoDriver<_DContactItem>::Bind(pintf, true);
  }

  _DContactItemDispT& operator=(_DContactItem *pintf)
  {
    TAutoDriver<_DContactItem>::Bind(pintf, false);
    return *this;
  }

  _DContactItemDispT& operator=(_DContactItemPtr pintf)
  {
    TAutoDriver<_DContactItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ContactItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ContactItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Account();
  void /*[VT_VOID:0]*/ __fastcall set_Account(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_Anniversary();
  void /*[VT_VOID:0]*/ __fastcall set_Anniversary(DATE Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_AssistantName();
  void /*[VT_VOID:0]*/ __fastcall set_AssistantName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_AssistantTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_AssistantTelephoneNumber(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_Birthday();
  void /*[VT_VOID:0]*/ __fastcall set_Birthday(DATE Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Business2TelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_Business2TelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddress();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddress(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressCity();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressCity(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressCountry();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressCountry(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressPostalCode();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressPostalCode(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressPostOfficeBox();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressPostOfficeBox(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressState();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressState(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessAddressStreet();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessAddressStreet(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessFaxNumber();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessFaxNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessHomePage();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessHomePage(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BusinessTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_BusinessTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CallbackTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_CallbackTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CarTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_CarTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Children();
  void /*[VT_VOID:0]*/ __fastcall set_Children(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CompanyAndFullName();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CompanyMainTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_CompanyMainTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CompanyName();
  void /*[VT_VOID:0]*/ __fastcall set_CompanyName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ComputerNetworkName();
  void /*[VT_VOID:0]*/ __fastcall set_ComputerNetworkName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CustomerID();
  void /*[VT_VOID:0]*/ __fastcall set_CustomerID(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Department();
  void /*[VT_VOID:0]*/ __fastcall set_Department(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1Address();
  void /*[VT_VOID:0]*/ __fastcall set_Email1Address(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1AddressType();
  void /*[VT_VOID:0]*/ __fastcall set_Email1AddressType(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1DisplayName();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email1EntryID();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2Address();
  void /*[VT_VOID:0]*/ __fastcall set_Email2Address(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2AddressType();
  void /*[VT_VOID:0]*/ __fastcall set_Email2AddressType(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2DisplayName();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email2EntryID();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3Address();
  void /*[VT_VOID:0]*/ __fastcall set_Email3Address(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3AddressType();
  void /*[VT_VOID:0]*/ __fastcall set_Email3AddressType(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3DisplayName();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Email3EntryID();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FileAs();
  void /*[VT_VOID:0]*/ __fastcall set_FileAs(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FirstName();
  void /*[VT_VOID:0]*/ __fastcall set_FirstName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FTPSite();
  void /*[VT_VOID:0]*/ __fastcall set_FTPSite(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FullName();
  void /*[VT_VOID:0]*/ __fastcall set_FullName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FullNameAndCompany();
  Outlook_97::OlGender /*[VT_USERDEFINED:0]*/ __fastcall get_Gender();
  void /*[VT_VOID:0]*/ __fastcall set_Gender(Outlook_97::OlGender Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_GovernmentIDNumber();
  void /*[VT_VOID:0]*/ __fastcall set_GovernmentIDNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Hobby();
  void /*[VT_VOID:0]*/ __fastcall set_Hobby(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Home2TelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_Home2TelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddress();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddress(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressCity();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressCity(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressCountry();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressCountry(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressPostalCode();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressPostalCode(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressPostOfficeBox();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressPostOfficeBox(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressState();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressState(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeAddressStreet();
  void /*[VT_VOID:0]*/ __fastcall set_HomeAddressStreet(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeFaxNumber();
  void /*[VT_VOID:0]*/ __fastcall set_HomeFaxNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_HomeTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_HomeTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Initials();
  void /*[VT_VOID:0]*/ __fastcall set_Initials(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ISDNNumber();
  void /*[VT_VOID:0]*/ __fastcall set_ISDNNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_JobTitle();
  void /*[VT_VOID:0]*/ __fastcall set_JobTitle(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Journal();
  void /*[VT_VOID:0]*/ __fastcall set_Journal(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Language();
  void /*[VT_VOID:0]*/ __fastcall set_Language(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_LastName();
  void /*[VT_VOID:0]*/ __fastcall set_LastName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_LastNameAndFirstName();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddress();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddress(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressCity();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressCity(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressCountry();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressCountry(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressPostalCode();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressPostalCode(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressPostOfficeBox();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressPostOfficeBox(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressState();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressState(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MailingAddressStreet();
  void /*[VT_VOID:0]*/ __fastcall set_MailingAddressStreet(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ManagerName();
  void /*[VT_VOID:0]*/ __fastcall set_ManagerName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MiddleName();
  void /*[VT_VOID:0]*/ __fastcall set_MiddleName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MobileTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_MobileTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_NickName();
  void /*[VT_VOID:0]*/ __fastcall set_NickName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OfficeLocation();
  void /*[VT_VOID:0]*/ __fastcall set_OfficeLocation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OrganizationalIDNumber();
  void /*[VT_VOID:0]*/ __fastcall set_OrganizationalIDNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddress();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddress(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressCity();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressCity(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressCountry();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressCountry(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressPostalCode();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressPostalCode(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressPostOfficeBox();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressPostOfficeBox(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressState();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressState(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherAddressStreet();
  void /*[VT_VOID:0]*/ __fastcall set_OtherAddressStreet(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherFaxNumber();
  void /*[VT_VOID:0]*/ __fastcall set_OtherFaxNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OtherTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_OtherTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_PagerNumber();
  void /*[VT_VOID:0]*/ __fastcall set_PagerNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_PersonalHomePage();
  void /*[VT_VOID:0]*/ __fastcall set_PersonalHomePage(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_PrimaryTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_PrimaryTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Profession();
  void /*[VT_VOID:0]*/ __fastcall set_Profession(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_RadioTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_RadioTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReferredBy();
  void /*[VT_VOID:0]*/ __fastcall set_ReferredBy(BSTR Param1/*[in]*/);
  Outlook_97::OlMailingAddress /*[VT_USERDEFINED:0]*/ __fastcall get_SelectedMailingAddress();
  void /*[VT_VOID:0]*/ __fastcall set_SelectedMailingAddress(Outlook_97::OlMailingAddress Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Spouse();
  void /*[VT_VOID:0]*/ __fastcall set_Spouse(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Suffix();
  void /*[VT_VOID:0]*/ __fastcall set_Suffix(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_TelexNumber();
  void /*[VT_VOID:0]*/ __fastcall set_TelexNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Title();
  void /*[VT_VOID:0]*/ __fastcall set_Title(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_TTYTDDTelephoneNumber();
  void /*[VT_VOID:0]*/ __fastcall set_TTYTDDTelephoneNumber(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_User1();
  void /*[VT_VOID:0]*/ __fastcall set_User1(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_User2();
  void /*[VT_VOID:0]*/ __fastcall set_User2(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_User3();
  void /*[VT_VOID:0]*/ __fastcall set_User3(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_User4();
  void /*[VT_VOID:0]*/ __fastcall set_User4(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_UserCertificate();
  void /*[VT_VOID:0]*/ __fastcall set_UserCertificate(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_WebPage();
  void /*[VT_VOID:0]*/ __fastcall set_WebPage(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_YomiCompanyName();
  void /*[VT_VOID:0]*/ __fastcall set_YomiCompanyName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_YomiFirstName();
  void /*[VT_VOID:0]*/ __fastcall set_YomiFirstName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_YomiLastName();
  void /*[VT_VOID:0]*/ __fastcall set_YomiLastName(BSTR Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            Account = {read = get_Account};
  __property   DATE            Anniversary = {read = get_Anniversary, write = set_Anniversary};
  __property   BSTR            AssistantName = {read = get_AssistantName};
  __property   BSTR            AssistantTelephoneNumber = {read = get_AssistantTelephoneNumber};
  __property   DATE            Birthday = {read = get_Birthday, write = set_Birthday};
  __property   BSTR            Business2TelephoneNumber = {read = get_Business2TelephoneNumber};
  __property   BSTR            BusinessAddress = {read = get_BusinessAddress};
  __property   BSTR            BusinessAddressCity = {read = get_BusinessAddressCity};
  __property   BSTR            BusinessAddressCountry = {read = get_BusinessAddressCountry};
  __property   BSTR            BusinessAddressPostalCode = {read = get_BusinessAddressPostalCode};
  __property   BSTR            BusinessAddressPostOfficeBox = {read = get_BusinessAddressPostOfficeBox};
  __property   BSTR            BusinessAddressState = {read = get_BusinessAddressState};
  __property   BSTR            BusinessAddressStreet = {read = get_BusinessAddressStreet};
  __property   BSTR            BusinessFaxNumber = {read = get_BusinessFaxNumber};
  __property   BSTR            BusinessHomePage = {read = get_BusinessHomePage};
  __property   BSTR            BusinessTelephoneNumber = {read = get_BusinessTelephoneNumber};
  __property   BSTR            CallbackTelephoneNumber = {read = get_CallbackTelephoneNumber};
  __property   BSTR            CarTelephoneNumber = {read = get_CarTelephoneNumber};
  __property   BSTR            Children = {read = get_Children};
  __property   BSTR            CompanyAndFullName = {read = get_CompanyAndFullName};
  __property   BSTR            CompanyMainTelephoneNumber = {read = get_CompanyMainTelephoneNumber};
  __property   BSTR            CompanyName = {read = get_CompanyName};
  __property   BSTR            ComputerNetworkName = {read = get_ComputerNetworkName};
  __property   BSTR            CustomerID = {read = get_CustomerID};
  __property   BSTR            Department = {read = get_Department};
  __property   BSTR            Email1Address = {read = get_Email1Address};
  __property   BSTR            Email1AddressType = {read = get_Email1AddressType};
  __property   BSTR            Email1DisplayName = {read = get_Email1DisplayName};
  __property   BSTR            Email1EntryID = {read = get_Email1EntryID};
  __property   BSTR            Email2Address = {read = get_Email2Address};
  __property   BSTR            Email2AddressType = {read = get_Email2AddressType};
  __property   BSTR            Email2DisplayName = {read = get_Email2DisplayName};
  __property   BSTR            Email2EntryID = {read = get_Email2EntryID};
  __property   BSTR            Email3Address = {read = get_Email3Address};
  __property   BSTR            Email3AddressType = {read = get_Email3AddressType};
  __property   BSTR            Email3DisplayName = {read = get_Email3DisplayName};
  __property   BSTR            Email3EntryID = {read = get_Email3EntryID};
  __property   BSTR            FileAs = {read = get_FileAs};
  __property   BSTR            FirstName = {read = get_FirstName};
  __property   BSTR            FTPSite = {read = get_FTPSite};
  __property   BSTR            FullName = {read = get_FullName};
  __property   BSTR            FullNameAndCompany = {read = get_FullNameAndCompany};
  __property   Outlook_97::OlGender Gender = {read = get_Gender, write = set_Gender};
  __property   BSTR            GovernmentIDNumber = {read = get_GovernmentIDNumber};
  __property   BSTR            Hobby = {read = get_Hobby};
  __property   BSTR            Home2TelephoneNumber = {read = get_Home2TelephoneNumber};
  __property   BSTR            HomeAddress = {read = get_HomeAddress};
  __property   BSTR            HomeAddressCity = {read = get_HomeAddressCity};
  __property   BSTR            HomeAddressCountry = {read = get_HomeAddressCountry};
  __property   BSTR            HomeAddressPostalCode = {read = get_HomeAddressPostalCode};
  __property   BSTR            HomeAddressPostOfficeBox = {read = get_HomeAddressPostOfficeBox};
  __property   BSTR            HomeAddressState = {read = get_HomeAddressState};
  __property   BSTR            HomeAddressStreet = {read = get_HomeAddressStreet};
  __property   BSTR            HomeFaxNumber = {read = get_HomeFaxNumber};
  __property   BSTR            HomeTelephoneNumber = {read = get_HomeTelephoneNumber};
  __property   BSTR            Initials = {read = get_Initials};
  __property   BSTR            ISDNNumber = {read = get_ISDNNumber};
  __property   BSTR            JobTitle = {read = get_JobTitle};
  __property   VARIANT_BOOL    Journal = {read = get_Journal, write = set_Journal};
  __property   BSTR            Language = {read = get_Language};
  __property   BSTR            LastName = {read = get_LastName};
  __property   BSTR            LastNameAndFirstName = {read = get_LastNameAndFirstName};
  __property   BSTR            MailingAddress = {read = get_MailingAddress};
  __property   BSTR            MailingAddressCity = {read = get_MailingAddressCity};
  __property   BSTR            MailingAddressCountry = {read = get_MailingAddressCountry};
  __property   BSTR            MailingAddressPostalCode = {read = get_MailingAddressPostalCode};
  __property   BSTR            MailingAddressPostOfficeBox = {read = get_MailingAddressPostOfficeBox};
  __property   BSTR            MailingAddressState = {read = get_MailingAddressState};
  __property   BSTR            MailingAddressStreet = {read = get_MailingAddressStreet};
  __property   BSTR            ManagerName = {read = get_ManagerName};
  __property   BSTR            MiddleName = {read = get_MiddleName};
  __property   BSTR            MobileTelephoneNumber = {read = get_MobileTelephoneNumber};
  __property   BSTR            NickName = {read = get_NickName};
  __property   BSTR            OfficeLocation = {read = get_OfficeLocation};
  __property   BSTR            OrganizationalIDNumber = {read = get_OrganizationalIDNumber};
  __property   BSTR            OtherAddress = {read = get_OtherAddress};
  __property   BSTR            OtherAddressCity = {read = get_OtherAddressCity};
  __property   BSTR            OtherAddressCountry = {read = get_OtherAddressCountry};
  __property   BSTR            OtherAddressPostalCode = {read = get_OtherAddressPostalCode};
  __property   BSTR            OtherAddressPostOfficeBox = {read = get_OtherAddressPostOfficeBox};
  __property   BSTR            OtherAddressState = {read = get_OtherAddressState};
  __property   BSTR            OtherAddressStreet = {read = get_OtherAddressStreet};
  __property   BSTR            OtherFaxNumber = {read = get_OtherFaxNumber};
  __property   BSTR            OtherTelephoneNumber = {read = get_OtherTelephoneNumber};
  __property   BSTR            PagerNumber = {read = get_PagerNumber};
  __property   BSTR            PersonalHomePage = {read = get_PersonalHomePage};
  __property   BSTR            PrimaryTelephoneNumber = {read = get_PrimaryTelephoneNumber};
  __property   BSTR            Profession = {read = get_Profession};
  __property   BSTR            RadioTelephoneNumber = {read = get_RadioTelephoneNumber};
  __property   BSTR            ReferredBy = {read = get_ReferredBy};
  __property   Outlook_97::OlMailingAddress SelectedMailingAddress = {read = get_SelectedMailingAddress, write = set_SelectedMailingAddress};
  __property   BSTR            Spouse = {read = get_Spouse};
  __property   BSTR            Suffix = {read = get_Suffix};
  __property   BSTR            TelexNumber = {read = get_TelexNumber};
  __property   BSTR            Title = {read = get_Title};
  __property   BSTR            TTYTDDTelephoneNumber = {read = get_TTYTDDTelephoneNumber};
  __property   BSTR            User1 = {read = get_User1};
  __property   BSTR            User2 = {read = get_User2};
  __property   BSTR            User3 = {read = get_User3};
  __property   BSTR            User4 = {read = get_User4};
  __property   BSTR            UserCertificate = {read = get_UserCertificate};
  __property   BSTR            WebPage = {read = get_WebPage};
  __property   BSTR            YomiCompanyName = {read = get_YomiCompanyName};
  __property   BSTR            YomiFirstName = {read = get_YomiFirstName};
  __property   BSTR            YomiLastName = {read = get_YomiLastName};
};
typedef _DContactItemDispT<_DContactItem> _DContactItemDisp;

// *********************************************************************//
// DispIntf:  _IExplorer
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063103-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IExplorerDispT : public TAutoDriver<_IExplorer>
{
public:
  _IExplorerDispT(){}

  _IExplorerDispT(_IExplorer *pintf)
  {
    TAutoDriver<_IExplorer>::Bind(pintf, false);
  }

  _IExplorerDispT(_IExplorerPtr pintf)
  {
    TAutoDriver<_IExplorer>::Bind(pintf, true);
  }

  _IExplorerDispT& operator=(_IExplorer *pintf)
  {
    TAutoDriver<_IExplorer>::Bind(pintf, false);
    return *this;
  }

  _IExplorerDispT& operator=(_IExplorerPtr pintf)
  {
    TAutoDriver<_IExplorer>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CommandBars(Office_97::CommandBars** CommandBars/*[out,retval]*/);
  Office_97::CommandBars* __fastcall get_CommandBars(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CurrentFolder(Outlook_97::MAPIFolder** CurrentFolder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall get_CurrentFolder(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall _set_CurrentFolder(Outlook_97::MAPIFolder* CurrentFolder/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(Outlook_97::OutlookApplication** Parent/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display();

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Office_97::CommandBars* CommandBars = {read = get_CommandBars};
  __property   Outlook_97::MAPIFolder* CurrentFolder = {read = get_CurrentFolder, write = _set_CurrentFolder};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
};
typedef _IExplorerDispT<_IExplorer> _IExplorerDisp;

// *********************************************************************//
// DispIntf:  Explorer
// Flags:     (4096) Dispatchable
// GUID:      {00063003-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class ExplorerDispT : public TAutoDriver<Explorer>
{
public:
  ExplorerDispT(){}

  ExplorerDispT(Explorer *pintf)
  {
    TAutoDriver<Explorer>::Bind(pintf, false);
  }

  ExplorerDispT(ExplorerPtr pintf)
  {
    TAutoDriver<Explorer>::Bind(pintf, true);
  }

  ExplorerDispT& operator=(Explorer *pintf)
  {
    TAutoDriver<Explorer>::Bind(pintf, false);
    return *this;
  }

  ExplorerDispT& operator=(ExplorerPtr pintf)
  {
    TAutoDriver<Explorer>::Bind(pintf, true);
    return *this;
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Office_97::CommandBars* /*[VT_USERDEFINED:1]*/ __fastcall get_CommandBars();
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall get_CurrentFolder();
  void /*[VT_VOID:0]*/ __fastcall _set_CurrentFolder(Outlook_97::MAPIFolder* Param1/*[in]*/);
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent();
  void /*[VT_VOID:0]*/ __fastcall Close();
  void /*[VT_VOID:0]*/ __fastcall Display();

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Office_97::CommandBars* CommandBars = {read = get_CommandBars};
  __property   Outlook_97::MAPIFolder* CurrentFolder = {read = get_CurrentFolder, write = _set_CurrentFolder};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
};
typedef ExplorerDispT<Explorer> ExplorerDisp;

// *********************************************************************//
// DispIntf:  _IFolders
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063140-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IFoldersDispT : public TAutoDriver<_IFolders>
{
public:
  _IFoldersDispT(){}

  _IFoldersDispT(_IFolders *pintf)
  {
    TAutoDriver<_IFolders>::Bind(pintf, false);
  }

  _IFoldersDispT(_IFoldersPtr pintf)
  {
    TAutoDriver<_IFolders>::Bind(pintf, true);
  }

  _IFoldersDispT& operator=(_IFolders *pintf)
  {
    TAutoDriver<_IFolders>::Bind(pintf, false);
    return *this;
  }

  _IFoldersDispT& operator=(_IFoldersPtr pintf)
  {
    TAutoDriver<_IFolders>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(BSTR Name/*[in]*/, VARIANT Type/*[in]*/, 
                                            Outlook_97::MAPIFolder** Folder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall Add(BSTR Name/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, 
                                             Outlook_97::MAPIFolder** Folder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef _IFoldersDispT<_IFolders> _IFoldersDisp;

// *********************************************************************//
// DispIntf:  Folders
// Flags:     (4096) Dispatchable
// GUID:      {00063040-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class FoldersDispT : public TAutoDriver<Folders>
{
public:
  FoldersDispT(){}

  FoldersDispT(Folders *pintf)
  {
    TAutoDriver<Folders>::Bind(pintf, false);
  }

  FoldersDispT(FoldersPtr pintf)
  {
    TAutoDriver<Folders>::Bind(pintf, true);
  }

  FoldersDispT& operator=(Folders *pintf)
  {
    TAutoDriver<Folders>::Bind(pintf, false);
    return *this;
  }

  FoldersDispT& operator=(FoldersPtr pintf)
  {
    TAutoDriver<Folders>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall Add(BSTR Name/*[in]*/, 
                                                                VARIANT Type/*[in]*/);
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef FoldersDispT<Folders> FoldersDisp;

// *********************************************************************//
// DispIntf:  _IFormDescription
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063146-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IFormDescriptionDispT : public TAutoDriver<_IFormDescription>
{
public:
  _IFormDescriptionDispT(){}

  _IFormDescriptionDispT(_IFormDescription *pintf)
  {
    TAutoDriver<_IFormDescription>::Bind(pintf, false);
  }

  _IFormDescriptionDispT(_IFormDescriptionPtr pintf)
  {
    TAutoDriver<_IFormDescription>::Bind(pintf, true);
  }

  _IFormDescriptionDispT& operator=(_IFormDescription *pintf)
  {
    TAutoDriver<_IFormDescription>::Bind(pintf, false);
    return *this;
  }

  _IFormDescriptionDispT& operator=(_IFormDescriptionPtr pintf)
  {
    TAutoDriver<_IFormDescription>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Category(BSTR* Category/*[out,retval]*/);
  BSTR            __fastcall get_Category(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Category(BSTR Category/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CategorySub(BSTR* CategorySub/*[out,retval]*/);
  BSTR            __fastcall get_CategorySub(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CategorySub(BSTR CategorySub/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Comment(BSTR* Comment/*[out,retval]*/);
  BSTR            __fastcall get_Comment(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Comment(BSTR Comment/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ContactName(BSTR* ContactName/*[out,retval]*/);
  BSTR            __fastcall get_ContactName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ContactName(BSTR ContactName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DisplayName(BSTR* DisplayName/*[out,retval]*/);
  BSTR            __fastcall get_DisplayName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DisplayName(BSTR DisplayName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Hidden(VARIANT_BOOL* Hidden/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Hidden(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Hidden(VARIANT_BOOL Hidden/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Icon(BSTR* Icon/*[out,retval]*/);
  BSTR            __fastcall get_Icon(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Icon(BSTR Icon/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Locked(VARIANT_BOOL* Locked/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Locked(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Locked(VARIANT_BOOL Locked/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MiniIcon(BSTR* MiniIcon/*[out,retval]*/);
  BSTR            __fastcall get_MiniIcon(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MiniIcon(BSTR MiniIcon/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Name(BSTR* Name/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Name(BSTR Name/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Number(BSTR* Number/*[out,retval]*/);
  BSTR            __fastcall get_Number(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Number(BSTR Number/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OneOff(VARIANT_BOOL* OneOff/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_OneOff(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OneOff(VARIANT_BOOL OneOff/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Password(BSTR* Password/*[out,retval]*/);
  BSTR            __fastcall get_Password(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Password(BSTR Password/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Template(BSTR* Template/*[out,retval]*/);
  BSTR            __fastcall get_Template(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Template(BSTR Template/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UseWordMail(VARIANT_BOOL* UseWordMail/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UseWordMail(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UseWordMail(VARIANT_BOOL UseWordMail/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Version(BSTR* Version/*[out,retval]*/);
  BSTR            __fastcall get_Version(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Version(BSTR Version/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PublishForm(Outlook_97::OlFormRegistry Registry/*[in]*/, 
                                                    VARIANT Folder/*[in]*/);

  __property   BSTR            Category = {read = get_Category};
  __property   BSTR            CategorySub = {read = get_CategorySub};
  __property   BSTR            Comment = {read = get_Comment};
  __property   BSTR            ContactName = {read = get_ContactName};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   VARIANT_BOOL    Hidden = {read = get_Hidden, write = set_Hidden};
  __property   BSTR            Icon = {read = get_Icon};
  __property   VARIANT_BOOL    Locked = {read = get_Locked, write = set_Locked};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            MiniIcon = {read = get_MiniIcon};
  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Number = {read = get_Number};
  __property   VARIANT_BOOL    OneOff = {read = get_OneOff, write = set_OneOff};
  __property   BSTR            Password = {read = get_Password};
  __property   BSTR            Template = {read = get_Template};
  __property   VARIANT_BOOL    UseWordMail = {read = get_UseWordMail, write = set_UseWordMail};
  __property   BSTR            Version = {read = get_Version};
};
typedef _IFormDescriptionDispT<_IFormDescription> _IFormDescriptionDisp;

// *********************************************************************//
// DispIntf:  FormDescription
// Flags:     (4096) Dispatchable
// GUID:      {00063046-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class FormDescriptionDispT : public TAutoDriver<FormDescription>
{
public:
  FormDescriptionDispT(){}

  FormDescriptionDispT(FormDescription *pintf)
  {
    TAutoDriver<FormDescription>::Bind(pintf, false);
  }

  FormDescriptionDispT(FormDescriptionPtr pintf)
  {
    TAutoDriver<FormDescription>::Bind(pintf, true);
  }

  FormDescriptionDispT& operator=(FormDescription *pintf)
  {
    TAutoDriver<FormDescription>::Bind(pintf, false);
    return *this;
  }

  FormDescriptionDispT& operator=(FormDescriptionPtr pintf)
  {
    TAutoDriver<FormDescription>::Bind(pintf, true);
    return *this;
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Category();
  void /*[VT_VOID:0]*/ __fastcall set_Category(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CategorySub();
  void /*[VT_VOID:0]*/ __fastcall set_CategorySub(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Comment();
  void /*[VT_VOID:0]*/ __fastcall set_Comment(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ContactName();
  void /*[VT_VOID:0]*/ __fastcall set_ContactName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_DisplayName();
  void /*[VT_VOID:0]*/ __fastcall set_DisplayName(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Hidden();
  void /*[VT_VOID:0]*/ __fastcall set_Hidden(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Icon();
  void /*[VT_VOID:0]*/ __fastcall set_Icon(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Locked();
  void /*[VT_VOID:0]*/ __fastcall set_Locked(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MiniIcon();
  void /*[VT_VOID:0]*/ __fastcall set_MiniIcon(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name();
  void /*[VT_VOID:0]*/ __fastcall set_Name(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Number();
  void /*[VT_VOID:0]*/ __fastcall set_Number(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_OneOff();
  void /*[VT_VOID:0]*/ __fastcall set_OneOff(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Password();
  void /*[VT_VOID:0]*/ __fastcall set_Password(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Template();
  void /*[VT_VOID:0]*/ __fastcall set_Template(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UseWordMail();
  void /*[VT_VOID:0]*/ __fastcall set_UseWordMail(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Version();
  void /*[VT_VOID:0]*/ __fastcall set_Version(BSTR Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PublishForm(Outlook_97::OlFormRegistry Registry/*[in]*/, 
                                              VARIANT Folder/*[in]*/);

  __property   BSTR            Category = {read = get_Category};
  __property   BSTR            CategorySub = {read = get_CategorySub};
  __property   BSTR            Comment = {read = get_Comment};
  __property   BSTR            ContactName = {read = get_ContactName};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   VARIANT_BOOL    Hidden = {read = get_Hidden, write = set_Hidden};
  __property   BSTR            Icon = {read = get_Icon};
  __property   VARIANT_BOOL    Locked = {read = get_Locked, write = set_Locked};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            MiniIcon = {read = get_MiniIcon};
  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Number = {read = get_Number};
  __property   VARIANT_BOOL    OneOff = {read = get_OneOff, write = set_OneOff};
  __property   BSTR            Password = {read = get_Password};
  __property   BSTR            Template = {read = get_Template};
  __property   VARIANT_BOOL    UseWordMail = {read = get_UseWordMail, write = set_UseWordMail};
  __property   BSTR            Version = {read = get_Version};
};
typedef FormDescriptionDispT<FormDescription> FormDescriptionDisp;

// *********************************************************************//
// DispIntf:  _IInspector
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063105-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IInspectorDispT : public TAutoDriver<_IInspector>
{
public:
  _IInspectorDispT(){}

  _IInspectorDispT(_IInspector *pintf)
  {
    TAutoDriver<_IInspector>::Bind(pintf, false);
  }

  _IInspectorDispT(_IInspectorPtr pintf)
  {
    TAutoDriver<_IInspector>::Bind(pintf, true);
  }

  _IInspectorDispT& operator=(_IInspector *pintf)
  {
    TAutoDriver<_IInspector>::Bind(pintf, false);
    return *this;
  }

  _IInspectorDispT& operator=(_IInspectorPtr pintf)
  {
    TAutoDriver<_IInspector>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CommandBars(Office_97::CommandBars** CommandBars/*[out,retval]*/);
  Office_97::CommandBars* __fastcall get_CommandBars(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CurrentItem(LPDISPATCH* CurrentItem/*[out,retval]*/);
  LPDISPATCH      __fastcall get_CurrentItem(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ModifiedFormPages(Outlook_97::Pages** ModifiedFormPages/*[out,retval]*/);
  Outlook_97::Pages* __fastcall get_ModifiedFormPages(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(Outlook_97::OutlookApplication** Parent/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall HideFormPage(BSTR PageName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall IsWordMail(VARIANT_BOOL* IsWordMail/*[out,retval]*/);
  VARIANT_BOOL    __fastcall IsWordMail(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SetCurrentFormPage(BSTR PageName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ShowFormPage(BSTR PageName/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Office_97::CommandBars* CommandBars = {read = get_CommandBars};
  __property   LPDISPATCH      CurrentItem = {read = get_CurrentItem};
  __property   Outlook_97::Pages* ModifiedFormPages = {read = get_ModifiedFormPages};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
};
typedef _IInspectorDispT<_IInspector> _IInspectorDisp;

// *********************************************************************//
// DispIntf:  Inspector
// Flags:     (4096) Dispatchable
// GUID:      {00063005-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class InspectorDispT : public TAutoDriver<Inspector>
{
public:
  InspectorDispT(){}

  InspectorDispT(Inspector *pintf)
  {
    TAutoDriver<Inspector>::Bind(pintf, false);
  }

  InspectorDispT(InspectorPtr pintf)
  {
    TAutoDriver<Inspector>::Bind(pintf, true);
  }

  InspectorDispT& operator=(Inspector *pintf)
  {
    TAutoDriver<Inspector>::Bind(pintf, false);
    return *this;
  }

  InspectorDispT& operator=(InspectorPtr pintf)
  {
    TAutoDriver<Inspector>::Bind(pintf, true);
    return *this;
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Office_97::CommandBars* /*[VT_USERDEFINED:1]*/ __fastcall get_CommandBars();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_CurrentItem();
  Outlook_97::Pages* /*[VT_USERDEFINED:1]*/ __fastcall get_ModifiedFormPages();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall HideFormPage(BSTR PageName/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall IsWordMail();
  void /*[VT_VOID:0]*/ __fastcall SetCurrentFormPage(BSTR PageName/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall ShowFormPage(BSTR PageName/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Office_97::CommandBars* CommandBars = {read = get_CommandBars};
  __property   LPDISPATCH      CurrentItem = {read = get_CurrentItem};
  __property   Outlook_97::Pages* ModifiedFormPages = {read = get_ModifiedFormPages};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
};
typedef InspectorDispT<Inspector> InspectorDisp;

// *********************************************************************//
// DispIntf:  _IItems
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063141-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IItemsDispT : public TAutoDriver<_IItems>
{
public:
  _IItemsDispT(){}

  _IItemsDispT(_IItems *pintf)
  {
    TAutoDriver<_IItems>::Bind(pintf, false);
  }

  _IItemsDispT(_IItemsPtr pintf)
  {
    TAutoDriver<_IItems>::Bind(pintf, true);
  }

  _IItemsDispT& operator=(_IItems *pintf)
  {
    TAutoDriver<_IItems>::Bind(pintf, false);
    return *this;
  }

  _IItemsDispT& operator=(_IItemsPtr pintf)
  {
    TAutoDriver<_IItems>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_IncludeRecurrences(VARIANT_BOOL* IncludeRecurrences/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IncludeRecurrences(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_IncludeRecurrences(VARIANT_BOOL IncludeRecurrences/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(VARIANT Type/*[in]*/, LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Add(VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Find(BSTR Filter/*[in]*/, LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Find(BSTR Filter/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall FindNext(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall FindNext(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Restrict(BSTR Filter/*[in]*/, 
                                                 Outlook_97::Items** Items/*[out,retval]*/);
  Outlook_97::Items* __fastcall Restrict(BSTR Filter/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Sort(BSTR Property/*[in]*/, VARIANT Descending/*[in]*/);

  __property   long            Count = {read = get_Count};
  __property   VARIANT_BOOL    IncludeRecurrences = {read = get_IncludeRecurrences, write = set_IncludeRecurrences};
};
typedef _IItemsDispT<_IItems> _IItemsDisp;

// *********************************************************************//
// DispIntf:  Items
// Flags:     (4096) Dispatchable
// GUID:      {00063041-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class ItemsDispT : public TAutoDriver<Items>
{
public:
  ItemsDispT(){}

  ItemsDispT(Items *pintf)
  {
    TAutoDriver<Items>::Bind(pintf, false);
  }

  ItemsDispT(ItemsPtr pintf)
  {
    TAutoDriver<Items>::Bind(pintf, true);
  }

  ItemsDispT& operator=(Items *pintf)
  {
    TAutoDriver<Items>::Bind(pintf, false);
    return *this;
  }

  ItemsDispT& operator=(ItemsPtr pintf)
  {
    TAutoDriver<Items>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_IncludeRecurrences();
  void /*[VT_VOID:0]*/ __fastcall set_IncludeRecurrences(VARIANT_BOOL Param1/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Add(VARIANT Type/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Find(BSTR Filter/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall FindNext();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);
  Outlook_97::Items* /*[VT_USERDEFINED:1]*/ __fastcall Restrict(BSTR Filter/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Sort(BSTR Property/*[in]*/, VARIANT Descending/*[in]*/);

  __property   long            Count = {read = get_Count};
  __property   VARIANT_BOOL    IncludeRecurrences = {read = get_IncludeRecurrences, write = set_IncludeRecurrences};
};
typedef ItemsDispT<Items> ItemsDisp;

// *********************************************************************//
// DispIntf:  _IJournalItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063122-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IJournalItemDispT : public TAutoDriver<_IJournalItem>
{
public:
  _IJournalItemDispT(){}

  _IJournalItemDispT(_IJournalItem *pintf)
  {
    TAutoDriver<_IJournalItem>::Bind(pintf, false);
  }

  _IJournalItemDispT(_IJournalItemPtr pintf)
  {
    TAutoDriver<_IJournalItem>::Bind(pintf, true);
  }

  _IJournalItemDispT& operator=(_IJournalItem *pintf)
  {
    TAutoDriver<_IJournalItem>::Bind(pintf, false);
    return *this;
  }

  _IJournalItemDispT& operator=(_IJournalItemPtr pintf)
  {
    TAutoDriver<_IJournalItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ContactNames(BSTR* ContactNames/*[out,retval]*/);
  BSTR            __fastcall get_ContactNames(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ContactNames(BSTR ContactNames/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DocPosted(VARIANT_BOOL* DocPosted/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_DocPosted(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DocPosted(VARIANT_BOOL DocPosted/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DocPrinted(VARIANT_BOOL* DocPrinted/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_DocPrinted(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DocPrinted(VARIANT_BOOL DocPrinted/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DocRouted(VARIANT_BOOL* DocRouted/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_DocRouted(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DocRouted(VARIANT_BOOL DocRouted/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DocSaved(VARIANT_BOOL* DocSaved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_DocSaved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DocSaved(VARIANT_BOOL DocSaved/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Duration(long* Duration/*[out,retval]*/);
  long            __fastcall get_Duration(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Duration(long Duration/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_End(DATE* End/*[out,retval]*/);
  DATE            __fastcall get_End(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_End(DATE End/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/);
  Outlook_97::Recipients* __fastcall get_Recipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Start(DATE* Start/*[out,retval]*/);
  DATE            __fastcall get_Start(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Start(DATE Start/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Type(BSTR* Type/*[out,retval]*/);
  BSTR            __fastcall get_Type(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Type(BSTR Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Forward(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall Forward(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Reply(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall Reply(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ReplyAll(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall ReplyAll(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall StartTimer();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall StopTimer();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            ContactNames = {read = get_ContactNames};
  __property   VARIANT_BOOL    DocPosted = {read = get_DocPosted, write = set_DocPosted};
  __property   VARIANT_BOOL    DocPrinted = {read = get_DocPrinted, write = set_DocPrinted};
  __property   VARIANT_BOOL    DocRouted = {read = get_DocRouted, write = set_DocRouted};
  __property   VARIANT_BOOL    DocSaved = {read = get_DocSaved, write = set_DocSaved};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            End = {read = get_End, write = set_End};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   DATE            Start = {read = get_Start, write = set_Start};
  __property   BSTR            Type = {read = get_Type};
};
typedef _IJournalItemDispT<_IJournalItem> _IJournalItemDisp;

// *********************************************************************//
// DispIntf:  _DJournalItem
// Flags:     (4096) Dispatchable
// GUID:      {00063022-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DJournalItemDispT : public TAutoDriver<_DJournalItem>
{
public:
  _DJournalItemDispT(){}

  _DJournalItemDispT(_DJournalItem *pintf)
  {
    TAutoDriver<_DJournalItem>::Bind(pintf, false);
  }

  _DJournalItemDispT(_DJournalItemPtr pintf)
  {
    TAutoDriver<_DJournalItem>::Bind(pintf, true);
  }

  _DJournalItemDispT& operator=(_DJournalItem *pintf)
  {
    TAutoDriver<_DJournalItem>::Bind(pintf, false);
    return *this;
  }

  _DJournalItemDispT& operator=(_DJournalItemPtr pintf)
  {
    TAutoDriver<_DJournalItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_JournalItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_JournalItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ContactNames();
  void /*[VT_VOID:0]*/ __fastcall set_ContactNames(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocPosted();
  void /*[VT_VOID:0]*/ __fastcall set_DocPosted(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocPrinted();
  void /*[VT_VOID:0]*/ __fastcall set_DocPrinted(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocRouted();
  void /*[VT_VOID:0]*/ __fastcall set_DocRouted(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DocSaved();
  void /*[VT_VOID:0]*/ __fastcall set_DocSaved(VARIANT_BOOL Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Duration();
  void /*[VT_VOID:0]*/ __fastcall set_Duration(long Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_End();
  void /*[VT_VOID:0]*/ __fastcall set_End(DATE Param1/*[in]*/);
  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients();
  DATE /*[VT_DATE:0]*/ __fastcall get_Start();
  void /*[VT_VOID:0]*/ __fastcall set_Start(DATE Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Type();
  void /*[VT_VOID:0]*/ __fastcall set_Type(BSTR Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Forward();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Reply();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall ReplyAll();
  void /*[VT_VOID:0]*/ __fastcall StartTimer();
  void /*[VT_VOID:0]*/ __fastcall StopTimer();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            ContactNames = {read = get_ContactNames};
  __property   VARIANT_BOOL    DocPosted = {read = get_DocPosted, write = set_DocPosted};
  __property   VARIANT_BOOL    DocPrinted = {read = get_DocPrinted, write = set_DocPrinted};
  __property   VARIANT_BOOL    DocRouted = {read = get_DocRouted, write = set_DocRouted};
  __property   VARIANT_BOOL    DocSaved = {read = get_DocSaved, write = set_DocSaved};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            End = {read = get_End, write = set_End};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   DATE            Start = {read = get_Start, write = set_Start};
  __property   BSTR            Type = {read = get_Type};
};
typedef _DJournalItemDispT<_DJournalItem> _DJournalItemDisp;

// *********************************************************************//
// DispIntf:  _IMailItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063134-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMailItemDispT : public TAutoDriver<_IMailItem>
{
public:
  _IMailItemDispT(){}

  _IMailItemDispT(_IMailItem *pintf)
  {
    TAutoDriver<_IMailItem>::Bind(pintf, false);
  }

  _IMailItemDispT(_IMailItemPtr pintf)
  {
    TAutoDriver<_IMailItem>::Bind(pintf, true);
  }

  _IMailItemDispT& operator=(_IMailItem *pintf)
  {
    TAutoDriver<_IMailItem>::Bind(pintf, false);
    return *this;
  }

  _IMailItemDispT& operator=(_IMailItemPtr pintf)
  {
    TAutoDriver<_IMailItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_AlternateRecipientAllowed(VARIANT_BOOL* AlternateRecipientAllowed/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_AlternateRecipientAllowed(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_AlternateRecipientAllowed(VARIANT_BOOL AlternateRecipientAllowed/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_AutoForwarded(VARIANT_BOOL* AutoForwarded/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_AutoForwarded(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_AutoForwarded(VARIANT_BOOL AutoForwarded/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BCC(BSTR* BCC/*[out,retval]*/);
  BSTR            __fastcall get_BCC(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BCC(BSTR BCC/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CC(BSTR* CC/*[out,retval]*/);
  BSTR            __fastcall get_CC(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CC(BSTR CC/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ConversationIndex(BSTR* ConversationIndex/*[out,retval]*/);
  BSTR            __fastcall get_ConversationIndex(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ConversationTopic(BSTR* ConversationTopic/*[out,retval]*/);
  BSTR            __fastcall get_ConversationTopic(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DeferredDeliveryTime(DATE* DeferredDeliveryTime/*[out,retval]*/);
  DATE            __fastcall get_DeferredDeliveryTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DeferredDeliveryTime(DATE DeferredDeliveryTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DeleteAfterSubmit(VARIANT_BOOL* DeleteAfterSubmit/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_DeleteAfterSubmit(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DeleteAfterSubmit(VARIANT_BOOL DeleteAfterSubmit/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ExpiryTime(DATE* ExpiryTime/*[out,retval]*/);
  DATE            __fastcall get_ExpiryTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ExpiryTime(DATE ExpiryTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FlagDueBy(DATE* FlagDueBy/*[out,retval]*/);
  DATE            __fastcall get_FlagDueBy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FlagDueBy(DATE FlagDueBy/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FlagRequest(BSTR* FlagRequest/*[out,retval]*/);
  BSTR            __fastcall get_FlagRequest(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FlagRequest(BSTR FlagRequest/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FlagStatus(Outlook_97::OlFlagStatus* FlagStatus/*[out,retval]*/);
  Outlook_97::OlFlagStatus __fastcall get_FlagStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_FlagStatus(Outlook_97::OlFlagStatus FlagStatus/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OriginatorDeliveryReportRequested(VARIANT_BOOL* OriginatorDeliveryReportRequested/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_OriginatorDeliveryReportRequested(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_OriginatorDeliveryReportRequested(VARIANT_BOOL OriginatorDeliveryReportRequested/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReadReceiptRequested(VARIANT_BOOL* ReadReceiptRequested/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReadReceiptRequested(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReadReceiptRequested(VARIANT_BOOL ReadReceiptRequested/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReceivedByEntryID(BSTR* ReceivedByEntryID/*[out,retval]*/);
  BSTR            __fastcall get_ReceivedByEntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReceivedByName(BSTR* ReceivedByName/*[out,retval]*/);
  BSTR            __fastcall get_ReceivedByName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReceivedOnBehalfOfEntryID(BSTR* ReceivedOnBehalfOfEntryID/*[out,retval]*/);
  BSTR            __fastcall get_ReceivedOnBehalfOfEntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReceivedOnBehalfOfName(BSTR* ReceivedOnBehalfOfName/*[out,retval]*/);
  BSTR            __fastcall get_ReceivedOnBehalfOfName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReceivedTime(DATE* ReceivedTime/*[out,retval]*/);
  DATE            __fastcall get_ReceivedTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_RecipientReassignmentProhibited(VARIANT_BOOL* RecipientReassignmentProhibited/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_RecipientReassignmentProhibited(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_RecipientReassignmentProhibited(VARIANT_BOOL RecipientReassignmentProhibited/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/);
  Outlook_97::Recipients* __fastcall get_Recipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderOverrideDefault(VARIANT_BOOL* ReminderOverrideDefault/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderOverrideDefault(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL ReminderOverrideDefault/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderPlaySound(VARIANT_BOOL* ReminderPlaySound/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderPlaySound(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL ReminderPlaySound/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderSet(VARIANT_BOOL* ReminderSet/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderSet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL ReminderSet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderSoundFile(BSTR* ReminderSoundFile/*[out,retval]*/);
  BSTR            __fastcall get_ReminderSoundFile(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderSoundFile(BSTR ReminderSoundFile/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderTime(DATE* ReminderTime/*[out,retval]*/);
  DATE            __fastcall get_ReminderTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderTime(DATE ReminderTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_RemoteStatus(Outlook_97::OlRemoteStatus* RemoteStatus/*[out,retval]*/);
  Outlook_97::OlRemoteStatus __fastcall get_RemoteStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReplyRecipientNames(BSTR* ReplyRecipientNames/*[out,retval]*/);
  BSTR            __fastcall get_ReplyRecipientNames(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReplyRecipients(Outlook_97::Recipients** ReplyRecipients/*[out,retval]*/);
  Outlook_97::Recipients* __fastcall get_ReplyRecipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SaveSentMessageFolder(Outlook_97::MAPIFolder** SaveSentMessageFolder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall get_SaveSentMessageFolder(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall _set_SaveSentMessageFolder(Outlook_97::MAPIFolder* SaveSentMessageFolder/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SenderName(BSTR* SenderName/*[out,retval]*/);
  BSTR            __fastcall get_SenderName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SentOn(DATE* SentOn/*[out,retval]*/);
  DATE            __fastcall get_SentOn(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SentOnBehalfOfName(BSTR* SentOnBehalfOfName/*[out,retval]*/);
  BSTR            __fastcall get_SentOnBehalfOfName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_SentOnBehalfOfName(BSTR SentOnBehalfOfName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_To(BSTR* To/*[out,retval]*/);
  BSTR            __fastcall get_To(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_To(BSTR To/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_VotingOptions(BSTR* VotingOptions/*[out,retval]*/);
  BSTR            __fastcall get_VotingOptions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_VotingOptions(BSTR VotingOptions/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_VotingResponse(BSTR* VotingResponse/*[out,retval]*/);
  BSTR            __fastcall get_VotingResponse(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_VotingResponse(BSTR VotingResponse/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ClearConversationIndex();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Forward(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall Forward(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Reply(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall Reply(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ReplyAll(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall ReplyAll(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    AlternateRecipientAllowed = {read = get_AlternateRecipientAllowed, write = set_AlternateRecipientAllowed};
  __property   VARIANT_BOOL    AutoForwarded = {read = get_AutoForwarded, write = set_AutoForwarded};
  __property   BSTR            BCC = {read = get_BCC};
  __property   BSTR            CC = {read = get_CC};
  __property   BSTR            ConversationIndex = {read = get_ConversationIndex};
  __property   BSTR            ConversationTopic = {read = get_ConversationTopic};
  __property   DATE            DeferredDeliveryTime = {read = get_DeferredDeliveryTime, write = set_DeferredDeliveryTime};
  __property   VARIANT_BOOL    DeleteAfterSubmit = {read = get_DeleteAfterSubmit, write = set_DeleteAfterSubmit};
  __property   DATE            ExpiryTime = {read = get_ExpiryTime, write = set_ExpiryTime};
  __property   DATE            FlagDueBy = {read = get_FlagDueBy, write = set_FlagDueBy};
  __property   BSTR            FlagRequest = {read = get_FlagRequest};
  __property   Outlook_97::OlFlagStatus FlagStatus = {read = get_FlagStatus, write = set_FlagStatus};
  __property   VARIANT_BOOL    OriginatorDeliveryReportRequested = {read = get_OriginatorDeliveryReportRequested, write = set_OriginatorDeliveryReportRequested};
  __property   VARIANT_BOOL    ReadReceiptRequested = {read = get_ReadReceiptRequested, write = set_ReadReceiptRequested};
  __property   BSTR            ReceivedByEntryID = {read = get_ReceivedByEntryID};
  __property   BSTR            ReceivedByName = {read = get_ReceivedByName};
  __property   BSTR            ReceivedOnBehalfOfEntryID = {read = get_ReceivedOnBehalfOfEntryID};
  __property   BSTR            ReceivedOnBehalfOfName = {read = get_ReceivedOnBehalfOfName};
  __property   DATE            ReceivedTime = {read = get_ReceivedTime};
  __property   VARIANT_BOOL    RecipientReassignmentProhibited = {read = get_RecipientReassignmentProhibited, write = set_RecipientReassignmentProhibited};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReminderTime = {read = get_ReminderTime, write = set_ReminderTime};
  __property   Outlook_97::OlRemoteStatus RemoteStatus = {read = get_RemoteStatus};
  __property   BSTR            ReplyRecipientNames = {read = get_ReplyRecipientNames};
  __property   Outlook_97::Recipients* ReplyRecipients = {read = get_ReplyRecipients};
  __property   Outlook_97::MAPIFolder* SaveSentMessageFolder = {read = get_SaveSentMessageFolder, write = _set_SaveSentMessageFolder};
  __property   BSTR            SenderName = {read = get_SenderName};
  __property   DATE            SentOn = {read = get_SentOn};
  __property   BSTR            SentOnBehalfOfName = {read = get_SentOnBehalfOfName};
  __property   BSTR            To = {read = get_To};
  __property   BSTR            VotingOptions = {read = get_VotingOptions};
  __property   BSTR            VotingResponse = {read = get_VotingResponse};
};
typedef _IMailItemDispT<_IMailItem> _IMailItemDisp;

// *********************************************************************//
// DispIntf:  _DMailItem
// Flags:     (4096) Dispatchable
// GUID:      {00063034-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DMailItemDispT : public TAutoDriver<_DMailItem>
{
public:
  _DMailItemDispT(){}

  _DMailItemDispT(_DMailItem *pintf)
  {
    TAutoDriver<_DMailItem>::Bind(pintf, false);
  }

  _DMailItemDispT(_DMailItemPtr pintf)
  {
    TAutoDriver<_DMailItem>::Bind(pintf, true);
  }

  _DMailItemDispT& operator=(_DMailItem *pintf)
  {
    TAutoDriver<_DMailItem>::Bind(pintf, false);
    return *this;
  }

  _DMailItemDispT& operator=(_DMailItemPtr pintf)
  {
    TAutoDriver<_DMailItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_MailItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_MailItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_AlternateRecipientAllowed();
  void /*[VT_VOID:0]*/ __fastcall set_AlternateRecipientAllowed(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_AutoForwarded();
  void /*[VT_VOID:0]*/ __fastcall set_AutoForwarded(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BCC();
  void /*[VT_VOID:0]*/ __fastcall set_BCC(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CC();
  void /*[VT_VOID:0]*/ __fastcall set_CC(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationIndex();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationTopic();
  DATE /*[VT_DATE:0]*/ __fastcall get_DeferredDeliveryTime();
  void /*[VT_VOID:0]*/ __fastcall set_DeferredDeliveryTime(DATE Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_DeleteAfterSubmit();
  void /*[VT_VOID:0]*/ __fastcall set_DeleteAfterSubmit(VARIANT_BOOL Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_ExpiryTime();
  void /*[VT_VOID:0]*/ __fastcall set_ExpiryTime(DATE Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_FlagDueBy();
  void /*[VT_VOID:0]*/ __fastcall set_FlagDueBy(DATE Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_FlagRequest();
  void /*[VT_VOID:0]*/ __fastcall set_FlagRequest(BSTR Param1/*[in]*/);
  Outlook_97::OlFlagStatus /*[VT_USERDEFINED:0]*/ __fastcall get_FlagStatus();
  void /*[VT_VOID:0]*/ __fastcall set_FlagStatus(Outlook_97::OlFlagStatus Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_OriginatorDeliveryReportRequested();
  void /*[VT_VOID:0]*/ __fastcall set_OriginatorDeliveryReportRequested(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReadReceiptRequested();
  void /*[VT_VOID:0]*/ __fastcall set_ReadReceiptRequested(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedByEntryID();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedByName();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedOnBehalfOfEntryID();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReceivedOnBehalfOfName();
  DATE /*[VT_DATE:0]*/ __fastcall get_ReceivedTime();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_RecipientReassignmentProhibited();
  void /*[VT_VOID:0]*/ __fastcall set_RecipientReassignmentProhibited(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderOverrideDefault();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderPlaySound();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderSet();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReminderSoundFile();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderSoundFile(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_ReminderTime();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderTime(DATE Param1/*[in]*/);
  Outlook_97::OlRemoteStatus /*[VT_USERDEFINED:0]*/ __fastcall get_RemoteStatus();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReplyRecipientNames();
  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_ReplyRecipients();
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall get_SaveSentMessageFolder();
  void /*[VT_VOID:0]*/ __fastcall _set_SaveSentMessageFolder(Outlook_97::MAPIFolder* Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_SenderName();
  DATE /*[VT_DATE:0]*/ __fastcall get_SentOn();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_SentOnBehalfOfName();
  void /*[VT_VOID:0]*/ __fastcall set_SentOnBehalfOfName(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_To();
  void /*[VT_VOID:0]*/ __fastcall set_To(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_VotingOptions();
  void /*[VT_VOID:0]*/ __fastcall set_VotingOptions(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_VotingResponse();
  void /*[VT_VOID:0]*/ __fastcall set_VotingResponse(BSTR Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  void /*[VT_VOID:0]*/ __fastcall ClearConversationIndex();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Forward();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Reply();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall ReplyAll();
  void /*[VT_VOID:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    AlternateRecipientAllowed = {read = get_AlternateRecipientAllowed, write = set_AlternateRecipientAllowed};
  __property   VARIANT_BOOL    AutoForwarded = {read = get_AutoForwarded, write = set_AutoForwarded};
  __property   BSTR            BCC = {read = get_BCC};
  __property   BSTR            CC = {read = get_CC};
  __property   BSTR            ConversationIndex = {read = get_ConversationIndex};
  __property   BSTR            ConversationTopic = {read = get_ConversationTopic};
  __property   DATE            DeferredDeliveryTime = {read = get_DeferredDeliveryTime, write = set_DeferredDeliveryTime};
  __property   VARIANT_BOOL    DeleteAfterSubmit = {read = get_DeleteAfterSubmit, write = set_DeleteAfterSubmit};
  __property   DATE            ExpiryTime = {read = get_ExpiryTime, write = set_ExpiryTime};
  __property   DATE            FlagDueBy = {read = get_FlagDueBy, write = set_FlagDueBy};
  __property   BSTR            FlagRequest = {read = get_FlagRequest};
  __property   Outlook_97::OlFlagStatus FlagStatus = {read = get_FlagStatus, write = set_FlagStatus};
  __property   VARIANT_BOOL    OriginatorDeliveryReportRequested = {read = get_OriginatorDeliveryReportRequested, write = set_OriginatorDeliveryReportRequested};
  __property   VARIANT_BOOL    ReadReceiptRequested = {read = get_ReadReceiptRequested, write = set_ReadReceiptRequested};
  __property   BSTR            ReceivedByEntryID = {read = get_ReceivedByEntryID};
  __property   BSTR            ReceivedByName = {read = get_ReceivedByName};
  __property   BSTR            ReceivedOnBehalfOfEntryID = {read = get_ReceivedOnBehalfOfEntryID};
  __property   BSTR            ReceivedOnBehalfOfName = {read = get_ReceivedOnBehalfOfName};
  __property   DATE            ReceivedTime = {read = get_ReceivedTime};
  __property   VARIANT_BOOL    RecipientReassignmentProhibited = {read = get_RecipientReassignmentProhibited, write = set_RecipientReassignmentProhibited};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReminderTime = {read = get_ReminderTime, write = set_ReminderTime};
  __property   Outlook_97::OlRemoteStatus RemoteStatus = {read = get_RemoteStatus};
  __property   BSTR            ReplyRecipientNames = {read = get_ReplyRecipientNames};
  __property   Outlook_97::Recipients* ReplyRecipients = {read = get_ReplyRecipients};
  __property   Outlook_97::MAPIFolder* SaveSentMessageFolder = {read = get_SaveSentMessageFolder, write = _set_SaveSentMessageFolder};
  __property   BSTR            SenderName = {read = get_SenderName};
  __property   DATE            SentOn = {read = get_SentOn};
  __property   BSTR            SentOnBehalfOfName = {read = get_SentOnBehalfOfName};
  __property   BSTR            To = {read = get_To};
  __property   BSTR            VotingOptions = {read = get_VotingOptions};
  __property   BSTR            VotingResponse = {read = get_VotingResponse};
};
typedef _DMailItemDispT<_DMailItem> _DMailItemDisp;

// *********************************************************************//
// DispIntf:  _IMAPIFolder
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063106-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMAPIFolderDispT : public TAutoDriver<_IMAPIFolder>
{
public:
  _IMAPIFolderDispT(){}

  _IMAPIFolderDispT(_IMAPIFolder *pintf)
  {
    TAutoDriver<_IMAPIFolder>::Bind(pintf, false);
  }

  _IMAPIFolderDispT(_IMAPIFolderPtr pintf)
  {
    TAutoDriver<_IMAPIFolder>::Bind(pintf, true);
  }

  _IMAPIFolderDispT& operator=(_IMAPIFolder *pintf)
  {
    TAutoDriver<_IMAPIFolder>::Bind(pintf, false);
    return *this;
  }

  _IMAPIFolderDispT& operator=(_IMAPIFolderPtr pintf)
  {
    TAutoDriver<_IMAPIFolder>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DefaultItemType(Outlook_97::OlItems* DefaultItemType/*[out,retval]*/);
  Outlook_97::OlItems __fastcall get_DefaultItemType(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DefaultMessageClass(BSTR* DefaultMessageClass/*[out,retval]*/);
  BSTR            __fastcall get_DefaultMessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Description(BSTR* Description/*[out,retval]*/);
  BSTR            __fastcall get_Description(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Description(BSTR Description/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Folders(Outlook_97::Folders** Folders/*[out,retval]*/);
  Outlook_97::Folders* __fastcall get_Folders(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Items(Outlook_97::Items** Items/*[out,retval]*/);
  Outlook_97::Items* __fastcall get_Items(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Name(BSTR* Name/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Name(BSTR Name/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_StoreID(BSTR* StoreID/*[out,retval]*/);
  BSTR            __fastcall get_StoreID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnReadItemCount(long* UnReadItemCount/*[out,retval]*/);
  long            __fastcall get_UnReadItemCount(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall CopyTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/, 
                                               Outlook_97::MAPIFolder** Folder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall CopyTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetExplorer(VARIANT DisplayMode/*[in]*/, 
                                                    Outlook_97::Explorer** Explorer/*[out,retval]*/);
  Outlook_97::Explorer* __fastcall GetExplorer(VARIANT DisplayMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall MoveTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::OlItems DefaultItemType = {read = get_DefaultItemType};
  __property   BSTR            DefaultMessageClass = {read = get_DefaultMessageClass};
  __property   BSTR            Description = {read = get_Description};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::Folders* Folders = {read = get_Folders};
  __property   Outlook_97::Items* Items = {read = get_Items};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            StoreID = {read = get_StoreID};
  __property   long            UnReadItemCount = {read = get_UnReadItemCount};
};
typedef _IMAPIFolderDispT<_IMAPIFolder> _IMAPIFolderDisp;

// *********************************************************************//
// DispIntf:  MAPIFolder
// Flags:     (4096) Dispatchable
// GUID:      {00063006-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class MAPIFolderDispT : public TAutoDriver<MAPIFolder>
{
public:
  MAPIFolderDispT(){}

  MAPIFolderDispT(MAPIFolder *pintf)
  {
    TAutoDriver<MAPIFolder>::Bind(pintf, false);
  }

  MAPIFolderDispT(MAPIFolderPtr pintf)
  {
    TAutoDriver<MAPIFolder>::Bind(pintf, true);
  }

  MAPIFolderDispT& operator=(MAPIFolder *pintf)
  {
    TAutoDriver<MAPIFolder>::Bind(pintf, false);
    return *this;
  }

  MAPIFolderDispT& operator=(MAPIFolderPtr pintf)
  {
    TAutoDriver<MAPIFolder>::Bind(pintf, true);
    return *this;
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::OlItems /*[VT_USERDEFINED:0]*/ __fastcall get_DefaultItemType();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_DefaultMessageClass();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Description();
  void /*[VT_VOID:0]*/ __fastcall set_Description(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::Folders* /*[VT_USERDEFINED:1]*/ __fastcall get_Folders();
  Outlook_97::Items* /*[VT_USERDEFINED:1]*/ __fastcall get_Items();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name();
  void /*[VT_VOID:0]*/ __fastcall set_Name(BSTR Param1/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_StoreID();
  long /*[VT_I4:0]*/ __fastcall get_UnReadItemCount();
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall CopyTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display();
  Outlook_97::Explorer* /*[VT_USERDEFINED:1]*/ __fastcall GetExplorer(VARIANT DisplayMode/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall MoveTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::OlItems DefaultItemType = {read = get_DefaultItemType};
  __property   BSTR            DefaultMessageClass = {read = get_DefaultMessageClass};
  __property   BSTR            Description = {read = get_Description};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::Folders* Folders = {read = get_Folders};
  __property   Outlook_97::Items* Items = {read = get_Items};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   BSTR            StoreID = {read = get_StoreID};
  __property   long            UnReadItemCount = {read = get_UnReadItemCount};
};
typedef MAPIFolderDispT<MAPIFolder> MAPIFolderDisp;

// *********************************************************************//
// DispIntf:  _IMeetingCanceledItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063128-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMeetingCanceledItemDispT : public TAutoDriver<_IMeetingCanceledItem>
{
public:
  _IMeetingCanceledItemDispT(){}

  _IMeetingCanceledItemDispT(_IMeetingCanceledItem *pintf)
  {
    TAutoDriver<_IMeetingCanceledItem>::Bind(pintf, false);
  }

  _IMeetingCanceledItemDispT(_IMeetingCanceledItemPtr pintf)
  {
    TAutoDriver<_IMeetingCanceledItem>::Bind(pintf, true);
  }

  _IMeetingCanceledItemDispT& operator=(_IMeetingCanceledItem *pintf)
  {
    TAutoDriver<_IMeetingCanceledItem>::Bind(pintf, false);
    return *this;
  }

  _IMeetingCanceledItemDispT& operator=(_IMeetingCanceledItemPtr pintf)
  {
    TAutoDriver<_IMeetingCanceledItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/
                                                                 , 
                                                                 Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/);
  Outlook_97::AppointmentItem* __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IMeetingCanceledItemDispT<_IMeetingCanceledItem> _IMeetingCanceledItemDisp;

// *********************************************************************//
// DispIntf:  _DMeetingCanceledItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063028-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DMeetingCanceledItemDispT : public TAutoDriver<_DMeetingCanceledItem>
{
public:
  _DMeetingCanceledItemDispT(){}

  _DMeetingCanceledItemDispT(_DMeetingCanceledItem *pintf)
  {
    TAutoDriver<_DMeetingCanceledItem>::Bind(pintf, false);
  }

  _DMeetingCanceledItemDispT(_DMeetingCanceledItemPtr pintf)
  {
    TAutoDriver<_DMeetingCanceledItem>::Bind(pintf, true);
  }

  _DMeetingCanceledItemDispT& operator=(_DMeetingCanceledItem *pintf)
  {
    TAutoDriver<_DMeetingCanceledItem>::Bind(pintf, false);
    return *this;
  }

  _DMeetingCanceledItemDispT& operator=(_DMeetingCanceledItemPtr pintf)
  {
    TAutoDriver<_DMeetingCanceledItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__MeetingCanceledItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__MeetingCanceledItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DMeetingCanceledItemDispT<_DMeetingCanceledItem> _DMeetingCanceledItemDisp;

// *********************************************************************//
// DispIntf:  _IMeetingRequestAcceptedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063130-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMeetingRequestAcceptedItemDispT : public TAutoDriver<_IMeetingRequestAcceptedItem>
{
public:
  _IMeetingRequestAcceptedItemDispT(){}

  _IMeetingRequestAcceptedItemDispT(_IMeetingRequestAcceptedItem *pintf)
  {
    TAutoDriver<_IMeetingRequestAcceptedItem>::Bind(pintf, false);
  }

  _IMeetingRequestAcceptedItemDispT(_IMeetingRequestAcceptedItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestAcceptedItem>::Bind(pintf, true);
  }

  _IMeetingRequestAcceptedItemDispT& operator=(_IMeetingRequestAcceptedItem *pintf)
  {
    TAutoDriver<_IMeetingRequestAcceptedItem>::Bind(pintf, false);
    return *this;
  }

  _IMeetingRequestAcceptedItemDispT& operator=(_IMeetingRequestAcceptedItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestAcceptedItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/
                                                                 , 
                                                                 Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/);
  Outlook_97::AppointmentItem* __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IMeetingRequestAcceptedItemDispT<_IMeetingRequestAcceptedItem> _IMeetingRequestAcceptedItemDisp;

// *********************************************************************//
// DispIntf:  _DMeetingRequestAcceptedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063030-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DMeetingRequestAcceptedItemDispT : public TAutoDriver<_DMeetingRequestAcceptedItem>
{
public:
  _DMeetingRequestAcceptedItemDispT(){}

  _DMeetingRequestAcceptedItemDispT(_DMeetingRequestAcceptedItem *pintf)
  {
    TAutoDriver<_DMeetingRequestAcceptedItem>::Bind(pintf, false);
  }

  _DMeetingRequestAcceptedItemDispT(_DMeetingRequestAcceptedItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestAcceptedItem>::Bind(pintf, true);
  }

  _DMeetingRequestAcceptedItemDispT& operator=(_DMeetingRequestAcceptedItem *pintf)
  {
    TAutoDriver<_DMeetingRequestAcceptedItem>::Bind(pintf, false);
    return *this;
  }

  _DMeetingRequestAcceptedItemDispT& operator=(_DMeetingRequestAcceptedItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestAcceptedItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__MeetingRequestAcceptedItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__MeetingRequestAcceptedItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DMeetingRequestAcceptedItemDispT<_DMeetingRequestAcceptedItem> _DMeetingRequestAcceptedItemDisp;

// *********************************************************************//
// DispIntf:  _IMeetingRequestDeclinedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063131-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMeetingRequestDeclinedItemDispT : public TAutoDriver<_IMeetingRequestDeclinedItem>
{
public:
  _IMeetingRequestDeclinedItemDispT(){}

  _IMeetingRequestDeclinedItemDispT(_IMeetingRequestDeclinedItem *pintf)
  {
    TAutoDriver<_IMeetingRequestDeclinedItem>::Bind(pintf, false);
  }

  _IMeetingRequestDeclinedItemDispT(_IMeetingRequestDeclinedItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestDeclinedItem>::Bind(pintf, true);
  }

  _IMeetingRequestDeclinedItemDispT& operator=(_IMeetingRequestDeclinedItem *pintf)
  {
    TAutoDriver<_IMeetingRequestDeclinedItem>::Bind(pintf, false);
    return *this;
  }

  _IMeetingRequestDeclinedItemDispT& operator=(_IMeetingRequestDeclinedItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestDeclinedItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/
                                                                 , 
                                                                 Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/);
  Outlook_97::AppointmentItem* __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IMeetingRequestDeclinedItemDispT<_IMeetingRequestDeclinedItem> _IMeetingRequestDeclinedItemDisp;

// *********************************************************************//
// DispIntf:  _DMeetingRequestDeclinedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063031-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DMeetingRequestDeclinedItemDispT : public TAutoDriver<_DMeetingRequestDeclinedItem>
{
public:
  _DMeetingRequestDeclinedItemDispT(){}

  _DMeetingRequestDeclinedItemDispT(_DMeetingRequestDeclinedItem *pintf)
  {
    TAutoDriver<_DMeetingRequestDeclinedItem>::Bind(pintf, false);
  }

  _DMeetingRequestDeclinedItemDispT(_DMeetingRequestDeclinedItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestDeclinedItem>::Bind(pintf, true);
  }

  _DMeetingRequestDeclinedItemDispT& operator=(_DMeetingRequestDeclinedItem *pintf)
  {
    TAutoDriver<_DMeetingRequestDeclinedItem>::Bind(pintf, false);
    return *this;
  }

  _DMeetingRequestDeclinedItemDispT& operator=(_DMeetingRequestDeclinedItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestDeclinedItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__MeetingRequestDeclinedItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__MeetingRequestDeclinedItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DMeetingRequestDeclinedItemDispT<_DMeetingRequestDeclinedItem> _DMeetingRequestDeclinedItemDisp;

// *********************************************************************//
// DispIntf:  _IMeetingRequestItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063129-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMeetingRequestItemDispT : public TAutoDriver<_IMeetingRequestItem>
{
public:
  _IMeetingRequestItemDispT(){}

  _IMeetingRequestItemDispT(_IMeetingRequestItem *pintf)
  {
    TAutoDriver<_IMeetingRequestItem>::Bind(pintf, false);
  }

  _IMeetingRequestItemDispT(_IMeetingRequestItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestItem>::Bind(pintf, true);
  }

  _IMeetingRequestItemDispT& operator=(_IMeetingRequestItem *pintf)
  {
    TAutoDriver<_IMeetingRequestItem>::Bind(pintf, false);
    return *this;
  }

  _IMeetingRequestItemDispT& operator=(_IMeetingRequestItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/
                                                                 , 
                                                                 Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/);
  Outlook_97::AppointmentItem* __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IMeetingRequestItemDispT<_IMeetingRequestItem> _IMeetingRequestItemDisp;

// *********************************************************************//
// DispIntf:  _DMeetingRequestItem
// Flags:     (4096) Dispatchable
// GUID:      {00063029-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DMeetingRequestItemDispT : public TAutoDriver<_DMeetingRequestItem>
{
public:
  _DMeetingRequestItemDispT(){}

  _DMeetingRequestItemDispT(_DMeetingRequestItem *pintf)
  {
    TAutoDriver<_DMeetingRequestItem>::Bind(pintf, false);
  }

  _DMeetingRequestItemDispT(_DMeetingRequestItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestItem>::Bind(pintf, true);
  }

  _DMeetingRequestItemDispT& operator=(_DMeetingRequestItem *pintf)
  {
    TAutoDriver<_DMeetingRequestItem>::Bind(pintf, false);
    return *this;
  }

  _DMeetingRequestItemDispT& operator=(_DMeetingRequestItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_MeetingRequestItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_MeetingRequestItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DMeetingRequestItemDispT<_DMeetingRequestItem> _DMeetingRequestItemDisp;

// *********************************************************************//
// DispIntf:  _IMeetingRequestTentativeItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063132-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IMeetingRequestTentativeItemDispT : public TAutoDriver<_IMeetingRequestTentativeItem>
{
public:
  _IMeetingRequestTentativeItemDispT(){}

  _IMeetingRequestTentativeItemDispT(_IMeetingRequestTentativeItem *pintf)
  {
    TAutoDriver<_IMeetingRequestTentativeItem>::Bind(pintf, false);
  }

  _IMeetingRequestTentativeItemDispT(_IMeetingRequestTentativeItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestTentativeItem>::Bind(pintf, true);
  }

  _IMeetingRequestTentativeItemDispT& operator=(_IMeetingRequestTentativeItem *pintf)
  {
    TAutoDriver<_IMeetingRequestTentativeItem>::Bind(pintf, false);
    return *this;
  }

  _IMeetingRequestTentativeItemDispT& operator=(_IMeetingRequestTentativeItemPtr pintf)
  {
    TAutoDriver<_IMeetingRequestTentativeItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/
                                                                 , 
                                                                 Outlook_97::AppointmentItem** AppointmentItem/*[out,retval]*/);
  Outlook_97::AppointmentItem* __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IMeetingRequestTentativeItemDispT<_IMeetingRequestTentativeItem> _IMeetingRequestTentativeItemDisp;

// *********************************************************************//
// DispIntf:  _DMeetingRequestTentativeItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063032-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DMeetingRequestTentativeItemDispT : public TAutoDriver<_DMeetingRequestTentativeItem>
{
public:
  _DMeetingRequestTentativeItemDispT(){}

  _DMeetingRequestTentativeItemDispT(_DMeetingRequestTentativeItem *pintf)
  {
    TAutoDriver<_DMeetingRequestTentativeItem>::Bind(pintf, false);
  }

  _DMeetingRequestTentativeItemDispT(_DMeetingRequestTentativeItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestTentativeItem>::Bind(pintf, true);
  }

  _DMeetingRequestTentativeItemDispT& operator=(_DMeetingRequestTentativeItem *pintf)
  {
    TAutoDriver<_DMeetingRequestTentativeItem>::Bind(pintf, false);
    return *this;
  }

  _DMeetingRequestTentativeItemDispT& operator=(_DMeetingRequestTentativeItemPtr pintf)
  {
    TAutoDriver<_DMeetingRequestTentativeItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__MeetingRequestTentativeItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__MeetingRequestTentativeItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Send();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DMeetingRequestTentativeItemDispT<_DMeetingRequestTentativeItem> _DMeetingRequestTentativeItemDisp;

// *********************************************************************//
// DispIntf:  _INameSpace
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063102-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _INameSpaceDispT : public TAutoDriver<_INameSpace>
{
public:
  _INameSpaceDispT(){}

  _INameSpaceDispT(_INameSpace *pintf)
  {
    TAutoDriver<_INameSpace>::Bind(pintf, false);
  }

  _INameSpaceDispT(_INameSpacePtr pintf)
  {
    TAutoDriver<_INameSpace>::Bind(pintf, true);
  }

  _INameSpaceDispT& operator=(_INameSpace *pintf)
  {
    TAutoDriver<_INameSpace>::Bind(pintf, false);
    return *this;
  }

  _INameSpaceDispT& operator=(_INameSpacePtr pintf)
  {
    TAutoDriver<_INameSpace>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CurrentUser(Outlook_97::Recipient** CurrentUser/*[out,retval]*/);
  Outlook_97::Recipient* __fastcall get_CurrentUser(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Folders(Outlook_97::Folders** Folders/*[out,retval]*/);
  Outlook_97::Folders* __fastcall get_Folders(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(Outlook_97::OutlookApplication** Parent/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Type(BSTR* Type/*[out,retval]*/);
  BSTR            __fastcall get_Type(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall CreateRecipient(BSTR RecipientName/*[in]*/, 
                                                        Outlook_97::Recipient** Recipient/*[out,retval]*/);
  Outlook_97::Recipient* __fastcall CreateRecipient(BSTR RecipientName/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetDefaultFolder(Outlook_97::OlDefaultFolders FolderType/*[in]*/
                                                         , 
                                                         Outlook_97::MAPIFolder** Folder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall GetDefaultFolder(Outlook_97::OlDefaultFolders FolderType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetFolderFromID(BSTR EntryIDFolder/*[in]*/, 
                                                        VARIANT EntryIDStore/*[in]*/, 
                                                        Outlook_97::MAPIFolder** Folder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall GetFolderFromID(BSTR EntryIDFolder/*[in]*/, 
                                                     VARIANT EntryIDStore/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetItemFromID(BSTR EntryIDItem/*[in]*/, 
                                                      VARIANT EntryIDStore/*[in]*/, 
                                                      LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall GetItemFromID(BSTR EntryIDItem/*[in]*/, VARIANT EntryIDStore/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetRecipientFromID(BSTR EntryID/*[in]*/, 
                                                           Outlook_97::Recipient** Recipient/*[out,retval]*/);
  Outlook_97::Recipient* __fastcall GetRecipientFromID(BSTR EntryID/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetSharedDefaultFolder(Outlook_97::Recipient* Recipient/*[in]*/
                                                               , 
                                                               Outlook_97::OlDefaultFolders FolderType/*[in]*/
                                                               , 
                                                               Outlook_97::MAPIFolder** Folder/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall GetSharedDefaultFolder(Outlook_97::Recipient* Recipient/*[in]*/, 
                                                            Outlook_97::OlDefaultFolders FolderType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Logoff();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Logon(VARIANT Profile/*[in]*/, VARIANT Password/*[in]*/, 
                                              VARIANT ShowDialog/*[in]*/, VARIANT NewSession/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Recipient* CurrentUser = {read = get_CurrentUser};
  __property   Outlook_97::Folders* Folders = {read = get_Folders};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
  __property   BSTR            Type = {read = get_Type};
};
typedef _INameSpaceDispT<_INameSpace> _INameSpaceDisp;

// *********************************************************************//
// DispIntf:  NameSpace
// Flags:     (4096) Dispatchable
// GUID:      {00063002-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class NameSpaceDispT : public TAutoDriver<NameSpace>
{
public:
  NameSpaceDispT(){}

  NameSpaceDispT(NameSpace *pintf)
  {
    TAutoDriver<NameSpace>::Bind(pintf, false);
  }

  NameSpaceDispT(NameSpacePtr pintf)
  {
    TAutoDriver<NameSpace>::Bind(pintf, true);
  }

  NameSpaceDispT& operator=(NameSpace *pintf)
  {
    TAutoDriver<NameSpace>::Bind(pintf, false);
    return *this;
  }

  NameSpaceDispT& operator=(NameSpacePtr pintf)
  {
    TAutoDriver<NameSpace>::Bind(pintf, true);
    return *this;
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall get_CurrentUser();
  Outlook_97::Folders* /*[VT_USERDEFINED:1]*/ __fastcall get_Folders();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Type();
  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall CreateRecipient(BSTR RecipientName/*[in]*/);
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall GetDefaultFolder(Outlook_97::OlDefaultFolders FolderType/*[in]*/);
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall GetFolderFromID(BSTR EntryIDFolder/*[in]*/
                                                                            , 
                                                                            VARIANT EntryIDStore/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall GetItemFromID(BSTR EntryIDItem/*[in]*/, 
                                                          VARIANT EntryIDStore/*[in]*/);
  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall GetRecipientFromID(BSTR EntryID/*[in]*/);
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall GetSharedDefaultFolder(Outlook_97::Recipient* Recipient/*[in]*/
                                                                                   , 
                                                                                   Outlook_97::OlDefaultFolders FolderType/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Logoff();
  void /*[VT_VOID:0]*/ __fastcall Logon(VARIANT Profile/*[in]*/, VARIANT Password/*[in]*/, 
                                        VARIANT ShowDialog/*[in]*/, VARIANT NewSession/*[in]*/);

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Recipient* CurrentUser = {read = get_CurrentUser};
  __property   Outlook_97::Folders* Folders = {read = get_Folders};
  __property   Outlook_97::OutlookApplication* Parent = {read = get_Parent};
  __property   BSTR            Type = {read = get_Type};
};
typedef NameSpaceDispT<NameSpace> NameSpaceDisp;

// *********************************************************************//
// DispIntf:  _INoteItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063125-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _INoteItemDispT : public TAutoDriver<_INoteItem>
{
public:
  _INoteItemDispT(){}

  _INoteItemDispT(_INoteItem *pintf)
  {
    TAutoDriver<_INoteItem>::Bind(pintf, false);
  }

  _INoteItemDispT(_INoteItemPtr pintf)
  {
    TAutoDriver<_INoteItem>::Bind(pintf, true);
  }

  _INoteItemDispT& operator=(_INoteItem *pintf)
  {
    TAutoDriver<_INoteItem>::Bind(pintf, false);
    return *this;
  }

  _INoteItemDispT& operator=(_INoteItemPtr pintf)
  {
    TAutoDriver<_INoteItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Color(Outlook_97::OlNoteColor* Color/*[out,retval]*/);
  Outlook_97::OlNoteColor __fastcall get_Color(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Color(Outlook_97::OlNoteColor Color/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Height(long* Height/*[out,retval]*/);
  long            __fastcall get_Height(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Height(long Height/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Left(long* Left/*[out,retval]*/);
  long            __fastcall get_Left(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Left(long Left/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(Outlook_97::MAPIFolder** Parent/*[out,retval]*/);
  Outlook_97::MAPIFolder* __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Top(long* Top/*[out,retval]*/);
  long            __fastcall get_Top(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Top(long Top/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Width(long* Width/*[out,retval]*/);
  long            __fastcall get_Width(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Width(long Width/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   Outlook_97::OlNoteColor Color = {read = get_Color, write = set_Color};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   long            Height = {read = get_Height, write = set_Height};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   long            Left = {read = get_Left, write = set_Left};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   Outlook_97::MAPIFolder* Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   long            Top = {read = get_Top, write = set_Top};
  __property   long            Width = {read = get_Width, write = set_Width};
};
typedef _INoteItemDispT<_INoteItem> _INoteItemDisp;

// *********************************************************************//
// DispIntf:  _DNoteItem
// Flags:     (4096) Dispatchable
// GUID:      {00063025-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DNoteItemDispT : public TAutoDriver<_DNoteItem>
{
public:
  _DNoteItemDispT(){}

  _DNoteItemDispT(_DNoteItem *pintf)
  {
    TAutoDriver<_DNoteItem>::Bind(pintf, false);
  }

  _DNoteItemDispT(_DNoteItemPtr pintf)
  {
    TAutoDriver<_DNoteItem>::Bind(pintf, true);
  }

  _DNoteItemDispT& operator=(_DNoteItem *pintf)
  {
    TAutoDriver<_DNoteItem>::Bind(pintf, false);
    return *this;
  }

  _DNoteItemDispT& operator=(_DNoteItemPtr pintf)
  {
    TAutoDriver<_DNoteItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_NoteItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_NoteItem);
  }

  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  Outlook_97::OlNoteColor /*[VT_USERDEFINED:0]*/ __fastcall get_Color();
  void /*[VT_VOID:0]*/ __fastcall set_Color(Outlook_97::OlNoteColor Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  long /*[VT_I4:0]*/ __fastcall get_Height();
  void /*[VT_VOID:0]*/ __fastcall set_Height(long Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  long /*[VT_I4:0]*/ __fastcall get_Left();
  void /*[VT_VOID:0]*/ __fastcall set_Left(long Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  long /*[VT_I4:0]*/ __fastcall get_Top();
  void /*[VT_VOID:0]*/ __fastcall set_Top(long Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Width();
  void /*[VT_VOID:0]*/ __fastcall set_Width(long Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();

  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   Outlook_97::OlNoteColor Color = {read = get_Color, write = set_Color};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   long            Height = {read = get_Height, write = set_Height};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   long            Left = {read = get_Left, write = set_Left};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   Outlook_97::MAPIFolder* Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   long            Top = {read = get_Top, write = set_Top};
  __property   long            Width = {read = get_Width, write = set_Width};
};
typedef _DNoteItemDispT<_DNoteItem> _DNoteItemDisp;

// *********************************************************************//
// DispIntf:  _IOfficeDocumentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063120-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IOfficeDocumentItemDispT : public TAutoDriver<_IOfficeDocumentItem>
{
public:
  _IOfficeDocumentItemDispT(){}

  _IOfficeDocumentItemDispT(_IOfficeDocumentItem *pintf)
  {
    TAutoDriver<_IOfficeDocumentItem>::Bind(pintf, false);
  }

  _IOfficeDocumentItemDispT(_IOfficeDocumentItemPtr pintf)
  {
    TAutoDriver<_IOfficeDocumentItem>::Bind(pintf, true);
  }

  _IOfficeDocumentItemDispT& operator=(_IOfficeDocumentItem *pintf)
  {
    TAutoDriver<_IOfficeDocumentItem>::Bind(pintf, false);
    return *this;
  }

  _IOfficeDocumentItemDispT& operator=(_IOfficeDocumentItemPtr pintf)
  {
    TAutoDriver<_IOfficeDocumentItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IOfficeDocumentItemDispT<_IOfficeDocumentItem> _IOfficeDocumentItemDisp;

// *********************************************************************//
// DispIntf:  _DOfficeDocumentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063020-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DOfficeDocumentItemDispT : public TAutoDriver<_DOfficeDocumentItem>
{
public:
  _DOfficeDocumentItemDispT(){}

  _DOfficeDocumentItemDispT(_DOfficeDocumentItem *pintf)
  {
    TAutoDriver<_DOfficeDocumentItem>::Bind(pintf, false);
  }

  _DOfficeDocumentItemDispT(_DOfficeDocumentItemPtr pintf)
  {
    TAutoDriver<_DOfficeDocumentItem>::Bind(pintf, true);
  }

  _DOfficeDocumentItemDispT& operator=(_DOfficeDocumentItem *pintf)
  {
    TAutoDriver<_DOfficeDocumentItem>::Bind(pintf, false);
    return *this;
  }

  _DOfficeDocumentItemDispT& operator=(_DOfficeDocumentItemPtr pintf)
  {
    TAutoDriver<_DOfficeDocumentItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__OfficeDocumentItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__OfficeDocumentItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DOfficeDocumentItemDispT<_DOfficeDocumentItem> _DOfficeDocumentItemDisp;

// *********************************************************************//
// DispIntf:  _IPages
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313F-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IPagesDispT : public TAutoDriver<_IPages>
{
public:
  _IPagesDispT(){}

  _IPagesDispT(_IPages *pintf)
  {
    TAutoDriver<_IPages>::Bind(pintf, false);
  }

  _IPagesDispT(_IPagesPtr pintf)
  {
    TAutoDriver<_IPages>::Bind(pintf, true);
  }

  _IPagesDispT& operator=(_IPages *pintf)
  {
    TAutoDriver<_IPages>::Bind(pintf, false);
    return *this;
  }

  _IPagesDispT& operator=(_IPagesPtr pintf)
  {
    TAutoDriver<_IPages>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(VARIANT Name/*[in]*/, 
                                            Msforms_97::Page** Page/*[out,retval]*/);
  Msforms_97::Page* __fastcall Add(VARIANT Name/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, 
                                             Msforms_97::Page** Page/*[out,retval]*/);
  Msforms_97::Page* __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef _IPagesDispT<_IPages> _IPagesDisp;

// *********************************************************************//
// DispIntf:  Pages
// Flags:     (4096) Dispatchable
// GUID:      {0006303F-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class PagesDispT : public TAutoDriver<Pages>
{
public:
  PagesDispT(){}

  PagesDispT(Pages *pintf)
  {
    TAutoDriver<Pages>::Bind(pintf, false);
  }

  PagesDispT(PagesPtr pintf)
  {
    TAutoDriver<Pages>::Bind(pintf, true);
  }

  PagesDispT& operator=(Pages *pintf)
  {
    TAutoDriver<Pages>::Bind(pintf, false);
    return *this;
  }

  PagesDispT& operator=(PagesPtr pintf)
  {
    TAutoDriver<Pages>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  Msforms_97::Page* /*[VT_USERDEFINED:1]*/ __fastcall Add(VARIANT Name/*[in]*/);
  Msforms_97::Page* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef PagesDispT<Pages> PagesDisp;

// *********************************************************************//
// DispIntf:  _IPostItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063124-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IPostItemDispT : public TAutoDriver<_IPostItem>
{
public:
  _IPostItemDispT(){}

  _IPostItemDispT(_IPostItem *pintf)
  {
    TAutoDriver<_IPostItem>::Bind(pintf, false);
  }

  _IPostItemDispT(_IPostItemPtr pintf)
  {
    TAutoDriver<_IPostItem>::Bind(pintf, true);
  }

  _IPostItemDispT& operator=(_IPostItem *pintf)
  {
    TAutoDriver<_IPostItem>::Bind(pintf, false);
    return *this;
  }

  _IPostItemDispT& operator=(_IPostItemPtr pintf)
  {
    TAutoDriver<_IPostItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ConversationIndex(BSTR* ConversationIndex/*[out,retval]*/);
  BSTR            __fastcall get_ConversationIndex(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ConversationTopic(BSTR* ConversationTopic/*[out,retval]*/);
  BSTR            __fastcall get_ConversationTopic(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ExpiryTime(DATE* ExpiryTime/*[out,retval]*/);
  DATE            __fastcall get_ExpiryTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ExpiryTime(DATE ExpiryTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReceivedTime(DATE* ReceivedTime/*[out,retval]*/);
  DATE            __fastcall get_ReceivedTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SenderName(BSTR* SenderName/*[out,retval]*/);
  BSTR            __fastcall get_SenderName(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SentOn(DATE* SentOn/*[out,retval]*/);
  DATE            __fastcall get_SentOn(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ClearConversationIndex();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Forward(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall Forward(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Post();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Reply(Outlook_97::MailItem** Item/*[out,retval]*/);
  Outlook_97::MailItem* __fastcall Reply(void);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            ConversationIndex = {read = get_ConversationIndex};
  __property   BSTR            ConversationTopic = {read = get_ConversationTopic};
  __property   DATE            ExpiryTime = {read = get_ExpiryTime, write = set_ExpiryTime};
  __property   DATE            ReceivedTime = {read = get_ReceivedTime};
  __property   BSTR            SenderName = {read = get_SenderName};
  __property   DATE            SentOn = {read = get_SentOn};
};
typedef _IPostItemDispT<_IPostItem> _IPostItemDisp;

// *********************************************************************//
// DispIntf:  _DPostItem
// Flags:     (4096) Dispatchable
// GUID:      {00063024-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DPostItemDispT : public TAutoDriver<_DPostItem>
{
public:
  _DPostItemDispT(){}

  _DPostItemDispT(_DPostItem *pintf)
  {
    TAutoDriver<_DPostItem>::Bind(pintf, false);
  }

  _DPostItemDispT(_DPostItemPtr pintf)
  {
    TAutoDriver<_DPostItem>::Bind(pintf, true);
  }

  _DPostItemDispT& operator=(_DPostItem *pintf)
  {
    TAutoDriver<_DPostItem>::Bind(pintf, false);
    return *this;
  }

  _DPostItemDispT& operator=(_DPostItemPtr pintf)
  {
    TAutoDriver<_DPostItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_PostItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_PostItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationIndex();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ConversationTopic();
  DATE /*[VT_DATE:0]*/ __fastcall get_ExpiryTime();
  void /*[VT_VOID:0]*/ __fastcall set_ExpiryTime(DATE Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_ReceivedTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_SenderName();
  DATE /*[VT_DATE:0]*/ __fastcall get_SentOn();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  void /*[VT_VOID:0]*/ __fastcall ClearConversationIndex();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Forward();
  void /*[VT_VOID:0]*/ __fastcall Post();
  Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall Reply();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   BSTR            ConversationIndex = {read = get_ConversationIndex};
  __property   BSTR            ConversationTopic = {read = get_ConversationTopic};
  __property   DATE            ExpiryTime = {read = get_ExpiryTime, write = set_ExpiryTime};
  __property   DATE            ReceivedTime = {read = get_ReceivedTime};
  __property   BSTR            SenderName = {read = get_SenderName};
  __property   DATE            SentOn = {read = get_SentOn};
};
typedef _DPostItemDispT<_DPostItem> _DPostItemDisp;

// *********************************************************************//
// DispIntf:  _IRecipient
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063145-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IRecipientDispT : public TAutoDriver<_IRecipient>
{
public:
  _IRecipientDispT(){}

  _IRecipientDispT(_IRecipient *pintf)
  {
    TAutoDriver<_IRecipient>::Bind(pintf, false);
  }

  _IRecipientDispT(_IRecipientPtr pintf)
  {
    TAutoDriver<_IRecipient>::Bind(pintf, true);
  }

  _IRecipientDispT& operator=(_IRecipient *pintf)
  {
    TAutoDriver<_IRecipient>::Bind(pintf, false);
    return *this;
  }

  _IRecipientDispT& operator=(_IRecipientPtr pintf)
  {
    TAutoDriver<_IRecipient>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Address(BSTR* Address/*[out,retval]*/);
  BSTR            __fastcall get_Address(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_AutoResponse(BSTR* AutoResponse/*[out,retval]*/);
  BSTR            __fastcall get_AutoResponse(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_AutoResponse(BSTR AutoResponse/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MeetingResponseStatus(Outlook_97::OlResponseStatus* MeetingResponseStatus/*[out,retval]*/);
  Outlook_97::OlResponseStatus __fastcall get_MeetingResponseStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MeetingResponseStatus(Outlook_97::OlResponseStatus MeetingResponseStatus/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Name(BSTR* Name/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Resolved(VARIANT_BOOL* Resolved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Resolved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TrackingStatus(Outlook_97::OlTrackingStatus* TrackingStatus/*[out,retval]*/);
  Outlook_97::OlTrackingStatus __fastcall get_TrackingStatus(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_TrackingStatus(Outlook_97::OlTrackingStatus TrackingStatus/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TrackingStatusTime(DATE* TrackingStatusTime/*[out,retval]*/);
  DATE            __fastcall get_TrackingStatusTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_TrackingStatusTime(DATE TrackingStatusTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Type(long* Type/*[out,retval]*/);
  long            __fastcall get_Type(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Type(long Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall FreeBusy(DATE Start/*[in]*/, long MinPerChar/*[in]*/, 
                                                 VARIANT CompleteFormat/*[in]*/, 
                                                 BSTR* FreeBusyInfo/*[out,retval]*/);
  BSTR            __fastcall FreeBusy(DATE Start/*[in]*/, long MinPerChar/*[in]*/, 
                                      VARIANT CompleteFormat/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Resolve(VARIANT_BOOL* Success/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Resolve(void);

  __property   BSTR            Address = {read = get_Address};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            AutoResponse = {read = get_AutoResponse};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::OlResponseStatus MeetingResponseStatus = {read = get_MeetingResponseStatus, write = set_MeetingResponseStatus};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Resolved = {read = get_Resolved};
  __property   Outlook_97::OlTrackingStatus TrackingStatus = {read = get_TrackingStatus, write = set_TrackingStatus};
  __property   DATE            TrackingStatusTime = {read = get_TrackingStatusTime, write = set_TrackingStatusTime};
  __property   long            Type = {read = get_Type, write = set_Type};
};
typedef _IRecipientDispT<_IRecipient> _IRecipientDisp;

// *********************************************************************//
// DispIntf:  Recipient
// Flags:     (4096) Dispatchable
// GUID:      {00063045-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class RecipientDispT : public TAutoDriver<Recipient>
{
public:
  RecipientDispT(){}

  RecipientDispT(Recipient *pintf)
  {
    TAutoDriver<Recipient>::Bind(pintf, false);
  }

  RecipientDispT(RecipientPtr pintf)
  {
    TAutoDriver<Recipient>::Bind(pintf, true);
  }

  RecipientDispT& operator=(Recipient *pintf)
  {
    TAutoDriver<Recipient>::Bind(pintf, false);
    return *this;
  }

  RecipientDispT& operator=(RecipientPtr pintf)
  {
    TAutoDriver<Recipient>::Bind(pintf, true);
    return *this;
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Address();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_AutoResponse();
  void /*[VT_VOID:0]*/ __fastcall set_AutoResponse(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::OlResponseStatus /*[VT_USERDEFINED:0]*/ __fastcall get_MeetingResponseStatus();
  void /*[VT_VOID:0]*/ __fastcall set_MeetingResponseStatus(Outlook_97::OlResponseStatus Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Resolved();
  Outlook_97::OlTrackingStatus /*[VT_USERDEFINED:0]*/ __fastcall get_TrackingStatus();
  void /*[VT_VOID:0]*/ __fastcall set_TrackingStatus(Outlook_97::OlTrackingStatus Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_TrackingStatusTime();
  void /*[VT_VOID:0]*/ __fastcall set_TrackingStatusTime(DATE Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Type();
  void /*[VT_VOID:0]*/ __fastcall set_Type(long Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Delete();
  BSTR /*[VT_BSTR:0]*/ __fastcall FreeBusy(DATE Start/*[in]*/, long MinPerChar/*[in]*/, 
                                           VARIANT CompleteFormat/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall Resolve();

  __property   BSTR            Address = {read = get_Address};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   BSTR            AutoResponse = {read = get_AutoResponse};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::OlResponseStatus MeetingResponseStatus = {read = get_MeetingResponseStatus, write = set_MeetingResponseStatus};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Resolved = {read = get_Resolved};
  __property   Outlook_97::OlTrackingStatus TrackingStatus = {read = get_TrackingStatus, write = set_TrackingStatus};
  __property   DATE            TrackingStatusTime = {read = get_TrackingStatusTime, write = set_TrackingStatusTime};
  __property   long            Type = {read = get_Type, write = set_Type};
};
typedef RecipientDispT<Recipient> RecipientDisp;

// *********************************************************************//
// DispIntf:  _IRecipients
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313B-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IRecipientsDispT : public TAutoDriver<_IRecipients>
{
public:
  _IRecipientsDispT(){}

  _IRecipientsDispT(_IRecipients *pintf)
  {
    TAutoDriver<_IRecipients>::Bind(pintf, false);
  }

  _IRecipientsDispT(_IRecipientsPtr pintf)
  {
    TAutoDriver<_IRecipients>::Bind(pintf, true);
  }

  _IRecipientsDispT& operator=(_IRecipients *pintf)
  {
    TAutoDriver<_IRecipients>::Bind(pintf, false);
    return *this;
  }

  _IRecipientsDispT& operator=(_IRecipientsPtr pintf)
  {
    TAutoDriver<_IRecipients>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(BSTR Name/*[in]*/, 
                                            Outlook_97::Recipient** Recipient/*[out,retval]*/);
  Outlook_97::Recipient* __fastcall Add(BSTR Name/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, 
                                             Outlook_97::Recipient** Recipient/*[out,retval]*/);
  Outlook_97::Recipient* __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ResolveAll(VARIANT_BOOL* Success/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ResolveAll(void);

  __property   long            Count = {read = get_Count};
};
typedef _IRecipientsDispT<_IRecipients> _IRecipientsDisp;

// *********************************************************************//
// DispIntf:  Recipients
// Flags:     (4096) Dispatchable
// GUID:      {0006303B-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class RecipientsDispT : public TAutoDriver<Recipients>
{
public:
  RecipientsDispT(){}

  RecipientsDispT(Recipients *pintf)
  {
    TAutoDriver<Recipients>::Bind(pintf, false);
  }

  RecipientsDispT(RecipientsPtr pintf)
  {
    TAutoDriver<Recipients>::Bind(pintf, true);
  }

  RecipientsDispT& operator=(Recipients *pintf)
  {
    TAutoDriver<Recipients>::Bind(pintf, false);
    return *this;
  }

  RecipientsDispT& operator=(RecipientsPtr pintf)
  {
    TAutoDriver<Recipients>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall Add(BSTR Name/*[in]*/);
  Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall ResolveAll();

  __property   long            Count = {read = get_Count};
};
typedef RecipientsDispT<Recipients> RecipientsDisp;

// *********************************************************************//
// DispIntf:  _IRecurrencePattern
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063144-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IRecurrencePatternDispT : public TAutoDriver<_IRecurrencePattern>
{
public:
  _IRecurrencePatternDispT(){}

  _IRecurrencePatternDispT(_IRecurrencePattern *pintf)
  {
    TAutoDriver<_IRecurrencePattern>::Bind(pintf, false);
  }

  _IRecurrencePatternDispT(_IRecurrencePatternPtr pintf)
  {
    TAutoDriver<_IRecurrencePattern>::Bind(pintf, true);
  }

  _IRecurrencePatternDispT& operator=(_IRecurrencePattern *pintf)
  {
    TAutoDriver<_IRecurrencePattern>::Bind(pintf, false);
    return *this;
  }

  _IRecurrencePatternDispT& operator=(_IRecurrencePatternPtr pintf)
  {
    TAutoDriver<_IRecurrencePattern>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DayOfMonth(long* DayOfMonth/*[out,retval]*/);
  long            __fastcall get_DayOfMonth(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DayOfMonth(long DayOfMonth/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DayOfWeekMask(Outlook_97::OlDaysOfWeek* DayOfWeekMask/*[out,retval]*/);
  Outlook_97::OlDaysOfWeek __fastcall get_DayOfWeekMask(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DayOfWeekMask(Outlook_97::OlDaysOfWeek DayOfWeekMask/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Duration(long* Duration/*[out,retval]*/);
  long            __fastcall get_Duration(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Duration(long Duration/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EndTime(DATE* EndTime/*[out,retval]*/);
  DATE            __fastcall get_EndTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_EndTime(DATE EndTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Instance(long* Instance/*[out,retval]*/);
  long            __fastcall get_Instance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Instance(long Instance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Interval(long* Interval/*[out,retval]*/);
  long            __fastcall get_Interval(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Interval(long Interval/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MonthOfYear(long* MonthOfYear/*[out,retval]*/);
  long            __fastcall get_MonthOfYear(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MonthOfYear(long MonthOfYear/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoEndDate(VARIANT_BOOL* NoEndDate/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoEndDate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoEndDate(VARIANT_BOOL NoEndDate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Occurrences(long* Occurrences/*[out,retval]*/);
  long            __fastcall get_Occurrences(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Occurrences(long Occurrences/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PatternEndDate(DATE* PatternEndDate/*[out,retval]*/);
  DATE            __fastcall get_PatternEndDate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_PatternEndDate(DATE PatternEndDate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PatternStartDate(DATE* PatternStartDate/*[out,retval]*/);
  DATE            __fastcall get_PatternStartDate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_PatternStartDate(DATE PatternStartDate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_RecurrenceType(Outlook_97::OlRecurrenceType* RecurrenceType/*[out,retval]*/);
  Outlook_97::OlRecurrenceType __fastcall get_RecurrenceType(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_RecurrenceType(Outlook_97::OlRecurrenceType RecurrenceType/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Regenerate(VARIANT_BOOL* Regenerate/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Regenerate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Regenerate(VARIANT_BOOL Regenerate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_StartTime(DATE* StartTime/*[out,retval]*/);
  DATE            __fastcall get_StartTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_StartTime(DATE StartTime/*[in]*/);

  __property   long            DayOfMonth = {read = get_DayOfMonth, write = set_DayOfMonth};
  __property   Outlook_97::OlDaysOfWeek DayOfWeekMask = {read = get_DayOfWeekMask, write = set_DayOfWeekMask};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            EndTime = {read = get_EndTime, write = set_EndTime};
  __property   long            Instance = {read = get_Instance, write = set_Instance};
  __property   long            Interval = {read = get_Interval, write = set_Interval};
  __property   long            MonthOfYear = {read = get_MonthOfYear, write = set_MonthOfYear};
  __property   VARIANT_BOOL    NoEndDate = {read = get_NoEndDate, write = set_NoEndDate};
  __property   long            Occurrences = {read = get_Occurrences, write = set_Occurrences};
  __property   DATE            PatternEndDate = {read = get_PatternEndDate, write = set_PatternEndDate};
  __property   DATE            PatternStartDate = {read = get_PatternStartDate, write = set_PatternStartDate};
  __property   Outlook_97::OlRecurrenceType RecurrenceType = {read = get_RecurrenceType, write = set_RecurrenceType};
  __property   VARIANT_BOOL    Regenerate = {read = get_Regenerate, write = set_Regenerate};
  __property   DATE            StartTime = {read = get_StartTime, write = set_StartTime};
};
typedef _IRecurrencePatternDispT<_IRecurrencePattern> _IRecurrencePatternDisp;

// *********************************************************************//
// DispIntf:  RecurrencePattern
// Flags:     (4096) Dispatchable
// GUID:      {00063044-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class RecurrencePatternDispT : public TAutoDriver<RecurrencePattern>
{
public:
  RecurrencePatternDispT(){}

  RecurrencePatternDispT(RecurrencePattern *pintf)
  {
    TAutoDriver<RecurrencePattern>::Bind(pintf, false);
  }

  RecurrencePatternDispT(RecurrencePatternPtr pintf)
  {
    TAutoDriver<RecurrencePattern>::Bind(pintf, true);
  }

  RecurrencePatternDispT& operator=(RecurrencePattern *pintf)
  {
    TAutoDriver<RecurrencePattern>::Bind(pintf, false);
    return *this;
  }

  RecurrencePatternDispT& operator=(RecurrencePatternPtr pintf)
  {
    TAutoDriver<RecurrencePattern>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_DayOfMonth();
  void /*[VT_VOID:0]*/ __fastcall set_DayOfMonth(long Param1/*[in]*/);
  Outlook_97::OlDaysOfWeek /*[VT_USERDEFINED:0]*/ __fastcall get_DayOfWeekMask();
  void /*[VT_VOID:0]*/ __fastcall set_DayOfWeekMask(Outlook_97::OlDaysOfWeek Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Duration();
  void /*[VT_VOID:0]*/ __fastcall set_Duration(long Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_EndTime();
  void /*[VT_VOID:0]*/ __fastcall set_EndTime(DATE Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Instance();
  void /*[VT_VOID:0]*/ __fastcall set_Instance(long Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Interval();
  void /*[VT_VOID:0]*/ __fastcall set_Interval(long Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_MonthOfYear();
  void /*[VT_VOID:0]*/ __fastcall set_MonthOfYear(long Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoEndDate();
  void /*[VT_VOID:0]*/ __fastcall set_NoEndDate(VARIANT_BOOL Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Occurrences();
  void /*[VT_VOID:0]*/ __fastcall set_Occurrences(long Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_PatternEndDate();
  void /*[VT_VOID:0]*/ __fastcall set_PatternEndDate(DATE Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_PatternStartDate();
  void /*[VT_VOID:0]*/ __fastcall set_PatternStartDate(DATE Param1/*[in]*/);
  Outlook_97::OlRecurrenceType /*[VT_USERDEFINED:0]*/ __fastcall get_RecurrenceType();
  void /*[VT_VOID:0]*/ __fastcall set_RecurrenceType(Outlook_97::OlRecurrenceType Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Regenerate();
  void /*[VT_VOID:0]*/ __fastcall set_Regenerate(VARIANT_BOOL Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_StartTime();
  void /*[VT_VOID:0]*/ __fastcall set_StartTime(DATE Param1/*[in]*/);

  __property   long            DayOfMonth = {read = get_DayOfMonth, write = set_DayOfMonth};
  __property   Outlook_97::OlDaysOfWeek DayOfWeekMask = {read = get_DayOfWeekMask, write = set_DayOfWeekMask};
  __property   long            Duration = {read = get_Duration, write = set_Duration};
  __property   DATE            EndTime = {read = get_EndTime, write = set_EndTime};
  __property   long            Instance = {read = get_Instance, write = set_Instance};
  __property   long            Interval = {read = get_Interval, write = set_Interval};
  __property   long            MonthOfYear = {read = get_MonthOfYear, write = set_MonthOfYear};
  __property   VARIANT_BOOL    NoEndDate = {read = get_NoEndDate, write = set_NoEndDate};
  __property   long            Occurrences = {read = get_Occurrences, write = set_Occurrences};
  __property   DATE            PatternEndDate = {read = get_PatternEndDate, write = set_PatternEndDate};
  __property   DATE            PatternStartDate = {read = get_PatternStartDate, write = set_PatternStartDate};
  __property   Outlook_97::OlRecurrenceType RecurrenceType = {read = get_RecurrenceType, write = set_RecurrenceType};
  __property   VARIANT_BOOL    Regenerate = {read = get_Regenerate, write = set_Regenerate};
  __property   DATE            StartTime = {read = get_StartTime, write = set_StartTime};
};
typedef RecurrencePatternDispT<RecurrencePattern> RecurrencePatternDisp;

// *********************************************************************//
// DispIntf:  _IRemoteItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063123-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IRemoteItemDispT : public TAutoDriver<_IRemoteItem>
{
public:
  _IRemoteItemDispT(){}

  _IRemoteItemDispT(_IRemoteItem *pintf)
  {
    TAutoDriver<_IRemoteItem>::Bind(pintf, false);
  }

  _IRemoteItemDispT(_IRemoteItemPtr pintf)
  {
    TAutoDriver<_IRemoteItem>::Bind(pintf, true);
  }

  _IRemoteItemDispT& operator=(_IRemoteItem *pintf)
  {
    TAutoDriver<_IRemoteItem>::Bind(pintf, false);
    return *this;
  }

  _IRemoteItemDispT& operator=(_IRemoteItemPtr pintf)
  {
    TAutoDriver<_IRemoteItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_HasAttachment(VARIANT_BOOL* HasAttachment/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_HasAttachment(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_RemoteMessageClass(BSTR* RemoteMessageClass/*[out,retval]*/);
  BSTR            __fastcall get_RemoteMessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TransferSize(long* TransferSize/*[out,retval]*/);
  long            __fastcall get_TransferSize(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TransferTime(long* TransferTime/*[out,retval]*/);
  long            __fastcall get_TransferTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    HasAttachment = {read = get_HasAttachment};
  __property   BSTR            RemoteMessageClass = {read = get_RemoteMessageClass};
  __property   long            TransferSize = {read = get_TransferSize};
  __property   long            TransferTime = {read = get_TransferTime};
};
typedef _IRemoteItemDispT<_IRemoteItem> _IRemoteItemDisp;

// *********************************************************************//
// DispIntf:  _DRemoteItem
// Flags:     (4096) Dispatchable
// GUID:      {00063023-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DRemoteItemDispT : public TAutoDriver<_DRemoteItem>
{
public:
  _DRemoteItemDispT(){}

  _DRemoteItemDispT(_DRemoteItem *pintf)
  {
    TAutoDriver<_DRemoteItem>::Bind(pintf, false);
  }

  _DRemoteItemDispT(_DRemoteItemPtr pintf)
  {
    TAutoDriver<_DRemoteItem>::Bind(pintf, true);
  }

  _DRemoteItemDispT& operator=(_DRemoteItem *pintf)
  {
    TAutoDriver<_DRemoteItem>::Bind(pintf, false);
    return *this;
  }

  _DRemoteItemDispT& operator=(_DRemoteItemPtr pintf)
  {
    TAutoDriver<_DRemoteItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RemoteItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RemoteItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_HasAttachment();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_RemoteMessageClass();
  long /*[VT_I4:0]*/ __fastcall get_TransferSize();
  long /*[VT_I4:0]*/ __fastcall get_TransferTime();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   VARIANT_BOOL    HasAttachment = {read = get_HasAttachment};
  __property   BSTR            RemoteMessageClass = {read = get_RemoteMessageClass};
  __property   long            TransferSize = {read = get_TransferSize};
  __property   long            TransferTime = {read = get_TransferTime};
};
typedef _DRemoteItemDispT<_DRemoteItem> _DRemoteItemDisp;

// *********************************************************************//
// DispIntf:  _IReportItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063126-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IReportItemDispT : public TAutoDriver<_IReportItem>
{
public:
  _IReportItemDispT(){}

  _IReportItemDispT(_IReportItem *pintf)
  {
    TAutoDriver<_IReportItem>::Bind(pintf, false);
  }

  _IReportItemDispT(_IReportItemPtr pintf)
  {
    TAutoDriver<_IReportItem>::Bind(pintf, true);
  }

  _IReportItemDispT& operator=(_IReportItem *pintf)
  {
    TAutoDriver<_IReportItem>::Bind(pintf, false);
    return *this;
  }

  _IReportItemDispT& operator=(_IReportItemPtr pintf)
  {
    TAutoDriver<_IReportItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _IReportItemDispT<_IReportItem> _IReportItemDisp;

// *********************************************************************//
// DispIntf:  _DReportItem
// Flags:     (4096) Dispatchable
// GUID:      {00063026-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DReportItemDispT : public TAutoDriver<_DReportItem>
{
public:
  _DReportItemDispT(){}

  _DReportItemDispT(_DReportItem *pintf)
  {
    TAutoDriver<_DReportItem>::Bind(pintf, false);
  }

  _DReportItemDispT(_DReportItemPtr pintf)
  {
    TAutoDriver<_DReportItem>::Bind(pintf, true);
  }

  _DReportItemDispT& operator=(_DReportItem *pintf)
  {
    TAutoDriver<_DReportItem>::Bind(pintf, false);
    return *this;
  }

  _DReportItemDispT& operator=(_DReportItemPtr pintf)
  {
    TAutoDriver<_DReportItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ReportItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ReportItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DReportItemDispT<_DReportItem> _DReportItemDisp;

// *********************************************************************//
// DispIntf:  _ITaskItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063135-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _ITaskItemDispT : public TAutoDriver<_ITaskItem>
{
public:
  _ITaskItemDispT(){}

  _ITaskItemDispT(_ITaskItem *pintf)
  {
    TAutoDriver<_ITaskItem>::Bind(pintf, false);
  }

  _ITaskItemDispT(_ITaskItemPtr pintf)
  {
    TAutoDriver<_ITaskItem>::Bind(pintf, true);
  }

  _ITaskItemDispT& operator=(_ITaskItem *pintf)
  {
    TAutoDriver<_ITaskItem>::Bind(pintf, false);
    return *this;
  }

  _ITaskItemDispT& operator=(_ITaskItemPtr pintf)
  {
    TAutoDriver<_ITaskItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ActualWork(long* ActualWork/*[out,retval]*/);
  long            __fastcall get_ActualWork(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ActualWork(long ActualWork/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CardData(BSTR* CardData/*[out,retval]*/);
  BSTR            __fastcall get_CardData(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_CardData(BSTR CardData/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Complete(VARIANT_BOOL* Complete/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Complete(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Complete(VARIANT_BOOL Complete/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Contacts(BSTR* Contacts/*[out,retval]*/);
  BSTR            __fastcall get_Contacts(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Contacts(BSTR Contacts/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DateCompleted(DATE* DateCompleted/*[out,retval]*/);
  DATE            __fastcall get_DateCompleted(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DateCompleted(DATE DateCompleted/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DelegationState(Outlook_97::OlTaskDelegationState* DelegationState/*[out,retval]*/);
  Outlook_97::OlTaskDelegationState __fastcall get_DelegationState(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Delegator(BSTR* Delegator/*[out,retval]*/);
  BSTR            __fastcall get_Delegator(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_DueDate(DATE* DueDate/*[out,retval]*/);
  DATE            __fastcall get_DueDate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_DueDate(DATE DueDate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_IsRecurring(VARIANT_BOOL* IsRecurring/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsRecurring(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Ordinal(long* Ordinal/*[out,retval]*/);
  long            __fastcall get_Ordinal(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Ordinal(long Ordinal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Owner(BSTR* Owner/*[out,retval]*/);
  BSTR            __fastcall get_Owner(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Owner(BSTR Owner/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Ownership(Outlook_97::OlTaskOwnership* Ownership/*[out,retval]*/);
  Outlook_97::OlTaskOwnership __fastcall get_Ownership(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_PercentComplete(long* PercentComplete/*[out,retval]*/);
  long            __fastcall get_PercentComplete(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_PercentComplete(long PercentComplete/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Recipients(Outlook_97::Recipients** Recipients/*[out,retval]*/);
  Outlook_97::Recipients* __fastcall get_Recipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderOverrideDefault(VARIANT_BOOL* ReminderOverrideDefault/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderOverrideDefault(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL ReminderOverrideDefault/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderPlaySound(VARIANT_BOOL* ReminderPlaySound/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderPlaySound(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL ReminderPlaySound/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderSet(VARIANT_BOOL* ReminderSet/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReminderSet(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL ReminderSet/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderSoundFile(BSTR* ReminderSoundFile/*[out,retval]*/);
  BSTR            __fastcall get_ReminderSoundFile(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderSoundFile(BSTR ReminderSoundFile/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReminderTime(DATE* ReminderTime/*[out,retval]*/);
  DATE            __fastcall get_ReminderTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReminderTime(DATE ReminderTime/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ResponseState(Outlook_97::OlTaskResponse* ResponseState/*[out,retval]*/);
  Outlook_97::OlTaskResponse __fastcall get_ResponseState(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Role(BSTR* Role/*[out,retval]*/);
  BSTR            __fastcall get_Role(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Role(BSTR Role/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SchedulePlusPriority(BSTR* SchedulePlusPriority/*[out,retval]*/);
  BSTR            __fastcall get_SchedulePlusPriority(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_SchedulePlusPriority(BSTR SchedulePlusPriority/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_StartDate(DATE* StartDate/*[out,retval]*/);
  DATE            __fastcall get_StartDate(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_StartDate(DATE StartDate/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Status(Outlook_97::OlTaskStatus* Status/*[out,retval]*/);
  Outlook_97::OlTaskStatus __fastcall get_Status(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Status(Outlook_97::OlTaskStatus Status/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_StatusOnCompletionRecipients(BSTR* StatusOnCompletionRecipients/*[out,retval]*/);
  BSTR            __fastcall get_StatusOnCompletionRecipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_StatusOnCompletionRecipients(BSTR StatusOnCompletionRecipients/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_StatusUpdateRecipients(BSTR* StatusUpdateRecipients/*[out,retval]*/);
  BSTR            __fastcall get_StatusUpdateRecipients(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_StatusUpdateRecipients(BSTR StatusUpdateRecipients/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TeamTask(VARIANT_BOOL* TeamTask/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_TeamTask(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_TeamTask(VARIANT_BOOL TeamTask/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_TotalWork(long* TotalWork/*[out,retval]*/);
  long            __fastcall get_TotalWork(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_TotalWork(long TotalWork/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Assign(Outlook_97::TaskItem** Item/*[out,retval]*/);
  Outlook_97::TaskItem* __fastcall Assign(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall CancelResponseState();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall ClearRecurrencePattern();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetRecurrencePattern();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall MarkComplete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Respond(Outlook_97::OlTaskResponse Response/*[in]*/, 
                                                VARIANT fNoUI/*[in]*/, 
                                                VARIANT fAdditionalTextDialog/*[in]*/, 
                                                Outlook_97::TaskItem** Item/*[out,retval]*/);
  Outlook_97::TaskItem* __fastcall Respond(Outlook_97::OlTaskResponse Response/*[in]*/, 
                                           VARIANT fNoUI/*[in]*/, 
                                           VARIANT fAdditionalTextDialog/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Send();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall SkipRecurrence();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall StatusReport(LPDISPATCH* StatusReport/*[out,retval]*/);
  LPDISPATCH      __fastcall StatusReport(void);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   long            ActualWork = {read = get_ActualWork, write = set_ActualWork};
  __property   BSTR            CardData = {read = get_CardData};
  __property   VARIANT_BOOL    Complete = {read = get_Complete, write = set_Complete};
  __property   BSTR            Contacts = {read = get_Contacts};
  __property   DATE            DateCompleted = {read = get_DateCompleted, write = set_DateCompleted};
  __property   Outlook_97::OlTaskDelegationState DelegationState = {read = get_DelegationState};
  __property   BSTR            Delegator = {read = get_Delegator};
  __property   DATE            DueDate = {read = get_DueDate, write = set_DueDate};
  __property   VARIANT_BOOL    IsRecurring = {read = get_IsRecurring};
  __property   long            Ordinal = {read = get_Ordinal, write = set_Ordinal};
  __property   BSTR            Owner = {read = get_Owner};
  __property   Outlook_97::OlTaskOwnership Ownership = {read = get_Ownership};
  __property   long            PercentComplete = {read = get_PercentComplete, write = set_PercentComplete};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReminderTime = {read = get_ReminderTime, write = set_ReminderTime};
  __property   Outlook_97::OlTaskResponse ResponseState = {read = get_ResponseState};
  __property   BSTR            Role = {read = get_Role};
  __property   BSTR            SchedulePlusPriority = {read = get_SchedulePlusPriority};
  __property   DATE            StartDate = {read = get_StartDate, write = set_StartDate};
  __property   Outlook_97::OlTaskStatus Status = {read = get_Status, write = set_Status};
  __property   BSTR            StatusOnCompletionRecipients = {read = get_StatusOnCompletionRecipients};
  __property   BSTR            StatusUpdateRecipients = {read = get_StatusUpdateRecipients};
  __property   VARIANT_BOOL    TeamTask = {read = get_TeamTask, write = set_TeamTask};
  __property   long            TotalWork = {read = get_TotalWork, write = set_TotalWork};
};
typedef _ITaskItemDispT<_ITaskItem> _ITaskItemDisp;

// *********************************************************************//
// DispIntf:  _DTaskItem
// Flags:     (4096) Dispatchable
// GUID:      {00063035-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DTaskItemDispT : public TAutoDriver<_DTaskItem>
{
public:
  _DTaskItemDispT(){}

  _DTaskItemDispT(_DTaskItem *pintf)
  {
    TAutoDriver<_DTaskItem>::Bind(pintf, false);
  }

  _DTaskItemDispT(_DTaskItemPtr pintf)
  {
    TAutoDriver<_DTaskItem>::Bind(pintf, true);
  }

  _DTaskItemDispT& operator=(_DTaskItem *pintf)
  {
    TAutoDriver<_DTaskItem>::Bind(pintf, false);
    return *this;
  }

  _DTaskItemDispT& operator=(_DTaskItemPtr pintf)
  {
    TAutoDriver<_DTaskItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_TaskItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_TaskItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  long /*[VT_I4:0]*/ __fastcall get_ActualWork();
  void /*[VT_VOID:0]*/ __fastcall set_ActualWork(long Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_CardData();
  void /*[VT_VOID:0]*/ __fastcall set_CardData(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Complete();
  void /*[VT_VOID:0]*/ __fastcall set_Complete(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Contacts();
  void /*[VT_VOID:0]*/ __fastcall set_Contacts(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_DateCompleted();
  void /*[VT_VOID:0]*/ __fastcall set_DateCompleted(DATE Param1/*[in]*/);
  Outlook_97::OlTaskDelegationState /*[VT_USERDEFINED:0]*/ __fastcall get_DelegationState();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Delegator();
  DATE /*[VT_DATE:0]*/ __fastcall get_DueDate();
  void /*[VT_VOID:0]*/ __fastcall set_DueDate(DATE Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_IsRecurring();
  long /*[VT_I4:0]*/ __fastcall get_Ordinal();
  void /*[VT_VOID:0]*/ __fastcall set_Ordinal(long Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Owner();
  void /*[VT_VOID:0]*/ __fastcall set_Owner(BSTR Param1/*[in]*/);
  Outlook_97::OlTaskOwnership /*[VT_USERDEFINED:0]*/ __fastcall get_Ownership();
  long /*[VT_I4:0]*/ __fastcall get_PercentComplete();
  void /*[VT_VOID:0]*/ __fastcall set_PercentComplete(long Param1/*[in]*/);
  Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall get_Recipients();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderOverrideDefault();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderPlaySound();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReminderSet();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderSet(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ReminderSoundFile();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderSoundFile(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_ReminderTime();
  void /*[VT_VOID:0]*/ __fastcall set_ReminderTime(DATE Param1/*[in]*/);
  Outlook_97::OlTaskResponse /*[VT_USERDEFINED:0]*/ __fastcall get_ResponseState();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Role();
  void /*[VT_VOID:0]*/ __fastcall set_Role(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_SchedulePlusPriority();
  void /*[VT_VOID:0]*/ __fastcall set_SchedulePlusPriority(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_StartDate();
  void /*[VT_VOID:0]*/ __fastcall set_StartDate(DATE Param1/*[in]*/);
  Outlook_97::OlTaskStatus /*[VT_USERDEFINED:0]*/ __fastcall get_Status();
  void /*[VT_VOID:0]*/ __fastcall set_Status(Outlook_97::OlTaskStatus Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_StatusOnCompletionRecipients();
  void /*[VT_VOID:0]*/ __fastcall set_StatusOnCompletionRecipients(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_StatusUpdateRecipients();
  void /*[VT_VOID:0]*/ __fastcall set_StatusUpdateRecipients(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_TeamTask();
  void /*[VT_VOID:0]*/ __fastcall set_TeamTask(VARIANT_BOOL Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_TotalWork();
  void /*[VT_VOID:0]*/ __fastcall set_TotalWork(long Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall Assign();
  void /*[VT_VOID:0]*/ __fastcall CancelResponseState();
  void /*[VT_VOID:0]*/ __fastcall ClearRecurrencePattern();
  void /*[VT_VOID:0]*/ __fastcall GetRecurrencePattern();
  void /*[VT_VOID:0]*/ __fastcall MarkComplete();
  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall Respond(Outlook_97::OlTaskResponse Response/*[in]*/
                                                                  , VARIANT fNoUI/*[in]*/, 
                                                                  VARIANT fAdditionalTextDialog/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Send();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall SkipRecurrence();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall StatusReport();

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
  __property   long            ActualWork = {read = get_ActualWork, write = set_ActualWork};
  __property   BSTR            CardData = {read = get_CardData};
  __property   VARIANT_BOOL    Complete = {read = get_Complete, write = set_Complete};
  __property   BSTR            Contacts = {read = get_Contacts};
  __property   DATE            DateCompleted = {read = get_DateCompleted, write = set_DateCompleted};
  __property   Outlook_97::OlTaskDelegationState DelegationState = {read = get_DelegationState};
  __property   BSTR            Delegator = {read = get_Delegator};
  __property   DATE            DueDate = {read = get_DueDate, write = set_DueDate};
  __property   VARIANT_BOOL    IsRecurring = {read = get_IsRecurring};
  __property   long            Ordinal = {read = get_Ordinal, write = set_Ordinal};
  __property   BSTR            Owner = {read = get_Owner};
  __property   Outlook_97::OlTaskOwnership Ownership = {read = get_Ownership};
  __property   long            PercentComplete = {read = get_PercentComplete, write = set_PercentComplete};
  __property   Outlook_97::Recipients* Recipients = {read = get_Recipients};
  __property   VARIANT_BOOL    ReminderOverrideDefault = {read = get_ReminderOverrideDefault, write = set_ReminderOverrideDefault};
  __property   VARIANT_BOOL    ReminderPlaySound = {read = get_ReminderPlaySound, write = set_ReminderPlaySound};
  __property   VARIANT_BOOL    ReminderSet = {read = get_ReminderSet, write = set_ReminderSet};
  __property   BSTR            ReminderSoundFile = {read = get_ReminderSoundFile};
  __property   DATE            ReminderTime = {read = get_ReminderTime, write = set_ReminderTime};
  __property   Outlook_97::OlTaskResponse ResponseState = {read = get_ResponseState};
  __property   BSTR            Role = {read = get_Role};
  __property   BSTR            SchedulePlusPriority = {read = get_SchedulePlusPriority};
  __property   DATE            StartDate = {read = get_StartDate, write = set_StartDate};
  __property   Outlook_97::OlTaskStatus Status = {read = get_Status, write = set_Status};
  __property   BSTR            StatusOnCompletionRecipients = {read = get_StatusOnCompletionRecipients};
  __property   BSTR            StatusUpdateRecipients = {read = get_StatusUpdateRecipients};
  __property   VARIANT_BOOL    TeamTask = {read = get_TeamTask, write = set_TeamTask};
  __property   long            TotalWork = {read = get_TotalWork, write = set_TotalWork};
};
typedef _DTaskItemDispT<_DTaskItem> _DTaskItemDisp;

// *********************************************************************//
// DispIntf:  _ITaskRequestAcceptItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063138-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _ITaskRequestAcceptItemDispT : public TAutoDriver<_ITaskRequestAcceptItem>
{
public:
  _ITaskRequestAcceptItemDispT(){}

  _ITaskRequestAcceptItemDispT(_ITaskRequestAcceptItem *pintf)
  {
    TAutoDriver<_ITaskRequestAcceptItem>::Bind(pintf, false);
  }

  _ITaskRequestAcceptItemDispT(_ITaskRequestAcceptItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestAcceptItem>::Bind(pintf, true);
  }

  _ITaskRequestAcceptItemDispT& operator=(_ITaskRequestAcceptItem *pintf)
  {
    TAutoDriver<_ITaskRequestAcceptItem>::Bind(pintf, false);
    return *this;
  }

  _ITaskRequestAcceptItemDispT& operator=(_ITaskRequestAcceptItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestAcceptItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                                          Outlook_97::TaskItem** Item/*[out,retval]*/);
  Outlook_97::TaskItem* __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _ITaskRequestAcceptItemDispT<_ITaskRequestAcceptItem> _ITaskRequestAcceptItemDisp;

// *********************************************************************//
// DispIntf:  _DTaskRequestAcceptItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063038-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DTaskRequestAcceptItemDispT : public TAutoDriver<_DTaskRequestAcceptItem>
{
public:
  _DTaskRequestAcceptItemDispT(){}

  _DTaskRequestAcceptItemDispT(_DTaskRequestAcceptItem *pintf)
  {
    TAutoDriver<_DTaskRequestAcceptItem>::Bind(pintf, false);
  }

  _DTaskRequestAcceptItemDispT(_DTaskRequestAcceptItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestAcceptItem>::Bind(pintf, true);
  }

  _DTaskRequestAcceptItemDispT& operator=(_DTaskRequestAcceptItem *pintf)
  {
    TAutoDriver<_DTaskRequestAcceptItem>::Bind(pintf, false);
    return *this;
  }

  _DTaskRequestAcceptItemDispT& operator=(_DTaskRequestAcceptItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestAcceptItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__TaskRequestAcceptItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__TaskRequestAcceptItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DTaskRequestAcceptItemDispT<_DTaskRequestAcceptItem> _DTaskRequestAcceptItemDisp;

// *********************************************************************//
// DispIntf:  _ITaskRequestDeclineItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063139-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _ITaskRequestDeclineItemDispT : public TAutoDriver<_ITaskRequestDeclineItem>
{
public:
  _ITaskRequestDeclineItemDispT(){}

  _ITaskRequestDeclineItemDispT(_ITaskRequestDeclineItem *pintf)
  {
    TAutoDriver<_ITaskRequestDeclineItem>::Bind(pintf, false);
  }

  _ITaskRequestDeclineItemDispT(_ITaskRequestDeclineItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestDeclineItem>::Bind(pintf, true);
  }

  _ITaskRequestDeclineItemDispT& operator=(_ITaskRequestDeclineItem *pintf)
  {
    TAutoDriver<_ITaskRequestDeclineItem>::Bind(pintf, false);
    return *this;
  }

  _ITaskRequestDeclineItemDispT& operator=(_ITaskRequestDeclineItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestDeclineItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                                          Outlook_97::TaskItem** Item/*[out,retval]*/);
  Outlook_97::TaskItem* __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _ITaskRequestDeclineItemDispT<_ITaskRequestDeclineItem> _ITaskRequestDeclineItemDisp;

// *********************************************************************//
// DispIntf:  _DTaskRequestDeclineItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063039-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DTaskRequestDeclineItemDispT : public TAutoDriver<_DTaskRequestDeclineItem>
{
public:
  _DTaskRequestDeclineItemDispT(){}

  _DTaskRequestDeclineItemDispT(_DTaskRequestDeclineItem *pintf)
  {
    TAutoDriver<_DTaskRequestDeclineItem>::Bind(pintf, false);
  }

  _DTaskRequestDeclineItemDispT(_DTaskRequestDeclineItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestDeclineItem>::Bind(pintf, true);
  }

  _DTaskRequestDeclineItemDispT& operator=(_DTaskRequestDeclineItem *pintf)
  {
    TAutoDriver<_DTaskRequestDeclineItem>::Bind(pintf, false);
    return *this;
  }

  _DTaskRequestDeclineItemDispT& operator=(_DTaskRequestDeclineItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestDeclineItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__TaskRequestDeclineItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__TaskRequestDeclineItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DTaskRequestDeclineItemDispT<_DTaskRequestDeclineItem> _DTaskRequestDeclineItemDisp;

// *********************************************************************//
// DispIntf:  _ITaskRequestItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063136-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _ITaskRequestItemDispT : public TAutoDriver<_ITaskRequestItem>
{
public:
  _ITaskRequestItemDispT(){}

  _ITaskRequestItemDispT(_ITaskRequestItem *pintf)
  {
    TAutoDriver<_ITaskRequestItem>::Bind(pintf, false);
  }

  _ITaskRequestItemDispT(_ITaskRequestItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestItem>::Bind(pintf, true);
  }

  _ITaskRequestItemDispT& operator=(_ITaskRequestItem *pintf)
  {
    TAutoDriver<_ITaskRequestItem>::Bind(pintf, false);
    return *this;
  }

  _ITaskRequestItemDispT& operator=(_ITaskRequestItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                                          Outlook_97::TaskItem** Item/*[out,retval]*/);
  Outlook_97::TaskItem* __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _ITaskRequestItemDispT<_ITaskRequestItem> _ITaskRequestItemDisp;

// *********************************************************************//
// DispIntf:  _DTaskRequestItem
// Flags:     (4096) Dispatchable
// GUID:      {00063036-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DTaskRequestItemDispT : public TAutoDriver<_DTaskRequestItem>
{
public:
  _DTaskRequestItemDispT(){}

  _DTaskRequestItemDispT(_DTaskRequestItem *pintf)
  {
    TAutoDriver<_DTaskRequestItem>::Bind(pintf, false);
  }

  _DTaskRequestItemDispT(_DTaskRequestItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestItem>::Bind(pintf, true);
  }

  _DTaskRequestItemDispT& operator=(_DTaskRequestItem *pintf)
  {
    TAutoDriver<_DTaskRequestItem>::Bind(pintf, false);
    return *this;
  }

  _DTaskRequestItemDispT& operator=(_DTaskRequestItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_TaskRequestItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_TaskRequestItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DTaskRequestItemDispT<_DTaskRequestItem> _DTaskRequestItemDisp;

// *********************************************************************//
// DispIntf:  _ITaskRequestUpdateItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063137-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _ITaskRequestUpdateItemDispT : public TAutoDriver<_ITaskRequestUpdateItem>
{
public:
  _ITaskRequestUpdateItemDispT(){}

  _ITaskRequestUpdateItemDispT(_ITaskRequestUpdateItem *pintf)
  {
    TAutoDriver<_ITaskRequestUpdateItem>::Bind(pintf, false);
  }

  _ITaskRequestUpdateItemDispT(_ITaskRequestUpdateItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestUpdateItem>::Bind(pintf, true);
  }

  _ITaskRequestUpdateItemDispT& operator=(_ITaskRequestUpdateItem *pintf)
  {
    TAutoDriver<_ITaskRequestUpdateItem>::Bind(pintf, false);
    return *this;
  }

  _ITaskRequestUpdateItemDispT& operator=(_ITaskRequestUpdateItemPtr pintf)
  {
    TAutoDriver<_ITaskRequestUpdateItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Actions(Outlook_97::Actions** Actions/*[out,retval]*/);
  Outlook_97::Actions* __fastcall get_Actions(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Application(Outlook_97::OutlookApplication** Application/*[out,retval]*/);
  Outlook_97::OutlookApplication* __fastcall get_Application(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Attachments(Outlook_97::Attachments** Attachments/*[out,retval]*/);
  Outlook_97::Attachments* __fastcall get_Attachments(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BillingInformation(BSTR* BillingInformation/*[out,retval]*/);
  BSTR            __fastcall get_BillingInformation(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BillingInformation(BSTR BillingInformation/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Body(BSTR* Body/*[out,retval]*/);
  BSTR            __fastcall get_Body(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Body(BSTR Body/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Categories(BSTR* Categories/*[out,retval]*/);
  BSTR            __fastcall get_Categories(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Categories(BSTR Categories/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Companies(BSTR* Companies/*[out,retval]*/);
  BSTR            __fastcall get_Companies(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Companies(BSTR Companies/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_CreationTime(DATE* CreationTime/*[out,retval]*/);
  DATE            __fastcall get_CreationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_EntryID(BSTR* EntryID/*[out,retval]*/);
  BSTR            __fastcall get_EntryID(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_FormDescription(Outlook_97::FormDescription** FormDescription/*[out,retval]*/);
  Outlook_97::FormDescription* __fastcall get_FormDescription(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_GetInspector(Outlook_97::Inspector** GetInspector/*[out,retval]*/);
  Outlook_97::Inspector* __fastcall get_GetInspector(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Importance(Outlook_97::OlImportance* Importance/*[out,retval]*/);
  Outlook_97::OlImportance __fastcall get_Importance(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Importance/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_LastModificationTime(DATE* LastModificationTime/*[out,retval]*/);
  DATE            __fastcall get_LastModificationTime(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_MessageClass(BSTR* MessageClass/*[out,retval]*/);
  BSTR            __fastcall get_MessageClass(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_MessageClass(BSTR MessageClass/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Mileage(BSTR* Mileage/*[out,retval]*/);
  BSTR            __fastcall get_Mileage(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Mileage(BSTR Mileage/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_NoAging(VARIANT_BOOL* NoAging/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_NoAging(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_NoAging(VARIANT_BOOL NoAging/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookInternalVersion(BSTR* OutlookInternalVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookInternalVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_OutlookVersion(BSTR* OutlookVersion/*[out,retval]*/);
  BSTR            __fastcall get_OutlookVersion(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Saved(VARIANT_BOOL* Saved/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Saved(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Sensitivity(Outlook_97::OlSensitivity* Sensitivity/*[out,retval]*/);
  Outlook_97::OlSensitivity __fastcall get_Sensitivity(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Sensitivity/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Size(long* Size/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Subject(BSTR* Subject/*[out,retval]*/);
  BSTR            __fastcall get_Subject(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Subject(BSTR Subject/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UnRead(VARIANT_BOOL* UnRead/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UnRead(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_UnRead(VARIANT_BOOL UnRead/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_UserProperties(Outlook_97::UserProperties** UserProperties/*[out,retval]*/);
  Outlook_97::UserProperties* __fastcall get_UserProperties(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Copy(LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Copy(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/, 
                                             LPDISPATCH* Item/*[out,retval]*/);
  LPDISPATCH      __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Save();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall PrintOut();
  HRESULT /*[VT_HRESULT:0]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/, 
                                                          Outlook_97::TaskItem** Item/*[out,retval]*/);
  Outlook_97::TaskItem* __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _ITaskRequestUpdateItemDispT<_ITaskRequestUpdateItem> _ITaskRequestUpdateItemDisp;

// *********************************************************************//
// DispIntf:  _DTaskRequestUpdateItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063037-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DTaskRequestUpdateItemDispT : public TAutoDriver<_DTaskRequestUpdateItem>
{
public:
  _DTaskRequestUpdateItemDispT(){}

  _DTaskRequestUpdateItemDispT(_DTaskRequestUpdateItem *pintf)
  {
    TAutoDriver<_DTaskRequestUpdateItem>::Bind(pintf, false);
  }

  _DTaskRequestUpdateItemDispT(_DTaskRequestUpdateItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestUpdateItem>::Bind(pintf, true);
  }

  _DTaskRequestUpdateItemDispT& operator=(_DTaskRequestUpdateItem *pintf)
  {
    TAutoDriver<_DTaskRequestUpdateItem>::Bind(pintf, false);
    return *this;
  }

  _DTaskRequestUpdateItemDispT& operator=(_DTaskRequestUpdateItemPtr pintf)
  {
    TAutoDriver<_DTaskRequestUpdateItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__TaskRequestUpdateItem));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__TaskRequestUpdateItem);
  }

  Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall get_Actions();
  Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall get_Application();
  Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall get_Attachments();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_BillingInformation();
  void /*[VT_VOID:0]*/ __fastcall set_BillingInformation(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Body();
  void /*[VT_VOID:0]*/ __fastcall set_Body(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Categories();
  void /*[VT_VOID:0]*/ __fastcall set_Categories(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Companies();
  void /*[VT_VOID:0]*/ __fastcall set_Companies(BSTR Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_CreationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_EntryID();
  Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall get_FormDescription();
  Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall get_GetInspector();
  Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall get_Importance();
  void /*[VT_VOID:0]*/ __fastcall set_Importance(Outlook_97::OlImportance Param1/*[in]*/);
  DATE /*[VT_DATE:0]*/ __fastcall get_LastModificationTime();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_MessageClass();
  void /*[VT_VOID:0]*/ __fastcall set_MessageClass(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Mileage();
  void /*[VT_VOID:0]*/ __fastcall set_Mileage(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_NoAging();
  void /*[VT_VOID:0]*/ __fastcall set_NoAging(VARIANT_BOOL Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookInternalVersion();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_OutlookVersion();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Saved();
  Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall get_Sensitivity();
  void /*[VT_VOID:0]*/ __fastcall set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_Size();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Subject();
  void /*[VT_VOID:0]*/ __fastcall set_Subject(BSTR Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_UnRead();
  void /*[VT_VOID:0]*/ __fastcall set_UnRead(VARIANT_BOOL Param1/*[in]*/);
  Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall get_UserProperties();
  void /*[VT_VOID:0]*/ __fastcall Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Copy();
  void /*[VT_VOID:0]*/ __fastcall Delete();
  void /*[VT_VOID:0]*/ __fastcall Display(VARIANT Modal/*[in]*/);
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Save();
  void /*[VT_VOID:0]*/ __fastcall SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall PrintOut();
  Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/);

  __property   Outlook_97::Actions* Actions = {read = get_Actions};
  __property   Outlook_97::OutlookApplication* Application = {read = get_Application};
  __property   Outlook_97::Attachments* Attachments = {read = get_Attachments};
  __property   BSTR            BillingInformation = {read = get_BillingInformation};
  __property   BSTR            Body = {read = get_Body};
  __property   BSTR            Categories = {read = get_Categories};
  __property   BSTR            Companies = {read = get_Companies};
  __property   DATE            CreationTime = {read = get_CreationTime};
  __property   BSTR            EntryID = {read = get_EntryID};
  __property   Outlook_97::FormDescription* FormDescription = {read = get_FormDescription};
  __property   Outlook_97::Inspector* GetInspector = {read = get_GetInspector};
  __property   Outlook_97::OlImportance Importance = {read = get_Importance, write = set_Importance};
  __property   DATE            LastModificationTime = {read = get_LastModificationTime};
  __property   BSTR            MessageClass = {read = get_MessageClass};
  __property   BSTR            Mileage = {read = get_Mileage};
  __property   VARIANT_BOOL    NoAging = {read = get_NoAging, write = set_NoAging};
  __property   BSTR            OutlookInternalVersion = {read = get_OutlookInternalVersion};
  __property   BSTR            OutlookVersion = {read = get_OutlookVersion};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   VARIANT_BOOL    Saved = {read = get_Saved};
  __property   Outlook_97::OlSensitivity Sensitivity = {read = get_Sensitivity, write = set_Sensitivity};
  __property   long            Size = {read = get_Size};
  __property   BSTR            Subject = {read = get_Subject};
  __property   VARIANT_BOOL    UnRead = {read = get_UnRead, write = set_UnRead};
  __property   Outlook_97::UserProperties* UserProperties = {read = get_UserProperties};
};
typedef _DTaskRequestUpdateItemDispT<_DTaskRequestUpdateItem> _DTaskRequestUpdateItemDisp;

// *********************************************************************//
// DispIntf:  _IUserProperties
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006313D-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IUserPropertiesDispT : public TAutoDriver<_IUserProperties>
{
public:
  _IUserPropertiesDispT(){}

  _IUserPropertiesDispT(_IUserProperties *pintf)
  {
    TAutoDriver<_IUserProperties>::Bind(pintf, false);
  }

  _IUserPropertiesDispT(_IUserPropertiesPtr pintf)
  {
    TAutoDriver<_IUserProperties>::Bind(pintf, true);
  }

  _IUserPropertiesDispT& operator=(_IUserProperties *pintf)
  {
    TAutoDriver<_IUserProperties>::Bind(pintf, false);
    return *this;
  }

  _IUserPropertiesDispT& operator=(_IUserPropertiesPtr pintf)
  {
    TAutoDriver<_IUserProperties>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Count(long* Count/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Add(BSTR Name/*[in]*/, 
                                            Outlook_97::OlUserPropertyType Type/*[in]*/, 
                                            VARIANT AddToFolderFields/*[in]*/, 
                                            VARIANT DisplayFormat/*[in]*/, 
                                            Outlook_97::UserProperty** UserProperty/*[out,retval]*/);
  Outlook_97::UserProperty* __fastcall Add(BSTR Name/*[in]*/, 
                                           Outlook_97::OlUserPropertyType Type/*[in]*/, 
                                           VARIANT AddToFolderFields/*[in]*/, 
                                           VARIANT DisplayFormat/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Find(BSTR Name/*[in]*/, VARIANT Custom/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Item(VARIANT Index/*[in]*/, 
                                             Outlook_97::UserProperty** UserProperty/*[out,retval]*/);
  Outlook_97::UserProperty* __fastcall Item(VARIANT Index/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef _IUserPropertiesDispT<_IUserProperties> _IUserPropertiesDisp;

// *********************************************************************//
// DispIntf:  UserProperties
// Flags:     (4096) Dispatchable
// GUID:      {0006303D-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class UserPropertiesDispT : public TAutoDriver<UserProperties>
{
public:
  UserPropertiesDispT(){}

  UserPropertiesDispT(UserProperties *pintf)
  {
    TAutoDriver<UserProperties>::Bind(pintf, false);
  }

  UserPropertiesDispT(UserPropertiesPtr pintf)
  {
    TAutoDriver<UserProperties>::Bind(pintf, true);
  }

  UserPropertiesDispT& operator=(UserProperties *pintf)
  {
    TAutoDriver<UserProperties>::Bind(pintf, false);
    return *this;
  }

  UserPropertiesDispT& operator=(UserPropertiesPtr pintf)
  {
    TAutoDriver<UserProperties>::Bind(pintf, true);
    return *this;
  }

  long /*[VT_I4:0]*/ __fastcall get_Count();
  Outlook_97::UserProperty* /*[VT_USERDEFINED:1]*/ __fastcall Add(BSTR Name/*[in]*/, 
                                                                  Outlook_97::OlUserPropertyType Type/*[in]*/
                                                                  , 
                                                                  VARIANT AddToFolderFields/*[in]*/
                                                                  , VARIANT DisplayFormat/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Find(BSTR Name/*[in]*/, VARIANT Custom/*[in]*/);
  Outlook_97::UserProperty* /*[VT_USERDEFINED:1]*/ __fastcall Item(VARIANT Index/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Remove(long Index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef UserPropertiesDispT<UserProperties> UserPropertiesDisp;

// *********************************************************************//
// DispIntf:  _IUserProperty
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063142-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _IUserPropertyDispT : public TAutoDriver<_IUserProperty>
{
public:
  _IUserPropertyDispT(){}

  _IUserPropertyDispT(_IUserProperty *pintf)
  {
    TAutoDriver<_IUserProperty>::Bind(pintf, false);
  }

  _IUserPropertyDispT(_IUserPropertyPtr pintf)
  {
    TAutoDriver<_IUserProperty>::Bind(pintf, true);
  }

  _IUserPropertyDispT& operator=(_IUserProperty *pintf)
  {
    TAutoDriver<_IUserProperty>::Bind(pintf, false);
    return *this;
  }

  _IUserPropertyDispT& operator=(_IUserPropertyPtr pintf)
  {
    TAutoDriver<_IUserProperty>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Formula(BSTR* Formula/*[out,retval]*/);
  BSTR            __fastcall get_Formula(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Formula(BSTR Formula/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Name(BSTR* Name/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Parent(LPDISPATCH* Parent/*[out,retval]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Type(Outlook_97::OlUserPropertyType* Type/*[out,retval]*/);
  Outlook_97::OlUserPropertyType __fastcall get_Type(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ValidationFormula(BSTR* ValidationFormula/*[out,retval]*/);
  BSTR            __fastcall get_ValidationFormula(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ValidationFormula(BSTR ValidationFormula/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ValidationText(BSTR* ValidationText/*[out,retval]*/);
  BSTR            __fastcall get_ValidationText(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ValidationText(BSTR ValidationText/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Value(VARIANT* Value/*[out,retval]*/);
  VARIANT         __fastcall get_Value(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Value(VARIANT Value/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall Delete();

  __property   BSTR            Formula = {read = get_Formula};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   Outlook_97::OlUserPropertyType Type = {read = get_Type};
  __property   BSTR            ValidationFormula = {read = get_ValidationFormula};
  __property   BSTR            ValidationText = {read = get_ValidationText};
};
typedef _IUserPropertyDispT<_IUserProperty> _IUserPropertyDisp;

// *********************************************************************//
// DispIntf:  UserProperty
// Flags:     (4096) Dispatchable
// GUID:      {00063042-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class UserPropertyDispT : public TAutoDriver<UserProperty>
{
public:
  UserPropertyDispT(){}

  UserPropertyDispT(UserProperty *pintf)
  {
    TAutoDriver<UserProperty>::Bind(pintf, false);
  }

  UserPropertyDispT(UserPropertyPtr pintf)
  {
    TAutoDriver<UserProperty>::Bind(pintf, true);
  }

  UserPropertyDispT& operator=(UserProperty *pintf)
  {
    TAutoDriver<UserProperty>::Bind(pintf, false);
    return *this;
  }

  UserPropertyDispT& operator=(UserPropertyPtr pintf)
  {
    TAutoDriver<UserProperty>::Bind(pintf, true);
    return *this;
  }

  BSTR /*[VT_BSTR:0]*/ __fastcall get_Formula();
  void /*[VT_VOID:0]*/ __fastcall set_Formula(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_Name();
  LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall get_Parent();
  Outlook_97::OlUserPropertyType /*[VT_USERDEFINED:0]*/ __fastcall get_Type();
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ValidationFormula();
  void /*[VT_VOID:0]*/ __fastcall set_ValidationFormula(BSTR Param1/*[in]*/);
  BSTR /*[VT_BSTR:0]*/ __fastcall get_ValidationText();
  void /*[VT_VOID:0]*/ __fastcall set_ValidationText(BSTR Param1/*[in]*/);
  VARIANT /*[VT_VARIANT:0]*/ __fastcall get_Value();
  void /*[VT_VOID:0]*/ __fastcall set_Value(VARIANT Param1/*[in]*/);
  void /*[VT_VOID:0]*/ __fastcall Delete();

  __property   BSTR            Formula = {read = get_Formula};
  __property   BSTR            Name = {read = get_Name};
  __property   LPDISPATCH      Parent = {read = get_Parent};
  __property   Outlook_97::OlUserPropertyType Type = {read = get_Type};
  __property   BSTR            ValidationFormula = {read = get_ValidationFormula};
  __property   BSTR            ValidationText = {read = get_ValidationText};
};
typedef UserPropertyDispT<UserProperty> UserPropertyDisp;

// *********************************************************************//
// DispIntf:  _IRecipientControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {D87E7E16-6897-11CE-A6C0-00AA00608FAA}
// *********************************************************************//
template<class T>
class _IRecipientControlDispT : public TAutoDriver<_IRecipientControl>
{
public:
  _IRecipientControlDispT(){}

  _IRecipientControlDispT(_IRecipientControl *pintf)
  {
    TAutoDriver<_IRecipientControl>::Bind(pintf, false);
  }

  _IRecipientControlDispT(_IRecipientControlPtr pintf)
  {
    TAutoDriver<_IRecipientControl>::Bind(pintf, true);
  }

  _IRecipientControlDispT& operator=(_IRecipientControl *pintf)
  {
    TAutoDriver<_IRecipientControl>::Bind(pintf, false);
    return *this;
  }

  _IRecipientControlDispT& operator=(_IRecipientControlPtr pintf)
  {
    TAutoDriver<_IRecipientControl>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Enabled(VARIANT_BOOL* Enabled/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Enabled(VARIANT_BOOL Enabled/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_BackColor(long* BackColor/*[out,retval]*/);
  long            __fastcall get_BackColor(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_BackColor(long BackColor/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ForeColor(long* ForeColor/*[out,retval]*/);
  long            __fastcall get_ForeColor(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ForeColor(long ForeColor/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReadOnly(VARIANT_BOOL* ReadOnly/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReadOnly(VARIANT_BOOL ReadOnly/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_Font(IFontDisp*** Font/*[out,retval]*/);
  IFontDisp**     __fastcall get_Font(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_Font(IFontDisp** Font/*[in]*/);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_SpecialEffect(long* Effect/*[out,retval]*/);
  long            __fastcall get_SpecialEffect(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_SpecialEffect(long Effect/*[in]*/);

  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   long            BackColor = {read = get_BackColor, write = set_BackColor};
  __property   long            ForeColor = {read = get_ForeColor, write = set_ForeColor};
  __property   VARIANT_BOOL    ReadOnly = {read = get_ReadOnly, write = set_ReadOnly};
  __property   IFontDisp**     Font = {read = get_Font, write = set_Font};
  __property   long            SpecialEffect = {read = get_SpecialEffect, write = set_SpecialEffect};
};
typedef _IRecipientControlDispT<_IRecipientControl> _IRecipientControlDisp;

// *********************************************************************//
// DispIntf:  _DRecipientControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006F025-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DRecipientControlDispT : public TAutoDriver<_DRecipientControl>
{
public:
  _DRecipientControlDispT(){}

  _DRecipientControlDispT(_DRecipientControl *pintf)
  {
    TAutoDriver<_DRecipientControl>::Bind(pintf, false);
  }

  _DRecipientControlDispT(_DRecipientControlPtr pintf)
  {
    TAutoDriver<_DRecipientControl>::Bind(pintf, true);
  }

  _DRecipientControlDispT& operator=(_DRecipientControl *pintf)
  {
    TAutoDriver<_DRecipientControl>::Bind(pintf, false);
    return *this;
  }

  _DRecipientControlDispT& operator=(_DRecipientControlPtr pintf)
  {
    TAutoDriver<_DRecipientControl>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__RecipientControl));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__RecipientControl);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_Enabled();
  void /*[VT_VOID:0]*/ __fastcall set_Enabled(VARIANT_BOOL Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_BackColor();
  void /*[VT_VOID:0]*/ __fastcall set_BackColor(long Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_ForeColor();
  void /*[VT_VOID:0]*/ __fastcall set_ForeColor(long Param1/*[in]*/);
  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReadOnly();
  void /*[VT_VOID:0]*/ __fastcall set_ReadOnly(VARIANT_BOOL Param1/*[in]*/);
  IFontDisp** /*[VT_USERDEFINED:1]*/ __fastcall get_Font();
  void /*[VT_VOID:0]*/ __fastcall set_Font(IFontDisp** Param1/*[in]*/);
  long /*[VT_I4:0]*/ __fastcall get_SpecialEffect();
  void /*[VT_VOID:0]*/ __fastcall set_SpecialEffect(long Param1/*[in]*/);

  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   long            BackColor = {read = get_BackColor, write = set_BackColor};
  __property   long            ForeColor = {read = get_ForeColor, write = set_ForeColor};
  __property   VARIANT_BOOL    ReadOnly = {read = get_ReadOnly, write = set_ReadOnly};
  __property   IFontDisp**     Font = {read = get_Font, write = set_Font};
  __property   long            SpecialEffect = {read = get_SpecialEffect, write = set_SpecialEffect};
};
typedef _DRecipientControlDispT<_DRecipientControl> _DRecipientControlDisp;

// *********************************************************************//
// DispIntf:  _DRecipientControlEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {D87E7E17-6897-11CE-A6C0-00AA00608FAA}
// *********************************************************************//
template <class T>
class _DRecipientControlEventsDispT : public TAutoDriver<_DRecipientControlEvents>
{
public:
  _DRecipientControlEventsDispT(){}

  void Attach(LPUNKNOWN punk)
  { m_Dispatch = static_cast<T*>(punk); }


};
typedef _DRecipientControlEventsDispT<_DRecipientControlEvents> _DRecipientControlEventsDisp;

// *********************************************************************//
// DispIntf:  _IDocSiteControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {43507DD0-811D-11CE-B565-00AA00608FAA}
// *********************************************************************//
template<class T>
class _IDocSiteControlDispT : public TAutoDriver<_IDocSiteControl>
{
public:
  _IDocSiteControlDispT(){}

  _IDocSiteControlDispT(_IDocSiteControl *pintf)
  {
    TAutoDriver<_IDocSiteControl>::Bind(pintf, false);
  }

  _IDocSiteControlDispT(_IDocSiteControlPtr pintf)
  {
    TAutoDriver<_IDocSiteControl>::Bind(pintf, true);
  }

  _IDocSiteControlDispT& operator=(_IDocSiteControl *pintf)
  {
    TAutoDriver<_IDocSiteControl>::Bind(pintf, false);
    return *this;
  }

  _IDocSiteControlDispT& operator=(_IDocSiteControlPtr pintf)
  {
    TAutoDriver<_IDocSiteControl>::Bind(pintf, true);
    return *this;
  }

  HRESULT /*[VT_HRESULT:0]*/ __fastcall get_ReadOnly(VARIANT_BOOL* ReadOnly/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  HRESULT /*[VT_HRESULT:0]*/ __fastcall set_ReadOnly(VARIANT_BOOL ReadOnly/*[in]*/);

  __property   VARIANT_BOOL    ReadOnly = {read = get_ReadOnly, write = set_ReadOnly};
};
typedef _IDocSiteControlDispT<_IDocSiteControl> _IDocSiteControlDisp;

// *********************************************************************//
// DispIntf:  _DDocSiteControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006F026-0000-0000-C000-000000000046}
// *********************************************************************//
template<class T>
class _DDocSiteControlDispT : public TAutoDriver<_DDocSiteControl>
{
public:
  _DDocSiteControlDispT(){}

  _DDocSiteControlDispT(_DDocSiteControl *pintf)
  {
    TAutoDriver<_DDocSiteControl>::Bind(pintf, false);
  }

  _DDocSiteControlDispT(_DDocSiteControlPtr pintf)
  {
    TAutoDriver<_DDocSiteControl>::Bind(pintf, true);
  }

  _DDocSiteControlDispT& operator=(_DDocSiteControl *pintf)
  {
    TAutoDriver<_DDocSiteControl>::Bind(pintf, false);
    return *this;
  }

  _DDocSiteControlDispT& operator=(_DDocSiteControlPtr pintf)
  {
    TAutoDriver<_DDocSiteControl>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID__DocSiteControl));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID__DocSiteControl);
  }

  VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall get_ReadOnly();
  void /*[VT_VOID:0]*/ __fastcall set_ReadOnly(VARIANT_BOOL Param1/*[in]*/);

  __property   VARIANT_BOOL    ReadOnly = {read = get_ReadOnly, write = set_ReadOnly};
};
typedef _DDocSiteControlDispT<_DDocSiteControl> _DDocSiteControlDisp;

// *********************************************************************//
// DispIntf:  _DDocSiteControlEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {50BB9B50-811D-11CE-B565-00AA00608FAA}
// *********************************************************************//
template <class T>
class _DDocSiteControlEventsDispT : public TAutoDriver<_DDocSiteControlEvents>
{
public:
  _DDocSiteControlEventsDispT(){}

  void Attach(LPUNKNOWN punk)
  { m_Dispatch = static_cast<T*>(punk); }


};
typedef _DDocSiteControlEventsDispT<_DDocSiteControlEvents> _DDocSiteControlEventsDisp;

// *********************************************************************//
// DispIntf:  _DItemEvents
// Flags:     (4096) Dispatchable
// GUID:      {0006303A-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Read()
{
  _TDispID _dispid(/* Read */ DISPID(61441));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Write()
{
  _TDispID _dispid(/* Write */ DISPID(61442));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Open()
{
  _TDispID _dispid(/* Open */ DISPID(61443));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Close()
{
  _TDispID _dispid(/* Close */ DISPID(61444));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Send()
{
  _TDispID _dispid(/* Send */ DISPID(61445));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Reply(LPDISPATCH Response/*[in]*/)
{
  _TDispID _dispid(/* Reply */ DISPID(62566));
  TAutoArgs<1> _args;
  _args[1] = Response /*[VT_DISPATCH:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::ReplyAll(LPDISPATCH Response/*[in]*/)
{
  _TDispID _dispid(/* ReplyAll */ DISPID(62567));
  TAutoArgs<1> _args;
  _args[1] = Response /*[VT_DISPATCH:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::Forward(LPDISPATCH Forward/*[in]*/)
{
  _TDispID _dispid(/* Forward */ DISPID(62568));
  TAutoArgs<1> _args;
  _args[1] = Forward /*[VT_DISPATCH:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DItemEventsDispT<T>::CustomAction(LPDISPATCH Action/*[in]*/, LPDISPATCH Response/*[in]*/)
{
  _TDispID _dispid(/* CustomAction */ DISPID(61446));
  TAutoArgs<2> _args;
  _args[1] = Action /*[VT_DISPATCH:0]*/;
  _args[2] = Response /*[VT_DISPATCH:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DItemEventsDispT<T>::CustomPropertyChange(BSTR Name/*[in]*/)
{
  _TDispID _dispid(/* CustomPropertyChange */ DISPID(61448));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DItemEventsDispT<T>::PropertyChange(BSTR Name/*[in]*/)
{
  _TDispID _dispid(/* PropertyChange */ DISPID(61449));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  Action
// Flags:     (4096) Dispatchable
// GUID:      {00063043-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OlActionCopyLike /*[VT_USERDEFINED:0]*/ __fastcall
ActionDispT<T>::get_CopyLike()
{
  _TDispID _dispid(*this, OLETEXT("CopyLike"), DISPID(100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlActionCopyLike /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_CopyLike(Outlook_97::OlActionCopyLike Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CopyLike"), DISPID(100));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
ActionDispT<T>::get_Enabled()
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(103));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_Enabled(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(103));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
ActionDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
ActionDispT<T>::get_Name()
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_Name(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(12289));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
ActionDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
ActionDispT<T>::get_Prefix()
{
  _TDispID _dispid(*this, OLETEXT("Prefix"), DISPID(61));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_Prefix(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Prefix"), DISPID(61));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlActionReplyStyle /*[VT_USERDEFINED:0]*/ __fastcall
ActionDispT<T>::get_ReplyStyle()
{
  _TDispID _dispid(*this, OLETEXT("ReplyStyle"), DISPID(101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlActionReplyStyle /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_ReplyStyle(Outlook_97::OlActionReplyStyle Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplyStyle"), DISPID(101));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlActionResponseStyle /*[VT_USERDEFINED:0]*/ __fastcall
ActionDispT<T>::get_ResponseStyle()
{
  _TDispID _dispid(*this, OLETEXT("ResponseStyle"), DISPID(102));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlActionResponseStyle /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_ResponseStyle(Outlook_97::OlActionResponseStyle Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ResponseStyle"), DISPID(102));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlActionShowOn /*[VT_USERDEFINED:0]*/ __fastcall
ActionDispT<T>::get_ShowOn()
{
  _TDispID _dispid(*this, OLETEXT("ShowOn"), DISPID(105));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlActionShowOn /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::set_ShowOn(Outlook_97::OlActionShowOn Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowOn"), DISPID(105));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(108));
  OleProcedure(_dispid);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
ActionDispT<T>::Execute()
{
  _TDispID _dispid(*this, OLETEXT("Execute"), DISPID(106));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  Actions
// Flags:     (4096) Dispatchable
// GUID:      {0006303E-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
ActionsDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Action* /*[VT_USERDEFINED:1]*/ __fastcall
ActionsDispT<T>::Add()
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(100));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::Action* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Action* /*[VT_USERDEFINED:1]*/ __fastcall
ActionsDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Action* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ActionsDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(82));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DApplication
// Flags:     (4096) Dispatchable
// GUID:      {00063001-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Office_97::Assistant* /*[VT_USERDEFINED:1]*/ __fastcall
_DApplicationDispT<T>::get_Assistant()
{
  _TDispID _dispid(*this, OLETEXT("Assistant"), DISPID(276));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Office_97::Assistant* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Explorer* /*[VT_USERDEFINED:1]*/ __fastcall
_DApplicationDispT<T>::ActiveExplorer()
{
  _TDispID _dispid(*this, OLETEXT("ActiveExplorer"), DISPID(273));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::Explorer* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DApplicationDispT<T>::ActiveInspector()
{
  _TDispID _dispid(*this, OLETEXT("ActiveInspector"), DISPID(274));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DApplicationDispT<T>::CreateItem(Outlook_97::OlItems ItemType/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateItem"), DISPID(266));
  TAutoArgs<1> _args;
  _args[1] = (int)ItemType /*[VT_USERDEFINED:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DApplicationDispT<T>::CreateItemFromTemplate(BSTR TemplatePath/*[in]*/, VARIANT InFolder/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateItemFromTemplate"), DISPID(267));
  TAutoArgs<2> _args;
  _args[1] = TemplatePath /*[VT_BSTR:0]*/;
  _args[2] = InFolder /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DApplicationDispT<T>::CreateObject(BSTR ObjectName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateObject"), DISPID(277));
  TAutoArgs<1> _args;
  _args[1] = ObjectName /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::NameSpace* /*[VT_USERDEFINED:1]*/ __fastcall
_DApplicationDispT<T>::GetNamespace(BSTR Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetNamespace"), DISPID(272));
  TAutoArgs<1> _args;
  _args[1] = Type /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::NameSpace* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DApplicationDispT<T>::Quit()
{
  _TDispID _dispid(*this, OLETEXT("Quit"), DISPID(275));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DAppointmentItem
// Flags:     (4096) Dispatchable
// GUID:      {00063033-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_AllDayEvent()
{
  _TDispID _dispid(*this, OLETEXT("AllDayEvent"), DISPID(33301));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_AllDayEvent(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AllDayEvent"), DISPID(33301));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlBusyStatus /*[VT_USERDEFINED:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_BusyStatus()
{
  _TDispID _dispid(*this, OLETEXT("BusyStatus"), DISPID(33285));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlBusyStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_BusyStatus(Outlook_97::OlBusyStatus Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusyStatus"), DISPID(33285));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Duration()
{
  _TDispID _dispid(*this, OLETEXT("Duration"), DISPID(33299));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Duration(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Duration"), DISPID(33299));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_End()
{
  _TDispID _dispid(*this, OLETEXT("End"), DISPID(33294));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_End(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("End"), DISPID(33294));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_IsRecurring()
{
  _TDispID _dispid(*this, OLETEXT("IsRecurring"), DISPID(33315));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Location()
{
  _TDispID _dispid(*this, OLETEXT("Location"), DISPID(33288));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Location(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Location"), DISPID(33288));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlMeetingStatus /*[VT_USERDEFINED:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_MeetingStatus()
{
  _TDispID _dispid(*this, OLETEXT("MeetingStatus"), DISPID(33303));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlMeetingStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_MeetingStatus(Outlook_97::OlMeetingStatus Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MeetingStatus"), DISPID(33303));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_OptionalAttendees()
{
  _TDispID _dispid(*this, OLETEXT("OptionalAttendees"), DISPID(3587));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_OptionalAttendees(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OptionalAttendees"), DISPID(3587));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Organizer()
{
  _TDispID _dispid(*this, OLETEXT("Organizer"), DISPID(66));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::get_Recipients()
{
  _TDispID _dispid(*this, OLETEXT("Recipients"), DISPID(63508));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ReminderMinutesBeforeStart()
{
  _TDispID _dispid(*this, OLETEXT("ReminderMinutesBeforeStart"), DISPID(34049));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ReminderMinutesBeforeStart(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderMinutesBeforeStart"), DISPID(34049));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ReminderOverrideDefault()
{
  _TDispID _dispid(*this, OLETEXT("ReminderOverrideDefault"), DISPID(34076));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderOverrideDefault"), DISPID(34076));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ReminderPlaySound()
{
  _TDispID _dispid(*this, OLETEXT("ReminderPlaySound"), DISPID(34078));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderPlaySound"), DISPID(34078));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ReminderSet()
{
  _TDispID _dispid(*this, OLETEXT("ReminderSet"), DISPID(34051));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ReminderSet(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderSet"), DISPID(34051));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ReminderSoundFile()
{
  _TDispID _dispid(*this, OLETEXT("ReminderSoundFile"), DISPID(34079));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ReminderSoundFile(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderSoundFile"), DISPID(34079));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ReplyTime()
{
  _TDispID _dispid(*this, OLETEXT("ReplyTime"), DISPID(33312));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ReplyTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplyTime"), DISPID(33312));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_RequiredAttendees()
{
  _TDispID _dispid(*this, OLETEXT("RequiredAttendees"), DISPID(3588));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_RequiredAttendees(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RequiredAttendees"), DISPID(3588));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Resources()
{
  _TDispID _dispid(*this, OLETEXT("Resources"), DISPID(3586));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Resources(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Resources"), DISPID(3586));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ResponseRequested()
{
  _TDispID _dispid(*this, OLETEXT("ResponseRequested"), DISPID(99));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_ResponseRequested(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ResponseRequested"), DISPID(99));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlResponseStatus /*[VT_USERDEFINED:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_ResponseStatus()
{
  _TDispID _dispid(*this, OLETEXT("ResponseStatus"), DISPID(33304));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlResponseStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DAppointmentItemDispT<T>::get_Start()
{
  _TDispID _dispid(*this, OLETEXT("Start"), DISPID(33293));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::set_Start(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Start"), DISPID(33293));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DAppointmentItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DAppointmentItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::ClearRecurrencePattern()
{
  _TDispID _dispid(*this, OLETEXT("ClearRecurrencePattern"), DISPID(61605));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::RecurrencePattern* /*[VT_USERDEFINED:1]*/ __fastcall
_DAppointmentItemDispT<T>::GetRecurrencePattern()
{
  _TDispID _dispid(*this, OLETEXT("GetRecurrencePattern"), DISPID(61604));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::RecurrencePattern* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DAppointmentItemDispT<T>::Respond(Outlook_97::OlMeetingResponse Response/*[in]*/, 
                                   VARIANT fNoUI/*[in]*/, VARIANT fAdditionalTextDialog/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Respond"), DISPID(62722));
  TAutoArgs<3> _args;
  _args[1] = (int)Response /*[VT_USERDEFINED:0]*/;
  _args[2] = fNoUI /*[VT_VARIANT:0]*/;
  _args[3] = fAdditionalTextDialog /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DAppointmentItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  Attachment
// Flags:     (4096) Dispatchable
// GUID:      {00063007-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
AttachmentDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
AttachmentDispT<T>::get_DisplayName()
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
AttachmentDispT<T>::set_DisplayName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(12289));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
AttachmentDispT<T>::get_FileName()
{
  _TDispID _dispid(*this, OLETEXT("FileName"), DISPID(14084));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
AttachmentDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(113));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
AttachmentDispT<T>::get_PathName()
{
  _TDispID _dispid(*this, OLETEXT("PathName"), DISPID(14088));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
AttachmentDispT<T>::get_Position()
{
  _TDispID _dispid(*this, OLETEXT("Position"), DISPID(114));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
AttachmentDispT<T>::set_Position(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Position"), DISPID(114));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlAttachmentType /*[VT_USERDEFINED:0]*/ __fastcall
AttachmentDispT<T>::get_Type()
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(14085));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlAttachmentType /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
AttachmentDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(105));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
AttachmentDispT<T>::SaveAsFile(BSTR Path/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAsFile"), DISPID(104));
  TAutoArgs<1> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  Attachments
// Flags:     (4096) Dispatchable
// GUID:      {0006303C-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
AttachmentsDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
AttachmentsDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Attachment* /*[VT_USERDEFINED:1]*/ __fastcall
AttachmentsDispT<T>::Add(VARIANT Source/*[in]*/, VARIANT Type/*[in]*/, VARIANT Position/*[in]*/, 
                         VARIANT DisplayName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(101));
  TAutoArgs<4> _args;
  _args[1] = Source /*[VT_VARIANT:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  _args[3] = Position /*[VT_VARIANT:0]*/;
  _args[4] = DisplayName /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Attachment* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachment* /*[VT_USERDEFINED:1]*/ __fastcall
AttachmentsDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Attachment* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
AttachmentsDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(84));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DContactItem
// Flags:     (4096) Dispatchable
// GUID:      {00063021-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DContactItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DContactItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DContactItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DContactItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DContactItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DContactItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DContactItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DContactItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DContactItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DContactItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DContactItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DContactItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DContactItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DContactItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DContactItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Account()
{
  _TDispID _dispid(*this, OLETEXT("Account"), DISPID(14848));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Account(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Account"), DISPID(14848));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DContactItemDispT<T>::get_Anniversary()
{
  _TDispID _dispid(*this, OLETEXT("Anniversary"), DISPID(14913));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Anniversary(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Anniversary"), DISPID(14913));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_AssistantName()
{
  _TDispID _dispid(*this, OLETEXT("AssistantName"), DISPID(14896));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_AssistantName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AssistantName"), DISPID(14896));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_AssistantTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("AssistantTelephoneNumber"), DISPID(14894));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_AssistantTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AssistantTelephoneNumber"), DISPID(14894));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DContactItemDispT<T>::get_Birthday()
{
  _TDispID _dispid(*this, OLETEXT("Birthday"), DISPID(14914));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Birthday(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Birthday"), DISPID(14914));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Business2TelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("Business2TelephoneNumber"), DISPID(14875));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Business2TelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Business2TelephoneNumber"), DISPID(14875));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddress()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddress"), DISPID(32795));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddress(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddress"), DISPID(32795));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddressCity()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressCity"), DISPID(32838));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddressCity(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressCity"), DISPID(32838));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddressCountry()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressCountry"), DISPID(32841));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddressCountry(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressCountry"), DISPID(32841));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddressPostalCode()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressPostalCode"), DISPID(32840));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddressPostalCode(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressPostalCode"), DISPID(32840));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddressPostOfficeBox()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressPostOfficeBox"), DISPID(32842));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddressPostOfficeBox(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressPostOfficeBox"), DISPID(32842));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddressState()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressState"), DISPID(32839));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddressState(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressState"), DISPID(32839));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessAddressStreet()
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressStreet"), DISPID(32837));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessAddressStreet(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessAddressStreet"), DISPID(32837));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessFaxNumber()
{
  _TDispID _dispid(*this, OLETEXT("BusinessFaxNumber"), DISPID(14884));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessFaxNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessFaxNumber"), DISPID(14884));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessHomePage()
{
  _TDispID _dispid(*this, OLETEXT("BusinessHomePage"), DISPID(14929));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessHomePage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessHomePage"), DISPID(14929));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_BusinessTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("BusinessTelephoneNumber"), DISPID(14856));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_BusinessTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BusinessTelephoneNumber"), DISPID(14856));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_CallbackTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("CallbackTelephoneNumber"), DISPID(14850));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_CallbackTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CallbackTelephoneNumber"), DISPID(14850));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_CarTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("CarTelephoneNumber"), DISPID(14878));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_CarTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CarTelephoneNumber"), DISPID(14878));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Children()
{
  _TDispID _dispid(*this, OLETEXT("Children"), DISPID(32780));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Children(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Children"), DISPID(32780));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_CompanyAndFullName()
{
  _TDispID _dispid(*this, OLETEXT("CompanyAndFullName"), DISPID(32792));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_CompanyMainTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("CompanyMainTelephoneNumber"), DISPID(14935));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_CompanyMainTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CompanyMainTelephoneNumber"), DISPID(14935));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_CompanyName()
{
  _TDispID _dispid(*this, OLETEXT("CompanyName"), DISPID(14870));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_CompanyName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CompanyName"), DISPID(14870));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_ComputerNetworkName()
{
  _TDispID _dispid(*this, OLETEXT("ComputerNetworkName"), DISPID(14921));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_ComputerNetworkName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ComputerNetworkName"), DISPID(14921));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_CustomerID()
{
  _TDispID _dispid(*this, OLETEXT("CustomerID"), DISPID(14922));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_CustomerID(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CustomerID"), DISPID(14922));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Department()
{
  _TDispID _dispid(*this, OLETEXT("Department"), DISPID(14872));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Department(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Department"), DISPID(14872));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email1Address()
{
  _TDispID _dispid(*this, OLETEXT("Email1Address"), DISPID(32899));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Email1Address(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Email1Address"), DISPID(32899));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email1AddressType()
{
  _TDispID _dispid(*this, OLETEXT("Email1AddressType"), DISPID(32898));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Email1AddressType(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Email1AddressType"), DISPID(32898));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email1DisplayName()
{
  _TDispID _dispid(*this, OLETEXT("Email1DisplayName"), DISPID(32896));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email1EntryID()
{
  _TDispID _dispid(*this, OLETEXT("Email1EntryID"), DISPID(32901));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email2Address()
{
  _TDispID _dispid(*this, OLETEXT("Email2Address"), DISPID(32915));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Email2Address(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Email2Address"), DISPID(32915));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email2AddressType()
{
  _TDispID _dispid(*this, OLETEXT("Email2AddressType"), DISPID(32914));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Email2AddressType(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Email2AddressType"), DISPID(32914));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email2DisplayName()
{
  _TDispID _dispid(*this, OLETEXT("Email2DisplayName"), DISPID(32912));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email2EntryID()
{
  _TDispID _dispid(*this, OLETEXT("Email2EntryID"), DISPID(32917));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email3Address()
{
  _TDispID _dispid(*this, OLETEXT("Email3Address"), DISPID(32931));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Email3Address(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Email3Address"), DISPID(32931));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email3AddressType()
{
  _TDispID _dispid(*this, OLETEXT("Email3AddressType"), DISPID(32930));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Email3AddressType(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Email3AddressType"), DISPID(32930));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email3DisplayName()
{
  _TDispID _dispid(*this, OLETEXT("Email3DisplayName"), DISPID(32928));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Email3EntryID()
{
  _TDispID _dispid(*this, OLETEXT("Email3EntryID"), DISPID(32933));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_FileAs()
{
  _TDispID _dispid(*this, OLETEXT("FileAs"), DISPID(32773));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_FileAs(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FileAs"), DISPID(32773));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_FirstName()
{
  _TDispID _dispid(*this, OLETEXT("FirstName"), DISPID(14854));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_FirstName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FirstName"), DISPID(14854));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_FTPSite()
{
  _TDispID _dispid(*this, OLETEXT("FTPSite"), DISPID(14924));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_FTPSite(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FTPSite"), DISPID(14924));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_FullName()
{
  _TDispID _dispid(*this, OLETEXT("FullName"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_FullName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FullName"), DISPID(12289));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_FullNameAndCompany()
{
  _TDispID _dispid(*this, OLETEXT("FullNameAndCompany"), DISPID(32793));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlGender /*[VT_USERDEFINED:0]*/ __fastcall
_DContactItemDispT<T>::get_Gender()
{
  _TDispID _dispid(*this, OLETEXT("Gender"), DISPID(14925));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlGender /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Gender(Outlook_97::OlGender Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Gender"), DISPID(14925));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_GovernmentIDNumber()
{
  _TDispID _dispid(*this, OLETEXT("GovernmentIDNumber"), DISPID(14855));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_GovernmentIDNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GovernmentIDNumber"), DISPID(14855));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Hobby()
{
  _TDispID _dispid(*this, OLETEXT("Hobby"), DISPID(14915));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Hobby(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Hobby"), DISPID(14915));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Home2TelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("Home2TelephoneNumber"), DISPID(14895));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Home2TelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Home2TelephoneNumber"), DISPID(14895));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddress()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddress"), DISPID(32794));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddress(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddress"), DISPID(32794));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddressCity()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressCity"), DISPID(14937));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddressCity(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressCity"), DISPID(14937));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddressCountry()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressCountry"), DISPID(14938));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddressCountry(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressCountry"), DISPID(14938));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddressPostalCode()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressPostalCode"), DISPID(14939));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddressPostalCode(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressPostalCode"), DISPID(14939));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddressPostOfficeBox()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressPostOfficeBox"), DISPID(14942));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddressPostOfficeBox(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressPostOfficeBox"), DISPID(14942));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddressState()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressState"), DISPID(14940));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddressState(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressState"), DISPID(14940));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeAddressStreet()
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressStreet"), DISPID(14941));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeAddressStreet(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeAddressStreet"), DISPID(14941));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeFaxNumber()
{
  _TDispID _dispid(*this, OLETEXT("HomeFaxNumber"), DISPID(14885));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeFaxNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeFaxNumber"), DISPID(14885));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_HomeTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("HomeTelephoneNumber"), DISPID(14857));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_HomeTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HomeTelephoneNumber"), DISPID(14857));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Initials()
{
  _TDispID _dispid(*this, OLETEXT("Initials"), DISPID(14858));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Initials(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Initials"), DISPID(14858));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_ISDNNumber()
{
  _TDispID _dispid(*this, OLETEXT("ISDNNumber"), DISPID(14893));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_ISDNNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ISDNNumber"), DISPID(14893));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_JobTitle()
{
  _TDispID _dispid(*this, OLETEXT("JobTitle"), DISPID(14871));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_JobTitle(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("JobTitle"), DISPID(14871));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DContactItemDispT<T>::get_Journal()
{
  _TDispID _dispid(*this, OLETEXT("Journal"), DISPID(32805));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Journal(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Journal"), DISPID(32805));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Language()
{
  _TDispID _dispid(*this, OLETEXT("Language"), DISPID(14860));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Language(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Language"), DISPID(14860));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_LastName()
{
  _TDispID _dispid(*this, OLETEXT("LastName"), DISPID(14865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_LastName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("LastName"), DISPID(14865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_LastNameAndFirstName()
{
  _TDispID _dispid(*this, OLETEXT("LastNameAndFirstName"), DISPID(32791));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddress()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddress"), DISPID(14869));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddress(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddress"), DISPID(14869));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddressCity()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressCity"), DISPID(14887));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddressCity(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressCity"), DISPID(14887));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddressCountry()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressCountry"), DISPID(14886));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddressCountry(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressCountry"), DISPID(14886));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddressPostalCode()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressPostalCode"), DISPID(14890));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddressPostalCode(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressPostalCode"), DISPID(14890));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddressPostOfficeBox()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressPostOfficeBox"), DISPID(14891));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddressPostOfficeBox(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressPostOfficeBox"), DISPID(14891));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddressState()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressState"), DISPID(14888));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddressState(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressState"), DISPID(14888));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MailingAddressStreet()
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressStreet"), DISPID(14889));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MailingAddressStreet(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MailingAddressStreet"), DISPID(14889));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_ManagerName()
{
  _TDispID _dispid(*this, OLETEXT("ManagerName"), DISPID(14926));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_ManagerName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ManagerName"), DISPID(14926));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MiddleName()
{
  _TDispID _dispid(*this, OLETEXT("MiddleName"), DISPID(14916));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MiddleName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MiddleName"), DISPID(14916));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_MobileTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("MobileTelephoneNumber"), DISPID(14876));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_MobileTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MobileTelephoneNumber"), DISPID(14876));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_NickName()
{
  _TDispID _dispid(*this, OLETEXT("NickName"), DISPID(14927));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_NickName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NickName"), DISPID(14927));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OfficeLocation()
{
  _TDispID _dispid(*this, OLETEXT("OfficeLocation"), DISPID(14873));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OfficeLocation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OfficeLocation"), DISPID(14873));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OrganizationalIDNumber()
{
  _TDispID _dispid(*this, OLETEXT("OrganizationalIDNumber"), DISPID(14864));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OrganizationalIDNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OrganizationalIDNumber"), DISPID(14864));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddress()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddress"), DISPID(32796));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddress(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddress"), DISPID(32796));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddressCity()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressCity"), DISPID(14943));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddressCity(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressCity"), DISPID(14943));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddressCountry()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressCountry"), DISPID(14944));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddressCountry(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressCountry"), DISPID(14944));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddressPostalCode()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressPostalCode"), DISPID(14945));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddressPostalCode(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressPostalCode"), DISPID(14945));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddressPostOfficeBox()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressPostOfficeBox"), DISPID(14948));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddressPostOfficeBox(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressPostOfficeBox"), DISPID(14948));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddressState()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressState"), DISPID(14946));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddressState(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressState"), DISPID(14946));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherAddressStreet()
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressStreet"), DISPID(14947));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherAddressStreet(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherAddressStreet"), DISPID(14947));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherFaxNumber()
{
  _TDispID _dispid(*this, OLETEXT("OtherFaxNumber"), DISPID(14883));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherFaxNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherFaxNumber"), DISPID(14883));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_OtherTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("OtherTelephoneNumber"), DISPID(14879));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_OtherTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OtherTelephoneNumber"), DISPID(14879));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_PagerNumber()
{
  _TDispID _dispid(*this, OLETEXT("PagerNumber"), DISPID(14881));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_PagerNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PagerNumber"), DISPID(14881));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_PersonalHomePage()
{
  _TDispID _dispid(*this, OLETEXT("PersonalHomePage"), DISPID(14928));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_PersonalHomePage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PersonalHomePage"), DISPID(14928));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_PrimaryTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("PrimaryTelephoneNumber"), DISPID(14874));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_PrimaryTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PrimaryTelephoneNumber"), DISPID(14874));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Profession()
{
  _TDispID _dispid(*this, OLETEXT("Profession"), DISPID(14918));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Profession(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Profession"), DISPID(14918));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_RadioTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("RadioTelephoneNumber"), DISPID(14877));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_RadioTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RadioTelephoneNumber"), DISPID(14877));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_ReferredBy()
{
  _TDispID _dispid(*this, OLETEXT("ReferredBy"), DISPID(14919));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_ReferredBy(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReferredBy"), DISPID(14919));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlMailingAddress /*[VT_USERDEFINED:0]*/ __fastcall
_DContactItemDispT<T>::get_SelectedMailingAddress()
{
  _TDispID _dispid(*this, OLETEXT("SelectedMailingAddress"), DISPID(32802));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlMailingAddress /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_SelectedMailingAddress(Outlook_97::OlMailingAddress Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SelectedMailingAddress"), DISPID(32802));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Spouse()
{
  _TDispID _dispid(*this, OLETEXT("Spouse"), DISPID(14920));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Spouse(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Spouse"), DISPID(14920));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Suffix()
{
  _TDispID _dispid(*this, OLETEXT("Suffix"), DISPID(14853));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Suffix(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Suffix"), DISPID(14853));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_TelexNumber()
{
  _TDispID _dispid(*this, OLETEXT("TelexNumber"), DISPID(14892));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_TelexNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TelexNumber"), DISPID(14892));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_Title()
{
  _TDispID _dispid(*this, OLETEXT("Title"), DISPID(14917));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_Title(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Title"), DISPID(14917));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_TTYTDDTelephoneNumber()
{
  _TDispID _dispid(*this, OLETEXT("TTYTDDTelephoneNumber"), DISPID(14923));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_TTYTDDTelephoneNumber(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TTYTDDTelephoneNumber"), DISPID(14923));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_User1()
{
  _TDispID _dispid(*this, OLETEXT("User1"), DISPID(32847));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_User1(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("User1"), DISPID(32847));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_User2()
{
  _TDispID _dispid(*this, OLETEXT("User2"), DISPID(32848));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_User2(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("User2"), DISPID(32848));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_User3()
{
  _TDispID _dispid(*this, OLETEXT("User3"), DISPID(32849));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_User3(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("User3"), DISPID(32849));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_User4()
{
  _TDispID _dispid(*this, OLETEXT("User4"), DISPID(32850));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_User4(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("User4"), DISPID(32850));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_UserCertificate()
{
  _TDispID _dispid(*this, OLETEXT("UserCertificate"), DISPID(32790));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_UserCertificate(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UserCertificate"), DISPID(32790));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_WebPage()
{
  _TDispID _dispid(*this, OLETEXT("WebPage"), DISPID(32811));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_WebPage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("WebPage"), DISPID(32811));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_YomiCompanyName()
{
  _TDispID _dispid(*this, OLETEXT("YomiCompanyName"), DISPID(32814));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_YomiCompanyName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("YomiCompanyName"), DISPID(32814));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_YomiFirstName()
{
  _TDispID _dispid(*this, OLETEXT("YomiFirstName"), DISPID(32812));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_YomiFirstName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("YomiFirstName"), DISPID(32812));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DContactItemDispT<T>::get_YomiLastName()
{
  _TDispID _dispid(*this, OLETEXT("YomiLastName"), DISPID(32813));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::set_YomiLastName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("YomiLastName"), DISPID(32813));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DContactItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DContactItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DContactItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  Explorer
// Flags:     (4096) Dispatchable
// GUID:      {00063003-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
ExplorerDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Office_97::CommandBars* /*[VT_USERDEFINED:1]*/ __fastcall
ExplorerDispT<T>::get_CommandBars()
{
  _TDispID _dispid(*this, OLETEXT("CommandBars"), DISPID(8448));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Office_97::CommandBars* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
ExplorerDispT<T>::get_CurrentFolder()
{
  _TDispID _dispid(*this, OLETEXT("CurrentFolder"), DISPID(8449));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ExplorerDispT<T>::_set_CurrentFolder(Outlook_97::MAPIFolder* Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentFolder"), DISPID(8449));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)Param1 /*[VT_USERDEFINED:1]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
ExplorerDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ExplorerDispT<T>::Close()
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(8451));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ExplorerDispT<T>::Display()
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(8452));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  Folders
// Flags:     (4096) Dispatchable
// GUID:      {00063040-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
FoldersDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
FoldersDispT<T>::Add(BSTR Name/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(100));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
FoldersDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FoldersDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(84));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  FormDescription
// Flags:     (4096) Dispatchable
// GUID:      {00063046-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Category()
{
  _TDispID _dispid(*this, OLETEXT("Category"), DISPID(13060));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Category(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Category"), DISPID(13060));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_CategorySub()
{
  _TDispID _dispid(*this, OLETEXT("CategorySub"), DISPID(13061));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_CategorySub(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CategorySub"), DISPID(13061));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Comment()
{
  _TDispID _dispid(*this, OLETEXT("Comment"), DISPID(12292));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Comment(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Comment"), DISPID(12292));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_ContactName()
{
  _TDispID _dispid(*this, OLETEXT("ContactName"), DISPID(13059));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_ContactName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ContactName"), DISPID(13059));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_DisplayName()
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_DisplayName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(12289));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
FormDescriptionDispT<T>::get_Hidden()
{
  _TDispID _dispid(*this, OLETEXT("Hidden"), DISPID(13063));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Hidden(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Hidden"), DISPID(13063));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Icon()
{
  _TDispID _dispid(*this, OLETEXT("Icon"), DISPID(4093));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Icon(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Icon"), DISPID(4093));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
FormDescriptionDispT<T>::get_Locked()
{
  _TDispID _dispid(*this, OLETEXT("Locked"), DISPID(102));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Locked(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Locked"), DISPID(102));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_MiniIcon()
{
  _TDispID _dispid(*this, OLETEXT("MiniIcon"), DISPID(4092));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_MiniIcon(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MiniIcon"), DISPID(4092));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Name()
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(61469));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Name(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(61469));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Number()
{
  _TDispID _dispid(*this, OLETEXT("Number"), DISPID(104));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Number(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Number"), DISPID(104));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
FormDescriptionDispT<T>::get_OneOff()
{
  _TDispID _dispid(*this, OLETEXT("OneOff"), DISPID(101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_OneOff(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OneOff"), DISPID(101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Password()
{
  _TDispID _dispid(*this, OLETEXT("Password"), DISPID(103));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Password(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Password"), DISPID(103));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Template()
{
  _TDispID _dispid(*this, OLETEXT("Template"), DISPID(106));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Template(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Template"), DISPID(106));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
FormDescriptionDispT<T>::get_UseWordMail()
{
  _TDispID _dispid(*this, OLETEXT("UseWordMail"), DISPID(105));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_UseWordMail(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseWordMail"), DISPID(105));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
FormDescriptionDispT<T>::get_Version()
{
  _TDispID _dispid(*this, OLETEXT("Version"), DISPID(13057));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::set_Version(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Version"), DISPID(13057));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
FormDescriptionDispT<T>::PublishForm(Outlook_97::OlFormRegistry Registry/*[in]*/, 
                                     VARIANT Folder/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PublishForm"), DISPID(107));
  TAutoArgs<2> _args;
  _args[1] = (int)Registry /*[VT_USERDEFINED:0]*/;
  _args[2] = Folder /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  Inspector
// Flags:     (4096) Dispatchable
// GUID:      {00063005-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
InspectorDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Office_97::CommandBars* /*[VT_USERDEFINED:1]*/ __fastcall
InspectorDispT<T>::get_CommandBars()
{
  _TDispID _dispid(*this, OLETEXT("CommandBars"), DISPID(8448));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Office_97::CommandBars* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
InspectorDispT<T>::get_CurrentItem()
{
  _TDispID _dispid(*this, OLETEXT("CurrentItem"), DISPID(8450));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Pages* /*[VT_USERDEFINED:1]*/ __fastcall
InspectorDispT<T>::get_ModifiedFormPages()
{
  _TDispID _dispid(*this, OLETEXT("ModifiedFormPages"), DISPID(8454));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Pages* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
InspectorDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
InspectorDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(8451));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
InspectorDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(8452));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
InspectorDispT<T>::HideFormPage(BSTR PageName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HideFormPage"), DISPID(8456));
  TAutoArgs<1> _args;
  _args[1] = PageName /*[VT_BSTR:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
InspectorDispT<T>::IsWordMail()
{
  _TDispID _dispid(*this, OLETEXT("IsWordMail"), DISPID(8453));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
InspectorDispT<T>::SetCurrentFormPage(BSTR PageName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetCurrentFormPage"), DISPID(8460));
  TAutoArgs<1> _args;
  _args[1] = PageName /*[VT_BSTR:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
InspectorDispT<T>::ShowFormPage(BSTR PageName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowFormPage"), DISPID(8457));
  TAutoArgs<1> _args;
  _args[1] = PageName /*[VT_BSTR:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  Items
// Flags:     (4096) Dispatchable
// GUID:      {00063041-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
ItemsDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
ItemsDispT<T>::get_IncludeRecurrences()
{
  _TDispID _dispid(*this, OLETEXT("IncludeRecurrences"), DISPID(206));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ItemsDispT<T>::set_IncludeRecurrences(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("IncludeRecurrences"), DISPID(206));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
ItemsDispT<T>::Add(VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(200));
  TAutoArgs<1> _args;
  _args[1] = Type /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
ItemsDispT<T>::Find(BSTR Filter/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Find"), DISPID(203));
  TAutoArgs<1> _args;
  _args[1] = Filter /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
ItemsDispT<T>::FindNext()
{
  _TDispID _dispid(*this, OLETEXT("FindNext"), DISPID(204));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
ItemsDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ItemsDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(84));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> Outlook_97::Items* /*[VT_USERDEFINED:1]*/ __fastcall
ItemsDispT<T>::Restrict(BSTR Filter/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Restrict"), DISPID(202));
  TAutoArgs<1> _args;
  _args[1] = Filter /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Items* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
ItemsDispT<T>::Sort(BSTR Property/*[in]*/, VARIANT Descending/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sort"), DISPID(205));
  TAutoArgs<2> _args;
  _args[1] = Property /*[VT_BSTR:0]*/;
  _args[2] = Descending /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DJournalItem
// Flags:     (4096) Dispatchable
// GUID:      {00063022-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DJournalItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DJournalItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DJournalItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DJournalItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DJournalItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DJournalItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_ContactNames()
{
  _TDispID _dispid(*this, OLETEXT("ContactNames"), DISPID(3588));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_ContactNames(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ContactNames"), DISPID(3588));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_DocPosted()
{
  _TDispID _dispid(*this, OLETEXT("DocPosted"), DISPID(34577));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_DocPosted(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DocPosted"), DISPID(34577));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_DocPrinted()
{
  _TDispID _dispid(*this, OLETEXT("DocPrinted"), DISPID(34574));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_DocPrinted(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DocPrinted"), DISPID(34574));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_DocRouted()
{
  _TDispID _dispid(*this, OLETEXT("DocRouted"), DISPID(34576));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_DocRouted(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DocRouted"), DISPID(34576));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DJournalItemDispT<T>::get_DocSaved()
{
  _TDispID _dispid(*this, OLETEXT("DocSaved"), DISPID(34575));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_DocSaved(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DocSaved"), DISPID(34575));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DJournalItemDispT<T>::get_Duration()
{
  _TDispID _dispid(*this, OLETEXT("Duration"), DISPID(34567));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Duration(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Duration"), DISPID(34567));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DJournalItemDispT<T>::get_End()
{
  _TDispID _dispid(*this, OLETEXT("End"), DISPID(34568));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_End(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("End"), DISPID(34568));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::get_Recipients()
{
  _TDispID _dispid(*this, OLETEXT("Recipients"), DISPID(63508));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DJournalItemDispT<T>::get_Start()
{
  _TDispID _dispid(*this, OLETEXT("Start"), DISPID(34566));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Start(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Start"), DISPID(34566));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DJournalItemDispT<T>::get_Type()
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(34560));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::set_Type(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(34560));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DJournalItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DJournalItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::Forward()
{
  _TDispID _dispid(*this, OLETEXT("Forward"), DISPID(63507));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::Reply()
{
  _TDispID _dispid(*this, OLETEXT("Reply"), DISPID(63504));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DJournalItemDispT<T>::ReplyAll()
{
  _TDispID _dispid(*this, OLETEXT("ReplyAll"), DISPID(63505));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::StartTimer()
{
  _TDispID _dispid(*this, OLETEXT("StartTimer"), DISPID(63269));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DJournalItemDispT<T>::StopTimer()
{
  _TDispID _dispid(*this, OLETEXT("StopTimer"), DISPID(63270));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DMailItem
// Flags:     (4096) Dispatchable
// GUID:      {00063034-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DMailItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMailItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DMailItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DMailItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_AlternateRecipientAllowed()
{
  _TDispID _dispid(*this, OLETEXT("AlternateRecipientAllowed"), DISPID(2));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_AlternateRecipientAllowed(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AlternateRecipientAllowed"), DISPID(2));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_AutoForwarded()
{
  _TDispID _dispid(*this, OLETEXT("AutoForwarded"), DISPID(5));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_AutoForwarded(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AutoForwarded"), DISPID(5));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_BCC()
{
  _TDispID _dispid(*this, OLETEXT("BCC"), DISPID(3586));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_BCC(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BCC"), DISPID(3586));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_CC()
{
  _TDispID _dispid(*this, OLETEXT("CC"), DISPID(3587));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_CC(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CC"), DISPID(3587));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ConversationIndex()
{
  _TDispID _dispid(*this, OLETEXT("ConversationIndex"), DISPID(113));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ConversationTopic()
{
  _TDispID _dispid(*this, OLETEXT("ConversationTopic"), DISPID(112));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_DeferredDeliveryTime()
{
  _TDispID _dispid(*this, OLETEXT("DeferredDeliveryTime"), DISPID(15));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_DeferredDeliveryTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeferredDeliveryTime"), DISPID(15));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_DeleteAfterSubmit()
{
  _TDispID _dispid(*this, OLETEXT("DeleteAfterSubmit"), DISPID(3585));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_DeleteAfterSubmit(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteAfterSubmit"), DISPID(3585));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_ExpiryTime()
{
  _TDispID _dispid(*this, OLETEXT("ExpiryTime"), DISPID(21));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ExpiryTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExpiryTime"), DISPID(21));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_FlagDueBy()
{
  _TDispID _dispid(*this, OLETEXT("FlagDueBy"), DISPID(48));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_FlagDueBy(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FlagDueBy"), DISPID(48));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_FlagRequest()
{
  _TDispID _dispid(*this, OLETEXT("FlagRequest"), DISPID(34096));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_FlagRequest(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FlagRequest"), DISPID(34096));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlFlagStatus /*[VT_USERDEFINED:0]*/ __fastcall
_DMailItemDispT<T>::get_FlagStatus()
{
  _TDispID _dispid(*this, OLETEXT("FlagStatus"), DISPID(4240));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlFlagStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_FlagStatus(Outlook_97::OlFlagStatus Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FlagStatus"), DISPID(4240));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_OriginatorDeliveryReportRequested()
{
  _TDispID _dispid(*this, OLETEXT("OriginatorDeliveryReportRequested"), DISPID(35));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_OriginatorDeliveryReportRequested(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OriginatorDeliveryReportRequested"), DISPID(35));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_ReadReceiptRequested()
{
  _TDispID _dispid(*this, OLETEXT("ReadReceiptRequested"), DISPID(41));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ReadReceiptRequested(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReadReceiptRequested"), DISPID(41));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ReceivedByEntryID()
{
  _TDispID _dispid(*this, OLETEXT("ReceivedByEntryID"), DISPID(63));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ReceivedByName()
{
  _TDispID _dispid(*this, OLETEXT("ReceivedByName"), DISPID(64));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ReceivedOnBehalfOfEntryID()
{
  _TDispID _dispid(*this, OLETEXT("ReceivedOnBehalfOfEntryID"), DISPID(67));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ReceivedOnBehalfOfName()
{
  _TDispID _dispid(*this, OLETEXT("ReceivedOnBehalfOfName"), DISPID(68));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_ReceivedTime()
{
  _TDispID _dispid(*this, OLETEXT("ReceivedTime"), DISPID(3590));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_RecipientReassignmentProhibited()
{
  _TDispID _dispid(*this, OLETEXT("RecipientReassignmentProhibited"), DISPID(43));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_RecipientReassignmentProhibited(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RecipientReassignmentProhibited"), DISPID(43));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_Recipients()
{
  _TDispID _dispid(*this, OLETEXT("Recipients"), DISPID(63508));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_ReminderOverrideDefault()
{
  _TDispID _dispid(*this, OLETEXT("ReminderOverrideDefault"), DISPID(34076));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderOverrideDefault"), DISPID(34076));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_ReminderPlaySound()
{
  _TDispID _dispid(*this, OLETEXT("ReminderPlaySound"), DISPID(34078));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderPlaySound"), DISPID(34078));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMailItemDispT<T>::get_ReminderSet()
{
  _TDispID _dispid(*this, OLETEXT("ReminderSet"), DISPID(34051));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ReminderSet(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderSet"), DISPID(34051));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ReminderSoundFile()
{
  _TDispID _dispid(*this, OLETEXT("ReminderSoundFile"), DISPID(34079));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ReminderSoundFile(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderSoundFile"), DISPID(34079));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_ReminderTime()
{
  _TDispID _dispid(*this, OLETEXT("ReminderTime"), DISPID(34050));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_ReminderTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderTime"), DISPID(34050));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlRemoteStatus /*[VT_USERDEFINED:0]*/ __fastcall
_DMailItemDispT<T>::get_RemoteStatus()
{
  _TDispID _dispid(*this, OLETEXT("RemoteStatus"), DISPID(34065));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlRemoteStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_ReplyRecipientNames()
{
  _TDispID _dispid(*this, OLETEXT("ReplyRecipientNames"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_ReplyRecipients()
{
  _TDispID _dispid(*this, OLETEXT("ReplyRecipients"), DISPID(61459));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::get_SaveSentMessageFolder()
{
  _TDispID _dispid(*this, OLETEXT("SaveSentMessageFolder"), DISPID(62465));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::_set_SaveSentMessageFolder(Outlook_97::MAPIFolder* Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveSentMessageFolder"), DISPID(62465));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)Param1 /*[VT_USERDEFINED:1]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_SenderName()
{
  _TDispID _dispid(*this, OLETEXT("SenderName"), DISPID(3098));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMailItemDispT<T>::get_SentOn()
{
  _TDispID _dispid(*this, OLETEXT("SentOn"), DISPID(57));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_SentOnBehalfOfName()
{
  _TDispID _dispid(*this, OLETEXT("SentOnBehalfOfName"), DISPID(66));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_SentOnBehalfOfName(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SentOnBehalfOfName"), DISPID(66));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_To()
{
  _TDispID _dispid(*this, OLETEXT("To"), DISPID(3588));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_To(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("To"), DISPID(3588));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_VotingOptions()
{
  _TDispID _dispid(*this, OLETEXT("VotingOptions"), DISPID(61467));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_VotingOptions(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("VotingOptions"), DISPID(61467));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMailItemDispT<T>::get_VotingResponse()
{
  _TDispID _dispid(*this, OLETEXT("VotingResponse"), DISPID(34084));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::set_VotingResponse(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("VotingResponse"), DISPID(34084));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMailItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMailItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::ClearConversationIndex()
{
  _TDispID _dispid(*this, OLETEXT("ClearConversationIndex"), DISPID(63522));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::Forward()
{
  _TDispID _dispid(*this, OLETEXT("Forward"), DISPID(63507));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::Reply()
{
  _TDispID _dispid(*this, OLETEXT("Reply"), DISPID(63504));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMailItemDispT<T>::ReplyAll()
{
  _TDispID _dispid(*this, OLETEXT("ReplyAll"), DISPID(63505));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMailItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  MAPIFolder
// Flags:     (4096) Dispatchable
// GUID:      {00063006-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
MAPIFolderDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlItems /*[VT_USERDEFINED:0]*/ __fastcall
MAPIFolderDispT<T>::get_DefaultItemType()
{
  _TDispID _dispid(*this, OLETEXT("DefaultItemType"), DISPID(12550));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlItems /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
MAPIFolderDispT<T>::get_DefaultMessageClass()
{
  _TDispID _dispid(*this, OLETEXT("DefaultMessageClass"), DISPID(12551));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
MAPIFolderDispT<T>::get_Description()
{
  _TDispID _dispid(*this, OLETEXT("Description"), DISPID(12292));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
MAPIFolderDispT<T>::set_Description(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Description"), DISPID(12292));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
MAPIFolderDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Folders* /*[VT_USERDEFINED:1]*/ __fastcall
MAPIFolderDispT<T>::get_Folders()
{
  _TDispID _dispid(*this, OLETEXT("Folders"), DISPID(8451));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Folders* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Items* /*[VT_USERDEFINED:1]*/ __fastcall
MAPIFolderDispT<T>::get_Items()
{
  _TDispID _dispid(*this, OLETEXT("Items"), DISPID(12544));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Items* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
MAPIFolderDispT<T>::get_Name()
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
MAPIFolderDispT<T>::set_Name(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(12289));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
MAPIFolderDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
MAPIFolderDispT<T>::get_StoreID()
{
  _TDispID _dispid(*this, OLETEXT("StoreID"), DISPID(12552));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
MAPIFolderDispT<T>::get_UnReadItemCount()
{
  _TDispID _dispid(*this, OLETEXT("UnReadItemCount"), DISPID(13827));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
MAPIFolderDispT<T>::CopyTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CopyTo"), DISPID(61490));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestinationFolder /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
MAPIFolderDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61509));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
MAPIFolderDispT<T>::Display()
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(12548));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::Explorer* /*[VT_USERDEFINED:1]*/ __fastcall
MAPIFolderDispT<T>::GetExplorer(VARIANT DisplayMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetExplorer"), DISPID(12545));
  TAutoArgs<1> _args;
  _args[1] = DisplayMode /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Explorer* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
MAPIFolderDispT<T>::MoveTo(Outlook_97::MAPIFolder* DestinationFolder/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveTo"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestinationFolder /*[VT_USERDEFINED:1]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DMeetingCanceledItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063028-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingCanceledItemDispT<T>::GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedAppointment"), DISPID(63328));
  TAutoArgs<1> _args;
  _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingCanceledItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DMeetingRequestAcceptedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063030-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedAppointment"), DISPID(63328));
  TAutoArgs<1> _args;
  _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestAcceptedItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DMeetingRequestDeclinedItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063031-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedAppointment"), DISPID(63328));
  TAutoArgs<1> _args;
  _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestDeclinedItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DMeetingRequestItem
// Flags:     (4096) Dispatchable
// GUID:      {00063029-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestItemDispT<T>::GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedAppointment"), DISPID(63328));
  TAutoArgs<1> _args;
  _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  _DMeetingRequestTentativeItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063032-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::AppointmentItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::GetAssociatedAppointment(VARIANT_BOOL AddToCalendar/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedAppointment"), DISPID(63328));
  TAutoArgs<1> _args;
  _args[1] = AddToCalendar /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::AppointmentItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DMeetingRequestTentativeItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  NameSpace
// Flags:     (4096) Dispatchable
// GUID:      {00063002-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::get_CurrentUser()
{
  _TDispID _dispid(*this, OLETEXT("CurrentUser"), DISPID(8449));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Folders* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::get_Folders()
{
  _TDispID _dispid(*this, OLETEXT("Folders"), DISPID(8451));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Folders* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
NameSpaceDispT<T>::get_Type()
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(8452));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::CreateRecipient(BSTR RecipientName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateRecipient"), DISPID(8458));
  TAutoArgs<1> _args;
  _args[1] = RecipientName /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::GetDefaultFolder(Outlook_97::OlDefaultFolders FolderType/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDefaultFolder"), DISPID(8459));
  TAutoArgs<1> _args;
  _args[1] = (int)FolderType /*[VT_USERDEFINED:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::GetFolderFromID(BSTR EntryIDFolder/*[in]*/, VARIANT EntryIDStore/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFolderFromID"), DISPID(8456));
  TAutoArgs<2> _args;
  _args[1] = EntryIDFolder /*[VT_BSTR:0]*/;
  _args[2] = EntryIDStore /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
NameSpaceDispT<T>::GetItemFromID(BSTR EntryIDItem/*[in]*/, VARIANT EntryIDStore/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetItemFromID"), DISPID(8457));
  TAutoArgs<2> _args;
  _args[1] = EntryIDItem /*[VT_BSTR:0]*/;
  _args[2] = EntryIDStore /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::GetRecipientFromID(BSTR EntryID/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRecipientFromID"), DISPID(8455));
  TAutoArgs<1> _args;
  _args[1] = EntryID /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
NameSpaceDispT<T>::GetSharedDefaultFolder(Outlook_97::Recipient* Recipient/*[in]*/, 
                                          Outlook_97::OlDefaultFolders FolderType/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSharedDefaultFolder"), DISPID(8460));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::Recipient*)Recipient /*[VT_USERDEFINED:1]*/;
  _args[2] = (int)FolderType /*[VT_USERDEFINED:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
NameSpaceDispT<T>::Logoff()
{
  _TDispID _dispid(*this, OLETEXT("Logoff"), DISPID(8454));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
NameSpaceDispT<T>::Logon(VARIANT Profile/*[in]*/, VARIANT Password/*[in]*/, 
                         VARIANT ShowDialog/*[in]*/, VARIANT NewSession/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Logon"), DISPID(8453));
  TAutoArgs<4> _args;
  _args[1] = Profile /*[VT_VARIANT:0]*/;
  _args[2] = Password /*[VT_VARIANT:0]*/;
  _args[3] = ShowDialog /*[VT_VARIANT:0]*/;
  _args[4] = NewSession /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DNoteItem
// Flags:     (4096) Dispatchable
// GUID:      {00063025-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DNoteItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DNoteItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DNoteItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlNoteColor /*[VT_USERDEFINED:0]*/ __fastcall
_DNoteItemDispT<T>::get_Color()
{
  _TDispID _dispid(*this, OLETEXT("Color"), DISPID(35584));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlNoteColor /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Color(Outlook_97::OlNoteColor Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Color"), DISPID(35584));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DNoteItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DNoteItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DNoteItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DNoteItemDispT<T>::get_Height()
{
  _TDispID _dispid(*this, OLETEXT("Height"), DISPID(35587));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Height(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Height"), DISPID(35587));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DNoteItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DNoteItemDispT<T>::get_Left()
{
  _TDispID _dispid(*this, OLETEXT("Left"), DISPID(35588));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Left(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Left"), DISPID(35588));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DNoteItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::MAPIFolder* /*[VT_USERDEFINED:1]*/ __fastcall
_DNoteItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::MAPIFolder* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DNoteItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DNoteItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DNoteItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(63392));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DNoteItemDispT<T>::get_Top()
{
  _TDispID _dispid(*this, OLETEXT("Top"), DISPID(35589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Top(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Top"), DISPID(35589));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DNoteItemDispT<T>::get_Width()
{
  _TDispID _dispid(*this, OLETEXT("Width"), DISPID(35586));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::set_Width(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Width"), DISPID(35586));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DNoteItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DNoteItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DNoteItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DOfficeDocumentItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063020-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DOfficeDocumentItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DOfficeDocumentItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  Pages
// Flags:     (4096) Dispatchable
// GUID:      {0006303F-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
PagesDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Msforms_97::Page* /*[VT_USERDEFINED:1]*/ __fastcall
PagesDispT<T>::Add(VARIANT Name/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(300));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Msforms_97::Page* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Msforms_97::Page* /*[VT_USERDEFINED:1]*/ __fastcall
PagesDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Msforms_97::Page* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
PagesDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(301));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DPostItem
// Flags:     (4096) Dispatchable
// GUID:      {00063024-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DPostItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DPostItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DPostItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DPostItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DPostItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DPostItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DPostItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DPostItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DPostItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_ConversationIndex()
{
  _TDispID _dispid(*this, OLETEXT("ConversationIndex"), DISPID(113));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_ConversationTopic()
{
  _TDispID _dispid(*this, OLETEXT("ConversationTopic"), DISPID(112));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DPostItemDispT<T>::get_ExpiryTime()
{
  _TDispID _dispid(*this, OLETEXT("ExpiryTime"), DISPID(21));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::set_ExpiryTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExpiryTime"), DISPID(21));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DPostItemDispT<T>::get_ReceivedTime()
{
  _TDispID _dispid(*this, OLETEXT("ReceivedTime"), DISPID(3590));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DPostItemDispT<T>::get_SenderName()
{
  _TDispID _dispid(*this, OLETEXT("SenderName"), DISPID(3098));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DPostItemDispT<T>::get_SentOn()
{
  _TDispID _dispid(*this, OLETEXT("SentOn"), DISPID(57));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DPostItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DPostItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::ClearConversationIndex()
{
  _TDispID _dispid(*this, OLETEXT("ClearConversationIndex"), DISPID(63522));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::Forward()
{
  _TDispID _dispid(*this, OLETEXT("Forward"), DISPID(63507));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DPostItemDispT<T>::Post()
{
  _TDispID _dispid(*this, OLETEXT("Post"), DISPID(61557));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::MailItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DPostItemDispT<T>::Reply()
{
  _TDispID _dispid(*this, OLETEXT("Reply"), DISPID(63504));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::MailItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  Recipient
// Flags:     (4096) Dispatchable
// GUID:      {00063045-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
RecipientDispT<T>::get_Address()
{
  _TDispID _dispid(*this, OLETEXT("Address"), DISPID(12291));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
RecipientDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
RecipientDispT<T>::get_AutoResponse()
{
  _TDispID _dispid(*this, OLETEXT("AutoResponse"), DISPID(106));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientDispT<T>::set_AutoResponse(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AutoResponse"), DISPID(106));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
RecipientDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlResponseStatus /*[VT_USERDEFINED:0]*/ __fastcall
RecipientDispT<T>::get_MeetingResponseStatus()
{
  _TDispID _dispid(*this, OLETEXT("MeetingResponseStatus"), DISPID(102));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlResponseStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientDispT<T>::set_MeetingResponseStatus(Outlook_97::OlResponseStatus Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MeetingResponseStatus"), DISPID(102));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
RecipientDispT<T>::get_Name()
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
RecipientDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(109));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
RecipientDispT<T>::get_Resolved()
{
  _TDispID _dispid(*this, OLETEXT("Resolved"), DISPID(100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlTrackingStatus /*[VT_USERDEFINED:0]*/ __fastcall
RecipientDispT<T>::get_TrackingStatus()
{
  _TDispID _dispid(*this, OLETEXT("TrackingStatus"), DISPID(118));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlTrackingStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientDispT<T>::set_TrackingStatus(Outlook_97::OlTrackingStatus Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TrackingStatus"), DISPID(118));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
RecipientDispT<T>::get_TrackingStatusTime()
{
  _TDispID _dispid(*this, OLETEXT("TrackingStatusTime"), DISPID(119));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientDispT<T>::set_TrackingStatusTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TrackingStatusTime"), DISPID(119));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
RecipientDispT<T>::get_Type()
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(112));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientDispT<T>::set_Type(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(112));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(110));
  OleProcedure(_dispid);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
RecipientDispT<T>::FreeBusy(DATE Start/*[in]*/, long MinPerChar/*[in]*/, 
                            VARIANT CompleteFormat/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FreeBusy"), DISPID(111));
  TAutoArgs<3> _args;
  _args[1] = Start /*[VT_DATE:0]*/;
  _args[2] = MinPerChar /*[VT_I4:0]*/;
  _args[3] = CompleteFormat /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
RecipientDispT<T>::Resolve()
{
  _TDispID _dispid(*this, OLETEXT("Resolve"), DISPID(113));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  Recipients
// Flags:     (4096) Dispatchable
// GUID:      {0006303B-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
RecipientsDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall
RecipientsDispT<T>::Add(BSTR Name/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(111));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Recipient* /*[VT_USERDEFINED:1]*/ __fastcall
RecipientsDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::Recipient* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecipientsDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(84));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
RecipientsDispT<T>::ResolveAll()
{
  _TDispID _dispid(*this, OLETEXT("ResolveAll"), DISPID(126));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  RecurrencePattern
// Flags:     (4096) Dispatchable
// GUID:      {00063044-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
RecurrencePatternDispT<T>::get_DayOfMonth()
{
  _TDispID _dispid(*this, OLETEXT("DayOfMonth"), DISPID(4096));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_DayOfMonth(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DayOfMonth"), DISPID(4096));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlDaysOfWeek /*[VT_USERDEFINED:0]*/ __fastcall
RecurrencePatternDispT<T>::get_DayOfWeekMask()
{
  _TDispID _dispid(*this, OLETEXT("DayOfWeekMask"), DISPID(4097));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlDaysOfWeek /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_DayOfWeekMask(Outlook_97::OlDaysOfWeek Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DayOfWeekMask"), DISPID(4097));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
RecurrencePatternDispT<T>::get_Duration()
{
  _TDispID _dispid(*this, OLETEXT("Duration"), DISPID(4109));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_Duration(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Duration"), DISPID(4109));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
RecurrencePatternDispT<T>::get_EndTime()
{
  _TDispID _dispid(*this, OLETEXT("EndTime"), DISPID(4108));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_EndTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("EndTime"), DISPID(4108));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
RecurrencePatternDispT<T>::get_Instance()
{
  _TDispID _dispid(*this, OLETEXT("Instance"), DISPID(4099));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_Instance(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Instance"), DISPID(4099));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
RecurrencePatternDispT<T>::get_Interval()
{
  _TDispID _dispid(*this, OLETEXT("Interval"), DISPID(4100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_Interval(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Interval"), DISPID(4100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
RecurrencePatternDispT<T>::get_MonthOfYear()
{
  _TDispID _dispid(*this, OLETEXT("MonthOfYear"), DISPID(4102));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_MonthOfYear(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MonthOfYear"), DISPID(4102));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
RecurrencePatternDispT<T>::get_NoEndDate()
{
  _TDispID _dispid(*this, OLETEXT("NoEndDate"), DISPID(4107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_NoEndDate(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoEndDate"), DISPID(4107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
RecurrencePatternDispT<T>::get_Occurrences()
{
  _TDispID _dispid(*this, OLETEXT("Occurrences"), DISPID(4101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_Occurrences(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Occurrences"), DISPID(4101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
RecurrencePatternDispT<T>::get_PatternEndDate()
{
  _TDispID _dispid(*this, OLETEXT("PatternEndDate"), DISPID(4098));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_PatternEndDate(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PatternEndDate"), DISPID(4098));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
RecurrencePatternDispT<T>::get_PatternStartDate()
{
  _TDispID _dispid(*this, OLETEXT("PatternStartDate"), DISPID(4104));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_PatternStartDate(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PatternStartDate"), DISPID(4104));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlRecurrenceType /*[VT_USERDEFINED:0]*/ __fastcall
RecurrencePatternDispT<T>::get_RecurrenceType()
{
  _TDispID _dispid(*this, OLETEXT("RecurrenceType"), DISPID(4103));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlRecurrenceType /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_RecurrenceType(Outlook_97::OlRecurrenceType Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RecurrenceType"), DISPID(4103));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
RecurrencePatternDispT<T>::get_Regenerate()
{
  _TDispID _dispid(*this, OLETEXT("Regenerate"), DISPID(4106));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_Regenerate(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Regenerate"), DISPID(4106));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
RecurrencePatternDispT<T>::get_StartTime()
{
  _TDispID _dispid(*this, OLETEXT("StartTime"), DISPID(4105));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
RecurrencePatternDispT<T>::set_StartTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StartTime"), DISPID(4105));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DRemoteItem
// Flags:     (4096) Dispatchable
// GUID:      {00063023-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DRemoteItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DRemoteItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DRemoteItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DRemoteItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DRemoteItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DRemoteItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DRemoteItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DRemoteItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DRemoteItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DRemoteItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DRemoteItemDispT<T>::get_HasAttachment()
{
  _TDispID _dispid(*this, OLETEXT("HasAttachment"), DISPID(36615));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DRemoteItemDispT<T>::get_RemoteMessageClass()
{
  _TDispID _dispid(*this, OLETEXT("RemoteMessageClass"), DISPID(36610));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DRemoteItemDispT<T>::get_TransferSize()
{
  _TDispID _dispid(*this, OLETEXT("TransferSize"), DISPID(36613));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DRemoteItemDispT<T>::get_TransferTime()
{
  _TDispID _dispid(*this, OLETEXT("TransferTime"), DISPID(36612));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DRemoteItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DRemoteItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRemoteItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DReportItem
// Flags:     (4096) Dispatchable
// GUID:      {00063026-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DReportItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DReportItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DReportItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DReportItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DReportItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DReportItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DReportItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DReportItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DReportItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DReportItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DReportItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DReportItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DReportItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DReportItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DReportItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DReportItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DReportItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DReportItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DReportItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DTaskItem
// Flags:     (4096) Dispatchable
// GUID:      {00063035-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskItemDispT<T>::get_ActualWork()
{
  _TDispID _dispid(*this, OLETEXT("ActualWork"), DISPID(33040));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_ActualWork(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActualWork"), DISPID(33040));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_CardData()
{
  _TDispID _dispid(*this, OLETEXT("CardData"), DISPID(33067));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_CardData(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CardData"), DISPID(33067));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_Complete()
{
  _TDispID _dispid(*this, OLETEXT("Complete"), DISPID(33052));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Complete(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Complete"), DISPID(33052));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Contacts()
{
  _TDispID _dispid(*this, OLETEXT("Contacts"), DISPID(34106));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Contacts(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Contacts"), DISPID(34106));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskItemDispT<T>::get_DateCompleted()
{
  _TDispID _dispid(*this, OLETEXT("DateCompleted"), DISPID(33039));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_DateCompleted(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DateCompleted"), DISPID(33039));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlTaskDelegationState /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskItemDispT<T>::get_DelegationState()
{
  _TDispID _dispid(*this, OLETEXT("DelegationState"), DISPID(33066));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlTaskDelegationState /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Delegator()
{
  _TDispID _dispid(*this, OLETEXT("Delegator"), DISPID(33057));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskItemDispT<T>::get_DueDate()
{
  _TDispID _dispid(*this, OLETEXT("DueDate"), DISPID(33029));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_DueDate(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DueDate"), DISPID(33029));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_IsRecurring()
{
  _TDispID _dispid(*this, OLETEXT("IsRecurring"), DISPID(62999));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskItemDispT<T>::get_Ordinal()
{
  _TDispID _dispid(*this, OLETEXT("Ordinal"), DISPID(33059));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Ordinal(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Ordinal"), DISPID(33059));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Owner()
{
  _TDispID _dispid(*this, OLETEXT("Owner"), DISPID(33055));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Owner(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Owner"), DISPID(33055));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlTaskOwnership /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskItemDispT<T>::get_Ownership()
{
  _TDispID _dispid(*this, OLETEXT("Ownership"), DISPID(33065));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlTaskOwnership /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskItemDispT<T>::get_PercentComplete()
{
  _TDispID _dispid(*this, OLETEXT("PercentComplete"), DISPID(63007));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_PercentComplete(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PercentComplete"), DISPID(63007));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::Recipients* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::get_Recipients()
{
  _TDispID _dispid(*this, OLETEXT("Recipients"), DISPID(63508));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Recipients* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_ReminderOverrideDefault()
{
  _TDispID _dispid(*this, OLETEXT("ReminderOverrideDefault"), DISPID(34076));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_ReminderOverrideDefault(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderOverrideDefault"), DISPID(34076));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_ReminderPlaySound()
{
  _TDispID _dispid(*this, OLETEXT("ReminderPlaySound"), DISPID(34078));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_ReminderPlaySound(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderPlaySound"), DISPID(34078));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_ReminderSet()
{
  _TDispID _dispid(*this, OLETEXT("ReminderSet"), DISPID(34051));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_ReminderSet(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderSet"), DISPID(34051));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_ReminderSoundFile()
{
  _TDispID _dispid(*this, OLETEXT("ReminderSoundFile"), DISPID(34079));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_ReminderSoundFile(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderSoundFile"), DISPID(34079));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskItemDispT<T>::get_ReminderTime()
{
  _TDispID _dispid(*this, OLETEXT("ReminderTime"), DISPID(34050));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_ReminderTime(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReminderTime"), DISPID(34050));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlTaskResponse /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskItemDispT<T>::get_ResponseState()
{
  _TDispID _dispid(*this, OLETEXT("ResponseState"), DISPID(63011));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlTaskResponse /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_Role()
{
  _TDispID _dispid(*this, OLETEXT("Role"), DISPID(33063));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Role(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Role"), DISPID(33063));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_SchedulePlusPriority()
{
  _TDispID _dispid(*this, OLETEXT("SchedulePlusPriority"), DISPID(33071));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_SchedulePlusPriority(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SchedulePlusPriority"), DISPID(33071));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskItemDispT<T>::get_StartDate()
{
  _TDispID _dispid(*this, OLETEXT("StartDate"), DISPID(33028));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_StartDate(DATE Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StartDate"), DISPID(33028));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_DATE:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::OlTaskStatus /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskItemDispT<T>::get_Status()
{
  _TDispID _dispid(*this, OLETEXT("Status"), DISPID(33025));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlTaskStatus /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_Status(Outlook_97::OlTaskStatus Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Status"), DISPID(33025));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_StatusOnCompletionRecipients()
{
  _TDispID _dispid(*this, OLETEXT("StatusOnCompletionRecipients"), DISPID(3586));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_StatusOnCompletionRecipients(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StatusOnCompletionRecipients"), DISPID(3586));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskItemDispT<T>::get_StatusUpdateRecipients()
{
  _TDispID _dispid(*this, OLETEXT("StatusUpdateRecipients"), DISPID(3587));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_StatusUpdateRecipients(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StatusUpdateRecipients"), DISPID(3587));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::get_TeamTask()
{
  _TDispID _dispid(*this, OLETEXT("TeamTask"), DISPID(33027));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_TeamTask(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TeamTask"), DISPID(33027));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskItemDispT<T>::get_TotalWork()
{
  _TDispID _dispid(*this, OLETEXT("TotalWork"), DISPID(33041));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::set_TotalWork(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TotalWork"), DISPID(33041));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::Assign()
{
  _TDispID _dispid(*this, OLETEXT("Assign"), DISPID(63008));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::CancelResponseState()
{
  _TDispID _dispid(*this, OLETEXT("CancelResponseState"), DISPID(63010));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::ClearRecurrencePattern()
{
  _TDispID _dispid(*this, OLETEXT("ClearRecurrencePattern"), DISPID(61605));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::GetRecurrencePattern()
{
  _TDispID _dispid(*this, OLETEXT("GetRecurrencePattern"), DISPID(61604));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::MarkComplete()
{
  _TDispID _dispid(*this, OLETEXT("MarkComplete"), DISPID(62989));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskItemDispT<T>::Respond(Outlook_97::OlTaskResponse Response/*[in]*/, VARIANT fNoUI/*[in]*/, 
                            VARIANT fAdditionalTextDialog/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Respond"), DISPID(63009));
  TAutoArgs<3> _args;
  _args[1] = (int)Response /*[VT_USERDEFINED:0]*/;
  _args[2] = fNoUI /*[VT_VARIANT:0]*/;
  _args[3] = fAdditionalTextDialog /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskItemDispT<T>::Send()
{
  _TDispID _dispid(*this, OLETEXT("Send"), DISPID(61557));
  OleProcedure(_dispid);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskItemDispT<T>::SkipRecurrence()
{
  _TDispID _dispid(*this, OLETEXT("SkipRecurrence"), DISPID(63012));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskItemDispT<T>::StatusReport()
{
  _TDispID _dispid(*this, OLETEXT("StatusReport"), DISPID(62994));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  _DTaskRequestAcceptItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063038-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestAcceptItemDispT<T>::GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedTask"), DISPID(61460));
  TAutoArgs<1> _args;
  _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  _DTaskRequestDeclineItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063039-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestDeclineItemDispT<T>::GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedTask"), DISPID(61460));
  TAutoArgs<1> _args;
  _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  _DTaskRequestItem
// Flags:     (4096) Dispatchable
// GUID:      {00063036-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestItemDispT<T>::GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedTask"), DISPID(61460));
  TAutoArgs<1> _args;
  _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  _DTaskRequestUpdateItem
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00063037-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> Outlook_97::Actions* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Actions()
{
  _TDispID _dispid(*this, OLETEXT("Actions"), DISPID(63511));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Actions* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OutlookApplication* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Application()
{
  _TDispID _dispid(*this, OLETEXT("Application"), DISPID(61440));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OutlookApplication* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Attachments* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Attachments()
{
  _TDispID _dispid(*this, OLETEXT("Attachments"), DISPID(63509));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Attachments* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_BillingInformation()
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_BillingInformation(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BillingInformation"), DISPID(34101));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Body()
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Body(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Body"), DISPID(37120));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Categories()
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Categories(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Categories"), DISPID(36865));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Companies()
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Companies(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Companies"), DISPID(34107));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_CreationTime()
{
  _TDispID _dispid(*this, OLETEXT("CreationTime"), DISPID(12295));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_EntryID()
{
  _TDispID _dispid(*this, OLETEXT("EntryID"), DISPID(61470));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::FormDescription* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_FormDescription()
{
  _TDispID _dispid(*this, OLETEXT("FormDescription"), DISPID(61589));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::FormDescription* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::Inspector* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_GetInspector()
{
  _TDispID _dispid(*this, OLETEXT("GetInspector"), DISPID(61502));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::Inspector* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> Outlook_97::OlImportance /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Importance()
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlImportance /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Importance(Outlook_97::OlImportance Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Importance"), DISPID(23));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> DATE /*[VT_DATE:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_LastModificationTime()
{
  _TDispID _dispid(*this, OLETEXT("LastModificationTime"), DISPID(12296));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_MessageClass()
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_MessageClass(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageClass"), DISPID(26));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Mileage()
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Mileage(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Mileage"), DISPID(34100));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_NoAging()
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_NoAging(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NoAging"), DISPID(34062));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_OutlookInternalVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookInternalVersion"), DISPID(34130));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_OutlookVersion()
{
  _TDispID _dispid(*this, OLETEXT("OutlookVersion"), DISPID(34132));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Saved()
{
  _TDispID _dispid(*this, OLETEXT("Saved"), DISPID(61603));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlSensitivity /*[VT_USERDEFINED:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Sensitivity()
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlSensitivity /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Sensitivity(Outlook_97::OlSensitivity Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Sensitivity"), DISPID(54));
  TAutoArgs<1> _args;
  _args[1] = (int)Param1 /*[VT_USERDEFINED:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Size()
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(3592));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_Subject()
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_Subject(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Subject"), DISPID(55));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_UnRead()
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::set_UnRead(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnRead"), DISPID(61468));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> Outlook_97::UserProperties* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::get_UserProperties()
{
  _TDispID _dispid(*this, OLETEXT("UserProperties"), DISPID(63510));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::UserProperties* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::Close(Outlook_97::OlInspectorClose SaveMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(61475));
  TAutoArgs<1> _args;
  _args[1] = (int)SaveMode /*[VT_USERDEFINED:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::Copy()
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(61490));
  TAutoArgs<0> _args;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(61514));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::Display(VARIANT Modal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Display"), DISPID(61606));
  TAutoArgs<1> _args;
  _args[1] = Modal /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::Move(Outlook_97::MAPIFolder* DestFldr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(61492));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Outlook_97::MAPIFolder*)DestFldr /*[VT_USERDEFINED:1]*/;
  OleFunction(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(61512));
  OleProcedure(_dispid);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::SaveAs(BSTR Path/*[in]*/, VARIANT Type/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(61521));
  TAutoArgs<2> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  _args[2] = Type /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::PrintOut()
{
  _TDispID _dispid(*this, OLETEXT("PrintOut"), DISPID(61491));
  OleProcedure(_dispid);
}

template <class T> Outlook_97::TaskItem* /*[VT_USERDEFINED:1]*/ __fastcall
_DTaskRequestUpdateItemDispT<T>::GetAssociatedTask(VARIANT_BOOL AddToTaskList/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAssociatedTask"), DISPID(61460));
  TAutoArgs<1> _args;
  _args[1] = AddToTaskList /*[VT_BOOL:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::TaskItem* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

// *********************************************************************//
// DispIntf:  UserProperties
// Flags:     (4096) Dispatchable
// GUID:      {0006303D-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> long /*[VT_I4:0]*/ __fastcall
UserPropertiesDispT<T>::get_Count()
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(80));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::UserProperty* /*[VT_USERDEFINED:1]*/ __fastcall
UserPropertiesDispT<T>::Add(BSTR Name/*[in]*/, Outlook_97::OlUserPropertyType Type/*[in]*/, 
                            VARIANT AddToFolderFields/*[in]*/, VARIANT DisplayFormat/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(102));
  TAutoArgs<4> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = (int)Type /*[VT_USERDEFINED:0]*/;
  _args[3] = AddToFolderFields /*[VT_VARIANT:0]*/;
  _args[4] = DisplayFormat /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::UserProperty* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertiesDispT<T>::Find(BSTR Name/*[in]*/, VARIANT Custom/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Find"), DISPID(103));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = Custom /*[VT_VARIANT:0]*/;
  OleProcedure(_dispid, _args);
}

template <class T> Outlook_97::UserProperty* /*[VT_USERDEFINED:1]*/ __fastcall
UserPropertiesDispT<T>::Item(VARIANT Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(81));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_VARIANT:0]*/;
  OleFunction(_dispid, _args);
  return (Outlook_97::UserProperty* /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertiesDispT<T>::Remove(long Index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(82));
  TAutoArgs<1> _args;
  _args[1] = Index /*[VT_I4:0]*/;
  OleProcedure(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  UserProperty
// Flags:     (4096) Dispatchable
// GUID:      {00063042-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
UserPropertyDispT<T>::get_Formula()
{
  _TDispID _dispid(*this, OLETEXT("Formula"), DISPID(103));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertyDispT<T>::set_Formula(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Formula"), DISPID(103));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
UserPropertyDispT<T>::get_Name()
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(12289));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> LPDISPATCH /*[VT_DISPATCH:0]*/ __fastcall
UserPropertyDispT<T>::get_Parent()
{
  _TDispID _dispid(*this, OLETEXT("Parent"), DISPID(61441));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> Outlook_97::OlUserPropertyType /*[VT_USERDEFINED:0]*/ __fastcall
UserPropertyDispT<T>::get_Type()
{
  _TDispID _dispid(*this, OLETEXT("Type"), DISPID(109));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (Outlook_97::OlUserPropertyType /*[C1]*/)(int) /*[VT_I4:0]*/_args.GetRetVariant();
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
UserPropertyDispT<T>::get_ValidationFormula()
{
  _TDispID _dispid(*this, OLETEXT("ValidationFormula"), DISPID(104));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertyDispT<T>::set_ValidationFormula(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ValidationFormula"), DISPID(104));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> BSTR /*[VT_BSTR:0]*/ __fastcall
UserPropertyDispT<T>::get_ValidationText()
{
  _TDispID _dispid(*this, OLETEXT("ValidationText"), DISPID(105));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertyDispT<T>::set_ValidationText(BSTR Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ValidationText"), DISPID(105));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BSTR:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT /*[VT_VARIANT:0]*/ __fastcall
UserPropertyDispT<T>::get_Value()
{
  _TDispID _dispid(*this, OLETEXT("Value"), DISPID(0));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertyDispT<T>::set_Value(VARIANT Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Value"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_VARIANT:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
UserPropertyDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(108));
  OleProcedure(_dispid);
}

// *********************************************************************//
// DispIntf:  _DRecipientControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006F025-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DRecipientControlDispT<T>::get_Enabled()
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(-514));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRecipientControlDispT<T>::set_Enabled(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(-514));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DRecipientControlDispT<T>::get_BackColor()
{
  _TDispID _dispid(*this, OLETEXT("BackColor"), DISPID(-501));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRecipientControlDispT<T>::set_BackColor(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BackColor"), DISPID(-501));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DRecipientControlDispT<T>::get_ForeColor()
{
  _TDispID _dispid(*this, OLETEXT("ForeColor"), DISPID(-513));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRecipientControlDispT<T>::set_ForeColor(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ForeColor"), DISPID(-513));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DRecipientControlDispT<T>::get_ReadOnly()
{
  _TDispID _dispid(*this, OLETEXT("ReadOnly"), DISPID(-2147356664));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRecipientControlDispT<T>::set_ReadOnly(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReadOnly"), DISPID(-2147356664));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> IFontDisp** /*[VT_USERDEFINED:1]*/ __fastcall
_DRecipientControlDispT<T>::get_Font()
{
  _TDispID _dispid(*this, OLETEXT("Font"), DISPID(-512));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return (IFontDisp** /*[C1]*/)(LPDISPATCH) /*[VT_DISPATCH:1]*/_args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRecipientControlDispT<T>::set_Font(IFontDisp** Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Font"), DISPID(-512));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(IFontDisp**)Param1 /*[VT_USERDEFINED:1]*/;
  OlePropertyPut(_dispid, _args);
}

template <class T> long /*[VT_I4:0]*/ __fastcall
_DRecipientControlDispT<T>::get_SpecialEffect()
{
  _TDispID _dispid(*this, OLETEXT("SpecialEffect"), DISPID(12));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DRecipientControlDispT<T>::set_SpecialEffect(long Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SpecialEffect"), DISPID(12));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_I4:0]*/;
  OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DRecipientControlEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {D87E7E17-6897-11CE-A6C0-00AA00608FAA}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _DDocSiteControl
// Flags:     (4112) Hidden Dispatchable
// GUID:      {0006F026-0000-0000-C000-000000000046}
// *********************************************************************//
template <class T> VARIANT_BOOL /*[VT_BOOL:0]*/ __fastcall
_DDocSiteControlDispT<T>::get_ReadOnly()
{
  _TDispID _dispid(*this, OLETEXT("ReadOnly"), DISPID(-2147356664));
  TAutoArgs<0> _args;
  OlePropertyGet(_dispid, _args);
  return _args.GetRetVariant();
}

template <class T> void /*[VT_VOID:0]*/ __fastcall
_DDocSiteControlDispT<T>::set_ReadOnly(VARIANT_BOOL Param1/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReadOnly"), DISPID(-2147356664));
  TAutoArgs<1> _args;
  _args[1] = Param1 /*[VT_BOOL:0]*/;
  OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  _DDocSiteControlEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {50BB9B50-811D-11CE-B565-00AA00608FAA}
// *********************************************************************//
// *********************************************************************//
// The following typedefs expose classes (named CoCoClassName) that       
// provide static Create() and CreateRemote(LPWSTR machineName) methods   
// for creating an instance of an exposed object. These functions can     
// be used by client wishing to automate CoClasses exposed by this        
// typelibrary.                                                           
// *********************************************************************//
#endif  //   __TLB_NO_INTERFACE_WRAPPERS


#if !defined(__TLB_NO_EVENT_WRAPPERS) && defined(USING_ATLVCL)
// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : AppointmentItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_AppointmentItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_AppointmentItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_AppointmentItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_AppointmentItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_AppointmentItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_AppointmentItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_AppointmentItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                               unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_AppointmentItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                        unsigned_short wFlags, DISPPARAMS* pdispparams, 
                                        VARIANT* pvarResult, EXCEPINFO* pexcepinfo, 
                                        unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_AppointmentItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_AppointmentItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_AppointmentItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : ContactItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_ContactItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_ContactItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_ContactItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_ContactItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ContactItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ContactItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ContactItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                           unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ContactItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                    unsigned_short wFlags, DISPPARAMS* pdispparams, 
                                    VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ContactItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ContactItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ContactItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : JournalItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_JournalItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_JournalItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_JournalItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_JournalItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_JournalItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_JournalItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_JournalItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                           unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_JournalItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                    unsigned_short wFlags, DISPPARAMS* pdispparams, 
                                    VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_JournalItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_JournalItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_JournalItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : MailItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_MailItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_MailItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_MailItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_MailItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MailItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MailItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MailItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                        unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MailItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                 unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                 EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MailItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MailItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MailItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _MeetingCanceledItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__MeetingCanceledItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingCanceledItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingCanceledItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                  void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                                    unsigned cNames, unsigned_long lcid, 
                                                    long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                             unsigned_long lcid, unsigned_short wFlags, 
                                             DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                             EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingCanceledItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingCanceledItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _MeetingRequestAcceptedItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__MeetingRequestAcceptedItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingRequestAcceptedItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingRequestAcceptedItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                         void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, 
                                                           signed_char** rgszNames, unsigned cNames, 
                                                           unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                                    unsigned_long lcid, unsigned_short wFlags, 
                                                    DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                                    EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestAcceptedItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestAcceptedItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _MeetingRequestDeclinedItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__MeetingRequestDeclinedItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingRequestDeclinedItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingRequestDeclinedItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                         void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, 
                                                           signed_char** rgszNames, unsigned cNames, 
                                                           unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                                    unsigned_long lcid, unsigned_short wFlags, 
                                                    DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                                    EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestDeclinedItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestDeclinedItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : MeetingRequestItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_MeetingRequestItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_MeetingRequestItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_MeetingRequestItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                                  unsigned cNames, unsigned_long lcid, 
                                                  long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                           unsigned_long lcid, unsigned_short wFlags, 
                                           DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                           EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_MeetingRequestItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_MeetingRequestItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _MeetingRequestTentativeItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__MeetingRequestTentativeItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingRequestTentativeItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__MeetingRequestTentativeItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                          void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, 
                                                            signed_char** rgszNames, unsigned cNames, 
                                                            unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                                     unsigned_long lcid, unsigned_short wFlags, 
                                                     DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                                     EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__MeetingRequestTentativeItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__MeetingRequestTentativeItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : NoteItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_NoteItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_NoteItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_NoteItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_NoteItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_NoteItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_NoteItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_NoteItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                        unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_NoteItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                 unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                 EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_NoteItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_NoteItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_NoteItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _OfficeDocumentItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__OfficeDocumentItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__OfficeDocumentItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__OfficeDocumentItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                                   unsigned cNames, unsigned_long lcid, 
                                                   long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                            unsigned_long lcid, unsigned_short wFlags, 
                                            DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                            EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__OfficeDocumentItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__OfficeDocumentItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : PostItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_PostItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_PostItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_PostItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_PostItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_PostItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_PostItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_PostItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                        unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_PostItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                 unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                 EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_PostItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_PostItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_PostItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : RemoteItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_RemoteItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_RemoteItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_RemoteItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_RemoteItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_RemoteItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_RemoteItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_RemoteItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                          unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_RemoteItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                   unsigned_short wFlags, DISPPARAMS* pdispparams, 
                                   VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_RemoteItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_RemoteItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_RemoteItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : ReportItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_ReportItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_ReportItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_ReportItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_ReportItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ReportItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ReportItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ReportItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                          unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ReportItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                   unsigned_short wFlags, DISPPARAMS* pdispparams, 
                                   VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_ReportItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ReportItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_ReportItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : TaskItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_TaskItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_TaskItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_TaskItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_TaskItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                        unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                 unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                 EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _TaskRequestAcceptItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__TaskRequestAcceptItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__TaskRequestAcceptItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__TaskRequestAcceptItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                    void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                                      unsigned cNames, unsigned_long lcid, 
                                                      long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                               unsigned_long lcid, unsigned_short wFlags, 
                                               DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                               EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestAcceptItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestAcceptItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _TaskRequestDeclineItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__TaskRequestDeclineItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__TaskRequestDeclineItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__TaskRequestDeclineItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                     void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                                       unsigned cNames, unsigned_long lcid, 
                                                       long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                                unsigned_long lcid, unsigned_short wFlags, 
                                                DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                                EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestDeclineItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestDeclineItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : TaskRequestItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents_TaskRequestItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents_TaskRequestItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_TaskRequestItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents_TaskRequestItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskRequestItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskRequestItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskRequestItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                               unsigned cNames, unsigned_long lcid, long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskRequestItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                                        unsigned_short wFlags, DISPPARAMS* pdispparams, 
                                        VARIANT* pvarResult, EXCEPINFO* pexcepinfo, 
                                        unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents_TaskRequestItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskRequestItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents_TaskRequestItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _TaskRequestUpdateItem
// Event Interface : _DItemEvents
// *********************************************************************//
template <class T>
class TEvents__TaskRequestUpdateItem : public IConnectionPointImpl<T,
                                                 &DIID__DItemEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
  void            Fire_QueryInterface(System::TGUID* riid, void** ppvObj);
  unsigned_long   Fire_AddRef(void);
  unsigned_long   Fire_Release(void);
  void            Fire_GetTypeInfoCount(unsigned* pctinfo);
  void            Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, void** pptinfo);
  void            Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, unsigned cNames, 
                                     unsigned_long lcid, long* rgdispid);
  void            Fire_Invoke(long dispidMember, System::TGUID* riid, unsigned_long lcid, 
                              unsigned_short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                              EXCEPINFO* pexcepinfo, unsigned* puArgErr);
  VARIANT_BOOL    Fire_Read(void);
  VARIANT_BOOL    Fire_Write(void);
  VARIANT_BOOL    Fire_Open(void);
  VARIANT_BOOL    Fire_Close(void);
  VARIANT_BOOL    Fire_Send(void);
  VARIANT_BOOL    Fire_Reply(LPDISPATCH Response);
  VARIANT_BOOL    Fire_ReplyAll(LPDISPATCH Response);
  VARIANT_BOOL    Fire_Forward(LPDISPATCH Forward);
  VARIANT_BOOL    Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response);
  void            Fire_CustomPropertyChange(BSTR Name);
  void            Fire_PropertyChange(BSTR Name);
protected:
  _DItemEventsDisp m_EventIntfObj;
};

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_QueryInterface(System::TGUID* riid, void** ppvObj)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.QueryInterface(riid, ppvObj);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__TaskRequestUpdateItem<T>::Fire_AddRef(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.AddRef();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> unsigned_long
TEvents__TaskRequestUpdateItem<T>::Fire_Release(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Release();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_GetTypeInfoCount(unsigned* pctinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfoCount(pctinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_GetTypeInfo(unsigned itinfo, unsigned_long lcid, 
                                                    void** pptinfo)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetTypeInfo(itinfo, lcid, pptinfo);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_GetIDsOfNames(System::TGUID* riid, signed_char** rgszNames, 
                                                      unsigned cNames, unsigned_long lcid, 
                                                      long* rgdispid)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_Invoke(long dispidMember, System::TGUID* riid, 
                                               unsigned_long lcid, unsigned_short wFlags, 
                                               DISPPARAMS* pdispparams, VARIANT* pvarResult, 
                                               EXCEPINFO* pexcepinfo, unsigned* puArgErr)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Invoke(dispidMember, riid, lcid, wFlags, pdispparams, pvarResult, pexcepinfo, 
                            puArgErr);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Read(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Read();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Write(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Write();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Open(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Open();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Close(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Close();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Send(void)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Send();
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Reply(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Reply(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_ReplyAll(LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.ReplyAll(Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_Forward(LPDISPATCH Forward)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.Forward(Forward);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> VARIANT_BOOL
TEvents__TaskRequestUpdateItem<T>::Fire_CustomAction(LPDISPATCH Action, LPDISPATCH Response)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomAction(Action, Response);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_CustomPropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.CustomPropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

template <class T> void
TEvents__TaskRequestUpdateItem<T>::Fire_PropertyChange(BSTR Name)
{
  T * pT = (T*)this;
  pT->Lock();
  IUnknown ** pp = m_vec.begin();
  while (pp < m_vec.end())
  {
    if (*pp != NULL)
    {
      m_EventIntfObj.Attach(*pp);
      m_EventIntfObj.PropertyChange(Name);
      m_EventIntfObj.Attach(0);
    }
    pp++;
  }
  pT->Unlock();
}

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _RecipientControl
// Event Interface : _DRecipientControlEvents
// *********************************************************************//
template <class T>
class TEvents__RecipientControl : public IConnectionPointImpl<T,
                                                 &DIID__DRecipientControlEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
protected:
  _DRecipientControlEventsDisp m_EventIntfObj;
};

// *********************************************************************//
// CONNECTIONPOINT/EVENT PROXY
// CoClass         : _DocSiteControl
// Event Interface : _DDocSiteControlEvents
// *********************************************************************//
template <class T>
class TEvents__DocSiteControl : public IConnectionPointImpl<T,
                                                 &DIID__DDocSiteControlEvents,
                                                 CComUnkArray<CONNECTIONPOINT_ARRAY_SIZE> >
 /* Note: if encountering problems with events, please change CComUnkArray to CComDynamicUnkArray in the line above. */
{
public:
protected:
  _DDocSiteControlEventsDisp m_EventIntfObj;
};

#endif  //   __TLB_NO_EVENT_WRAPPERS

};     // namespace Outlook_97

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Outlook_97;
#endif

#pragma option pop

#endif // Outlook_97H

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.0.1.0.1.2  $
// File generated on 1/29/2002 1:27:59 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\program files\microsoft office\office10\msacc.olb (1)
// LIBID: {4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}
// LCID: 0
// Helpfile: c:\program files\microsoft office\office10\vbaac10.chm
// HelpString: Microsoft Access 10.0 Object Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINNT\System32\stdole2.tlb)
//   (2) v5.0 DAO, (C:\Program Files\Common Files\Microsoft Shared\DAO\dao360.dll)
//   (3) v2.2 Office, (C:\Program Files\Common Files\Microsoft Shared\Office10\MSO.DLL)
//   (4) v2.5 ADODB, (C:\Program Files\Common Files\System\ADO\msado25.tlb)
//   (5) v5.3 VBIDE, (C:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
//   (6) v1.0 OWC10, (C:\Program Files\Common Files\Microsoft Shared\Web Components\10\OWC10.DLL)
// ************************************************************************ //
#ifndef   Access_XP_srvrH
#define   Access_XP_srvrH

#pragma option push -b -w-inl

#include <oleserver.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "DAO_XP.h"
#include "Office_XP.h"
#include "ADODB_XP.h"
#include "VBIDE_XP.h"
#include "OWC10_XP.h"

#include "Access_XP.h"
namespace Access_xp
{

// *********************************************************************//
// HelpString: Microsoft Access 10.0 Object Library
// Version:    9.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFormatCondition
// Help String      : 
// Default Interface: _FormatCondition
// Def. Intf. Object: _FormatConditionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TFormatCondition : public Oleserver::TOleServer
{
  _FormatConditionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFormatCondition(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _FormatConditionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_FormatConditionPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_ForeColor(void)
  {
    return GetDefaultInterface()->get_ForeColor();
  }

// StdProp:Integer
  void __fastcall set_ForeColor(long plResult/*[in]*/)
  {
    GetDefaultInterface()->set_ForeColor(plResult/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_BackColor(void)
  {
    return GetDefaultInterface()->get_BackColor();
  }

// StdProp:Integer
  void __fastcall set_BackColor(long plResult/*[in]*/)
  {
    GetDefaultInterface()->set_BackColor(plResult/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FontBold(void)
  {
    return GetDefaultInterface()->get_FontBold();
  }

// StdProp:WordBool
  void __fastcall set_FontBold(VARIANT_BOOL pfResult/*[in]*/)
  {
    GetDefaultInterface()->set_FontBold(pfResult/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FontItalic(void)
  {
    return GetDefaultInterface()->get_FontItalic();
  }

// StdProp:WordBool
  void __fastcall set_FontItalic(VARIANT_BOOL pfResult/*[in]*/)
  {
    GetDefaultInterface()->set_FontItalic(pfResult/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FontUnderline(void)
  {
    return GetDefaultInterface()->get_FontUnderline();
  }

// StdProp:WordBool
  void __fastcall set_FontUnderline(VARIANT_BOOL pfResult/*[in]*/)
  {
    GetDefaultInterface()->set_FontUnderline(pfResult/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Enabled(void)
  {
    return GetDefaultInterface()->get_Enabled();
  }

// StdProp:WordBool
  void __fastcall set_Enabled(VARIANT_BOOL pfResult/*[in]*/)
  {
    GetDefaultInterface()->set_Enabled(pfResult/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcFormatConditionType __fastcall get_Type(void)
  {
    return GetDefaultInterface()->get_Type();
  }

// StdProp:TOleEnum
  Access_xp::AcFormatConditionOperator __fastcall get_Operator(void)
  {
    return GetDefaultInterface()->get_Operator();
  }

// StdProp:WideString
  BSTR __fastcall get_Expression1(void)
  {
    return GetDefaultInterface()->get_Expression1();
  }

// StdProp:WideString
  BSTR __fastcall get_Expression2(void)
  {
    return GetDefaultInterface()->get_Expression2();
  }

  /*CoClassWriteMethods*/
  void __fastcall Modify(Access_xp::AcFormatConditionType Type/*[in]*/, 
                         Access_xp::AcFormatConditionOperator Operator/*[in,def,opt]*/, 
                         VARIANT Expression1/*[in,opt]*/= TNoParam(), 
                         VARIANT Expression2/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Modify(Type/*[in]*/, Operator/*[in,def,opt]*/, Expression1/*[in,opt]*/, 
                                  Expression2/*[in,opt]*/);
  }

  void __fastcall Delete(void)
  {
    GetDefaultInterface()->Delete();
  }

  /*CoClassWriteProperties*/
  __property Access_xp::AcFormatConditionType Type={ read=get_Type }; // 0, No
  __property Access_xp::AcFormatConditionOperator Operator={ read=get_Operator }; // 0, No
  __property BSTR Expression1={ read=get_Expression1 }; // 0, No
  __property BSTR Expression2={ read=get_Expression2 }; // 0, No
  /*CoClassWriteProperties*/
  __property long ForeColor={ read=get_ForeColor, stored=false }; // 0, No
  __property long BackColor={ read=get_BackColor, stored=false }; // 0, No
  __property TOLEBOOL FontBold={ read=get_FontBold, stored=false }; // 0, No
  __property TOLEBOOL FontItalic={ read=get_FontItalic, stored=false }; // 0, No
  __property TOLEBOOL FontUnderline={ read=get_FontUnderline, stored=false }; // 0, No
  __property TOLEBOOL Enabled={ read=get_Enabled, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessHyperlink
// Help String      : 
// Default Interface: _Hyperlink
// Def. Intf. Object: _HyperlinkPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAccessHyperlink : public Oleserver::TOleServer
{
  _HyperlinkPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessHyperlink(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _HyperlinkPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_HyperlinkPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get_SubAddress(void)
  {
    return GetDefaultInterface()->get_SubAddress();
  }

// StdProp:OleVariant
  void __fastcall set_SubAddress(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_SubAddress(pbstrResult/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Address(void)
  {
    return GetDefaultInterface()->get_Address();
  }

// StdProp:OleVariant
  void __fastcall set_Address(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_Address(pbstrResult/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_EmailSubject(void)
  {
    return GetDefaultInterface()->get_EmailSubject();
  }

// StdProp:OleVariant
  void __fastcall set_EmailSubject(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_EmailSubject(pbstrResult/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ScreenTip(void)
  {
    return GetDefaultInterface()->get_ScreenTip();
  }

// StdProp:OleVariant
  void __fastcall set_ScreenTip(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_ScreenTip(pbstrResult/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_TextToDisplay(void)
  {
    return GetDefaultInterface()->get_TextToDisplay();
  }

// StdProp:OleVariant
  void __fastcall set_TextToDisplay(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_TextToDisplay(pbstrResult/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall Follow(VARIANT_BOOL NewWindow/*[in,def,opt]*/, 
                         VARIANT_BOOL AddHistory/*[in,def,opt]*/, VARIANT ExtraInfo/*[in,opt]*/, 
                         Office_xp::MsoExtraInfoMethod Method/*[in,def,opt]*/, 
                         BSTR HeaderInfo/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Follow(NewWindow/*[in,def,opt]*/, AddHistory/*[in,def,opt]*/, 
                                  ExtraInfo/*[in,opt]*/, Method/*[in,def,opt]*/, 
                                  HeaderInfo/*[in,def,opt]*/);
  }

  void __fastcall CreateNewDocument(BSTR FileName/*[in]*/, VARIANT_BOOL EditNow/*[in]*/, 
                                    VARIANT_BOOL Overwrite/*[in]*/)
  {
    GetDefaultInterface()->CreateNewDocument(FileName/*[in]*/, EditNow/*[in]*/, Overwrite/*[in]*/);
  }

  /*CoClassWriteProperties*/
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. Object: _ApplicationPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (11) AppObject CanCreate Predeclid
// *********************************************************************//
class PACKAGE TAccessApplication : public Oleserver::TOleServer
{
  _ApplicationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessApplication(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ApplicationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ApplicationPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CodeContextObject(void)
  {
    return GetDefaultInterface()->get_CodeContextObject();
  }

// StdProp:WideString
  BSTR __fastcall get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

// StdProp:WideString
  void __fastcall set_MenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(pRet/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcObjectType __fastcall get_CurrentObjectType(void)
  {
    return GetDefaultInterface()->get_CurrentObjectType();
  }

// StdProp:WideString
  BSTR __fastcall get_CurrentObjectName(void)
  {
    return GetDefaultInterface()->get_CurrentObjectName();
  }

// StdProp:
  Access_xp::Forms_Ptr __fastcall get_Forms(void)
  {
    return GetDefaultInterface()->get_Forms();
  }

// StdProp:
  Access_xp::ReportsPtr __fastcall get_Reports(void)
  {
    return GetDefaultInterface()->get_Reports();
  }

// StdProp:
  Access_xp::ScreenPtr __fastcall get_Screen(void)
  {
    return GetDefaultInterface()->get_Screen();
  }

// StdProp:
  Access_xp::DoCmdPtr __fastcall get_DoCmd(void)
  {
    return GetDefaultInterface()->get_DoCmd();
  }

// StdProp:WideString
  BSTR __fastcall get_ShortcutMenuBar(void)
  {
    return GetDefaultInterface()->get_ShortcutMenuBar();
  }

// StdProp:WideString
  void __fastcall set_ShortcutMenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenuBar(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pfVisible/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pfVisible/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

// StdProp:WordBool
  void __fastcall set_UserControl(VARIANT_BOOL pfUserCtrl/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(pfUserCtrl/*[in]*/);
  }

// StdProp:
  Dao_xp::DBEnginePtr __fastcall get_DBEngine(void)
  {
    return GetDefaultInterface()->get_DBEngine();
  }

// StdProp:
  Office_xp::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:
  Office_xp::AssistantPtr __fastcall get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

// StdProp:
  Access_xp::AccessReferencesPtr __fastcall get_References(void)
  {
    return GetDefaultInterface()->get_References();
  }

// StdProp:
  Access_xp::ModulesPtr __fastcall get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

// StdProp:
  Office_xp::FileSearchPtr __fastcall get_FileSearch(void)
  {
    return GetDefaultInterface()->get_FileSearch();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsCompiled(void)
  {
    return GetDefaultInterface()->get_IsCompiled();
  }

// StdProp:
  Vbide_xp::VBEPtr __fastcall get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

// StdProp:
  Access_xp::DataAccessPagesPtr __fastcall get_DataAccessPages(void)
  {
    return GetDefaultInterface()->get_DataAccessPages();
  }

// StdProp:WideString
  BSTR __fastcall get_ADOConnectString(void)
  {
    return GetDefaultInterface()->get_ADOConnectString();
  }

// StdProp:
  Access_xp::CurrentProjectPtr __fastcall get_CurrentProject(void)
  {
    return GetDefaultInterface()->get_CurrentProject();
  }

// StdProp:
  Access_xp::CurrentDataPtr __fastcall get_CurrentData(void)
  {
    return GetDefaultInterface()->get_CurrentData();
  }

// StdProp:
  Access_xp::CodeProjectPtr __fastcall get_CodeProject(void)
  {
    return GetDefaultInterface()->get_CodeProject();
  }

// StdProp:
  Access_xp::CodeDataPtr __fastcall get_CodeData(void)
  {
    return GetDefaultInterface()->get_CodeData();
  }

// StdProp:
  Access_xp::WizHookPtr __fastcall get_WizHook(void)
  {
    return GetDefaultInterface()->get_WizHook();
  }

// StdProp:WideString
  BSTR __fastcall get_ProductCode(void)
  {
    return GetDefaultInterface()->get_ProductCode();
  }

// StdProp:
  Office_xp::COMAddInsPtr __fastcall get_COMAddIns(void)
  {
    return GetDefaultInterface()->get_COMAddIns();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:
  Access_xp::DefaultWebOptionsPtr __fastcall get_DefaultWebOptions(void)
  {
    return GetDefaultInterface()->get_DefaultWebOptions();
  }

// StdProp:
  Office_xp::LanguageSettingsPtr __fastcall get_LanguageSettings(void)
  {
    return GetDefaultInterface()->get_LanguageSettings();
  }

// StdProp:
  Office_xp::AnswerWizardPtr __fastcall get_AnswerWizard(void)
  {
    return GetDefaultInterface()->get_AnswerWizard();
  }

// StdProp:TOleEnum
  Office_xp::MsoFeatureInstall __fastcall get_FeatureInstall(void)
  {
    return GetDefaultInterface()->get_FeatureInstall();
  }

// StdProp:TOleEnum
  void __fastcall set_FeatureInstall(Office_xp::MsoFeatureInstall FeatureInstall/*[in]*/)
  {
    GetDefaultInterface()->set_FeatureInstall(FeatureInstall/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_VGXFrameInterval(void)
  {
    return GetDefaultInterface()->get_VGXFrameInterval();
  }

// StdProp:
  Office_xp::FileDialogPtr __fastcall get_FileDialog(Office_xp::MsoFileDialogType dialogType/*[in]*/)
  {
    return GetDefaultInterface()->get_FileDialog(dialogType/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_BrokenReference(void)
  {
    return GetDefaultInterface()->get_BrokenReference();
  }

// StdProp:
  Access_xp::PrintersPtr __fastcall get_Printers(void)
  {
    return GetDefaultInterface()->get_Printers();
  }

// StdProp:
  Access_xp::_PrinterPtr __fastcall get_Printer(void)
  {
    return GetDefaultInterface()->get_Printer();
  }

// StdProp:
  void __fastcall set_Printer(Access_xp::_Printer* pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Printer(pRet/*[in]*/);
  }

// StdProp:
  void __fastcall _set_Printer(Access_xp::_Printer* pRet/*[in]*/)
  {
    GetDefaultInterface()->_set_Printer(pRet/*[in]*/);
  }

// StdProp:
  Office_xp::MsoDebugOptionsPtr __fastcall get_MsoDebugOptions(void)
  {
    return GetDefaultInterface()->get_MsoDebugOptions();
  }

// StdProp:WideString
  BSTR __fastcall get_Version(void)
  {
    return GetDefaultInterface()->get_Version();
  }

// StdProp:Integer
  long __fastcall get_Build(void)
  {
    return GetDefaultInterface()->get_Build();
  }

// StdProp:
  Office_xp::NewFilePtr __fastcall get_NewFileTaskPane(void)
  {
    return GetDefaultInterface()->get_NewFileTaskPane();
  }

  /*CoClassWriteMethods*/
  void __fastcall NewCurrentDatabase(BSTR filepath/*[in]*/)
  {
    GetDefaultInterface()->NewCurrentDatabase(filepath/*[in]*/);
  }

  void __fastcall OpenCurrentDatabaseOld(BSTR filepath/*[in]*/, 
                                         VARIANT_BOOL Exclusive/*[in,def,opt]*/)
  {
    GetDefaultInterface()->OpenCurrentDatabaseOld(filepath/*[in]*/, Exclusive/*[in,def,opt]*/);
  }

  TVariant __fastcall GetOption(BSTR OptionName/*[in]*/)
  {
    return GetDefaultInterface()->GetOption(OptionName/*[in]*/);
  }

  void __fastcall SetOption(BSTR OptionName/*[in]*/, VARIANT Setting/*[in]*/)
  {
    GetDefaultInterface()->SetOption(OptionName/*[in]*/, Setting/*[in]*/);
  }

  void __fastcall Echo(short EchoOn/*[in]*/, BSTR bstrStatusBarText/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Echo(EchoOn/*[in]*/, bstrStatusBarText/*[in,def,opt]*/);
  }

  void __fastcall CloseCurrentDatabase(void)
  {
    GetDefaultInterface()->CloseCurrentDatabase();
  }

  void __fastcall Quit(Access_xp::AcQuitOption Option/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Quit(Option/*[in,def,opt]*/);
  }

  TVariant __fastcall SysCmd(Access_xp::AcSysCmdAction Action/*[in]*/, VARIANT Argument2/*[in,opt]*/, 
                             VARIANT Argument3/*[in,opt]*/)
  {
    return GetDefaultInterface()->SysCmd(Action/*[in]*/, Argument2/*[in,opt]*/, 
                                         Argument3/*[in,opt]*/);
  }

  Access_xp::AccessFormPtr __fastcall CreateForm(VARIANT Database/*[in,opt]*/, 
                                                 VARIANT FormTemplate/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateForm(Database/*[in,opt]*/, FormTemplate/*[in,opt]*/);
  }

  Access_xp::AccessReportPtr __fastcall CreateReport(VARIANT Database/*[in,opt]*/, 
                                                     VARIANT ReportTemplate/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateReport(Database/*[in,opt]*/, ReportTemplate/*[in,opt]*/);
  }

  Access_xp::AccessControlPtr __fastcall CreateControl(BSTR FormName/*[in]*/, 
                                                       Access_xp::AcControlType ControlType/*[in]*/, 
                                                       Access_xp::AcSection Section/*[in,def,opt]*/, 
                                                       VARIANT Parent/*[in,opt]*/, 
                                                       VARIANT ColumnName/*[in,opt]*/, 
                                                       VARIANT Left/*[in,opt]*/, 
                                                       VARIANT Top/*[in,opt]*/, 
                                                       VARIANT Width/*[in,opt]*/, 
                                                       VARIANT Height/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateControl(FormName/*[in]*/, ControlType/*[in]*/, 
                                                Section/*[in,def,opt]*/, Parent/*[in,opt]*/, 
                                                ColumnName/*[in,opt]*/, Left/*[in,opt]*/, 
                                                Top/*[in,opt]*/, Width/*[in,opt]*/, 
                                                Height/*[in,opt]*/);
  }

  Access_xp::AccessControlPtr __fastcall CreateReportControl(BSTR ReportName/*[in]*/, 
                                                             Access_xp::AcControlType ControlType/*[in]*/, 
                                                             Access_xp::AcSection Section/*[in,def,opt]*/, 
                                                             VARIANT Parent/*[in,opt]*/, 
                                                             VARIANT ColumnName/*[in,opt]*/, 
                                                             VARIANT Left/*[in,opt]*/, 
                                                             VARIANT Top/*[in,opt]*/, 
                                                             VARIANT Width/*[in,opt]*/, 
                                                             VARIANT Height/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateReportControl(ReportName/*[in]*/, ControlType/*[in]*/, 
                                                      Section/*[in,def,opt]*/, Parent/*[in,opt]*/, 
                                                      ColumnName/*[in,opt]*/, Left/*[in,opt]*/, 
                                                      Top/*[in,opt]*/, Width/*[in,opt]*/, 
                                                      Height/*[in,opt]*/);
  }

  Access_xp::AccessControlPtr __fastcall CreateControlEx(BSTR FormName/*[in]*/, 
                                                         Access_xp::AcControlType ControlType/*[in]*/, 
                                                         Access_xp::AcSection Section/*[in]*/, 
                                                         BSTR Parent/*[in]*/, 
                                                         BSTR ControlSource/*[in]*/, 
                                                         long Left/*[in]*/, long Top/*[in]*/, 
                                                         long Width/*[in]*/, long Height/*[in]*/)
  {
    return GetDefaultInterface()->CreateControlEx(FormName/*[in]*/, ControlType/*[in]*/, 
                                                  Section/*[in]*/, Parent/*[in]*/, 
                                                  ControlSource/*[in]*/, Left/*[in]*/, Top/*[in]*/, 
                                                  Width/*[in]*/, Height/*[in]*/);
  }

  Access_xp::AccessControlPtr __fastcall CreateReportControlEx(BSTR ReportName/*[in]*/, 
                                                               Access_xp::AcControlType ControlType/*[in]*/, 
                                                               Access_xp::AcSection Section/*[in]*/, 
                                                               BSTR Parent/*[in]*/, 
                                                               BSTR ControlName/*[in]*/, 
                                                               long Left/*[in]*/, long Top/*[in]*/, 
                                                               long Width/*[in]*/, 
                                                               long Height/*[in]*/)
  {
    return GetDefaultInterface()->CreateReportControlEx(ReportName/*[in]*/, ControlType/*[in]*/, 
                                                        Section/*[in]*/, Parent/*[in]*/, 
                                                        ControlName/*[in]*/, Left/*[in]*/, 
                                                        Top/*[in]*/, Width/*[in]*/, Height/*[in]*/);
  }

  void __fastcall DeleteControl(BSTR FormName/*[in]*/, BSTR ControlName/*[in]*/)
  {
    GetDefaultInterface()->DeleteControl(FormName/*[in]*/, ControlName/*[in]*/);
  }

  void __fastcall DeleteReportControl(BSTR ReportName/*[in]*/, BSTR ControlName/*[in]*/)
  {
    GetDefaultInterface()->DeleteReportControl(ReportName/*[in]*/, ControlName/*[in]*/);
  }

  long __fastcall CreateGroupLevel(BSTR ReportName/*[in]*/, BSTR Expression/*[in]*/, 
                                   short Header/*[in]*/, short Footer/*[in]*/)
  {
    return GetDefaultInterface()->CreateGroupLevel(ReportName/*[in]*/, Expression/*[in]*/, 
                                                   Header/*[in]*/, Footer/*[in]*/);
  }

  TVariant __fastcall DMin(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DMin(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DMax(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DMax(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DSum(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DSum(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DAvg(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DAvg(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DLookup(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DLookup(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DLast(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DLast(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DVar(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DVar(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DVarP(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DVarP(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DStDev(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DStDev(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DStDevP(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DStDevP(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DFirst(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DFirst(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DCount(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DCount(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall Eval(BSTR StringExpr/*[in]*/)
  {
    return GetDefaultInterface()->Eval(StringExpr/*[in]*/);
  }

  BSTR __fastcall CurrentUser(void)
  {
    return GetDefaultInterface()->CurrentUser();
  }

  TVariant __fastcall DDEInitiate(BSTR Application/*[in]*/, BSTR Topic/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(Application/*[in]*/, Topic/*[in]*/);
  }

  void __fastcall DDEExecute(VARIANT ChanNum/*[in]*/, BSTR Command/*[in]*/)
  {
    GetDefaultInterface()->DDEExecute(ChanNum/*[in]*/, Command/*[in]*/);
  }

  void __fastcall DDEPoke(VARIANT ChanNum/*[in]*/, BSTR Item/*[in]*/, BSTR Data/*[in]*/)
  {
    GetDefaultInterface()->DDEPoke(ChanNum/*[in]*/, Item/*[in]*/, Data/*[in]*/);
  }

  BSTR __fastcall DDERequest(VARIANT ChanNum/*[in]*/, BSTR Item/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(ChanNum/*[in]*/, Item/*[in]*/);
  }

  void __fastcall DDETerminate(VARIANT ChanNum/*[in]*/)
  {
    GetDefaultInterface()->DDETerminate(ChanNum/*[in]*/);
  }

  void __fastcall DDETerminateAll(void)
  {
    GetDefaultInterface()->DDETerminateAll();
  }

  Dao_xp::DatabasePtr __fastcall CurrentDb(void)
  {
    return GetDefaultInterface()->CurrentDb();
  }

  Dao_xp::DatabasePtr __fastcall CodeDb(void)
  {
    return GetDefaultInterface()->CodeDb();
  }

  void __fastcall BeginUndoable(long Hwnd/*[in]*/)
  {
    GetDefaultInterface()->BeginUndoable(Hwnd/*[in]*/);
  }

  void __fastcall SetUndoRecording(short yesno/*[in]*/)
  {
    GetDefaultInterface()->SetUndoRecording(yesno/*[in]*/);
  }

  BSTR __fastcall BuildCriteria(BSTR Field/*[in]*/, short FieldType/*[in]*/, BSTR Expression/*[in]*/)
  {
    return GetDefaultInterface()->BuildCriteria(Field/*[in]*/, FieldType/*[in]*/, Expression/*[in]*/);
  }

  void __fastcall InsertText(BSTR Text/*[in]*/, BSTR ModuleName/*[in]*/)
  {
    GetDefaultInterface()->InsertText(Text/*[in]*/, ModuleName/*[in]*/);
  }

  void __fastcall ReloadAddIns(void)
  {
    GetDefaultInterface()->ReloadAddIns();
  }

  Dao_xp::WorkspacePtr __fastcall DefaultWorkspaceClone(void)
  {
    return GetDefaultInterface()->DefaultWorkspaceClone();
  }

  void __fastcall RefreshTitleBar(void)
  {
    GetDefaultInterface()->RefreshTitleBar();
  }

  void __fastcall AddAutoCorrect(BSTR ChangeFrom/*[in]*/, BSTR ChangeTo/*[in]*/)
  {
    GetDefaultInterface()->AddAutoCorrect(ChangeFrom/*[in]*/, ChangeTo/*[in]*/);
  }

  void __fastcall DelAutoCorrect(BSTR ChangeFrom/*[in]*/)
  {
    GetDefaultInterface()->DelAutoCorrect(ChangeFrom/*[in]*/);
  }

  int __fastcall hWndAccessApp(void)
  {
    return GetDefaultInterface()->hWndAccessApp();
  }

  TVariant __fastcall Run(BSTR Procedure/*[in]*/, VARIANT* Arg1/*[in,out,opt]*/, 
                          VARIANT* Arg2/*[in,out,opt]*/, VARIANT* Arg3/*[in,out,opt]*/, 
                          VARIANT* Arg4/*[in,out,opt]*/, VARIANT* Arg5/*[in,out,opt]*/, 
                          VARIANT* Arg6/*[in,out,opt]*/, VARIANT* Arg7/*[in,out,opt]*/, 
                          VARIANT* Arg8/*[in,out,opt]*/, VARIANT* Arg9/*[in,out,opt]*/, 
                          VARIANT* Arg10/*[in,out,opt]*/, VARIANT* Arg11/*[in,out,opt]*/, 
                          VARIANT* Arg12/*[in,out,opt]*/, VARIANT* Arg13/*[in,out,opt]*/, 
                          VARIANT* Arg14/*[in,out,opt]*/, VARIANT* Arg15/*[in,out,opt]*/, 
                          VARIANT* Arg16/*[in,out,opt]*/, VARIANT* Arg17/*[in,out,opt]*/, 
                          VARIANT* Arg18/*[in,out,opt]*/, VARIANT* Arg19/*[in,out,opt]*/, 
                          VARIANT* Arg20/*[in,out,opt]*/, VARIANT* Arg21/*[in,out,opt]*/, 
                          VARIANT* Arg22/*[in,out,opt]*/, VARIANT* Arg23/*[in,out,opt]*/, 
                          VARIANT* Arg24/*[in,out,opt]*/, VARIANT* Arg25/*[in,out,opt]*/, 
                          VARIANT* Arg26/*[in,out,opt]*/, VARIANT* Arg27/*[in,out,opt]*/, 
                          VARIANT* Arg28/*[in,out,opt]*/, VARIANT* Arg29/*[in,out,opt]*/, 
                          VARIANT* Arg30/*[in,out,opt]*/)
  {
    return GetDefaultInterface()->Run(Procedure/*[in]*/, Arg1/*[in,out,opt]*/, Arg2/*[in,out,opt]*/, 
                                      Arg3/*[in,out,opt]*/, Arg4/*[in,out,opt]*/, 
                                      Arg5/*[in,out,opt]*/, Arg6/*[in,out,opt]*/, 
                                      Arg7/*[in,out,opt]*/, Arg8/*[in,out,opt]*/, 
                                      Arg9/*[in,out,opt]*/, Arg10/*[in,out,opt]*/, 
                                      Arg11/*[in,out,opt]*/, Arg12/*[in,out,opt]*/, 
                                      Arg13/*[in,out,opt]*/, Arg14/*[in,out,opt]*/, 
                                      Arg15/*[in,out,opt]*/, Arg16/*[in,out,opt]*/, 
                                      Arg17/*[in,out,opt]*/, Arg18/*[in,out,opt]*/, 
                                      Arg19/*[in,out,opt]*/, Arg20/*[in,out,opt]*/, 
                                      Arg21/*[in,out,opt]*/, Arg22/*[in,out,opt]*/, 
                                      Arg23/*[in,out,opt]*/, Arg24/*[in,out,opt]*/, 
                                      Arg25/*[in,out,opt]*/, Arg26/*[in,out,opt]*/, 
                                      Arg27/*[in,out,opt]*/, Arg28/*[in,out,opt]*/, 
                                      Arg29/*[in,out,opt]*/, Arg30/*[in,out,opt]*/);
  }

  TVariant __fastcall Nz(VARIANT Value/*[in]*/, VARIANT ValueIfNull/*[in,opt]*/)
  {
    return GetDefaultInterface()->Nz(Value/*[in]*/, ValueIfNull/*[in,opt]*/);
  }

  LPDISPATCH __fastcall LoadPicture(BSTR FileName/*[in]*/)
  {
    return GetDefaultInterface()->LoadPicture(FileName/*[in]*/);
  }

  void __fastcall ReplaceModule(long objtyp/*[in]*/, BSTR ModuleName/*[in]*/, BSTR FileName/*[in]*/, 
                                long token/*[in]*/)
  {
    GetDefaultInterface()->ReplaceModule(objtyp/*[in]*/, ModuleName/*[in]*/, FileName/*[in]*/, 
                                         token/*[in]*/);
  }

  TVariant __fastcall AccessError(VARIANT ErrorNumber/*[in]*/)
  {
    return GetDefaultInterface()->AccessError(ErrorNumber/*[in]*/);
  }

  TVariant __fastcall BuilderString(void)
  {
    return GetDefaultInterface()->BuilderString();
  }

  TVariant __fastcall StringFromGUID(VARIANT Guid/*[in]*/)
  {
    return GetDefaultInterface()->StringFromGUID(Guid/*[in]*/);
  }

  TVariant __fastcall GUIDFromString(VARIANT String/*[in]*/)
  {
    return GetDefaultInterface()->GUIDFromString(String/*[in]*/);
  }

  TVariant __fastcall AppLoadString(long id/*[in]*/)
  {
    return GetDefaultInterface()->AppLoadString(id/*[in]*/);
  }

  void __fastcall FollowHyperlink(BSTR Address/*[in]*/, BSTR SubAddress/*[in,def,opt]*/, 
                                  VARIANT_BOOL NewWindow/*[in,def,opt]*/, 
                                  VARIANT_BOOL AddHistory/*[in,def,opt]*/, 
                                  VARIANT ExtraInfo/*[in,opt]*/, 
                                  Office_xp::MsoExtraInfoMethod Method/*[in,def,opt]*/, 
                                  BSTR HeaderInfo/*[in,def,opt]*/)
  {
    GetDefaultInterface()->FollowHyperlink(Address/*[in]*/, SubAddress/*[in,def,opt]*/, 
                                           NewWindow/*[in,def,opt]*/, AddHistory/*[in,def,opt]*/, 
                                           ExtraInfo/*[in,opt]*/, Method/*[in,def,opt]*/, 
                                           HeaderInfo/*[in,def,opt]*/);
  }

  void __fastcall SaveAsText(Access_xp::AcObjectType ObjectType/*[in]*/, BSTR ObjectName/*[in]*/, 
                             BSTR FileName/*[in]*/)
  {
    GetDefaultInterface()->SaveAsText(ObjectType/*[in]*/, ObjectName/*[in]*/, FileName/*[in]*/);
  }

  void __fastcall LoadFromText(Access_xp::AcObjectType ObjectType/*[in]*/, BSTR ObjectName/*[in]*/, 
                               BSTR FileName/*[in]*/)
  {
    GetDefaultInterface()->LoadFromText(ObjectType/*[in]*/, ObjectName/*[in]*/, FileName/*[in]*/);
  }

  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall RefreshDatabaseWindow(void)
  {
    GetDefaultInterface()->RefreshDatabaseWindow();
  }

  void __fastcall RunCommand(Access_xp::AcCommand Command/*[in]*/)
  {
    GetDefaultInterface()->RunCommand(Command/*[in]*/);
  }

  BSTR __fastcall HyperlinkPart(VARIANT Hyperlink/*[in]*/, 
                                Access_xp::AcHyperlinkPart Part/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->HyperlinkPart(Hyperlink/*[in]*/, Part/*[in,def,opt]*/);
  }

  TOLEBOOL __fastcall GetHiddenAttribute(Access_xp::AcObjectType ObjectType/*[in]*/, 
                                         BSTR ObjectName/*[in]*/)
  {
    return GetDefaultInterface()->GetHiddenAttribute(ObjectType/*[in]*/, ObjectName/*[in]*/);
  }

  void __fastcall SetHiddenAttribute(Access_xp::AcObjectType ObjectType/*[in]*/, 
                                     BSTR ObjectName/*[in]*/, VARIANT_BOOL fHidden/*[in]*/)
  {
    GetDefaultInterface()->SetHiddenAttribute(ObjectType/*[in]*/, ObjectName/*[in]*/, 
                                              fHidden/*[in]*/);
  }

  Access_xp::DataAccessPagePtr __fastcall CreateDataAccessPage(VARIANT FileName/*[in,opt]*/, 
                                                               VARIANT_BOOL CreateNewFile/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->CreateDataAccessPage(FileName/*[in,opt]*/, 
                                                       CreateNewFile/*[in,def,opt]*/);
  }

  void __fastcall NewAccessProject(BSTR filepath/*[in]*/, VARIANT Connect/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->NewAccessProject(filepath/*[in]*/, Connect/*[in,opt]*/);
  }

  void __fastcall OpenAccessProject(BSTR filepath/*[in]*/, VARIANT_BOOL Exclusive/*[in,def,opt]*/)
  {
    GetDefaultInterface()->OpenAccessProject(filepath/*[in]*/, Exclusive/*[in,def,opt]*/);
  }

  void __fastcall CreateAccessProject(BSTR filepath/*[in]*/, VARIANT Connect/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->CreateAccessProject(filepath/*[in]*/, Connect/*[in,opt]*/);
  }

  double __fastcall EuroConvert(double Number/*[in]*/, BSTR SourceCurrency/*[in]*/, 
                                BSTR TargetCurrency/*[in]*/, VARIANT FullPrecision/*[in,opt]*/, 
                                VARIANT TriangulationPrecision/*[in,opt]*/)
  {
    return GetDefaultInterface()->EuroConvert(Number/*[in]*/, SourceCurrency/*[in]*/, 
                                              TargetCurrency/*[in]*/, FullPrecision/*[in,opt]*/, 
                                              TriangulationPrecision/*[in,opt]*/);
  }

  void __fastcall CreateNewWorkgroupFile(BSTR Path/*[in,def,opt]*/, BSTR Name/*[in,def,opt]*/, 
                                         BSTR Company/*[in,def,opt]*/, 
                                         BSTR WorkgroupID/*[in,def,opt]*/, 
                                         VARIANT_BOOL Replace/*[in,def,opt]*/)
  {
    GetDefaultInterface()->CreateNewWorkgroupFile(Path/*[in,def,opt]*/, Name/*[in,def,opt]*/, 
                                                  Company/*[in,def,opt]*/, 
                                                  WorkgroupID/*[in,def,opt]*/, 
                                                  Replace/*[in,def,opt]*/);
  }

  void __fastcall SetDefaultWorkgroupFile(BSTR Path/*[in]*/)
  {
    GetDefaultInterface()->SetDefaultWorkgroupFile(Path/*[in]*/);
  }

  void __fastcall ConvertAccessProject(BSTR SourceFilename/*[in]*/, BSTR DestinationFilename/*[in]*/, 
                                       Access_xp::AcFileFormat DestinationFileFormat/*[in]*/)
  {
    GetDefaultInterface()->ConvertAccessProject(SourceFilename/*[in]*/, DestinationFilename/*[in]*/, 
                                                DestinationFileFormat/*[in]*/);
  }

  void __fastcall OpenCurrentDatabase(BSTR filepath/*[in]*/, VARIANT_BOOL Exclusive/*[in,def,opt]*/, 
                                      BSTR bstrPassword/*[in,def,opt]*/)
  {
    GetDefaultInterface()->OpenCurrentDatabase(filepath/*[in]*/, Exclusive/*[in,def,opt]*/, 
                                               bstrPassword/*[in,def,opt]*/);
  }

  TOLEBOOL __fastcall CompactRepair(BSTR SourceFile/*[in]*/, BSTR DestinationFile/*[in]*/, 
                                    VARIANT_BOOL LogFile/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->CompactRepair(SourceFile/*[in]*/, DestinationFile/*[in]*/, 
                                                LogFile/*[in,def,opt]*/);
  }

  void __fastcall ExportXML(Access_xp::AcExportXMLObjectType ObjectType/*[in]*/, 
                            BSTR DataSource/*[in]*/, BSTR DataTarget/*[in,def,opt]*/, 
                            BSTR SchemaTarget/*[in,def,opt]*/, 
                            BSTR PresentationTarget/*[in,def,opt]*/, 
                            BSTR ImageTarget/*[in,def,opt]*/, 
                            Access_xp::AcExportXMLEncoding Encoding/*[in,def,opt]*/, 
                            long OtherFlags/*[in,def,opt]*/)
  {
    GetDefaultInterface()->ExportXML(ObjectType/*[in]*/, DataSource/*[in]*/, 
                                     DataTarget/*[in,def,opt]*/, SchemaTarget/*[in,def,opt]*/, 
                                     PresentationTarget/*[in,def,opt]*/, ImageTarget/*[in,def,opt]*/, 
                                     Encoding/*[in,def,opt]*/, OtherFlags/*[in,def,opt]*/);
  }

  void __fastcall ImportXML(BSTR DataSource/*[in]*/, 
                            Access_xp::AcImportXMLOption ImportOptions/*[in,def,opt]*/)
  {
    GetDefaultInterface()->ImportXML(DataSource/*[in]*/, ImportOptions/*[in,def,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property LPDISPATCH CodeContextObject={ read=get_CodeContextObject }; // 0, No
  __property Access_xp::AcObjectType CurrentObjectType={ read=get_CurrentObjectType }; // 0, No
  __property BSTR CurrentObjectName={ read=get_CurrentObjectName }; // 0, No
  __property Access_xp::Forms_Ptr Forms={ read=get_Forms }; // 0, Yes
  __property Access_xp::ReportsPtr Reports={ read=get_Reports }; // 0, Yes
  __property Access_xp::ScreenPtr Screen={ read=get_Screen }; // 0, Yes
  __property Access_xp::DoCmdPtr DoCmd={ read=get_DoCmd }; // 0, Yes
  __property Dao_xp::DBEnginePtr DBEngine={ read=get_DBEngine }; // 0, Yes
  __property Office_xp::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property Office_xp::AssistantPtr Assistant={ read=get_Assistant }; // 0, Yes
  __property Access_xp::AccessReferencesPtr References={ read=get_References }; // 0, Yes
  __property Access_xp::ModulesPtr Modules={ read=get_Modules }; // 0, Yes
  __property Office_xp::FileSearchPtr FileSearch={ read=get_FileSearch }; // 0, Yes
  __property TOLEBOOL IsCompiled={ read=get_IsCompiled }; // 0, No
  __property Vbide_xp::VBEPtr VBE={ read=get_VBE }; // 0, Yes
  __property Access_xp::DataAccessPagesPtr DataAccessPages={ read=get_DataAccessPages }; // 0, Yes
  __property BSTR ADOConnectString={ read=get_ADOConnectString }; // 0, No
  __property Access_xp::CurrentProjectPtr CurrentProject={ read=get_CurrentProject }; // 0, Yes
  __property Access_xp::CurrentDataPtr CurrentData={ read=get_CurrentData }; // 0, Yes
  __property Access_xp::CodeProjectPtr CodeProject={ read=get_CodeProject }; // 0, Yes
  __property Access_xp::CodeDataPtr CodeData={ read=get_CodeData }; // 0, Yes
  __property Access_xp::WizHookPtr WizHook={ read=get_WizHook }; // 0, Yes
  __property BSTR ProductCode={ read=get_ProductCode }; // 0, No
  __property Office_xp::COMAddInsPtr COMAddIns={ read=get_COMAddIns }; // 0, Yes
  __property BSTR Name={ read=get_Name }; // 0, No
  __property Access_xp::DefaultWebOptionsPtr DefaultWebOptions={ read=get_DefaultWebOptions }; // 0, Yes
  __property Office_xp::LanguageSettingsPtr LanguageSettings={ read=get_LanguageSettings }; // 0, Yes
  __property Office_xp::AnswerWizardPtr AnswerWizard={ read=get_AnswerWizard }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant VGXFrameInterval={ read=get_VGXFrameInterval }; // 0, No
  */
  __property Office_xp::FileDialogPtr FileDialog[Office_xp::MsoFileDialogType dialogType]={ read=get_FileDialog }; // 0, Yes
  __property TOLEBOOL BrokenReference={ read=get_BrokenReference }; // 0, No
  __property Access_xp::PrintersPtr Printers={ read=get_Printers }; // 0, Yes
  __property Office_xp::MsoDebugOptionsPtr MsoDebugOptions={ read=get_MsoDebugOptions }; // 0, Yes
  __property BSTR Version={ read=get_Version }; // 0, No
  __property long Build={ read=get_Build }; // 0, No
  __property Office_xp::NewFilePtr NewFileTaskPane={ read=get_NewFileTaskPane }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR MenuBar={ read=get_MenuBar, stored=false }; // 0, No
  __property BSTR ShortcutMenuBar={ read=get_ShortcutMenuBar, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL UserControl={ read=get_UserControl, stored=false }; // 0, No
  __property Office_xp::MsoFeatureInstall FeatureInstall={ read=get_FeatureInstall, stored=false }; // 0, No
  __property Access_xp::_PrinterPtr Printer={ read=get_Printer, stored=false }; // 0, Yes
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessReferences
// Help String      : 
// Default Interface: _References
// Def. Intf. Object: _ReferencesPtr
// Def. Intf. DISP? : No
// Event   Interface: _References_Events
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TAccessReferencesItemAdded)(System::TObject * Sender, 
                                                                 Access_xp::Reference* Reference);
typedef void __fastcall (__closure * TAccessReferencesItemRemoved)(System::TObject * Sender, 
                                                                   Access_xp::Reference* Reference);

class PACKAGE TAccessReferences : public Oleserver::TOleServer
{
  _ReferencesPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessReferences(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ReferencesPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ReferencesPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  Access_xp::ReferencePtr __fastcall Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->Item(var/*[in]*/);
  }

  LPUNKNOWN __fastcall _NewEnum(void)
  {
    return GetDefaultInterface()->_NewEnum();
  }

  Access_xp::ReferencePtr __fastcall AddFromGuid(BSTR Guid/*[in]*/, long Major/*[in]*/, 
                                                 long Minor/*[in]*/)
  {
    return GetDefaultInterface()->AddFromGuid(Guid/*[in]*/, Major/*[in]*/, Minor/*[in]*/);
  }

  Access_xp::ReferencePtr __fastcall AddFromFile(BSTR FileName/*[in]*/)
  {
    return GetDefaultInterface()->AddFromFile(FileName/*[in]*/);
  }

  void __fastcall Remove(Access_xp::Reference* Reference/*[in]*/)
  {
    GetDefaultInterface()->Remove(Reference/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TAccessReferencesItemAdded     FOnItemAdded;
  TAccessReferencesItemRemoved   FOnItemRemoved;
__published:
  __property TAccessReferencesItemAdded OnItemAdded={ read=FOnItemAdded, write=FOnItemAdded };
  __property TAccessReferencesItemRemoved OnItemRemoved={ read=FOnItemRemoved, write=FOnItemRemoved };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDataAccessPage
// Help String      : 
// Default Interface: _DataAccessPage
// Def. Intf. Object: _DataAccessPagePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TDataAccessPage : public Oleserver::TOleServer
{
  _DataAccessPagePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDataAccessPage(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _DataAccessPagePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_DataAccessPagePtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get__Name(void)
  {
    return GetDefaultInterface()->get__Name();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Tag(void)
  {
    return GetDefaultInterface()->get_Tag();
  }

// StdProp:WideString
  void __fastcall set_Tag(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Tag(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_WindowWidth(void)
  {
    return GetDefaultInterface()->get_WindowWidth();
  }

// StdProp:Integer
  long __fastcall get_WindowHeight(void)
  {
    return GetDefaultInterface()->get_WindowHeight();
  }

// StdProp:Smallint
  short __fastcall get_CurrentView(void)
  {
    return GetDefaultInterface()->get_CurrentView();
  }

// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Document(void)
  {
    return GetDefaultInterface()->get_Document();
  }

// StdProp:
  Access_xp::AccessWebOptionsPtr __fastcall get_WebOptions(void)
  {
    return GetDefaultInterface()->get_WebOptions();
  }

// StdProp:WideString
  BSTR __fastcall get_ConnectionString(void)
  {
    return GetDefaultInterface()->get_ConnectionString();
  }

// StdProp:WideString
  void __fastcall set_ConnectionString(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ConnectionString(pRet/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_FieldListConnection(void)
  {
    return GetDefaultInterface()->get_FieldListConnection();
  }

// StdProp:
  Office_xp::MsoEnvelopePtr __fastcall get_MailEnvelope(void)
  {
    return GetDefaultInterface()->get_MailEnvelope();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CurrentSelection(void)
  {
    return GetDefaultInterface()->get_CurrentSelection();
  }

// StdProp:
  Owc10_xp::IDataSourceControlPtr __fastcall get_MSODSC(void)
  {
    return GetDefaultInterface()->get_MSODSC();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RemovePersonalInformation(void)
  {
    return GetDefaultInterface()->get_RemovePersonalInformation();
  }

// StdProp:WordBool
  void __fastcall set_RemovePersonalInformation(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_RemovePersonalInformation(pf/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall ApplyTheme(BSTR ThemeName/*[in]*/)
  {
    GetDefaultInterface()->ApplyTheme(ThemeName/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property BSTR _Name={ read=get__Name }; // 0, No
  __property BSTR Name={ read=get_Name }; // 0, No
  __property BSTR Tag={ read=get_Tag }; // 0, No
  __property long WindowWidth={ read=get_WindowWidth }; // 0, No
  __property long WindowHeight={ read=get_WindowHeight }; // 0, No
  __property short CurrentView={ read=get_CurrentView }; // 0, No
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property LPDISPATCH Document={ read=get_Document }; // 0, No
  __property Access_xp::AccessWebOptionsPtr WebOptions={ read=get_WebOptions }; // 0, Yes
  __property LPDISPATCH FieldListConnection={ read=get_FieldListConnection }; // 0, No
  __property Office_xp::MsoEnvelopePtr MailEnvelope={ read=get_MailEnvelope }; // 0, Yes
  __property LPDISPATCH CurrentSelection={ read=get_CurrentSelection }; // 0, No
  __property Owc10_xp::IDataSourceControlPtr MSODSC={ read=get_MSODSC }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property BSTR ConnectionString={ read=get_ConnectionString, stored=false }; // 0, No
  __property TOLEBOOL RemovePersonalInformation={ read=get_RemovePersonalInformation, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllForms
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllForms : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllForms(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllReports
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllReports : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllReports(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllMacros
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllMacros : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllMacros(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllModules
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllModules : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllModules(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllDataAccessPages
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllDataAccessPages : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllDataAccessPages(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllTables
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllTables : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllTables(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllQueries
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllQueries : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllQueries(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllViews
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllViews : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllViews(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllStoredProcedures
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllStoredProcedures : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllStoredProcedures(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllDatabaseDiagrams
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllDatabaseDiagrams : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllDatabaseDiagrams(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCurrentProject
// Help String      : 
// Default Interface: _CurrentProject
// Def. Intf. Object: _CurrentProjectPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TCurrentProject : public Oleserver::TOleServer
{
  _CurrentProjectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCurrentProject(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _CurrentProjectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_CurrentProjectPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AllFormsPtr __fastcall get_AllForms(void)
  {
    return GetDefaultInterface()->get_AllForms();
  }

// StdProp:
  Access_xp::AllReportsPtr __fastcall get_AllReports(void)
  {
    return GetDefaultInterface()->get_AllReports();
  }

// StdProp:
  Access_xp::AllMacrosPtr __fastcall get_AllMacros(void)
  {
    return GetDefaultInterface()->get_AllMacros();
  }

// StdProp:
  Access_xp::AllModulesPtr __fastcall get_AllModules(void)
  {
    return GetDefaultInterface()->get_AllModules();
  }

// StdProp:
  Access_xp::AllDataAccessPagesPtr __fastcall get_AllDataAccessPages(void)
  {
    return GetDefaultInterface()->get_AllDataAccessPages();
  }

// StdProp:TOleEnum
  Access_xp::AcProjectType __fastcall get_ProjectType(void)
  {
    return GetDefaultInterface()->get_ProjectType();
  }

// StdProp:WideString
  BSTR __fastcall get_BaseConnectionString(void)
  {
    return GetDefaultInterface()->get_BaseConnectionString();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsConnected(void)
  {
    return GetDefaultInterface()->get_IsConnected();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  BSTR __fastcall get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

// StdProp:WideString
  BSTR __fastcall get_FullName(void)
  {
    return GetDefaultInterface()->get_FullName();
  }

// StdProp:
  Adodb_xp::ConnectionPtr __fastcall get_Connection(void)
  {
    return GetDefaultInterface()->get_Connection();
  }

// StdProp:
  Access_xp::AccessObjectPropertiesPtr __fastcall get_Properties(void)
  {
    return GetDefaultInterface()->get_Properties();
  }

// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RemovePersonalInformation(void)
  {
    return GetDefaultInterface()->get_RemovePersonalInformation();
  }

// StdProp:WordBool
  void __fastcall set_RemovePersonalInformation(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_RemovePersonalInformation(pf/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcFileFormat __fastcall get_FileFormat(void)
  {
    return GetDefaultInterface()->get_FileFormat();
  }

// StdProp:
  Adodb_xp::ConnectionPtr __fastcall get_AccessConnection(void)
  {
    return GetDefaultInterface()->get_AccessConnection();
  }

  /*CoClassWriteMethods*/
  void __fastcall OpenConnection(VARIANT BaseConnectionString/*[in,opt]*/= TNoParam(), 
                                 VARIANT UserID/*[in,opt]*/= TNoParam(), 
                                 VARIANT Password/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OpenConnection(BaseConnectionString/*[in,opt]*/, UserID/*[in,opt]*/, 
                                          Password/*[in,opt]*/);
  }

  void __fastcall CloseConnection(void)
  {
    GetDefaultInterface()->CloseConnection();
  }

  /*CoClassWriteProperties*/
  __property Access_xp::AllFormsPtr AllForms={ read=get_AllForms }; // 0, Yes
  __property Access_xp::AllReportsPtr AllReports={ read=get_AllReports }; // 0, Yes
  __property Access_xp::AllMacrosPtr AllMacros={ read=get_AllMacros }; // 0, Yes
  __property Access_xp::AllModulesPtr AllModules={ read=get_AllModules }; // 0, Yes
  __property Access_xp::AllDataAccessPagesPtr AllDataAccessPages={ read=get_AllDataAccessPages }; // 0, Yes
  __property Access_xp::AcProjectType ProjectType={ read=get_ProjectType }; // 0, No
  __property BSTR BaseConnectionString={ read=get_BaseConnectionString }; // 0, No
  __property TOLEBOOL IsConnected={ read=get_IsConnected }; // 0, No
  __property BSTR Name={ read=get_Name }; // 0, No
  __property BSTR Path={ read=get_Path }; // 0, No
  __property BSTR FullName={ read=get_FullName }; // 0, No
  __property Adodb_xp::ConnectionPtr Connection={ read=get_Connection }; // 0, Yes
  __property Access_xp::AccessObjectPropertiesPtr Properties={ read=get_Properties }; // 0, Yes
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AcFileFormat FileFormat={ read=get_FileFormat }; // 0, No
  __property Adodb_xp::ConnectionPtr AccessConnection={ read=get_AccessConnection }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL RemovePersonalInformation={ read=get_RemovePersonalInformation, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCurrentData
// Help String      : 
// Default Interface: _CurrentData
// Def. Intf. Object: _CurrentDataPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TCurrentData : public Oleserver::TOleServer
{
  _CurrentDataPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCurrentData(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _CurrentDataPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_CurrentDataPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AllTablesPtr __fastcall get_AllTables(void)
  {
    return GetDefaultInterface()->get_AllTables();
  }

// StdProp:
  Access_xp::AllQueriesPtr __fastcall get_AllQueries(void)
  {
    return GetDefaultInterface()->get_AllQueries();
  }

// StdProp:
  Access_xp::AllViewsPtr __fastcall get_AllViews(void)
  {
    return GetDefaultInterface()->get_AllViews();
  }

// StdProp:
  Access_xp::AllStoredProceduresPtr __fastcall get_AllStoredProcedures(void)
  {
    return GetDefaultInterface()->get_AllStoredProcedures();
  }

// StdProp:
  Access_xp::AllDatabaseDiagramsPtr __fastcall get_AllDatabaseDiagrams(void)
  {
    return GetDefaultInterface()->get_AllDatabaseDiagrams();
  }

// StdProp:
  Access_xp::AllFunctionsPtr __fastcall get_AllFunctions(void)
  {
    return GetDefaultInterface()->get_AllFunctions();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AllTablesPtr AllTables={ read=get_AllTables }; // 0, Yes
  __property Access_xp::AllQueriesPtr AllQueries={ read=get_AllQueries }; // 0, Yes
  __property Access_xp::AllViewsPtr AllViews={ read=get_AllViews }; // 0, Yes
  __property Access_xp::AllStoredProceduresPtr AllStoredProcedures={ read=get_AllStoredProcedures }; // 0, Yes
  __property Access_xp::AllDatabaseDiagramsPtr AllDatabaseDiagrams={ read=get_AllDatabaseDiagrams }; // 0, Yes
  __property Access_xp::AllFunctionsPtr AllFunctions={ read=get_AllFunctions }; // 0, Yes
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCodeProject
// Help String      : 
// Default Interface: _CurrentProject
// Def. Intf. Object: _CurrentProjectPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TCodeProject : public Oleserver::TOleServer
{
  _CurrentProjectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCodeProject(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _CurrentProjectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_CurrentProjectPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AllFormsPtr __fastcall get_AllForms(void)
  {
    return GetDefaultInterface()->get_AllForms();
  }

// StdProp:
  Access_xp::AllReportsPtr __fastcall get_AllReports(void)
  {
    return GetDefaultInterface()->get_AllReports();
  }

// StdProp:
  Access_xp::AllMacrosPtr __fastcall get_AllMacros(void)
  {
    return GetDefaultInterface()->get_AllMacros();
  }

// StdProp:
  Access_xp::AllModulesPtr __fastcall get_AllModules(void)
  {
    return GetDefaultInterface()->get_AllModules();
  }

// StdProp:
  Access_xp::AllDataAccessPagesPtr __fastcall get_AllDataAccessPages(void)
  {
    return GetDefaultInterface()->get_AllDataAccessPages();
  }

// StdProp:TOleEnum
  Access_xp::AcProjectType __fastcall get_ProjectType(void)
  {
    return GetDefaultInterface()->get_ProjectType();
  }

// StdProp:WideString
  BSTR __fastcall get_BaseConnectionString(void)
  {
    return GetDefaultInterface()->get_BaseConnectionString();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsConnected(void)
  {
    return GetDefaultInterface()->get_IsConnected();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  BSTR __fastcall get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

// StdProp:WideString
  BSTR __fastcall get_FullName(void)
  {
    return GetDefaultInterface()->get_FullName();
  }

// StdProp:
  Adodb_xp::ConnectionPtr __fastcall get_Connection(void)
  {
    return GetDefaultInterface()->get_Connection();
  }

// StdProp:
  Access_xp::AccessObjectPropertiesPtr __fastcall get_Properties(void)
  {
    return GetDefaultInterface()->get_Properties();
  }

// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RemovePersonalInformation(void)
  {
    return GetDefaultInterface()->get_RemovePersonalInformation();
  }

// StdProp:WordBool
  void __fastcall set_RemovePersonalInformation(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_RemovePersonalInformation(pf/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcFileFormat __fastcall get_FileFormat(void)
  {
    return GetDefaultInterface()->get_FileFormat();
  }

// StdProp:
  Adodb_xp::ConnectionPtr __fastcall get_AccessConnection(void)
  {
    return GetDefaultInterface()->get_AccessConnection();
  }

  /*CoClassWriteMethods*/
  void __fastcall OpenConnection(VARIANT BaseConnectionString/*[in,opt]*/= TNoParam(), 
                                 VARIANT UserID/*[in,opt]*/= TNoParam(), 
                                 VARIANT Password/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OpenConnection(BaseConnectionString/*[in,opt]*/, UserID/*[in,opt]*/, 
                                          Password/*[in,opt]*/);
  }

  void __fastcall CloseConnection(void)
  {
    GetDefaultInterface()->CloseConnection();
  }

  /*CoClassWriteProperties*/
  __property Access_xp::AllFormsPtr AllForms={ read=get_AllForms }; // 0, Yes
  __property Access_xp::AllReportsPtr AllReports={ read=get_AllReports }; // 0, Yes
  __property Access_xp::AllMacrosPtr AllMacros={ read=get_AllMacros }; // 0, Yes
  __property Access_xp::AllModulesPtr AllModules={ read=get_AllModules }; // 0, Yes
  __property Access_xp::AllDataAccessPagesPtr AllDataAccessPages={ read=get_AllDataAccessPages }; // 0, Yes
  __property Access_xp::AcProjectType ProjectType={ read=get_ProjectType }; // 0, No
  __property BSTR BaseConnectionString={ read=get_BaseConnectionString }; // 0, No
  __property TOLEBOOL IsConnected={ read=get_IsConnected }; // 0, No
  __property BSTR Name={ read=get_Name }; // 0, No
  __property BSTR Path={ read=get_Path }; // 0, No
  __property BSTR FullName={ read=get_FullName }; // 0, No
  __property Adodb_xp::ConnectionPtr Connection={ read=get_Connection }; // 0, Yes
  __property Access_xp::AccessObjectPropertiesPtr Properties={ read=get_Properties }; // 0, Yes
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AcFileFormat FileFormat={ read=get_FileFormat }; // 0, No
  __property Adodb_xp::ConnectionPtr AccessConnection={ read=get_AccessConnection }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL RemovePersonalInformation={ read=get_RemovePersonalInformation, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCodeData
// Help String      : 
// Default Interface: _CurrentData
// Def. Intf. Object: _CurrentDataPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TCodeData : public Oleserver::TOleServer
{
  _CurrentDataPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCodeData(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _CurrentDataPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_CurrentDataPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AllTablesPtr __fastcall get_AllTables(void)
  {
    return GetDefaultInterface()->get_AllTables();
  }

// StdProp:
  Access_xp::AllQueriesPtr __fastcall get_AllQueries(void)
  {
    return GetDefaultInterface()->get_AllQueries();
  }

// StdProp:
  Access_xp::AllViewsPtr __fastcall get_AllViews(void)
  {
    return GetDefaultInterface()->get_AllViews();
  }

// StdProp:
  Access_xp::AllStoredProceduresPtr __fastcall get_AllStoredProcedures(void)
  {
    return GetDefaultInterface()->get_AllStoredProcedures();
  }

// StdProp:
  Access_xp::AllDatabaseDiagramsPtr __fastcall get_AllDatabaseDiagrams(void)
  {
    return GetDefaultInterface()->get_AllDatabaseDiagrams();
  }

// StdProp:
  Access_xp::AllFunctionsPtr __fastcall get_AllFunctions(void)
  {
    return GetDefaultInterface()->get_AllFunctions();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AllTablesPtr AllTables={ read=get_AllTables }; // 0, Yes
  __property Access_xp::AllQueriesPtr AllQueries={ read=get_AllQueries }; // 0, Yes
  __property Access_xp::AllViewsPtr AllViews={ read=get_AllViews }; // 0, Yes
  __property Access_xp::AllStoredProceduresPtr AllStoredProcedures={ read=get_AllStoredProcedures }; // 0, Yes
  __property Access_xp::AllDatabaseDiagramsPtr AllDatabaseDiagrams={ read=get_AllDatabaseDiagrams }; // 0, Yes
  __property Access_xp::AllFunctionsPtr AllFunctions={ read=get_AllFunctions }; // 0, Yes
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDefaultWebOptions
// Help String      : 
// Default Interface: _DefaultWebOptions
// Def. Intf. Object: _DefaultWebOptionsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TDefaultWebOptions : public Oleserver::TOleServer
{
  _DefaultWebOptionsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDefaultWebOptions(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _DefaultWebOptionsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_DefaultWebOptionsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:TOleEnum
  Access_xp::AcColorIndex __fastcall get_HyperlinkColor(void)
  {
    return GetDefaultInterface()->get_HyperlinkColor();
  }

// StdProp:TOleEnum
  void __fastcall set_HyperlinkColor(Access_xp::AcColorIndex pl/*[in]*/)
  {
    GetDefaultInterface()->set_HyperlinkColor(pl/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcColorIndex __fastcall get_FollowedHyperlinkColor(void)
  {
    return GetDefaultInterface()->get_FollowedHyperlinkColor();
  }

// StdProp:TOleEnum
  void __fastcall set_FollowedHyperlinkColor(Access_xp::AcColorIndex pl/*[in]*/)
  {
    GetDefaultInterface()->set_FollowedHyperlinkColor(pl/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UnderlineHyperlinks(void)
  {
    return GetDefaultInterface()->get_UnderlineHyperlinks();
  }

// StdProp:WordBool
  void __fastcall set_UnderlineHyperlinks(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_UnderlineHyperlinks(pf/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OrganizeInFolder(void)
  {
    return GetDefaultInterface()->get_OrganizeInFolder();
  }

// StdProp:WordBool
  void __fastcall set_OrganizeInFolder(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_OrganizeInFolder(pf/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UseLongFileNames(void)
  {
    return GetDefaultInterface()->get_UseLongFileNames();
  }

// StdProp:WordBool
  void __fastcall set_UseLongFileNames(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_UseLongFileNames(pf/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CheckIfOfficeIsHTMLEditor(void)
  {
    return GetDefaultInterface()->get_CheckIfOfficeIsHTMLEditor();
  }

// StdProp:WordBool
  void __fastcall set_CheckIfOfficeIsHTMLEditor(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_CheckIfOfficeIsHTMLEditor(pf/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DownloadComponents(void)
  {
    return GetDefaultInterface()->get_DownloadComponents();
  }

// StdProp:WordBool
  void __fastcall set_DownloadComponents(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_DownloadComponents(pf/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_LocationOfComponents(void)
  {
    return GetDefaultInterface()->get_LocationOfComponents();
  }

// StdProp:WideString
  void __fastcall set_LocationOfComponents(BSTR pstr/*[in]*/)
  {
    GetDefaultInterface()->set_LocationOfComponents(pstr/*[in]*/);
  }

// StdProp:TOleEnum
  Office_xp::MsoEncoding __fastcall get_Encoding(void)
  {
    return GetDefaultInterface()->get_Encoding();
  }

// StdProp:TOleEnum
  void __fastcall set_Encoding(Office_xp::MsoEncoding penc/*[in]*/)
  {
    GetDefaultInterface()->set_Encoding(penc/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AlwaysSaveInDefaultEncoding(void)
  {
    return GetDefaultInterface()->get_AlwaysSaveInDefaultEncoding();
  }

// StdProp:WordBool
  void __fastcall set_AlwaysSaveInDefaultEncoding(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_AlwaysSaveInDefaultEncoding(pf/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_FolderSuffix(void)
  {
    return GetDefaultInterface()->get_FolderSuffix();
  }

// StdProp:TOleEnum
  Office_xp::MsoTargetBrowser __fastcall get_TargetBrowser(void)
  {
    return GetDefaultInterface()->get_TargetBrowser();
  }

// StdProp:TOleEnum
  void __fastcall set_TargetBrowser(Office_xp::MsoTargetBrowser ptb/*[in]*/)
  {
    GetDefaultInterface()->set_TargetBrowser(ptb/*[in]*/);
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property BSTR FolderSuffix={ read=get_FolderSuffix }; // 0, No
  /*CoClassWriteProperties*/
  __property Access_xp::AcColorIndex HyperlinkColor={ read=get_HyperlinkColor, stored=false }; // 0, No
  __property Access_xp::AcColorIndex FollowedHyperlinkColor={ read=get_FollowedHyperlinkColor, stored=false }; // 0, No
  __property TOLEBOOL UnderlineHyperlinks={ read=get_UnderlineHyperlinks, stored=false }; // 0, No
  __property TOLEBOOL OrganizeInFolder={ read=get_OrganizeInFolder, stored=false }; // 0, No
  __property TOLEBOOL UseLongFileNames={ read=get_UseLongFileNames, stored=false }; // 0, No
  __property TOLEBOOL CheckIfOfficeIsHTMLEditor={ read=get_CheckIfOfficeIsHTMLEditor, stored=false }; // 0, No
  __property TOLEBOOL DownloadComponents={ read=get_DownloadComponents, stored=false }; // 0, No
  __property BSTR LocationOfComponents={ read=get_LocationOfComponents, stored=false }; // 0, No
  __property Office_xp::MsoEncoding Encoding={ read=get_Encoding, stored=false }; // 0, No
  __property TOLEBOOL AlwaysSaveInDefaultEncoding={ read=get_AlwaysSaveInDefaultEncoding, stored=false }; // 0, No
  __property Office_xp::MsoTargetBrowser TargetBrowser={ read=get_TargetBrowser, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessWebOptions
// Help String      : 
// Default Interface: _WebOptions
// Def. Intf. Object: _WebOptionsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAccessWebOptions : public Oleserver::TOleServer
{
  _WebOptionsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessWebOptions(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _WebOptionsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_WebOptionsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OrganizeInFolder(void)
  {
    return GetDefaultInterface()->get_OrganizeInFolder();
  }

// StdProp:WordBool
  void __fastcall set_OrganizeInFolder(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_OrganizeInFolder(pf/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UseLongFileNames(void)
  {
    return GetDefaultInterface()->get_UseLongFileNames();
  }

// StdProp:WordBool
  void __fastcall set_UseLongFileNames(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_UseLongFileNames(pf/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DownloadComponents(void)
  {
    return GetDefaultInterface()->get_DownloadComponents();
  }

// StdProp:WordBool
  void __fastcall set_DownloadComponents(VARIANT_BOOL pf/*[in]*/)
  {
    GetDefaultInterface()->set_DownloadComponents(pf/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_LocationOfComponents(void)
  {
    return GetDefaultInterface()->get_LocationOfComponents();
  }

// StdProp:WideString
  void __fastcall set_LocationOfComponents(BSTR pstr/*[in]*/)
  {
    GetDefaultInterface()->set_LocationOfComponents(pstr/*[in]*/);
  }

// StdProp:TOleEnum
  Office_xp::MsoEncoding __fastcall get_Encoding(void)
  {
    return GetDefaultInterface()->get_Encoding();
  }

// StdProp:TOleEnum
  void __fastcall set_Encoding(Office_xp::MsoEncoding penc/*[in]*/)
  {
    GetDefaultInterface()->set_Encoding(penc/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_FolderSuffix(void)
  {
    return GetDefaultInterface()->get_FolderSuffix();
  }

// StdProp:TOleEnum
  Office_xp::MsoTargetBrowser __fastcall get_TargetBrowser(void)
  {
    return GetDefaultInterface()->get_TargetBrowser();
  }

// StdProp:TOleEnum
  void __fastcall set_TargetBrowser(Office_xp::MsoTargetBrowser ptb/*[in]*/)
  {
    GetDefaultInterface()->set_TargetBrowser(ptb/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall UseDefaultFolderSuffix(void)
  {
    GetDefaultInterface()->UseDefaultFolderSuffix();
  }

  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property BSTR FolderSuffix={ read=get_FolderSuffix }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL OrganizeInFolder={ read=get_OrganizeInFolder, stored=false }; // 0, No
  __property TOLEBOOL UseLongFileNames={ read=get_UseLongFileNames, stored=false }; // 0, No
  __property TOLEBOOL DownloadComponents={ read=get_DownloadComponents, stored=false }; // 0, No
  __property BSTR LocationOfComponents={ read=get_LocationOfComponents, stored=false }; // 0, No
  __property Office_xp::MsoEncoding Encoding={ read=get_Encoding, stored=false }; // 0, No
  __property Office_xp::MsoTargetBrowser TargetBrowser={ read=get_TargetBrowser, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPrinter
// Help String      : 
// Default Interface: _Printer
// Def. Intf. Object: _PrinterPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TPrinter : public Oleserver::TOleServer
{
  _PrinterPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPrinter(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _PrinterPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_PrinterPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:TOleEnum
  Access_xp::AcPrintColor __fastcall get_ColorMode(void)
  {
    return GetDefaultInterface()->get_ColorMode();
  }

// StdProp:TOleEnum
  void __fastcall set_ColorMode(Access_xp::AcPrintColor pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ColorMode(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Copies(void)
  {
    return GetDefaultInterface()->get_Copies();
  }

// StdProp:Integer
  void __fastcall set_Copies(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Copies(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_DeviceName(void)
  {
    return GetDefaultInterface()->get_DeviceName();
  }

// StdProp:WideString
  BSTR __fastcall get_DriverName(void)
  {
    return GetDefaultInterface()->get_DriverName();
  }

// StdProp:TOleEnum
  Access_xp::AcPrintDuplex __fastcall get_Duplex(void)
  {
    return GetDefaultInterface()->get_Duplex();
  }

// StdProp:TOleEnum
  void __fastcall set_Duplex(Access_xp::AcPrintDuplex pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Duplex(pRet/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcPrintOrientation __fastcall get_Orientation(void)
  {
    return GetDefaultInterface()->get_Orientation();
  }

// StdProp:TOleEnum
  void __fastcall set_Orientation(Access_xp::AcPrintOrientation pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Orientation(pRet/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcPrintPaperBin __fastcall get_PaperBin(void)
  {
    return GetDefaultInterface()->get_PaperBin();
  }

// StdProp:TOleEnum
  void __fastcall set_PaperBin(Access_xp::AcPrintPaperBin pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaperBin(pRet/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcPrintPaperSize __fastcall get_PaperSize(void)
  {
    return GetDefaultInterface()->get_PaperSize();
  }

// StdProp:TOleEnum
  void __fastcall set_PaperSize(Access_xp::AcPrintPaperSize pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaperSize(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Port(void)
  {
    return GetDefaultInterface()->get_Port();
  }

// StdProp:TOleEnum
  Access_xp::AcPrintObjQuality __fastcall get_PrintQuality(void)
  {
    return GetDefaultInterface()->get_PrintQuality();
  }

// StdProp:TOleEnum
  void __fastcall set_PrintQuality(Access_xp::AcPrintObjQuality pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrintQuality(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LeftMargin(void)
  {
    return GetDefaultInterface()->get_LeftMargin();
  }

// StdProp:Integer
  void __fastcall set_LeftMargin(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LeftMargin(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_RightMargin(void)
  {
    return GetDefaultInterface()->get_RightMargin();
  }

// StdProp:Integer
  void __fastcall set_RightMargin(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RightMargin(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_TopMargin(void)
  {
    return GetDefaultInterface()->get_TopMargin();
  }

// StdProp:Integer
  void __fastcall set_TopMargin(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TopMargin(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_BottomMargin(void)
  {
    return GetDefaultInterface()->get_BottomMargin();
  }

// StdProp:Integer
  void __fastcall set_BottomMargin(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BottomMargin(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DataOnly(void)
  {
    return GetDefaultInterface()->get_DataOnly();
  }

// StdProp:WordBool
  void __fastcall set_DataOnly(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DataOnly(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ItemsAcross(void)
  {
    return GetDefaultInterface()->get_ItemsAcross();
  }

// StdProp:Integer
  void __fastcall set_ItemsAcross(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ItemsAcross(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_RowSpacing(void)
  {
    return GetDefaultInterface()->get_RowSpacing();
  }

// StdProp:Integer
  void __fastcall set_RowSpacing(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RowSpacing(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ColumnSpacing(void)
  {
    return GetDefaultInterface()->get_ColumnSpacing();
  }

// StdProp:Integer
  void __fastcall set_ColumnSpacing(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ColumnSpacing(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DefaultSize(void)
  {
    return GetDefaultInterface()->get_DefaultSize();
  }

// StdProp:WordBool
  void __fastcall set_DefaultSize(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSize(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ItemSizeWidth(void)
  {
    return GetDefaultInterface()->get_ItemSizeWidth();
  }

// StdProp:Integer
  void __fastcall set_ItemSizeWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ItemSizeWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ItemSizeHeight(void)
  {
    return GetDefaultInterface()->get_ItemSizeHeight();
  }

// StdProp:Integer
  void __fastcall set_ItemSizeHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ItemSizeHeight(pRet/*[in]*/);
  }

// StdProp:TOleEnum
  Access_xp::AcPrintItemLayout __fastcall get_ItemLayout(void)
  {
    return GetDefaultInterface()->get_ItemLayout();
  }

// StdProp:TOleEnum
  void __fastcall set_ItemLayout(Access_xp::AcPrintItemLayout pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ItemLayout(pRet/*[in]*/);
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property BSTR DeviceName={ read=get_DeviceName }; // 0, No
  __property BSTR DriverName={ read=get_DriverName }; // 0, No
  __property BSTR Port={ read=get_Port }; // 0, No
  /*CoClassWriteProperties*/
  __property Access_xp::AcPrintColor ColorMode={ read=get_ColorMode, stored=false }; // 0, No
  __property long Copies={ read=get_Copies, stored=false }; // 0, No
  __property Access_xp::AcPrintDuplex Duplex={ read=get_Duplex, stored=false }; // 0, No
  __property Access_xp::AcPrintOrientation Orientation={ read=get_Orientation, stored=false }; // 0, No
  __property Access_xp::AcPrintPaperBin PaperBin={ read=get_PaperBin, stored=false }; // 0, No
  __property Access_xp::AcPrintPaperSize PaperSize={ read=get_PaperSize, stored=false }; // 0, No
  __property Access_xp::AcPrintObjQuality PrintQuality={ read=get_PrintQuality, stored=false }; // 0, No
  __property long LeftMargin={ read=get_LeftMargin, stored=false }; // 0, No
  __property long RightMargin={ read=get_RightMargin, stored=false }; // 0, No
  __property long TopMargin={ read=get_TopMargin, stored=false }; // 0, No
  __property long BottomMargin={ read=get_BottomMargin, stored=false }; // 0, No
  __property TOLEBOOL DataOnly={ read=get_DataOnly, stored=false }; // 0, No
  __property long ItemsAcross={ read=get_ItemsAcross, stored=false }; // 0, No
  __property long RowSpacing={ read=get_RowSpacing, stored=false }; // 0, No
  __property long ColumnSpacing={ read=get_ColumnSpacing, stored=false }; // 0, No
  __property TOLEBOOL DefaultSize={ read=get_DefaultSize, stored=false }; // 0, No
  __property long ItemSizeWidth={ read=get_ItemSizeWidth, stored=false }; // 0, No
  __property long ItemSizeHeight={ read=get_ItemSizeHeight, stored=false }; // 0, No
  __property Access_xp::AcPrintItemLayout ItemLayout={ read=get_ItemLayout, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessForm
// Help String      : 
// Default Interface: _Form2
// Def. Intf. Object: _Form2Ptr
// Def. Intf. DISP? : No
// Event   Interface: _FormEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TAccessFormBeforeInsert)(System::TObject * Sender, 
                                                              short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormBeforeUpdate)(System::TObject * Sender, 
                                                              short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormDelete)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormBeforeDelConfirm)(System::TObject * Sender, 
                                                                  short* Cancel/*[out]*/, 
                                                                  short* Response/*[out]*/);
typedef void __fastcall (__closure * TAccessFormAfterDelConfirm)(System::TObject * Sender, 
                                                                 short* Status/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormOpen)(System::TObject * Sender, 
                                                      short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormUnload)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormDblClick)(System::TObject * Sender, 
                                                          short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormMouseDown)(System::TObject * Sender, 
                                                           short* Button/*[in,out]*/, 
                                                           short* Shift/*[in,out]*/, 
                                                           float* X/*[in,out]*/, 
                                                           float* Y/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormMouseMove)(System::TObject * Sender, 
                                                           short* Button/*[in,out]*/, 
                                                           short* Shift/*[in,out]*/, 
                                                           float* X/*[in,out]*/, 
                                                           float* Y/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormMouseUp)(System::TObject * Sender, 
                                                         short* Button/*[in,out]*/, 
                                                         short* Shift/*[in,out]*/, 
                                                         float* X/*[in,out]*/, float* Y/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormKeyDown)(System::TObject * Sender, 
                                                         short* KeyCode/*[in,out]*/, 
                                                         short* Shift/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormKeyPress)(System::TObject * Sender, 
                                                          short* KeyAscii/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormKeyUp)(System::TObject * Sender, 
                                                       short* KeyCode/*[in,out]*/, 
                                                       short* Shift/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormError)(System::TObject * Sender, 
                                                       short* DataErr/*[in,out]*/, 
                                                       short* Response/*[out]*/);
typedef void __fastcall (__closure * TAccessFormFilter)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/, 
                                                        short* FilterType/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormApplyFilter)(System::TObject * Sender, 
                                                             short* Cancel/*[out]*/, 
                                                             short* ApplyType/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormDirty)(System::TObject * Sender, 
                                                       short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormUndo)(System::TObject * Sender, 
                                                      short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormRecordExit)(System::TObject * Sender, 
                                                            short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormBeginBatchEdit)(System::TObject * Sender, 
                                                                short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormUndoBatchEdit)(System::TObject * Sender, 
                                                               short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormBeforeBeginTransaction)(System::TObject * Sender, 
                                                                        short* Cancel/*[out]*/, 
                                                                        void* Connection_which_is_really_a_Ptr_to_Ptr_to_Connection);
typedef void __fastcall (__closure * TAccessFormAfterBeginTransaction)(System::TObject * Sender, 
                                                                       void* Connection_which_is_really_a_Ptr_to_Ptr_to_Connection);
typedef void __fastcall (__closure * TAccessFormBeforeCommitTransaction)(System::TObject * Sender, 
                                                                         short* Cancel/*[out]*/, 
                                                                         void* Connection_which_is_really_a_Ptr_to_Ptr_to_Connection);
typedef void __fastcall (__closure * TAccessFormAfterCommitTransaction)(System::TObject * Sender, 
                                                                        void* Connection_which_is_really_a_Ptr_to_Ptr_to_Connection);
typedef void __fastcall (__closure * TAccessFormRollbackTransaction)(System::TObject * Sender, 
                                                                     void* Connection_which_is_really_a_Ptr_to_Ptr_to_Connection);
typedef void __fastcall (__closure * TAccessFormPivotTableChange)(System::TObject * Sender, 
                                                                  long Reason/*[in]*/);
typedef void __fastcall (__closure * TAccessFormCommandBeforeExecute)(System::TObject * Sender, 
                                                                      VARIANT Command/*[in]*/, 
                                                                      LPDISPATCH Cancel/*[in]*/);
typedef void __fastcall (__closure * TAccessFormCommandChecked)(System::TObject * Sender, 
                                                                VARIANT Command/*[in]*/, 
                                                                LPDISPATCH Checked/*[in]*/);
typedef void __fastcall (__closure * TAccessFormCommandEnabled)(System::TObject * Sender, 
                                                                VARIANT Command/*[in]*/, 
                                                                LPDISPATCH Enabled/*[in]*/);
typedef void __fastcall (__closure * TAccessFormCommandExecute)(System::TObject * Sender, 
                                                                VARIANT Command/*[in]*/);
typedef void __fastcall (__closure * TAccessFormBeforeScreenTip)(System::TObject * Sender, 
                                                                 LPDISPATCH ScreenTipText/*[in]*/, 
                                                                 LPDISPATCH SourceObject/*[in]*/);
typedef void __fastcall (__closure * TAccessFormBeforeRender)(System::TObject * Sender, 
                                                              LPDISPATCH drawObject/*[in]*/, 
                                                              LPDISPATCH chartObject/*[in]*/, 
                                                              LPDISPATCH Cancel/*[in]*/);
typedef void __fastcall (__closure * TAccessFormAfterRender)(System::TObject * Sender, 
                                                             LPDISPATCH drawObject/*[in]*/, 
                                                             LPDISPATCH chartObject/*[in]*/);
typedef void __fastcall (__closure * TAccessFormAfterFinalRender)(System::TObject * Sender, 
                                                                  LPDISPATCH drawObject/*[in]*/);
typedef void __fastcall (__closure * TAccessFormAfterLayout)(System::TObject * Sender, 
                                                             LPDISPATCH drawObject/*[in]*/);
typedef void __fastcall (__closure * TAccessFormMouseWheel)(System::TObject * Sender, 
                                                            VARIANT_BOOL Page/*[in]*/, 
                                                            long Count/*[in]*/);
typedef void __fastcall (__closure * TAccessFormViewChange)(System::TObject * Sender, 
                                                            long Reason/*[in]*/);
typedef void __fastcall (__closure * TAccessFormDataChange)(System::TObject * Sender, 
                                                            long Reason/*[in]*/);

class PACKAGE TAccessForm : public Oleserver::TOleServer
{
  _Form2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessForm(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _Form2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_Form2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:IDispatch
  LPDISPATCH __fastcall get_accParent(void)
  {
    return GetDefaultInterface()->get_accParent();
  }

// StdProp:Integer
  long __fastcall get_accChildCount(void)
  {
    return GetDefaultInterface()->get_accChildCount();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_accChild(VARIANT varChild/*[in]*/)
  {
    return GetDefaultInterface()->get_accChild(varChild/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_accName(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accName(varChild/*[in,opt]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_accValue(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accValue(varChild/*[in,opt]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_accDescription(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accDescription(varChild/*[in,opt]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_accRole(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accRole(varChild/*[in,opt]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_accState(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accState(varChild/*[in,opt]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_accHelp(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accHelp(varChild/*[in,opt]*/);
  }

// StdProp:Integer
  long __fastcall get_accHelpTopic(BSTR* pszHelpFile/*[out]*/, VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accHelpTopic(pszHelpFile/*[out]*/, varChild/*[in,opt]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_accKeyboardShortcut(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accKeyboardShortcut(varChild/*[in,opt]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_accFocus(void)
  {
    return GetDefaultInterface()->get_accFocus();
  }

// StdProp:OleVariant
  TVariant __fastcall get_accSelection(void)
  {
    return GetDefaultInterface()->get_accSelection();
  }

// StdProp:WideString
  BSTR __fastcall get_accDefaultAction(VARIANT varChild/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_accDefaultAction(varChild/*[in,opt]*/);
  }

// StdProp:WideString
  void __fastcall set_accName(VARIANT varChild/*[in,opt]*/, BSTR pszName/*[in]*/)
  {
    GetDefaultInterface()->set_accName(varChild/*[in,opt]*/, pszName/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_accValue(VARIANT varChild/*[in,opt]*/, BSTR pszValue/*[in]*/)
  {
    GetDefaultInterface()->set_accValue(varChild/*[in,opt]*/, pszValue/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_FormName(void)
  {
    return GetDefaultInterface()->get_FormName();
  }

// StdProp:WideString
  void __fastcall set_FormName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FormName(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecordSource(void)
  {
    return GetDefaultInterface()->get_RecordSource();
  }

// StdProp:WideString
  void __fastcall set_RecordSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Filter(void)
  {
    return GetDefaultInterface()->get_Filter();
  }

// StdProp:WideString
  void __fastcall set_Filter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Filter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FilterOn(void)
  {
    return GetDefaultInterface()->get_FilterOn();
  }

// StdProp:WordBool
  void __fastcall set_FilterOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FilterOn(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OrderBy(void)
  {
    return GetDefaultInterface()->get_OrderBy();
  }

// StdProp:WideString
  void __fastcall set_OrderBy(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderBy(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OrderByOn(void)
  {
    return GetDefaultInterface()->get_OrderByOn();
  }

// StdProp:WordBool
  void __fastcall set_OrderByOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderByOn(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowFilters(void)
  {
    return GetDefaultInterface()->get_AllowFilters();
  }

// StdProp:WordBool
  void __fastcall set_AllowFilters(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowFilters(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

// StdProp:WideString
  void __fastcall set_Caption(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DefaultView(void)
  {
    return GetDefaultInterface()->get_DefaultView();
  }

// StdProp:Byte
  void __fastcall set_DefaultView(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultView(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_ViewsAllowed(void)
  {
    return GetDefaultInterface()->get_ViewsAllowed();
  }

// StdProp:Byte
  void __fastcall set_ViewsAllowed(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ViewsAllowed(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowEditing(void)
  {
    return GetDefaultInterface()->get_AllowEditing();
  }

// StdProp:WordBool
  void __fastcall set_AllowEditing(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowEditing(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DefaultEditing(void)
  {
    return GetDefaultInterface()->get_DefaultEditing();
  }

// StdProp:Smallint
  void __fastcall set_DefaultEditing(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultEditing(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowEdits(void)
  {
    return GetDefaultInterface()->get_AllowEdits();
  }

// StdProp:WordBool
  void __fastcall set_AllowEdits(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowEdits(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowDeletions(void)
  {
    return GetDefaultInterface()->get_AllowDeletions();
  }

// StdProp:WordBool
  void __fastcall set_AllowDeletions(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowDeletions(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowAdditions(void)
  {
    return GetDefaultInterface()->get_AllowAdditions();
  }

// StdProp:WordBool
  void __fastcall set_AllowAdditions(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowAdditions(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DataEntry(void)
  {
    return GetDefaultInterface()->get_DataEntry();
  }

// StdProp:WordBool
  void __fastcall set_DataEntry(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DataEntry(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_AllowUpdating(void)
  {
    return GetDefaultInterface()->get_AllowUpdating();
  }

// StdProp:Byte
  void __fastcall set_AllowUpdating(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowUpdating(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_RecordsetType(void)
  {
    return GetDefaultInterface()->get_RecordsetType();
  }

// StdProp:Byte
  void __fastcall set_RecordsetType(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordsetType(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_RecordLocks(void)
  {
    return GetDefaultInterface()->get_RecordLocks();
  }

// StdProp:Byte
  void __fastcall set_RecordLocks(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordLocks(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_ScrollBars(void)
  {
    return GetDefaultInterface()->get_ScrollBars();
  }

// StdProp:Byte
  void __fastcall set_ScrollBars(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScrollBars(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RecordSelectors(void)
  {
    return GetDefaultInterface()->get_RecordSelectors();
  }

// StdProp:WordBool
  void __fastcall set_RecordSelectors(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSelectors(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_NavigationButtons(void)
  {
    return GetDefaultInterface()->get_NavigationButtons();
  }

// StdProp:WordBool
  void __fastcall set_NavigationButtons(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_NavigationButtons(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DividingLines(void)
  {
    return GetDefaultInterface()->get_DividingLines();
  }

// StdProp:WordBool
  void __fastcall set_DividingLines(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DividingLines(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoResize(void)
  {
    return GetDefaultInterface()->get_AutoResize();
  }

// StdProp:WordBool
  void __fastcall set_AutoResize(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AutoResize(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoCenter(void)
  {
    return GetDefaultInterface()->get_AutoCenter();
  }

// StdProp:WordBool
  void __fastcall set_AutoCenter(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AutoCenter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PopUp(void)
  {
    return GetDefaultInterface()->get_PopUp();
  }

// StdProp:WordBool
  void __fastcall set_PopUp(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PopUp(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Modal(void)
  {
    return GetDefaultInterface()->get_Modal();
  }

// StdProp:WordBool
  void __fastcall set_Modal(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Modal(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_BorderStyle(void)
  {
    return GetDefaultInterface()->get_BorderStyle();
  }

// StdProp:Byte
  void __fastcall set_BorderStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BorderStyle(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ControlBox(void)
  {
    return GetDefaultInterface()->get_ControlBox();
  }

// StdProp:WordBool
  void __fastcall set_ControlBox(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ControlBox(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MinButton(void)
  {
    return GetDefaultInterface()->get_MinButton();
  }

// StdProp:WordBool
  void __fastcall set_MinButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinButton(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MaxButton(void)
  {
    return GetDefaultInterface()->get_MaxButton();
  }

// StdProp:WordBool
  void __fastcall set_MaxButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MaxButton(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_MinMaxButtons(void)
  {
    return GetDefaultInterface()->get_MinMaxButtons();
  }

// StdProp:Byte
  void __fastcall set_MinMaxButtons(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinMaxButtons(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CloseButton(void)
  {
    return GetDefaultInterface()->get_CloseButton();
  }

// StdProp:WordBool
  void __fastcall set_CloseButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CloseButton(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_WhatsThisButton(void)
  {
    return GetDefaultInterface()->get_WhatsThisButton();
  }

// StdProp:WordBool
  void __fastcall set_WhatsThisButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WhatsThisButton(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

// StdProp:Smallint
  void __fastcall set_Width(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Width(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Picture(void)
  {
    return GetDefaultInterface()->get_Picture();
  }

// StdProp:WideString
  void __fastcall set_Picture(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Picture(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureType(void)
  {
    return GetDefaultInterface()->get_PictureType();
  }

// StdProp:Byte
  void __fastcall set_PictureType(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureType(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureSizeMode(void)
  {
    return GetDefaultInterface()->get_PictureSizeMode();
  }

// StdProp:Byte
  void __fastcall set_PictureSizeMode(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureSizeMode(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureAlignment(void)
  {
    return GetDefaultInterface()->get_PictureAlignment();
  }

// StdProp:Byte
  void __fastcall set_PictureAlignment(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureAlignment(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PictureTiling(void)
  {
    return GetDefaultInterface()->get_PictureTiling();
  }

// StdProp:WordBool
  void __fastcall set_PictureTiling(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureTiling(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_Cycle(void)
  {
    return GetDefaultInterface()->get_Cycle();
  }

// StdProp:Byte
  void __fastcall set_Cycle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Cycle(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

// StdProp:WideString
  void __fastcall set_MenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Toolbar(void)
  {
    return GetDefaultInterface()->get_Toolbar();
  }

// StdProp:WideString
  void __fastcall set_Toolbar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Toolbar(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShortcutMenu(void)
  {
    return GetDefaultInterface()->get_ShortcutMenu();
  }

// StdProp:WordBool
  void __fastcall set_ShortcutMenu(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenu(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ShortcutMenuBar(void)
  {
    return GetDefaultInterface()->get_ShortcutMenuBar();
  }

// StdProp:WideString
  void __fastcall set_ShortcutMenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenuBar(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridX(void)
  {
    return GetDefaultInterface()->get_GridX();
  }

// StdProp:Smallint
  void __fastcall set_GridX(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridX(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridY(void)
  {
    return GetDefaultInterface()->get_GridY();
  }

// StdProp:Smallint
  void __fastcall set_GridY(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridY(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_LayoutForPrint(void)
  {
    return GetDefaultInterface()->get_LayoutForPrint();
  }

// StdProp:WordBool
  void __fastcall set_LayoutForPrint(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LayoutForPrint(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FastLaserPrinting(void)
  {
    return GetDefaultInterface()->get_FastLaserPrinting();
  }

// StdProp:WordBool
  void __fastcall set_FastLaserPrinting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FastLaserPrinting(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_HelpFile(void)
  {
    return GetDefaultInterface()->get_HelpFile();
  }

// StdProp:WideString
  void __fastcall set_HelpFile(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpFile(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HelpContextId(void)
  {
    return GetDefaultInterface()->get_HelpContextId();
  }

// StdProp:Integer
  void __fastcall set_HelpContextId(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpContextId(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_RowHeight(void)
  {
    return GetDefaultInterface()->get_RowHeight();
  }

// StdProp:Smallint
  void __fastcall set_RowHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RowHeight(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_DatasheetFontName(void)
  {
    return GetDefaultInterface()->get_DatasheetFontName();
  }

// StdProp:WideString
  void __fastcall set_DatasheetFontName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontName(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DatasheetFontHeight(void)
  {
    return GetDefaultInterface()->get_DatasheetFontHeight();
  }

// StdProp:Smallint
  void __fastcall set_DatasheetFontHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontHeight(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DatasheetFontWeight(void)
  {
    return GetDefaultInterface()->get_DatasheetFontWeight();
  }

// StdProp:Smallint
  void __fastcall set_DatasheetFontWeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontWeight(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DatasheetFontItalic(void)
  {
    return GetDefaultInterface()->get_DatasheetFontItalic();
  }

// StdProp:WordBool
  void __fastcall set_DatasheetFontItalic(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontItalic(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DatasheetFontUnderline(void)
  {
    return GetDefaultInterface()->get_DatasheetFontUnderline();
  }

// StdProp:WordBool
  void __fastcall set_DatasheetFontUnderline(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontUnderline(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_TabularCharSet(void)
  {
    return GetDefaultInterface()->get_TabularCharSet();
  }

// StdProp:Byte
  void __fastcall set_TabularCharSet(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TabularCharSet(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DatasheetGridlinesBehavior(void)
  {
    return GetDefaultInterface()->get_DatasheetGridlinesBehavior();
  }

// StdProp:Byte
  void __fastcall set_DatasheetGridlinesBehavior(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetGridlinesBehavior(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DatasheetGridlinesColor(void)
  {
    return GetDefaultInterface()->get_DatasheetGridlinesColor();
  }

// StdProp:Integer
  void __fastcall set_DatasheetGridlinesColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetGridlinesColor(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DatasheetCellsEffect(void)
  {
    return GetDefaultInterface()->get_DatasheetCellsEffect();
  }

// StdProp:Byte
  void __fastcall set_DatasheetCellsEffect(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetCellsEffect(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DatasheetForeColor(void)
  {
    return GetDefaultInterface()->get_DatasheetForeColor();
  }

// StdProp:Integer
  void __fastcall set_DatasheetForeColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetForeColor(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowGrid(void)
  {
    return GetDefaultInterface()->get_ShowGrid();
  }

// StdProp:WordBool
  void __fastcall set_ShowGrid(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShowGrid(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DatasheetBackColor(void)
  {
    return GetDefaultInterface()->get_DatasheetBackColor();
  }

// StdProp:Integer
  void __fastcall set_DatasheetBackColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetBackColor(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Hwnd(void)
  {
    return GetDefaultInterface()->get_Hwnd();
  }

// StdProp:Integer
  void __fastcall set_Hwnd(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Hwnd(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

// StdProp:Smallint
  void __fastcall set_Count(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Count(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Page(void)
  {
    return GetDefaultInterface()->get_Page();
  }

// StdProp:Integer
  void __fastcall set_Page(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Page(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Pages(void)
  {
    return GetDefaultInterface()->get_Pages();
  }

// StdProp:Smallint
  void __fastcall set_Pages(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Pages(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageWidth(void)
  {
    return GetDefaultInterface()->get_LogicalPageWidth();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageHeight(void)
  {
    return GetDefaultInterface()->get_LogicalPageHeight();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ZoomControl(void)
  {
    return GetDefaultInterface()->get_ZoomControl();
  }

// StdProp:Integer
  void __fastcall set_ZoomControl(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ZoomControl(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Painting(void)
  {
    return GetDefaultInterface()->get_Painting();
  }

// StdProp:WordBool
  void __fastcall set_Painting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Painting(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtMip(void)
  {
    return GetDefaultInterface()->get_PrtMip();
  }

// StdProp:OleVariant
  void __fastcall set_PrtMip(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtMip(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevMode(void)
  {
    return GetDefaultInterface()->get_PrtDevMode();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevMode(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevMode(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevNames(void)
  {
    return GetDefaultInterface()->get_PrtDevNames();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevNames(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevNames(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FrozenColumns(void)
  {
    return GetDefaultInterface()->get_FrozenColumns();
  }

// StdProp:Smallint
  void __fastcall set_FrozenColumns(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FrozenColumns(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_Bookmark(void)
  {
    return GetDefaultInterface()->get_Bookmark();
  }

// StdProp:OleVariant
  void __fastcall set_Bookmark(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Bookmark(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_TabularFamily(void)
  {
    return GetDefaultInterface()->get_TabularFamily();
  }

// StdProp:Byte
  void __fastcall set_TabularFamily(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TabularFamily(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get__Name(void)
  {
    return GetDefaultInterface()->get__Name();
  }

// StdProp:WideString
  void __fastcall set__Name(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set__Name(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PaletteSource(void)
  {
    return GetDefaultInterface()->get_PaletteSource();
  }

// StdProp:WideString
  void __fastcall set_PaletteSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaletteSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Tag(void)
  {
    return GetDefaultInterface()->get_Tag();
  }

// StdProp:WideString
  void __fastcall set_Tag(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Tag(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PaintPalette(void)
  {
    return GetDefaultInterface()->get_PaintPalette();
  }

// StdProp:OleVariant
  void __fastcall set_PaintPalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaintPalette(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMenu(void)
  {
    return GetDefaultInterface()->get_OnMenu();
  }

// StdProp:WideString
  void __fastcall set_OnMenu(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMenu(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_OpenArgs(void)
  {
    return GetDefaultInterface()->get_OpenArgs();
  }

// StdProp:OleVariant
  void __fastcall set_OpenArgs(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OpenArgs(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_ConnectSynch(void)
  {
    return GetDefaultInterface()->get_ConnectSynch();
  }

// StdProp:Smallint
  void __fastcall set_ConnectSynch(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ConnectSynch(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnCurrent(void)
  {
    return GetDefaultInterface()->get_OnCurrent();
  }

// StdProp:WideString
  void __fastcall set_OnCurrent(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnCurrent(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnInsert(void)
  {
    return GetDefaultInterface()->get_OnInsert();
  }

// StdProp:WideString
  void __fastcall set_OnInsert(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnInsert(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeInsert(void)
  {
    return GetDefaultInterface()->get_BeforeInsert();
  }

// StdProp:WideString
  void __fastcall set_BeforeInsert(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeInsert(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterInsert(void)
  {
    return GetDefaultInterface()->get_AfterInsert();
  }

// StdProp:WideString
  void __fastcall set_AfterInsert(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterInsert(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeUpdate(void)
  {
    return GetDefaultInterface()->get_BeforeUpdate();
  }

// StdProp:WideString
  void __fastcall set_BeforeUpdate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeUpdate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterUpdate(void)
  {
    return GetDefaultInterface()->get_AfterUpdate();
  }

// StdProp:WideString
  void __fastcall set_AfterUpdate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterUpdate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDirty(void)
  {
    return GetDefaultInterface()->get_OnDirty();
  }

// StdProp:WideString
  void __fastcall set_OnDirty(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDirty(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDelete(void)
  {
    return GetDefaultInterface()->get_OnDelete();
  }

// StdProp:WideString
  void __fastcall set_OnDelete(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDelete(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeDelConfirm(void)
  {
    return GetDefaultInterface()->get_BeforeDelConfirm();
  }

// StdProp:WideString
  void __fastcall set_BeforeDelConfirm(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeDelConfirm(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterDelConfirm(void)
  {
    return GetDefaultInterface()->get_AfterDelConfirm();
  }

// StdProp:WideString
  void __fastcall set_AfterDelConfirm(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterDelConfirm(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnOpen(void)
  {
    return GetDefaultInterface()->get_OnOpen();
  }

// StdProp:WideString
  void __fastcall set_OnOpen(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnOpen(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnLoad(void)
  {
    return GetDefaultInterface()->get_OnLoad();
  }

// StdProp:WideString
  void __fastcall set_OnLoad(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnLoad(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnResize(void)
  {
    return GetDefaultInterface()->get_OnResize();
  }

// StdProp:WideString
  void __fastcall set_OnResize(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnResize(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnUnload(void)
  {
    return GetDefaultInterface()->get_OnUnload();
  }

// StdProp:WideString
  void __fastcall set_OnUnload(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnUnload(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnClose(void)
  {
    return GetDefaultInterface()->get_OnClose();
  }

// StdProp:WideString
  void __fastcall set_OnClose(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnClose(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnActivate(void)
  {
    return GetDefaultInterface()->get_OnActivate();
  }

// StdProp:WideString
  void __fastcall set_OnActivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnActivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDeactivate(void)
  {
    return GetDefaultInterface()->get_OnDeactivate();
  }

// StdProp:WideString
  void __fastcall set_OnDeactivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDeactivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnGotFocus(void)
  {
    return GetDefaultInterface()->get_OnGotFocus();
  }

// StdProp:WideString
  void __fastcall set_OnGotFocus(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnGotFocus(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnLostFocus(void)
  {
    return GetDefaultInterface()->get_OnLostFocus();
  }

// StdProp:WideString
  void __fastcall set_OnLostFocus(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnLostFocus(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnClick(void)
  {
    return GetDefaultInterface()->get_OnClick();
  }

// StdProp:WideString
  void __fastcall set_OnClick(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnClick(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDblClick(void)
  {
    return GetDefaultInterface()->get_OnDblClick();
  }

// StdProp:WideString
  void __fastcall set_OnDblClick(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDblClick(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMouseDown(void)
  {
    return GetDefaultInterface()->get_OnMouseDown();
  }

// StdProp:WideString
  void __fastcall set_OnMouseDown(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMouseDown(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMouseMove(void)
  {
    return GetDefaultInterface()->get_OnMouseMove();
  }

// StdProp:WideString
  void __fastcall set_OnMouseMove(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMouseMove(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMouseUp(void)
  {
    return GetDefaultInterface()->get_OnMouseUp();
  }

// StdProp:WideString
  void __fastcall set_OnMouseUp(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMouseUp(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnKeyDown(void)
  {
    return GetDefaultInterface()->get_OnKeyDown();
  }

// StdProp:WideString
  void __fastcall set_OnKeyDown(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnKeyDown(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnKeyUp(void)
  {
    return GetDefaultInterface()->get_OnKeyUp();
  }

// StdProp:WideString
  void __fastcall set_OnKeyUp(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnKeyUp(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnKeyPress(void)
  {
    return GetDefaultInterface()->get_OnKeyPress();
  }

// StdProp:WideString
  void __fastcall set_OnKeyPress(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnKeyPress(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_KeyPreview(void)
  {
    return GetDefaultInterface()->get_KeyPreview();
  }

// StdProp:WordBool
  void __fastcall set_KeyPreview(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_KeyPreview(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnError(void)
  {
    return GetDefaultInterface()->get_OnError();
  }

// StdProp:WideString
  void __fastcall set_OnError(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnError(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnFilter(void)
  {
    return GetDefaultInterface()->get_OnFilter();
  }

// StdProp:WideString
  void __fastcall set_OnFilter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnFilter(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnApplyFilter(void)
  {
    return GetDefaultInterface()->get_OnApplyFilter();
  }

// StdProp:WideString
  void __fastcall set_OnApplyFilter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnApplyFilter(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnTimer(void)
  {
    return GetDefaultInterface()->get_OnTimer();
  }

// StdProp:WideString
  void __fastcall set_OnTimer(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnTimer(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_TimerInterval(void)
  {
    return GetDefaultInterface()->get_TimerInterval();
  }

// StdProp:Integer
  void __fastcall set_TimerInterval(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TimerInterval(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Dirty(void)
  {
    return GetDefaultInterface()->get_Dirty();
  }

// StdProp:WordBool
  void __fastcall set_Dirty(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Dirty(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowWidth(void)
  {
    return GetDefaultInterface()->get_WindowWidth();
  }

// StdProp:Smallint
  void __fastcall set_WindowWidth(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WindowWidth(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowHeight(void)
  {
    return GetDefaultInterface()->get_WindowHeight();
  }

// StdProp:Smallint
  void __fastcall set_WindowHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WindowHeight(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_CurrentView(void)
  {
    return GetDefaultInterface()->get_CurrentView();
  }

// StdProp:Smallint
  void __fastcall set_CurrentView(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentView(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_CurrentSectionTop(void)
  {
    return GetDefaultInterface()->get_CurrentSectionTop();
  }

// StdProp:Smallint
  void __fastcall set_CurrentSectionTop(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentSectionTop(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_CurrentSectionLeft(void)
  {
    return GetDefaultInterface()->get_CurrentSectionLeft();
  }

// StdProp:Smallint
  void __fastcall set_CurrentSectionLeft(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentSectionLeft(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelLeft(void)
  {
    return GetDefaultInterface()->get_SelLeft();
  }

// StdProp:Integer
  void __fastcall set_SelLeft(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelLeft(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelTop(void)
  {
    return GetDefaultInterface()->get_SelTop();
  }

// StdProp:Integer
  void __fastcall set_SelTop(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelTop(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelWidth(void)
  {
    return GetDefaultInterface()->get_SelWidth();
  }

// StdProp:Integer
  void __fastcall set_SelWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelHeight(void)
  {
    return GetDefaultInterface()->get_SelHeight();
  }

// StdProp:Integer
  void __fastcall set_SelHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CurrentRecord(void)
  {
    return GetDefaultInterface()->get_CurrentRecord();
  }

// StdProp:Integer
  void __fastcall set_CurrentRecord(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentRecord(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PictureData(void)
  {
    return GetDefaultInterface()->get_PictureData();
  }

// StdProp:OleVariant
  void __fastcall set_PictureData(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureData(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_InsideHeight(void)
  {
    return GetDefaultInterface()->get_InsideHeight();
  }

// StdProp:Integer
  void __fastcall set_InsideHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_InsideHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_InsideWidth(void)
  {
    return GetDefaultInterface()->get_InsideWidth();
  }

// StdProp:Integer
  void __fastcall set_InsideWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_InsideWidth(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PicturePalette(void)
  {
    return GetDefaultInterface()->get_PicturePalette();
  }

// StdProp:OleVariant
  void __fastcall set_PicturePalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PicturePalette(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasModule(void)
  {
    return GetDefaultInterface()->get_HasModule();
  }

// StdProp:WordBool
  void __fastcall set_HasModule(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HasModule(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_acHiddenCurrentPage(void)
  {
    return GetDefaultInterface()->get_acHiddenCurrentPage();
  }

// StdProp:Integer
  void __fastcall set_acHiddenCurrentPage(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_acHiddenCurrentPage(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_Orientation(void)
  {
    return GetDefaultInterface()->get_Orientation();
  }

// StdProp:Byte
  void __fastcall set_Orientation(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Orientation(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowDesignChanges(void)
  {
    return GetDefaultInterface()->get_AllowDesignChanges();
  }

// StdProp:WordBool
  void __fastcall set_AllowDesignChanges(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowDesignChanges(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ServerFilter(void)
  {
    return GetDefaultInterface()->get_ServerFilter();
  }

// StdProp:WideString
  void __fastcall set_ServerFilter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ServerFilter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ServerFilterByForm(void)
  {
    return GetDefaultInterface()->get_ServerFilterByForm();
  }

// StdProp:WordBool
  void __fastcall set_ServerFilterByForm(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ServerFilterByForm(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_MaxRecords(void)
  {
    return GetDefaultInterface()->get_MaxRecords();
  }

// StdProp:Integer
  void __fastcall set_MaxRecords(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MaxRecords(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_UniqueTable(void)
  {
    return GetDefaultInterface()->get_UniqueTable();
  }

// StdProp:WideString
  void __fastcall set_UniqueTable(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_UniqueTable(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ResyncCommand(void)
  {
    return GetDefaultInterface()->get_ResyncCommand();
  }

// StdProp:WideString
  void __fastcall set_ResyncCommand(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ResyncCommand(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_InputParameters(void)
  {
    return GetDefaultInterface()->get_InputParameters();
  }

// StdProp:WideString
  void __fastcall set_InputParameters(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_InputParameters(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MaxRecButton(void)
  {
    return GetDefaultInterface()->get_MaxRecButton();
  }

// StdProp:WordBool
  void __fastcall set_MaxRecButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MaxRecButton(pRet/*[in]*/);
  }

// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:Smallint
  short __fastcall get_NewRecord(void)
  {
    return GetDefaultInterface()->get_NewRecord();
  }

// StdProp:
  Access_xp::AccessControlPtr __fastcall get_ActiveControl(void)
  {
    return GetDefaultInterface()->get_ActiveControl();
  }

// StdProp:
  Access_xp::AccessControlPtr __fastcall get_DefaultControl(long ControlType/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultControl(ControlType/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Dynaset(void)
  {
    return GetDefaultInterface()->get_Dynaset();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_RecordsetClone(void)
  {
    return GetDefaultInterface()->get_RecordsetClone();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Recordset(void)
  {
    return GetDefaultInterface()->get_Recordset();
  }

// StdProp:IDispatch
  void __fastcall _set_Recordset(LPDISPATCH pRet/*[in]*/)
  {
    GetDefaultInterface()->_set_Recordset(pRet/*[in]*/);
  }

// StdProp:
  Access_xp::AccessSectionPtr __fastcall get_Section(VARIANT Index/*[in]*/)
  {
    return GetDefaultInterface()->get_Section(Index/*[in]*/);
  }

// StdProp:
  Access_xp::AccessFormPtr __fastcall get_Form(void)
  {
    return GetDefaultInterface()->get_Form();
  }

// StdProp:
  Access_xp::ModulePtr __fastcall get_Module(void)
  {
    return GetDefaultInterface()->get_Module();
  }

// StdProp:
  Access_xp::PropertiesPtr __fastcall get_Properties(void)
  {
    return GetDefaultInterface()->get_Properties();
  }

// StdProp:
  Access_xp::AccessControlPtr __fastcall get_ConnectControl(void)
  {
    return GetDefaultInterface()->get_ConnectControl();
  }

// StdProp:
  Access_xp::Controls_Ptr __fastcall get_Controls(void)
  {
    return GetDefaultInterface()->get_Controls();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR pbstrName/*[in]*/)
  {
    GetDefaultInterface()->set_Name(pbstrName/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_SubdatasheetHeight(void)
  {
    return GetDefaultInterface()->get_SubdatasheetHeight();
  }

// StdProp:Smallint
  void __fastcall set_SubdatasheetHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SubdatasheetHeight(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SubdatasheetExpanded(void)
  {
    return GetDefaultInterface()->get_SubdatasheetExpanded();
  }

// StdProp:WordBool
  void __fastcall set_SubdatasheetExpanded(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SubdatasheetExpanded(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DatasheetBorderLineStyle(void)
  {
    return GetDefaultInterface()->get_DatasheetBorderLineStyle();
  }

// StdProp:Byte
  void __fastcall set_DatasheetBorderLineStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetBorderLineStyle(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DatasheetColumnHeaderUnderlineStyle(void)
  {
    return GetDefaultInterface()->get_DatasheetColumnHeaderUnderlineStyle();
  }

// StdProp:Byte
  void __fastcall set_DatasheetColumnHeaderUnderlineStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetColumnHeaderUnderlineStyle(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_HorizontalDatasheetGridlineStyle(void)
  {
    return GetDefaultInterface()->get_HorizontalDatasheetGridlineStyle();
  }

// StdProp:Byte
  void __fastcall set_HorizontalDatasheetGridlineStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HorizontalDatasheetGridlineStyle(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_VerticalDatasheetGridlineStyle(void)
  {
    return GetDefaultInterface()->get_VerticalDatasheetGridlineStyle();
  }

// StdProp:Byte
  void __fastcall set_VerticalDatasheetGridlineStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_VerticalDatasheetGridlineStyle(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowTop(void)
  {
    return GetDefaultInterface()->get_WindowTop();
  }

// StdProp:Smallint
  short __fastcall get_WindowLeft(void)
  {
    return GetDefaultInterface()->get_WindowLeft();
  }

// StdProp:WideString
  BSTR __fastcall get_OnUndo(void)
  {
    return GetDefaultInterface()->get_OnUndo();
  }

// StdProp:WideString
  void __fastcall set_OnUndo(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnUndo(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnRecordExit(void)
  {
    return GetDefaultInterface()->get_OnRecordExit();
  }

// StdProp:WideString
  void __fastcall set_OnRecordExit(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnRecordExit(pRet/*[in]*/);
  }

// StdProp:
  Owc10_xp::PivotTablePtr __fastcall get_PivotTable(void)
  {
    return GetDefaultInterface()->get_PivotTable();
  }

// StdProp:
  Owc10_xp::ChartSpacePtr __fastcall get_ChartSpace(void)
  {
    return GetDefaultInterface()->get_ChartSpace();
  }

// StdProp:
  Access_xp::_PrinterPtr __fastcall get_Printer(void)
  {
    return GetDefaultInterface()->get_Printer();
  }

// StdProp:
  void __fastcall set_Printer(Access_xp::_Printer* pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Printer(pRet/*[in]*/);
  }

// StdProp:
  void __fastcall _set_Printer(Access_xp::_Printer* pRet/*[in]*/)
  {
    GetDefaultInterface()->_set_Printer(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Moveable(void)
  {
    return GetDefaultInterface()->get_Moveable();
  }

// StdProp:WordBool
  void __fastcall set_Moveable(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Moveable(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeginBatchEdit(void)
  {
    return GetDefaultInterface()->get_BeginBatchEdit();
  }

// StdProp:WideString
  void __fastcall set_BeginBatchEdit(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeginBatchEdit(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_UndoBatchEdit(void)
  {
    return GetDefaultInterface()->get_UndoBatchEdit();
  }

// StdProp:WideString
  void __fastcall set_UndoBatchEdit(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_UndoBatchEdit(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeBeginTransaction(void)
  {
    return GetDefaultInterface()->get_BeforeBeginTransaction();
  }

// StdProp:WideString
  void __fastcall set_BeforeBeginTransaction(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeBeginTransaction(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterBeginTransaction(void)
  {
    return GetDefaultInterface()->get_AfterBeginTransaction();
  }

// StdProp:WideString
  void __fastcall set_AfterBeginTransaction(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterBeginTransaction(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeCommitTransaction(void)
  {
    return GetDefaultInterface()->get_BeforeCommitTransaction();
  }

// StdProp:WideString
  void __fastcall set_BeforeCommitTransaction(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeCommitTransaction(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterCommitTransaction(void)
  {
    return GetDefaultInterface()->get_AfterCommitTransaction();
  }

// StdProp:WideString
  void __fastcall set_AfterCommitTransaction(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterCommitTransaction(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RollbackTransaction(void)
  {
    return GetDefaultInterface()->get_RollbackTransaction();
  }

// StdProp:WideString
  void __fastcall set_RollbackTransaction(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RollbackTransaction(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowFormView(void)
  {
    return GetDefaultInterface()->get_AllowFormView();
  }

// StdProp:WordBool
  void __fastcall set_AllowFormView(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowFormView(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowDatasheetView(void)
  {
    return GetDefaultInterface()->get_AllowDatasheetView();
  }

// StdProp:WordBool
  void __fastcall set_AllowDatasheetView(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowDatasheetView(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowPivotTableView(void)
  {
    return GetDefaultInterface()->get_AllowPivotTableView();
  }

// StdProp:WordBool
  void __fastcall set_AllowPivotTableView(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowPivotTableView(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowPivotChartView(void)
  {
    return GetDefaultInterface()->get_AllowPivotChartView();
  }

// StdProp:WordBool
  void __fastcall set_AllowPivotChartView(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowPivotChartView(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnConnect(void)
  {
    return GetDefaultInterface()->get_OnConnect();
  }

// StdProp:WideString
  void __fastcall set_OnConnect(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnConnect(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDisconnect(void)
  {
    return GetDefaultInterface()->get_OnDisconnect();
  }

// StdProp:WideString
  void __fastcall set_OnDisconnect(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDisconnect(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PivotTableChange(void)
  {
    return GetDefaultInterface()->get_PivotTableChange();
  }

// StdProp:WideString
  void __fastcall set_PivotTableChange(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PivotTableChange(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Query(void)
  {
    return GetDefaultInterface()->get_Query();
  }

// StdProp:WideString
  void __fastcall set_Query(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Query(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeQuery(void)
  {
    return GetDefaultInterface()->get_BeforeQuery();
  }

// StdProp:WideString
  void __fastcall set_BeforeQuery(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeQuery(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SelectionChange(void)
  {
    return GetDefaultInterface()->get_SelectionChange();
  }

// StdProp:WideString
  void __fastcall set_SelectionChange(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelectionChange(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_CommandBeforeExecute(void)
  {
    return GetDefaultInterface()->get_CommandBeforeExecute();
  }

// StdProp:WideString
  void __fastcall set_CommandBeforeExecute(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CommandBeforeExecute(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_CommandChecked(void)
  {
    return GetDefaultInterface()->get_CommandChecked();
  }

// StdProp:WideString
  void __fastcall set_CommandChecked(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CommandChecked(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_CommandEnabled(void)
  {
    return GetDefaultInterface()->get_CommandEnabled();
  }

// StdProp:WideString
  void __fastcall set_CommandEnabled(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CommandEnabled(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_CommandExecute(void)
  {
    return GetDefaultInterface()->get_CommandExecute();
  }

// StdProp:WideString
  void __fastcall set_CommandExecute(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CommandExecute(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_DataSetChange(void)
  {
    return GetDefaultInterface()->get_DataSetChange();
  }

// StdProp:WideString
  void __fastcall set_DataSetChange(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DataSetChange(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeScreenTip(void)
  {
    return GetDefaultInterface()->get_BeforeScreenTip();
  }

// StdProp:WideString
  void __fastcall set_BeforeScreenTip(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeScreenTip(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterFinalRender(void)
  {
    return GetDefaultInterface()->get_AfterFinalRender();
  }

// StdProp:WideString
  void __fastcall set_AfterFinalRender(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterFinalRender(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterRender(void)
  {
    return GetDefaultInterface()->get_AfterRender();
  }

// StdProp:WideString
  void __fastcall set_AfterRender(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterRender(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterLayout(void)
  {
    return GetDefaultInterface()->get_AfterLayout();
  }

// StdProp:WideString
  void __fastcall set_AfterLayout(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterLayout(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeRender(void)
  {
    return GetDefaultInterface()->get_BeforeRender();
  }

// StdProp:WideString
  void __fastcall set_BeforeRender(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeRender(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_MouseWheel(void)
  {
    return GetDefaultInterface()->get_MouseWheel();
  }

// StdProp:WideString
  void __fastcall set_MouseWheel(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MouseWheel(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ViewChange(void)
  {
    return GetDefaultInterface()->get_ViewChange();
  }

// StdProp:WideString
  void __fastcall set_ViewChange(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ViewChange(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_DataChange(void)
  {
    return GetDefaultInterface()->get_DataChange();
  }

// StdProp:WideString
  void __fastcall set_DataChange(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DataChange(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FetchDefaults(void)
  {
    return GetDefaultInterface()->get_FetchDefaults();
  }

// StdProp:WordBool
  void __fastcall set_FetchDefaults(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FetchDefaults(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_BatchUpdates(void)
  {
    return GetDefaultInterface()->get_BatchUpdates();
  }

// StdProp:WordBool
  void __fastcall set_BatchUpdates(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BatchUpdates(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_CommitOnClose(void)
  {
    return GetDefaultInterface()->get_CommitOnClose();
  }

// StdProp:Byte
  void __fastcall set_CommitOnClose(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CommitOnClose(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CommitOnNavigation(void)
  {
    return GetDefaultInterface()->get_CommitOnNavigation();
  }

// StdProp:WordBool
  void __fastcall set_CommitOnNavigation(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CommitOnNavigation(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UseDefaultPrinter(void)
  {
    return GetDefaultInterface()->get_UseDefaultPrinter();
  }

// StdProp:WordBool
  void __fastcall set_UseDefaultPrinter(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_UseDefaultPrinter(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecordSourceQualifier(void)
  {
    return GetDefaultInterface()->get_RecordSourceQualifier();
  }

// StdProp:WideString
  void __fastcall set_RecordSourceQualifier(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSourceQualifier(pRet/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall accSelect(long flagsSelect/*[in]*/, VARIANT varChild/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->accSelect(flagsSelect/*[in]*/, varChild/*[in,opt]*/);
  }

  void __fastcall accLocation(long* pxLeft/*[out]*/, long* pyTop/*[out]*/, long* pcxWidth/*[out]*/, 
                              long* pcyHeight/*[out]*/, VARIANT varChild/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->accLocation(pxLeft/*[out]*/, pyTop/*[out]*/, pcxWidth/*[out]*/, 
                                       pcyHeight/*[out]*/, varChild/*[in,opt]*/);
  }

  TVariant __fastcall accNavigate(long navDir/*[in]*/, VARIANT varStart/*[in,opt]*/)
  {
    return GetDefaultInterface()->accNavigate(navDir/*[in]*/, varStart/*[in,opt]*/);
  }

  TVariant __fastcall accHitTest(long xLeft/*[in]*/, long yTop/*[in]*/)
  {
    return GetDefaultInterface()->accHitTest(xLeft/*[in]*/, yTop/*[in]*/);
  }

  void __fastcall accDoDefaultAction(VARIANT varChild/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->accDoDefaultAction(varChild/*[in,opt]*/);
  }

  void __fastcall Undo(void)
  {
    GetDefaultInterface()->Undo();
  }

  void __fastcall Recalc(void)
  {
    GetDefaultInterface()->Recalc();
  }

  void __fastcall Requery(void)
  {
    GetDefaultInterface()->Requery();
  }

  void __fastcall Refresh(void)
  {
    GetDefaultInterface()->Refresh();
  }

  void __fastcall Repaint(void)
  {
    GetDefaultInterface()->Repaint();
  }

  void __fastcall GoToPage(long PageNumber/*[in]*/, long Right/*[in,def,opt]*/, 
                           long Down/*[in,def,opt]*/)
  {
    GetDefaultInterface()->GoToPage(PageNumber/*[in]*/, Right/*[in,def,opt]*/, Down/*[in,def,opt]*/);
  }

  void __fastcall SetFocus(void)
  {
    GetDefaultInterface()->SetFocus();
  }

  TVariant __fastcall _Evaluate(BSTR bstrExpr/*[in]*/, LPSAFEARRAY* ppsa/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(bstrExpr/*[in]*/, ppsa/*[in]*/);
  }

  void __fastcall Move(VARIANT Left/*[in]*/, VARIANT Top/*[in,opt]*/= TNoParam(), 
                       VARIANT Width/*[in,opt]*/= TNoParam(), VARIANT Height/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Move(Left/*[in]*/, Top/*[in,opt]*/, Width/*[in,opt]*/, Height/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property LPDISPATCH accParent={ read=get_accParent }; // 0, No
  __property long accChildCount={ read=get_accChildCount }; // 0, No
  __property LPDISPATCH accChild[VARIANT varChild]={ read=get_accChild }; // 0, No
  __property BSTR accName[VARIANT varChild]={ read=get_accName }; // 0, No
  __property BSTR accValue[VARIANT varChild]={ read=get_accValue }; // 0, No
  __property BSTR accDescription[VARIANT varChild]={ read=get_accDescription }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant accRole[VARIANT varChild]={ read=get_accRole }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant accState[VARIANT varChild]={ read=get_accState }; // 0, No
  */
  __property BSTR accHelp[VARIANT varChild]={ read=get_accHelp }; // 0, No
  __property long accHelpTopic[BSTR* pszHelpFile][VARIANT varChild]={ read=get_accHelpTopic }; // 0, No
  __property BSTR accKeyboardShortcut[VARIANT varChild]={ read=get_accKeyboardShortcut }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant accFocus={ read=get_accFocus }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant accSelection={ read=get_accSelection }; // 0, No
  */
  __property BSTR accDefaultAction[VARIANT varChild]={ read=get_accDefaultAction }; // 0, No
  __property BSTR FormName={ read=get_FormName }; // 0, No
  __property TOLEBOOL AllowEditing={ read=get_AllowEditing }; // 0, No
  __property short DefaultEditing={ read=get_DefaultEditing }; // 0, No
  __property unsigned_char AllowUpdating={ read=get_AllowUpdating }; // 0, No
  __property TOLEBOOL MinButton={ read=get_MinButton }; // 0, No
  __property TOLEBOOL MaxButton={ read=get_MaxButton }; // 0, No
  __property unsigned_char TabularCharSet={ read=get_TabularCharSet }; // 0, No
  __property TOLEBOOL ShowGrid={ read=get_ShowGrid }; // 0, No
  __property long LogicalPageWidth={ read=get_LogicalPageWidth }; // 0, No
  __property long LogicalPageHeight={ read=get_LogicalPageHeight }; // 0, No
  __property long ZoomControl={ read=get_ZoomControl }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtMip={ read=get_PrtMip }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevMode={ read=get_PrtDevMode }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevNames={ read=get_PrtDevNames }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Bookmark={ read=get_Bookmark }; // 0, No
  */
  __property unsigned_char TabularFamily={ read=get_TabularFamily }; // 0, No
  __property BSTR _Name={ read=get__Name }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PaintPalette={ read=get_PaintPalette }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant OpenArgs={ read=get_OpenArgs }; // 0, No
  */
  __property short ConnectSynch={ read=get_ConnectSynch }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PictureData={ read=get_PictureData }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PicturePalette={ read=get_PicturePalette }; // 0, No
  */
  __property long acHiddenCurrentPage={ read=get_acHiddenCurrentPage }; // 0, No
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property short NewRecord={ read=get_NewRecord }; // 0, No
  __property Access_xp::AccessControlPtr ActiveControl={ read=get_ActiveControl }; // 0, Yes
  __property Access_xp::AccessControlPtr DefaultControl[long ControlType]={ read=get_DefaultControl }; // 0, Yes
  __property LPDISPATCH Dynaset={ read=get_Dynaset }; // 0, No
  __property LPDISPATCH RecordsetClone={ read=get_RecordsetClone }; // 0, No
  __property LPDISPATCH Recordset={ read=get_Recordset }; // 0, No
  __property Access_xp::AccessSectionPtr Section[VARIANT Index]={ read=get_Section }; // 0, Yes
  __property Access_xp::AccessFormPtr Form={ read=get_Form }; // 0, Yes
  __property Access_xp::ModulePtr Module={ read=get_Module }; // 0, Yes
  __property Access_xp::PropertiesPtr Properties={ read=get_Properties }; // 0, Yes
  __property Access_xp::AccessControlPtr ConnectControl={ read=get_ConnectControl }; // 0, Yes
  __property Access_xp::Controls_Ptr Controls={ read=get_Controls }; // 0, Yes
  __property short WindowTop={ read=get_WindowTop }; // 0, No
  __property short WindowLeft={ read=get_WindowLeft }; // 0, No
  __property BSTR OnRecordExit={ read=get_OnRecordExit }; // 0, No
  __property Owc10_xp::PivotTablePtr PivotTable={ read=get_PivotTable }; // 0, Yes
  __property Owc10_xp::ChartSpacePtr ChartSpace={ read=get_ChartSpace }; // 0, Yes
  __property BSTR BeginBatchEdit={ read=get_BeginBatchEdit }; // 0, No
  __property BSTR UndoBatchEdit={ read=get_UndoBatchEdit }; // 0, No
  __property BSTR BeforeBeginTransaction={ read=get_BeforeBeginTransaction }; // 0, No
  __property BSTR AfterBeginTransaction={ read=get_AfterBeginTransaction }; // 0, No
  __property BSTR BeforeCommitTransaction={ read=get_BeforeCommitTransaction }; // 0, No
  __property BSTR AfterCommitTransaction={ read=get_AfterCommitTransaction }; // 0, No
  __property BSTR RollbackTransaction={ read=get_RollbackTransaction }; // 0, No
  __property TOLEBOOL BatchUpdates={ read=get_BatchUpdates }; // 0, No
  __property unsigned_char CommitOnClose={ read=get_CommitOnClose }; // 0, No
  __property TOLEBOOL CommitOnNavigation={ read=get_CommitOnNavigation }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR RecordSource={ read=get_RecordSource, stored=false }; // 0, No
  __property BSTR Filter={ read=get_Filter, stored=false }; // 0, No
  __property TOLEBOOL FilterOn={ read=get_FilterOn, stored=false }; // 0, No
  __property BSTR OrderBy={ read=get_OrderBy, stored=false }; // 0, No
  __property TOLEBOOL OrderByOn={ read=get_OrderByOn, stored=false }; // 0, No
  __property TOLEBOOL AllowFilters={ read=get_AllowFilters, stored=false }; // 0, No
  __property BSTR Caption={ read=get_Caption, stored=false }; // 0, No
  __property unsigned_char DefaultView={ read=get_DefaultView, stored=false }; // 0, No
  __property unsigned_char ViewsAllowed={ read=get_ViewsAllowed, stored=false }; // 0, No
  __property TOLEBOOL AllowEdits={ read=get_AllowEdits, stored=false }; // 0, No
  __property TOLEBOOL AllowDeletions={ read=get_AllowDeletions, stored=false }; // 0, No
  __property TOLEBOOL AllowAdditions={ read=get_AllowAdditions, stored=false }; // 0, No
  __property TOLEBOOL DataEntry={ read=get_DataEntry, stored=false }; // 0, No
  __property unsigned_char RecordsetType={ read=get_RecordsetType, stored=false }; // 0, No
  __property unsigned_char RecordLocks={ read=get_RecordLocks, stored=false }; // 0, No
  __property unsigned_char ScrollBars={ read=get_ScrollBars, stored=false }; // 0, No
  __property TOLEBOOL RecordSelectors={ read=get_RecordSelectors, stored=false }; // 0, No
  __property TOLEBOOL NavigationButtons={ read=get_NavigationButtons, stored=false }; // 0, No
  __property TOLEBOOL DividingLines={ read=get_DividingLines, stored=false }; // 0, No
  __property TOLEBOOL AutoResize={ read=get_AutoResize, stored=false }; // 0, No
  __property TOLEBOOL AutoCenter={ read=get_AutoCenter, stored=false }; // 0, No
  __property TOLEBOOL PopUp={ read=get_PopUp, stored=false }; // 0, No
  __property TOLEBOOL Modal={ read=get_Modal, stored=false }; // 0, No
  __property unsigned_char BorderStyle={ read=get_BorderStyle, stored=false }; // 0, No
  __property TOLEBOOL ControlBox={ read=get_ControlBox, stored=false }; // 0, No
  __property unsigned_char MinMaxButtons={ read=get_MinMaxButtons, stored=false }; // 0, No
  __property TOLEBOOL CloseButton={ read=get_CloseButton, stored=false }; // 0, No
  __property TOLEBOOL WhatsThisButton={ read=get_WhatsThisButton, stored=false }; // 0, No
  __property short Width={ read=get_Width, stored=false }; // 0, No
  __property BSTR Picture={ read=get_Picture, stored=false }; // 0, No
  __property unsigned_char PictureType={ read=get_PictureType, stored=false }; // 0, No
  __property unsigned_char PictureSizeMode={ read=get_PictureSizeMode, stored=false }; // 0, No
  __property unsigned_char PictureAlignment={ read=get_PictureAlignment, stored=false }; // 0, No
  __property TOLEBOOL PictureTiling={ read=get_PictureTiling, stored=false }; // 0, No
  __property unsigned_char Cycle={ read=get_Cycle, stored=false }; // 0, No
  __property BSTR MenuBar={ read=get_MenuBar, stored=false }; // 0, No
  __property BSTR Toolbar={ read=get_Toolbar, stored=false }; // 0, No
  __property TOLEBOOL ShortcutMenu={ read=get_ShortcutMenu, stored=false }; // 0, No
  __property BSTR ShortcutMenuBar={ read=get_ShortcutMenuBar, stored=false }; // 0, No
  __property short GridX={ read=get_GridX, stored=false }; // 0, No
  __property short GridY={ read=get_GridY, stored=false }; // 0, No
  __property TOLEBOOL LayoutForPrint={ read=get_LayoutForPrint, stored=false }; // 0, No
  __property TOLEBOOL FastLaserPrinting={ read=get_FastLaserPrinting, stored=false }; // 0, No
  __property BSTR HelpFile={ read=get_HelpFile, stored=false }; // 0, No
  __property long HelpContextId={ read=get_HelpContextId, stored=false }; // 0, No
  __property short RowHeight={ read=get_RowHeight, stored=false }; // 0, No
  __property BSTR DatasheetFontName={ read=get_DatasheetFontName, stored=false }; // 0, No
  __property short DatasheetFontHeight={ read=get_DatasheetFontHeight, stored=false }; // 0, No
  __property short DatasheetFontWeight={ read=get_DatasheetFontWeight, stored=false }; // 0, No
  __property TOLEBOOL DatasheetFontItalic={ read=get_DatasheetFontItalic, stored=false }; // 0, No
  __property TOLEBOOL DatasheetFontUnderline={ read=get_DatasheetFontUnderline, stored=false }; // 0, No
  __property unsigned_char DatasheetGridlinesBehavior={ read=get_DatasheetGridlinesBehavior, stored=false }; // 0, No
  __property long DatasheetGridlinesColor={ read=get_DatasheetGridlinesColor, stored=false }; // 0, No
  __property unsigned_char DatasheetCellsEffect={ read=get_DatasheetCellsEffect, stored=false }; // 0, No
  __property long DatasheetForeColor={ read=get_DatasheetForeColor, stored=false }; // 0, No
  __property long DatasheetBackColor={ read=get_DatasheetBackColor, stored=false }; // 0, No
  __property long Hwnd={ read=get_Hwnd, stored=false }; // 0, No
  __property short Count={ read=get_Count, stored=false }; // 0, No
  __property long Page={ read=get_Page, stored=false }; // 0, No
  __property short Pages={ read=get_Pages, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL Painting={ read=get_Painting, stored=false }; // 0, No
  __property short FrozenColumns={ read=get_FrozenColumns, stored=false }; // 0, No
  __property BSTR PaletteSource={ read=get_PaletteSource, stored=false }; // 0, No
  __property BSTR Tag={ read=get_Tag, stored=false }; // 0, No
  __property BSTR OnMenu={ read=get_OnMenu, stored=false }; // 0, No
  __property BSTR OnCurrent={ read=get_OnCurrent, stored=false }; // 0, No
  __property BSTR OnInsert={ read=get_OnInsert, stored=false }; // 0, No
  __property BSTR BeforeInsert={ read=get_BeforeInsert, stored=false }; // 0, No
  __property BSTR AfterInsert={ read=get_AfterInsert, stored=false }; // 0, No
  __property BSTR BeforeUpdate={ read=get_BeforeUpdate, stored=false }; // 0, No
  __property BSTR AfterUpdate={ read=get_AfterUpdate, stored=false }; // 0, No
  __property BSTR OnDirty={ read=get_OnDirty, stored=false }; // 0, No
  __property BSTR OnDelete={ read=get_OnDelete, stored=false }; // 0, No
  __property BSTR BeforeDelConfirm={ read=get_BeforeDelConfirm, stored=false }; // 0, No
  __property BSTR AfterDelConfirm={ read=get_AfterDelConfirm, stored=false }; // 0, No
  __property BSTR OnOpen={ read=get_OnOpen, stored=false }; // 0, No
  __property BSTR OnLoad={ read=get_OnLoad, stored=false }; // 0, No
  __property BSTR OnResize={ read=get_OnResize, stored=false }; // 0, No
  __property BSTR OnUnload={ read=get_OnUnload, stored=false }; // 0, No
  __property BSTR OnClose={ read=get_OnClose, stored=false }; // 0, No
  __property BSTR OnActivate={ read=get_OnActivate, stored=false }; // 0, No
  __property BSTR OnDeactivate={ read=get_OnDeactivate, stored=false }; // 0, No
  __property BSTR OnGotFocus={ read=get_OnGotFocus, stored=false }; // 0, No
  __property BSTR OnLostFocus={ read=get_OnLostFocus, stored=false }; // 0, No
  __property BSTR OnClick={ read=get_OnClick, stored=false }; // 0, No
  __property BSTR OnDblClick={ read=get_OnDblClick, stored=false }; // 0, No
  __property BSTR OnMouseDown={ read=get_OnMouseDown, stored=false }; // 0, No
  __property BSTR OnMouseMove={ read=get_OnMouseMove, stored=false }; // 0, No
  __property BSTR OnMouseUp={ read=get_OnMouseUp, stored=false }; // 0, No
  __property BSTR OnKeyDown={ read=get_OnKeyDown, stored=false }; // 0, No
  __property BSTR OnKeyUp={ read=get_OnKeyUp, stored=false }; // 0, No
  __property BSTR OnKeyPress={ read=get_OnKeyPress, stored=false }; // 0, No
  __property TOLEBOOL KeyPreview={ read=get_KeyPreview, stored=false }; // 0, No
  __property BSTR OnError={ read=get_OnError, stored=false }; // 0, No
  __property BSTR OnFilter={ read=get_OnFilter, stored=false }; // 0, No
  __property BSTR OnApplyFilter={ read=get_OnApplyFilter, stored=false }; // 0, No
  __property BSTR OnTimer={ read=get_OnTimer, stored=false }; // 0, No
  __property long TimerInterval={ read=get_TimerInterval, stored=false }; // 0, No
  __property TOLEBOOL Dirty={ read=get_Dirty, stored=false }; // 0, No
  __property short WindowWidth={ read=get_WindowWidth, stored=false }; // 0, No
  __property short WindowHeight={ read=get_WindowHeight, stored=false }; // 0, No
  __property short CurrentView={ read=get_CurrentView, stored=false }; // 0, No
  __property short CurrentSectionTop={ read=get_CurrentSectionTop, stored=false }; // 0, No
  __property short CurrentSectionLeft={ read=get_CurrentSectionLeft, stored=false }; // 0, No
  __property long SelLeft={ read=get_SelLeft, stored=false }; // 0, No
  __property long SelTop={ read=get_SelTop, stored=false }; // 0, No
  __property long SelWidth={ read=get_SelWidth, stored=false }; // 0, No
  __property long SelHeight={ read=get_SelHeight, stored=false }; // 0, No
  __property long CurrentRecord={ read=get_CurrentRecord, stored=false }; // 0, No
  __property long InsideHeight={ read=get_InsideHeight, stored=false }; // 0, No
  __property long InsideWidth={ read=get_InsideWidth, stored=false }; // 0, No
  __property TOLEBOOL HasModule={ read=get_HasModule, stored=false }; // 0, No
  __property unsigned_char Orientation={ read=get_Orientation, stored=false }; // 0, No
  __property TOLEBOOL AllowDesignChanges={ read=get_AllowDesignChanges, stored=false }; // 0, No
  __property BSTR ServerFilter={ read=get_ServerFilter, stored=false }; // 0, No
  __property TOLEBOOL ServerFilterByForm={ read=get_ServerFilterByForm, stored=false }; // 0, No
  __property long MaxRecords={ read=get_MaxRecords, stored=false }; // 0, No
  __property BSTR UniqueTable={ read=get_UniqueTable, stored=false }; // 0, No
  __property BSTR ResyncCommand={ read=get_ResyncCommand, stored=false }; // 0, No
  __property BSTR InputParameters={ read=get_InputParameters, stored=false }; // 0, No
  __property TOLEBOOL MaxRecButton={ read=get_MaxRecButton, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property short SubdatasheetHeight={ read=get_SubdatasheetHeight, stored=false }; // 0, No
  __property TOLEBOOL SubdatasheetExpanded={ read=get_SubdatasheetExpanded, stored=false }; // 0, No
  __property unsigned_char DatasheetBorderLineStyle={ read=get_DatasheetBorderLineStyle, stored=false }; // 0, No
  __property unsigned_char DatasheetColumnHeaderUnderlineStyle={ read=get_DatasheetColumnHeaderUnderlineStyle, stored=false }; // 0, No
  __property unsigned_char HorizontalDatasheetGridlineStyle={ read=get_HorizontalDatasheetGridlineStyle, stored=false }; // 0, No
  __property unsigned_char VerticalDatasheetGridlineStyle={ read=get_VerticalDatasheetGridlineStyle, stored=false }; // 0, No
  __property BSTR OnUndo={ read=get_OnUndo, stored=false }; // 0, No
  __property Access_xp::_PrinterPtr Printer={ read=get_Printer, stored=false }; // 0, Yes
  __property TOLEBOOL Moveable={ read=get_Moveable, stored=false }; // 0, No
  __property TOLEBOOL AllowFormView={ read=get_AllowFormView, stored=false }; // 0, No
  __property TOLEBOOL AllowDatasheetView={ read=get_AllowDatasheetView, stored=false }; // 0, No
  __property TOLEBOOL AllowPivotTableView={ read=get_AllowPivotTableView, stored=false }; // 0, No
  __property TOLEBOOL AllowPivotChartView={ read=get_AllowPivotChartView, stored=false }; // 0, No
  __property BSTR OnConnect={ read=get_OnConnect, stored=false }; // 0, No
  __property BSTR OnDisconnect={ read=get_OnDisconnect, stored=false }; // 0, No
  __property BSTR PivotTableChange={ read=get_PivotTableChange, stored=false }; // 0, No
  __property BSTR Query={ read=get_Query, stored=false }; // 0, No
  __property BSTR BeforeQuery={ read=get_BeforeQuery, stored=false }; // 0, No
  __property BSTR SelectionChange={ read=get_SelectionChange, stored=false }; // 0, No
  __property BSTR CommandBeforeExecute={ read=get_CommandBeforeExecute, stored=false }; // 0, No
  __property BSTR CommandChecked={ read=get_CommandChecked, stored=false }; // 0, No
  __property BSTR CommandEnabled={ read=get_CommandEnabled, stored=false }; // 0, No
  __property BSTR CommandExecute={ read=get_CommandExecute, stored=false }; // 0, No
  __property BSTR DataSetChange={ read=get_DataSetChange, stored=false }; // 0, No
  __property BSTR BeforeScreenTip={ read=get_BeforeScreenTip, stored=false }; // 0, No
  __property BSTR AfterFinalRender={ read=get_AfterFinalRender, stored=false }; // 0, No
  __property BSTR AfterRender={ read=get_AfterRender, stored=false }; // 0, No
  __property BSTR AfterLayout={ read=get_AfterLayout, stored=false }; // 0, No
  __property BSTR BeforeRender={ read=get_BeforeRender, stored=false }; // 0, No
  __property BSTR MouseWheel={ read=get_MouseWheel, stored=false }; // 0, No
  __property BSTR ViewChange={ read=get_ViewChange, stored=false }; // 0, No
  __property BSTR DataChange={ read=get_DataChange, stored=false }; // 0, No
  __property TOLEBOOL FetchDefaults={ read=get_FetchDefaults, stored=false }; // 0, No
  __property TOLEBOOL UseDefaultPrinter={ read=get_UseDefaultPrinter, stored=false }; // 0, No
  __property BSTR RecordSourceQualifier={ read=get_RecordSourceQualifier, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnLoad1;
  TNotifyEvent                   FOnCurrent1;
  TAccessFormBeforeInsert        FOnBeforeInsert;
  TNotifyEvent                   FOnAfterInsert;
  TAccessFormBeforeUpdate        FOnBeforeUpdate;
  TNotifyEvent                   FOnAfterUpdate;
  TAccessFormDelete              FOnDelete1;
  TAccessFormBeforeDelConfirm    FOnBeforeDelConfirm;
  TAccessFormAfterDelConfirm     FOnAfterDelConfirm;
  TAccessFormOpen                FOnOpen1;
  TNotifyEvent                   FOnResize1;
  TAccessFormUnload              FOnUnload1;
  TNotifyEvent                   FOnClose1;
  TNotifyEvent                   FOnActivate1;
  TNotifyEvent                   FOnDeactivate1;
  TNotifyEvent                   FOnGotFocus1;
  TNotifyEvent                   FOnLostFocus1;
  TNotifyEvent                   FOnClick1;
  TAccessFormDblClick            FOnDblClick1;
  TAccessFormMouseDown           FOnMouseDown1;
  TAccessFormMouseMove           FOnMouseMove1;
  TAccessFormMouseUp             FOnMouseUp1;
  TAccessFormKeyDown             FOnKeyDown1;
  TAccessFormKeyPress            FOnKeyPress1;
  TAccessFormKeyUp               FOnKeyUp1;
  TAccessFormError               FOnError1;
  TNotifyEvent                   FOnTimer1;
  TAccessFormFilter              FOnFilter1;
  TAccessFormApplyFilter         FOnApplyFilter1;
  TAccessFormDirty               FOnDirty1;
  TAccessFormUndo                FOnUndo1;
  TAccessFormRecordExit          FOnRecordExit1;
  TAccessFormBeginBatchEdit      FOnBeginBatchEdit;
  TAccessFormUndoBatchEdit       FOnUndoBatchEdit;
  TAccessFormBeforeBeginTransaction FOnBeforeBeginTransaction;
  TAccessFormAfterBeginTransaction FOnAfterBeginTransaction;
  TAccessFormBeforeCommitTransaction FOnBeforeCommitTransaction;
  TAccessFormAfterCommitTransaction FOnAfterCommitTransaction;
  TAccessFormRollbackTransaction FOnRollbackTransaction;
  TNotifyEvent                   FOnConnect1;
  TNotifyEvent                   FOnDisconnect1;
  TAccessFormPivotTableChange    FOnPivotTableChange;
  TNotifyEvent                   FOnQuery;
  TNotifyEvent                   FOnBeforeQuery;
  TNotifyEvent                   FOnSelectionChange;
  TAccessFormCommandBeforeExecute FOnCommandBeforeExecute;
  TAccessFormCommandChecked      FOnCommandChecked;
  TAccessFormCommandEnabled      FOnCommandEnabled;
  TAccessFormCommandExecute      FOnCommandExecute;
  TNotifyEvent                   FOnDataSetChange;
  TAccessFormBeforeScreenTip     FOnBeforeScreenTip;
  TAccessFormBeforeRender        FOnBeforeRender;
  TAccessFormAfterRender         FOnAfterRender;
  TAccessFormAfterFinalRender    FOnAfterFinalRender;
  TAccessFormAfterLayout         FOnAfterLayout;
  TAccessFormMouseWheel          FOnMouseWheel;
  TAccessFormViewChange          FOnViewChange;
  TAccessFormDataChange          FOnDataChange;
__published:
  __property TNotifyEvent OnLoad1={ read=FOnLoad1, write=FOnLoad1 };
  __property TNotifyEvent OnCurrent1={ read=FOnCurrent1, write=FOnCurrent1 };
  __property TAccessFormBeforeInsert OnBeforeInsert={ read=FOnBeforeInsert, write=FOnBeforeInsert };
  __property TNotifyEvent OnAfterInsert={ read=FOnAfterInsert, write=FOnAfterInsert };
  __property TAccessFormBeforeUpdate OnBeforeUpdate={ read=FOnBeforeUpdate, write=FOnBeforeUpdate };
  __property TNotifyEvent OnAfterUpdate={ read=FOnAfterUpdate, write=FOnAfterUpdate };
  __property TAccessFormDelete OnDelete1={ read=FOnDelete1, write=FOnDelete1 };
  __property TAccessFormBeforeDelConfirm OnBeforeDelConfirm={ read=FOnBeforeDelConfirm, write=FOnBeforeDelConfirm };
  __property TAccessFormAfterDelConfirm OnAfterDelConfirm={ read=FOnAfterDelConfirm, write=FOnAfterDelConfirm };
  __property TAccessFormOpen OnOpen1={ read=FOnOpen1, write=FOnOpen1 };
  __property TNotifyEvent OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TAccessFormUnload OnUnload1={ read=FOnUnload1, write=FOnUnload1 };
  __property TNotifyEvent OnClose1={ read=FOnClose1, write=FOnClose1 };
  __property TNotifyEvent OnActivate1={ read=FOnActivate1, write=FOnActivate1 };
  __property TNotifyEvent OnDeactivate1={ read=FOnDeactivate1, write=FOnDeactivate1 };
  __property TNotifyEvent OnGotFocus1={ read=FOnGotFocus1, write=FOnGotFocus1 };
  __property TNotifyEvent OnLostFocus1={ read=FOnLostFocus1, write=FOnLostFocus1 };
  __property TNotifyEvent OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TAccessFormDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TAccessFormMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TAccessFormMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TAccessFormMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TAccessFormKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TAccessFormKeyPress OnKeyPress1={ read=FOnKeyPress1, write=FOnKeyPress1 };
  __property TAccessFormKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TAccessFormError OnError1={ read=FOnError1, write=FOnError1 };
  __property TNotifyEvent OnTimer1={ read=FOnTimer1, write=FOnTimer1 };
  __property TAccessFormFilter OnFilter1={ read=FOnFilter1, write=FOnFilter1 };
  __property TAccessFormApplyFilter OnApplyFilter1={ read=FOnApplyFilter1, write=FOnApplyFilter1 };
  __property TAccessFormDirty OnDirty1={ read=FOnDirty1, write=FOnDirty1 };
  __property TAccessFormUndo OnUndo1={ read=FOnUndo1, write=FOnUndo1 };
  __property TAccessFormRecordExit OnRecordExit1={ read=FOnRecordExit1, write=FOnRecordExit1 };
  __property TAccessFormBeginBatchEdit OnBeginBatchEdit={ read=FOnBeginBatchEdit, write=FOnBeginBatchEdit };
  __property TAccessFormUndoBatchEdit OnUndoBatchEdit={ read=FOnUndoBatchEdit, write=FOnUndoBatchEdit };
  __property TAccessFormBeforeBeginTransaction OnBeforeBeginTransaction={ read=FOnBeforeBeginTransaction, write=FOnBeforeBeginTransaction };
  __property TAccessFormAfterBeginTransaction OnAfterBeginTransaction={ read=FOnAfterBeginTransaction, write=FOnAfterBeginTransaction };
  __property TAccessFormBeforeCommitTransaction OnBeforeCommitTransaction={ read=FOnBeforeCommitTransaction, write=FOnBeforeCommitTransaction };
  __property TAccessFormAfterCommitTransaction OnAfterCommitTransaction={ read=FOnAfterCommitTransaction, write=FOnAfterCommitTransaction };
  __property TAccessFormRollbackTransaction OnRollbackTransaction={ read=FOnRollbackTransaction, write=FOnRollbackTransaction };
  __property TNotifyEvent OnConnect1={ read=FOnConnect1, write=FOnConnect1 };
  __property TNotifyEvent OnDisconnect1={ read=FOnDisconnect1, write=FOnDisconnect1 };
  __property TAccessFormPivotTableChange OnPivotTableChange={ read=FOnPivotTableChange, write=FOnPivotTableChange };
  __property TNotifyEvent OnQuery={ read=FOnQuery, write=FOnQuery };
  __property TNotifyEvent OnBeforeQuery={ read=FOnBeforeQuery, write=FOnBeforeQuery };
  __property TNotifyEvent OnSelectionChange={ read=FOnSelectionChange, write=FOnSelectionChange };
  __property TAccessFormCommandBeforeExecute OnCommandBeforeExecute={ read=FOnCommandBeforeExecute, write=FOnCommandBeforeExecute };
  __property TAccessFormCommandChecked OnCommandChecked={ read=FOnCommandChecked, write=FOnCommandChecked };
  __property TAccessFormCommandEnabled OnCommandEnabled={ read=FOnCommandEnabled, write=FOnCommandEnabled };
  __property TAccessFormCommandExecute OnCommandExecute={ read=FOnCommandExecute, write=FOnCommandExecute };
  __property TNotifyEvent OnDataSetChange={ read=FOnDataSetChange, write=FOnDataSetChange };
  __property TAccessFormBeforeScreenTip OnBeforeScreenTip={ read=FOnBeforeScreenTip, write=FOnBeforeScreenTip };
  __property TAccessFormBeforeRender OnBeforeRender={ read=FOnBeforeRender, write=FOnBeforeRender };
  __property TAccessFormAfterRender OnAfterRender={ read=FOnAfterRender, write=FOnAfterRender };
  __property TAccessFormAfterFinalRender OnAfterFinalRender={ read=FOnAfterFinalRender, write=FOnAfterFinalRender };
  __property TAccessFormAfterLayout OnAfterLayout={ read=FOnAfterLayout, write=FOnAfterLayout };
  __property TAccessFormMouseWheel OnMouseWheel={ read=FOnMouseWheel, write=FOnMouseWheel };
  __property TAccessFormViewChange OnViewChange={ read=FOnViewChange, write=FOnViewChange };
  __property TAccessFormDataChange OnDataChange={ read=FOnDataChange, write=FOnDataChange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessReport
// Help String      : 
// Default Interface: _Report2
// Def. Intf. Object: _Report2Ptr
// Def. Intf. DISP? : No
// Event   Interface: _ReportEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TAccessReportOpen)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessReportError)(System::TObject * Sender, 
                                                         short* DataErr/*[in,out]*/, 
                                                         short* Response/*[out]*/);
typedef void __fastcall (__closure * TAccessReportNoData)(System::TObject * Sender, 
                                                          short* Cancel/*[out]*/);

class PACKAGE TAccessReport : public Oleserver::TOleServer
{
  _Report2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessReport(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _Report2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_Report2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get_FormName(void)
  {
    return GetDefaultInterface()->get_FormName();
  }

// StdProp:WideString
  void __fastcall set_FormName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FormName(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecordSource(void)
  {
    return GetDefaultInterface()->get_RecordSource();
  }

// StdProp:WideString
  void __fastcall set_RecordSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Filter(void)
  {
    return GetDefaultInterface()->get_Filter();
  }

// StdProp:WideString
  void __fastcall set_Filter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Filter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FilterOn(void)
  {
    return GetDefaultInterface()->get_FilterOn();
  }

// StdProp:WordBool
  void __fastcall set_FilterOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FilterOn(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OrderBy(void)
  {
    return GetDefaultInterface()->get_OrderBy();
  }

// StdProp:WideString
  void __fastcall set_OrderBy(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderBy(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OrderByOn(void)
  {
    return GetDefaultInterface()->get_OrderByOn();
  }

// StdProp:WordBool
  void __fastcall set_OrderByOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderByOn(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ServerFilter(void)
  {
    return GetDefaultInterface()->get_ServerFilter();
  }

// StdProp:WideString
  void __fastcall set_ServerFilter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ServerFilter(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

// StdProp:WideString
  void __fastcall set_Caption(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_RecordLocks(void)
  {
    return GetDefaultInterface()->get_RecordLocks();
  }

// StdProp:Byte
  void __fastcall set_RecordLocks(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordLocks(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PageHeader(void)
  {
    return GetDefaultInterface()->get_PageHeader();
  }

// StdProp:Byte
  void __fastcall set_PageHeader(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PageHeader(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PageFooter(void)
  {
    return GetDefaultInterface()->get_PageFooter();
  }

// StdProp:Byte
  void __fastcall set_PageFooter(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PageFooter(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DateGrouping(void)
  {
    return GetDefaultInterface()->get_DateGrouping();
  }

// StdProp:Byte
  void __fastcall set_DateGrouping(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DateGrouping(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_GrpKeepTogether(void)
  {
    return GetDefaultInterface()->get_GrpKeepTogether();
  }

// StdProp:Byte
  void __fastcall set_GrpKeepTogether(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GrpKeepTogether(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MinButton(void)
  {
    return GetDefaultInterface()->get_MinButton();
  }

// StdProp:WordBool
  void __fastcall set_MinButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinButton(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MaxButton(void)
  {
    return GetDefaultInterface()->get_MaxButton();
  }

// StdProp:WordBool
  void __fastcall set_MaxButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MaxButton(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

// StdProp:Smallint
  void __fastcall set_Width(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Width(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Picture(void)
  {
    return GetDefaultInterface()->get_Picture();
  }

// StdProp:WideString
  void __fastcall set_Picture(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Picture(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureType(void)
  {
    return GetDefaultInterface()->get_PictureType();
  }

// StdProp:Byte
  void __fastcall set_PictureType(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureType(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureSizeMode(void)
  {
    return GetDefaultInterface()->get_PictureSizeMode();
  }

// StdProp:Byte
  void __fastcall set_PictureSizeMode(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureSizeMode(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureAlignment(void)
  {
    return GetDefaultInterface()->get_PictureAlignment();
  }

// StdProp:Byte
  void __fastcall set_PictureAlignment(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureAlignment(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PictureTiling(void)
  {
    return GetDefaultInterface()->get_PictureTiling();
  }

// StdProp:WordBool
  void __fastcall set_PictureTiling(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureTiling(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PicturePages(void)
  {
    return GetDefaultInterface()->get_PicturePages();
  }

// StdProp:Byte
  void __fastcall set_PicturePages(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PicturePages(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

// StdProp:WideString
  void __fastcall set_MenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Toolbar(void)
  {
    return GetDefaultInterface()->get_Toolbar();
  }

// StdProp:WideString
  void __fastcall set_Toolbar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Toolbar(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ShortcutMenuBar(void)
  {
    return GetDefaultInterface()->get_ShortcutMenuBar();
  }

// StdProp:WideString
  void __fastcall set_ShortcutMenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenuBar(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridX(void)
  {
    return GetDefaultInterface()->get_GridX();
  }

// StdProp:Smallint
  void __fastcall set_GridX(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridX(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridY(void)
  {
    return GetDefaultInterface()->get_GridY();
  }

// StdProp:Smallint
  void __fastcall set_GridY(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridY(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_LayoutForPrint(void)
  {
    return GetDefaultInterface()->get_LayoutForPrint();
  }

// StdProp:WordBool
  void __fastcall set_LayoutForPrint(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LayoutForPrint(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FastLaserPrinting(void)
  {
    return GetDefaultInterface()->get_FastLaserPrinting();
  }

// StdProp:WordBool
  void __fastcall set_FastLaserPrinting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FastLaserPrinting(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_HelpFile(void)
  {
    return GetDefaultInterface()->get_HelpFile();
  }

// StdProp:WideString
  void __fastcall set_HelpFile(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpFile(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HelpContextId(void)
  {
    return GetDefaultInterface()->get_HelpContextId();
  }

// StdProp:Integer
  void __fastcall set_HelpContextId(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpContextId(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Hwnd(void)
  {
    return GetDefaultInterface()->get_Hwnd();
  }

// StdProp:Integer
  void __fastcall set_Hwnd(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Hwnd(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

// StdProp:Smallint
  void __fastcall set_Count(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Count(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Page(void)
  {
    return GetDefaultInterface()->get_Page();
  }

// StdProp:Integer
  void __fastcall set_Page(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Page(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Pages(void)
  {
    return GetDefaultInterface()->get_Pages();
  }

// StdProp:Smallint
  void __fastcall set_Pages(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Pages(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageWidth(void)
  {
    return GetDefaultInterface()->get_LogicalPageWidth();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageHeight(void)
  {
    return GetDefaultInterface()->get_LogicalPageHeight();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ZoomControl(void)
  {
    return GetDefaultInterface()->get_ZoomControl();
  }

// StdProp:Integer
  void __fastcall set_ZoomControl(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ZoomControl(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HasData(void)
  {
    return GetDefaultInterface()->get_HasData();
  }

// StdProp:Integer
  void __fastcall set_HasData(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HasData(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

// StdProp:Integer
  void __fastcall set_Left(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Left(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

// StdProp:Integer
  void __fastcall set_Top(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Top(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

// StdProp:Integer
  void __fastcall set_Height(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Height(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintSection(void)
  {
    return GetDefaultInterface()->get_PrintSection();
  }

// StdProp:WordBool
  void __fastcall set_PrintSection(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrintSection(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_NextRecord(void)
  {
    return GetDefaultInterface()->get_NextRecord();
  }

// StdProp:WordBool
  void __fastcall set_NextRecord(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_NextRecord(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MoveLayout(void)
  {
    return GetDefaultInterface()->get_MoveLayout();
  }

// StdProp:WordBool
  void __fastcall set_MoveLayout(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MoveLayout(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FormatCount(void)
  {
    return GetDefaultInterface()->get_FormatCount();
  }

// StdProp:Smallint
  void __fastcall set_FormatCount(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FormatCount(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_PrintCount(void)
  {
    return GetDefaultInterface()->get_PrintCount();
  }

// StdProp:Smallint
  void __fastcall set_PrintCount(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrintCount(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Painting(void)
  {
    return GetDefaultInterface()->get_Painting();
  }

// StdProp:WordBool
  void __fastcall set_Painting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Painting(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtMip(void)
  {
    return GetDefaultInterface()->get_PrtMip();
  }

// StdProp:OleVariant
  void __fastcall set_PrtMip(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtMip(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevMode(void)
  {
    return GetDefaultInterface()->get_PrtDevMode();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevMode(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevMode(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevNames(void)
  {
    return GetDefaultInterface()->get_PrtDevNames();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevNames(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevNames(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ForeColor(void)
  {
    return GetDefaultInterface()->get_ForeColor();
  }

// StdProp:Integer
  void __fastcall set_ForeColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ForeColor(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CurrentX(void)
  {
    return GetDefaultInterface()->get_CurrentX();
  }

// StdProp:Single
  void __fastcall set_CurrentX(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentX(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CurrentY(void)
  {
    return GetDefaultInterface()->get_CurrentY();
  }

// StdProp:Single
  void __fastcall set_CurrentY(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentY(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleHeight(void)
  {
    return GetDefaultInterface()->get_ScaleHeight();
  }

// StdProp:Single
  void __fastcall set_ScaleHeight(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleHeight(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleLeft(void)
  {
    return GetDefaultInterface()->get_ScaleLeft();
  }

// StdProp:Single
  void __fastcall set_ScaleLeft(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleLeft(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_ScaleMode(void)
  {
    return GetDefaultInterface()->get_ScaleMode();
  }

// StdProp:Smallint
  void __fastcall set_ScaleMode(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleMode(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleTop(void)
  {
    return GetDefaultInterface()->get_ScaleTop();
  }

// StdProp:Single
  void __fastcall set_ScaleTop(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleTop(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleWidth(void)
  {
    return GetDefaultInterface()->get_ScaleWidth();
  }

// StdProp:Single
  void __fastcall set_ScaleWidth(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleWidth(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontBold(void)
  {
    return GetDefaultInterface()->get_FontBold();
  }

// StdProp:Smallint
  void __fastcall set_FontBold(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontBold(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontItalic(void)
  {
    return GetDefaultInterface()->get_FontItalic();
  }

// StdProp:Smallint
  void __fastcall set_FontItalic(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontItalic(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_FontName(void)
  {
    return GetDefaultInterface()->get_FontName();
  }

// StdProp:WideString
  void __fastcall set_FontName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontName(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontSize(void)
  {
    return GetDefaultInterface()->get_FontSize();
  }

// StdProp:Smallint
  void __fastcall set_FontSize(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontSize(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontUnderline(void)
  {
    return GetDefaultInterface()->get_FontUnderline();
  }

// StdProp:Smallint
  void __fastcall set_FontUnderline(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontUnderline(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DrawMode(void)
  {
    return GetDefaultInterface()->get_DrawMode();
  }

// StdProp:Smallint
  void __fastcall set_DrawMode(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DrawMode(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DrawStyle(void)
  {
    return GetDefaultInterface()->get_DrawStyle();
  }

// StdProp:Smallint
  void __fastcall set_DrawStyle(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DrawStyle(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DrawWidth(void)
  {
    return GetDefaultInterface()->get_DrawWidth();
  }

// StdProp:Smallint
  void __fastcall set_DrawWidth(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DrawWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_FillColor(void)
  {
    return GetDefaultInterface()->get_FillColor();
  }

// StdProp:Integer
  void __fastcall set_FillColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FillColor(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FillStyle(void)
  {
    return GetDefaultInterface()->get_FillStyle();
  }

// StdProp:Smallint
  void __fastcall set_FillStyle(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FillStyle(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get__Name(void)
  {
    return GetDefaultInterface()->get__Name();
  }

// StdProp:WideString
  void __fastcall set__Name(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set__Name(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PaletteSource(void)
  {
    return GetDefaultInterface()->get_PaletteSource();
  }

// StdProp:WideString
  void __fastcall set_PaletteSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaletteSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Tag(void)
  {
    return GetDefaultInterface()->get_Tag();
  }

// StdProp:WideString
  void __fastcall set_Tag(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Tag(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PaintPalette(void)
  {
    return GetDefaultInterface()->get_PaintPalette();
  }

// StdProp:OleVariant
  void __fastcall set_PaintPalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaintPalette(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMenu(void)
  {
    return GetDefaultInterface()->get_OnMenu();
  }

// StdProp:WideString
  void __fastcall set_OnMenu(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMenu(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnOpen(void)
  {
    return GetDefaultInterface()->get_OnOpen();
  }

// StdProp:WideString
  void __fastcall set_OnOpen(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnOpen(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnClose(void)
  {
    return GetDefaultInterface()->get_OnClose();
  }

// StdProp:WideString
  void __fastcall set_OnClose(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnClose(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnActivate(void)
  {
    return GetDefaultInterface()->get_OnActivate();
  }

// StdProp:WideString
  void __fastcall set_OnActivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnActivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDeactivate(void)
  {
    return GetDefaultInterface()->get_OnDeactivate();
  }

// StdProp:WideString
  void __fastcall set_OnDeactivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDeactivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnNoData(void)
  {
    return GetDefaultInterface()->get_OnNoData();
  }

// StdProp:WideString
  void __fastcall set_OnNoData(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnNoData(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnPage(void)
  {
    return GetDefaultInterface()->get_OnPage();
  }

// StdProp:WideString
  void __fastcall set_OnPage(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnPage(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnError(void)
  {
    return GetDefaultInterface()->get_OnError();
  }

// StdProp:WideString
  void __fastcall set_OnError(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnError(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Dirty(void)
  {
    return GetDefaultInterface()->get_Dirty();
  }

// StdProp:WordBool
  void __fastcall set_Dirty(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Dirty(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CurrentRecord(void)
  {
    return GetDefaultInterface()->get_CurrentRecord();
  }

// StdProp:Integer
  void __fastcall set_CurrentRecord(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentRecord(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PictureData(void)
  {
    return GetDefaultInterface()->get_PictureData();
  }

// StdProp:OleVariant
  void __fastcall set_PictureData(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureData(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PicturePalette(void)
  {
    return GetDefaultInterface()->get_PicturePalette();
  }

// StdProp:OleVariant
  void __fastcall set_PicturePalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PicturePalette(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasModule(void)
  {
    return GetDefaultInterface()->get_HasModule();
  }

// StdProp:WordBool
  void __fastcall set_HasModule(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HasModule(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_acHiddenCurrentPage(void)
  {
    return GetDefaultInterface()->get_acHiddenCurrentPage();
  }

// StdProp:Integer
  void __fastcall set_acHiddenCurrentPage(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_acHiddenCurrentPage(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_Orientation(void)
  {
    return GetDefaultInterface()->get_Orientation();
  }

// StdProp:Byte
  void __fastcall set_Orientation(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Orientation(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_InputParameters(void)
  {
    return GetDefaultInterface()->get_InputParameters();
  }

// StdProp:WideString
  void __fastcall set_InputParameters(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_InputParameters(pRet/*[in]*/);
  }

// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessControlPtr __fastcall get_ActiveControl(void)
  {
    return GetDefaultInterface()->get_ActiveControl();
  }

// StdProp:
  Access_xp::AccessControlPtr __fastcall get_DefaultControl(long ControlType/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultControl(ControlType/*[in]*/);
  }

// StdProp:
  Access_xp::AccessSectionPtr __fastcall get_Section(VARIANT Index/*[in]*/)
  {
    return GetDefaultInterface()->get_Section(Index/*[in]*/);
  }

// StdProp:
  Access_xp::AccessGroupLevelPtr __fastcall get_GroupLevel(long Index/*[in]*/)
  {
    return GetDefaultInterface()->get_GroupLevel(Index/*[in]*/);
  }

// StdProp:
  Access_xp::AccessReportPtr __fastcall get_Report(void)
  {
    return GetDefaultInterface()->get_Report();
  }

// StdProp:
  Access_xp::ModulePtr __fastcall get_Module(void)
  {
    return GetDefaultInterface()->get_Module();
  }

// StdProp:
  Access_xp::PropertiesPtr __fastcall get_Properties(void)
  {
    return GetDefaultInterface()->get_Properties();
  }

// StdProp:
  Access_xp::Controls_Ptr __fastcall get_Controls(void)
  {
    return GetDefaultInterface()->get_Controls();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR pbstrName/*[in]*/)
  {
    GetDefaultInterface()->set_Name(pbstrName/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoResize(void)
  {
    return GetDefaultInterface()->get_AutoResize();
  }

// StdProp:WordBool
  void __fastcall set_AutoResize(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AutoResize(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoCenter(void)
  {
    return GetDefaultInterface()->get_AutoCenter();
  }

// StdProp:WordBool
  void __fastcall set_AutoCenter(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AutoCenter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PopUp(void)
  {
    return GetDefaultInterface()->get_PopUp();
  }

// StdProp:WordBool
  void __fastcall set_PopUp(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PopUp(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Modal(void)
  {
    return GetDefaultInterface()->get_Modal();
  }

// StdProp:WordBool
  void __fastcall set_Modal(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Modal(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_BorderStyle(void)
  {
    return GetDefaultInterface()->get_BorderStyle();
  }

// StdProp:Byte
  void __fastcall set_BorderStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BorderStyle(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ControlBox(void)
  {
    return GetDefaultInterface()->get_ControlBox();
  }

// StdProp:WordBool
  void __fastcall set_ControlBox(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ControlBox(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_MinMaxButtons(void)
  {
    return GetDefaultInterface()->get_MinMaxButtons();
  }

// StdProp:Byte
  void __fastcall set_MinMaxButtons(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinMaxButtons(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CloseButton(void)
  {
    return GetDefaultInterface()->get_CloseButton();
  }

// StdProp:WordBool
  void __fastcall set_CloseButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CloseButton(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowWidth(void)
  {
    return GetDefaultInterface()->get_WindowWidth();
  }

// StdProp:Smallint
  void __fastcall set_WindowWidth(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WindowWidth(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowHeight(void)
  {
    return GetDefaultInterface()->get_WindowHeight();
  }

// StdProp:Smallint
  void __fastcall set_WindowHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WindowHeight(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowTop(void)
  {
    return GetDefaultInterface()->get_WindowTop();
  }

// StdProp:Smallint
  short __fastcall get_WindowLeft(void)
  {
    return GetDefaultInterface()->get_WindowLeft();
  }

// StdProp:OleVariant
  TVariant __fastcall get_OpenArgs(void)
  {
    return GetDefaultInterface()->get_OpenArgs();
  }

// StdProp:OleVariant
  void __fastcall set_OpenArgs(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OpenArgs(pRet/*[in]*/);
  }

// StdProp:
  Access_xp::_PrinterPtr __fastcall get_Printer(void)
  {
    return GetDefaultInterface()->get_Printer();
  }

// StdProp:
  void __fastcall set_Printer(Access_xp::_Printer* pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Printer(pRet/*[in]*/);
  }

// StdProp:
  void __fastcall _set_Printer(Access_xp::_Printer* pRet/*[in]*/)
  {
    GetDefaultInterface()->_set_Printer(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Moveable(void)
  {
    return GetDefaultInterface()->get_Moveable();
  }

// StdProp:WordBool
  void __fastcall set_Moveable(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Moveable(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UseDefaultPrinter(void)
  {
    return GetDefaultInterface()->get_UseDefaultPrinter();
  }

// StdProp:WordBool
  void __fastcall set_UseDefaultPrinter(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_UseDefaultPrinter(pRet/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Recordset(void)
  {
    return GetDefaultInterface()->get_Recordset();
  }

// StdProp:IDispatch
  void __fastcall _set_Recordset(LPDISPATCH pRet/*[in]*/)
  {
    GetDefaultInterface()->_set_Recordset(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecordSourceQualifier(void)
  {
    return GetDefaultInterface()->get_RecordSourceQualifier();
  }

// StdProp:WideString
  void __fastcall set_RecordSourceQualifier(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSourceQualifier(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Shape(void)
  {
    return GetDefaultInterface()->get_Shape();
  }

  /*CoClassWriteMethods*/
  void __fastcall Circle(short flags/*[in]*/, float X/*[in]*/, float Y/*[in]*/, float radius/*[in]*/, 
                         long color/*[in]*/, float start/*[in]*/, float end/*[in]*/, 
                         float aspect/*[in]*/)
  {
    GetDefaultInterface()->Circle(flags/*[in]*/, X/*[in]*/, Y/*[in]*/, radius/*[in]*/, color/*[in]*/, 
                                  start/*[in]*/, end/*[in]*/, aspect/*[in]*/);
  }

  void __fastcall Line(short flags/*[in]*/, float x1/*[in]*/, float y1/*[in]*/, float x2/*[in]*/, 
                       float y2/*[in]*/, long color/*[in]*/)
  {
    GetDefaultInterface()->Line(flags/*[in]*/, x1/*[in]*/, y1/*[in]*/, x2/*[in]*/, y2/*[in]*/, 
                                color/*[in]*/);
  }

  void __fastcall PSet(short flags/*[in]*/, float X/*[in]*/, float Y/*[in]*/, long color/*[in]*/)
  {
    GetDefaultInterface()->PSet(flags/*[in]*/, X/*[in]*/, Y/*[in]*/, color/*[in]*/);
  }

  void __fastcall Scale(short flags/*[in]*/, float x1/*[in]*/, float y1/*[in]*/, float x2/*[in]*/, 
                        float y2/*[in]*/)
  {
    GetDefaultInterface()->Scale(flags/*[in]*/, x1/*[in]*/, y1/*[in]*/, x2/*[in]*/, y2/*[in]*/);
  }

  float __fastcall TextWidth(BSTR Expr/*[in]*/)
  {
    return GetDefaultInterface()->TextWidth(Expr/*[in]*/);
  }

  float __fastcall TextHeight(BSTR Expr/*[in]*/)
  {
    return GetDefaultInterface()->TextHeight(Expr/*[in]*/);
  }

  void __fastcall Print(BSTR Expr/*[in]*/)
  {
    GetDefaultInterface()->Print(Expr/*[in]*/);
  }

  TVariant __fastcall _Evaluate(BSTR bstrExpr/*[in]*/, LPSAFEARRAY* ppsa/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(bstrExpr/*[in]*/, ppsa/*[in]*/);
  }

  void __fastcall Move(VARIANT Left/*[in]*/, VARIANT Top/*[in,opt]*/= TNoParam(), 
                       VARIANT Width/*[in,opt]*/= TNoParam(), VARIANT Height/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Move(Left/*[in]*/, Top/*[in,opt]*/, Width/*[in,opt]*/, Height/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property BSTR FormName={ read=get_FormName }; // 0, No
  __property TOLEBOOL MinButton={ read=get_MinButton }; // 0, No
  __property TOLEBOOL MaxButton={ read=get_MaxButton }; // 0, No
  __property long LogicalPageWidth={ read=get_LogicalPageWidth }; // 0, No
  __property long LogicalPageHeight={ read=get_LogicalPageHeight }; // 0, No
  __property long ZoomControl={ read=get_ZoomControl }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtMip={ read=get_PrtMip }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevMode={ read=get_PrtDevMode }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevNames={ read=get_PrtDevNames }; // 0, No
  */
  __property BSTR _Name={ read=get__Name }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PaintPalette={ read=get_PaintPalette }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PictureData={ read=get_PictureData }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PicturePalette={ read=get_PicturePalette }; // 0, No
  */
  __property long acHiddenCurrentPage={ read=get_acHiddenCurrentPage }; // 0, No
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessControlPtr ActiveControl={ read=get_ActiveControl }; // 0, Yes
  __property Access_xp::AccessControlPtr DefaultControl[long ControlType]={ read=get_DefaultControl }; // 0, Yes
  __property Access_xp::AccessSectionPtr Section[VARIANT Index]={ read=get_Section }; // 0, Yes
  __property Access_xp::AccessGroupLevelPtr GroupLevel[long Index]={ read=get_GroupLevel }; // 0, Yes
  __property Access_xp::AccessReportPtr Report={ read=get_Report }; // 0, Yes
  __property Access_xp::ModulePtr Module={ read=get_Module }; // 0, Yes
  __property Access_xp::PropertiesPtr Properties={ read=get_Properties }; // 0, Yes
  __property Access_xp::Controls_Ptr Controls={ read=get_Controls }; // 0, Yes
  __property short WindowTop={ read=get_WindowTop }; // 0, No
  __property short WindowLeft={ read=get_WindowLeft }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant OpenArgs={ read=get_OpenArgs }; // 0, No
  */
  __property LPDISPATCH Recordset={ read=get_Recordset }; // 0, No
  __property BSTR Shape={ read=get_Shape }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR RecordSource={ read=get_RecordSource, stored=false }; // 0, No
  __property BSTR Filter={ read=get_Filter, stored=false }; // 0, No
  __property TOLEBOOL FilterOn={ read=get_FilterOn, stored=false }; // 0, No
  __property BSTR OrderBy={ read=get_OrderBy, stored=false }; // 0, No
  __property TOLEBOOL OrderByOn={ read=get_OrderByOn, stored=false }; // 0, No
  __property BSTR ServerFilter={ read=get_ServerFilter, stored=false }; // 0, No
  __property BSTR Caption={ read=get_Caption, stored=false }; // 0, No
  __property unsigned_char RecordLocks={ read=get_RecordLocks, stored=false }; // 0, No
  __property unsigned_char PageHeader={ read=get_PageHeader, stored=false }; // 0, No
  __property unsigned_char PageFooter={ read=get_PageFooter, stored=false }; // 0, No
  __property unsigned_char DateGrouping={ read=get_DateGrouping, stored=false }; // 0, No
  __property unsigned_char GrpKeepTogether={ read=get_GrpKeepTogether, stored=false }; // 0, No
  __property short Width={ read=get_Width, stored=false }; // 0, No
  __property BSTR Picture={ read=get_Picture, stored=false }; // 0, No
  __property unsigned_char PictureType={ read=get_PictureType, stored=false }; // 0, No
  __property unsigned_char PictureSizeMode={ read=get_PictureSizeMode, stored=false }; // 0, No
  __property unsigned_char PictureAlignment={ read=get_PictureAlignment, stored=false }; // 0, No
  __property TOLEBOOL PictureTiling={ read=get_PictureTiling, stored=false }; // 0, No
  __property unsigned_char PicturePages={ read=get_PicturePages, stored=false }; // 0, No
  __property BSTR MenuBar={ read=get_MenuBar, stored=false }; // 0, No
  __property BSTR Toolbar={ read=get_Toolbar, stored=false }; // 0, No
  __property BSTR ShortcutMenuBar={ read=get_ShortcutMenuBar, stored=false }; // 0, No
  __property short GridX={ read=get_GridX, stored=false }; // 0, No
  __property short GridY={ read=get_GridY, stored=false }; // 0, No
  __property TOLEBOOL LayoutForPrint={ read=get_LayoutForPrint, stored=false }; // 0, No
  __property TOLEBOOL FastLaserPrinting={ read=get_FastLaserPrinting, stored=false }; // 0, No
  __property BSTR HelpFile={ read=get_HelpFile, stored=false }; // 0, No
  __property long HelpContextId={ read=get_HelpContextId, stored=false }; // 0, No
  __property long Hwnd={ read=get_Hwnd, stored=false }; // 0, No
  __property short Count={ read=get_Count, stored=false }; // 0, No
  __property long Page={ read=get_Page, stored=false }; // 0, No
  __property short Pages={ read=get_Pages, stored=false }; // 0, No
  __property long HasData={ read=get_HasData, stored=false }; // 0, No
  __property long Left={ read=get_Left, stored=false }; // 0, No
  __property long Top={ read=get_Top, stored=false }; // 0, No
  __property long Height={ read=get_Height, stored=false }; // 0, No
  __property TOLEBOOL PrintSection={ read=get_PrintSection, stored=false }; // 0, No
  __property TOLEBOOL NextRecord={ read=get_NextRecord, stored=false }; // 0, No
  __property TOLEBOOL MoveLayout={ read=get_MoveLayout, stored=false }; // 0, No
  __property short FormatCount={ read=get_FormatCount, stored=false }; // 0, No
  __property short PrintCount={ read=get_PrintCount, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL Painting={ read=get_Painting, stored=false }; // 0, No
  __property long ForeColor={ read=get_ForeColor, stored=false }; // 0, No
  __property float CurrentX={ read=get_CurrentX, stored=false }; // 0, No
  __property float CurrentY={ read=get_CurrentY, stored=false }; // 0, No
  __property float ScaleHeight={ read=get_ScaleHeight, stored=false }; // 0, No
  __property float ScaleLeft={ read=get_ScaleLeft, stored=false }; // 0, No
  __property short ScaleMode={ read=get_ScaleMode, stored=false }; // 0, No
  __property float ScaleTop={ read=get_ScaleTop, stored=false }; // 0, No
  __property float ScaleWidth={ read=get_ScaleWidth, stored=false }; // 0, No
  __property short FontBold={ read=get_FontBold, stored=false }; // 0, No
  __property short FontItalic={ read=get_FontItalic, stored=false }; // 0, No
  __property BSTR FontName={ read=get_FontName, stored=false }; // 0, No
  __property short FontSize={ read=get_FontSize, stored=false }; // 0, No
  __property short FontUnderline={ read=get_FontUnderline, stored=false }; // 0, No
  __property short DrawMode={ read=get_DrawMode, stored=false }; // 0, No
  __property short DrawStyle={ read=get_DrawStyle, stored=false }; // 0, No
  __property short DrawWidth={ read=get_DrawWidth, stored=false }; // 0, No
  __property long FillColor={ read=get_FillColor, stored=false }; // 0, No
  __property short FillStyle={ read=get_FillStyle, stored=false }; // 0, No
  __property BSTR PaletteSource={ read=get_PaletteSource, stored=false }; // 0, No
  __property BSTR Tag={ read=get_Tag, stored=false }; // 0, No
  __property BSTR OnMenu={ read=get_OnMenu, stored=false }; // 0, No
  __property BSTR OnOpen={ read=get_OnOpen, stored=false }; // 0, No
  __property BSTR OnClose={ read=get_OnClose, stored=false }; // 0, No
  __property BSTR OnActivate={ read=get_OnActivate, stored=false }; // 0, No
  __property BSTR OnDeactivate={ read=get_OnDeactivate, stored=false }; // 0, No
  __property BSTR OnNoData={ read=get_OnNoData, stored=false }; // 0, No
  __property BSTR OnPage={ read=get_OnPage, stored=false }; // 0, No
  __property BSTR OnError={ read=get_OnError, stored=false }; // 0, No
  __property TOLEBOOL Dirty={ read=get_Dirty, stored=false }; // 0, No
  __property long CurrentRecord={ read=get_CurrentRecord, stored=false }; // 0, No
  __property TOLEBOOL HasModule={ read=get_HasModule, stored=false }; // 0, No
  __property unsigned_char Orientation={ read=get_Orientation, stored=false }; // 0, No
  __property BSTR InputParameters={ read=get_InputParameters, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property TOLEBOOL AutoResize={ read=get_AutoResize, stored=false }; // 0, No
  __property TOLEBOOL AutoCenter={ read=get_AutoCenter, stored=false }; // 0, No
  __property TOLEBOOL PopUp={ read=get_PopUp, stored=false }; // 0, No
  __property TOLEBOOL Modal={ read=get_Modal, stored=false }; // 0, No
  __property unsigned_char BorderStyle={ read=get_BorderStyle, stored=false }; // 0, No
  __property TOLEBOOL ControlBox={ read=get_ControlBox, stored=false }; // 0, No
  __property unsigned_char MinMaxButtons={ read=get_MinMaxButtons, stored=false }; // 0, No
  __property TOLEBOOL CloseButton={ read=get_CloseButton, stored=false }; // 0, No
  __property short WindowWidth={ read=get_WindowWidth, stored=false }; // 0, No
  __property short WindowHeight={ read=get_WindowHeight, stored=false }; // 0, No
  __property Access_xp::_PrinterPtr Printer={ read=get_Printer, stored=false }; // 0, Yes
  __property TOLEBOOL Moveable={ read=get_Moveable, stored=false }; // 0, No
  __property TOLEBOOL UseDefaultPrinter={ read=get_UseDefaultPrinter, stored=false }; // 0, No
  __property BSTR RecordSourceQualifier={ read=get_RecordSourceQualifier, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TAccessReportOpen              FOnOpen1;
  TNotifyEvent                   FOnClose1;
  TNotifyEvent                   FOnActivate1;
  TNotifyEvent                   FOnDeactivate1;
  TAccessReportError             FOnError1;
  TAccessReportNoData            FOnNoData1;
  TNotifyEvent                   FOnPage1;
__published:
  __property TAccessReportOpen OnOpen1={ read=FOnOpen1, write=FOnOpen1 };
  __property TNotifyEvent OnClose1={ read=FOnClose1, write=FOnClose1 };
  __property TNotifyEvent OnActivate1={ read=FOnActivate1, write=FOnActivate1 };
  __property TNotifyEvent OnDeactivate1={ read=FOnDeactivate1, write=FOnDeactivate1 };
  __property TAccessReportError OnError1={ read=FOnError1, write=FOnError1 };
  __property TAccessReportNoData OnNoData1={ read=FOnNoData1, write=FOnNoData1 };
  __property TNotifyEvent OnPage1={ read=FOnPage1, write=FOnPage1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAllFunctions
// Help String      : 
// Default Interface: AllObjects
// Def. Intf. Object: AllObjectsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAllFunctions : public Oleserver::TOleServer
{
  AllObjectsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAllFunctions(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  AllObjectsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(AllObjectsPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_xp::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_xp::AccessObjectPtr __fastcall get_Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Item(var/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Access_xp::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_xp::AccessObjectPtr Item[VARIANT var]={ read=get_Item }; // 0, Yes
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
};

};     // namespace Access_xp

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Access_xp;
#endif

#pragma option pop

#endif // Access_XP_srvrH

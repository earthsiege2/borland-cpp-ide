// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.151.1.0.1.21  $
// File generated on 1/28/2002 7:56:00 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\program files\microsoft office\office\msacc8.olb (1)
// LIBID: {4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}
// LCID: 0
// Helpfile: C:\Program Files\Microsoft Office\Office\acvba80.hlp
// HelpString: Microsoft Access 8.0 Object Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINNT\System32\stdole2.tlb)
//   (2) v4.0 DAO, (C:\Program Files\Common Files\Microsoft Shared\DAO\DAO350.DLL)
//   (3) v2.0 Office, (C:\Program Files\Microsoft Office\office97\Office\MSO97.DLL)
// ************************************************************************ //
#ifndef   Access_97_SRVRH
#define   Access_97_SRVRH

#pragma option push -b -w-inl

#include <oleserver.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "DAO_97.h"
#include "Office_97.h"

#include "Access_97.h"
namespace Access_97
{

// *********************************************************************//
// HelpString: Microsoft Access 8.0 Object Library
// Version:    8.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDoCmd
// Help String      : 
// Default Interface: IDoCmd
// Def. Intf. Object: IDoCmdPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TDoCmd : public Oleserver::TOleServer
{
  IDoCmdPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDoCmd(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IDoCmdPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDoCmdPtr intf);


  /*CoClassWriteArrayPropMethods*/
  /*CoClassWriteMethods*/
  void __fastcall AddMenu(VARIANT MenuName/*[in]*/, VARIANT MenuMacroName/*[in]*/, 
                          VARIANT StatusBarText/*[in]*/)
  {
    GetDefaultInterface()->AddMenu(MenuName/*[in]*/, MenuMacroName/*[in]*/, StatusBarText/*[in]*/);
  }

  void __fastcall ApplyFilter(VARIANT FilterName/*[in,opt]*/= TNoParam(), 
                              VARIANT WhereCondition/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ApplyFilter(FilterName/*[in,opt]*/, WhereCondition/*[in,opt]*/);
  }

  void __fastcall Beep(void)
  {
    GetDefaultInterface()->Beep();
  }

  void __fastcall CancelEvent(void)
  {
    GetDefaultInterface()->CancelEvent();
  }

  void __fastcall Close(Access_97::AcObjectType ObjectType/*[in,def,opt]*/, 
                        VARIANT ObjectName/*[in,opt]*/, Access_97::AcCloseSave Save/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Close(ObjectType/*[in,def,opt]*/, ObjectName/*[in,opt]*/, 
                                 Save/*[in,def,opt]*/);
  }

  void __fastcall CopyObject(VARIANT DestinationDatabase/*[in,opt]*/, VARIANT NewName/*[in,opt]*/, 
                             Access_97::AcObjectType SourceObjectType/*[in,def,opt]*/, 
                             VARIANT SourceObjectName/*[in,opt]*/)
  {
    GetDefaultInterface()->CopyObject(DestinationDatabase/*[in,opt]*/, NewName/*[in,opt]*/, 
                                      SourceObjectType/*[in,def,opt]*/, SourceObjectName/*[in,opt]*/);
  }

  void __fastcall DoMenuItem(VARIANT MenuBar/*[in]*/, VARIANT MenuName/*[in]*/, 
                             VARIANT Command/*[in]*/, VARIANT Subcommand/*[in,opt]*/= TNoParam(), 
                             VARIANT Version/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->DoMenuItem(MenuBar/*[in]*/, MenuName/*[in]*/, Command/*[in]*/, 
                                      Subcommand/*[in,opt]*/, Version/*[in,opt]*/);
  }

  void __fastcall Echo(VARIANT EchoOn/*[in]*/, VARIANT StatusBarText/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Echo(EchoOn/*[in]*/, StatusBarText/*[in,opt]*/);
  }

  void __fastcall FindNext(void)
  {
    GetDefaultInterface()->FindNext();
  }

  void __fastcall FindRecord(VARIANT FindWhat/*[in]*/, Access_97::AcFindMatch Match/*[in,def,opt]*/, 
                             VARIANT MatchCase/*[in,opt]*/, 
                             Access_97::AcSearchDirection Search/*[in,def,opt]*/, 
                             VARIANT SearchAsFormatted/*[in,opt]*/, 
                             Access_97::AcFindField OnlyCurrentField/*[in,def,opt]*/, 
                             VARIANT FindFirst/*[in,opt]*/)
  {
    GetDefaultInterface()->FindRecord(FindWhat/*[in]*/, Match/*[in,def,opt]*/, MatchCase/*[in,opt]*/, 
                                      Search/*[in,def,opt]*/, SearchAsFormatted/*[in,opt]*/, 
                                      OnlyCurrentField/*[in,def,opt]*/, FindFirst/*[in,opt]*/);
  }

  void __fastcall GoToControl(VARIANT ControlName/*[in]*/)
  {
    GetDefaultInterface()->GoToControl(ControlName/*[in]*/);
  }

  void __fastcall GoToPage(VARIANT PageNumber/*[in]*/, VARIANT Right/*[in,opt]*/= TNoParam(), 
                           VARIANT Down/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->GoToPage(PageNumber/*[in]*/, Right/*[in,opt]*/, Down/*[in,opt]*/);
  }

  void __fastcall GoToRecord(Access_97::AcDataObjectType ObjectType/*[in,def,opt]*/, 
                             VARIANT ObjectName/*[in,opt]*/, 
                             Access_97::AcRecord Record/*[in,def,opt]*/, VARIANT Offset/*[in,opt]*/)
  {
    GetDefaultInterface()->GoToRecord(ObjectType/*[in,def,opt]*/, ObjectName/*[in,opt]*/, 
                                      Record/*[in,def,opt]*/, Offset/*[in,opt]*/);
  }

  void __fastcall Hourglass(VARIANT HourglassOn/*[in]*/)
  {
    GetDefaultInterface()->Hourglass(HourglassOn/*[in]*/);
  }

  void __fastcall Maximize(void)
  {
    GetDefaultInterface()->Maximize();
  }

  void __fastcall Minimize(void)
  {
    GetDefaultInterface()->Minimize();
  }

  void __fastcall MoveSize(VARIANT Right/*[in,opt]*/= TNoParam(), 
                           VARIANT Down/*[in,opt]*/= TNoParam(), 
                           VARIANT Width/*[in,opt]*/= TNoParam(), 
                           VARIANT Height/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->MoveSize(Right/*[in,opt]*/, Down/*[in,opt]*/, Width/*[in,opt]*/, 
                                    Height/*[in,opt]*/);
  }

  void __fastcall OpenForm(VARIANT FormName/*[in]*/, Access_97::AcFormView View/*[in,def,opt]*/, 
                           VARIANT FilterName/*[in,opt]*/, VARIANT WhereCondition/*[in,opt]*/, 
                           Access_97::AcFormOpenDataMode DataMode/*[in,def,opt]*/, 
                           Access_97::AcWindowMode WindowMode/*[in,def,opt]*/, 
                           VARIANT OpenArgs/*[in,opt]*/)
  {
    GetDefaultInterface()->OpenForm(FormName/*[in]*/, View/*[in,def,opt]*/, FilterName/*[in,opt]*/, 
                                    WhereCondition/*[in,opt]*/, DataMode/*[in,def,opt]*/, 
                                    WindowMode/*[in,def,opt]*/, OpenArgs/*[in,opt]*/);
  }

  void __fastcall OpenQuery(VARIANT QueryName/*[in]*/, Access_97::AcView View/*[in,def,opt]*/, 
                            Access_97::AcOpenDataMode DataMode/*[in,def,opt]*/)
  {
    GetDefaultInterface()->OpenQuery(QueryName/*[in]*/, View/*[in,def,opt]*/, 
                                     DataMode/*[in,def,opt]*/);
  }

  void __fastcall OpenTable(VARIANT TableName/*[in]*/, Access_97::AcView View/*[in,def,opt]*/, 
                            Access_97::AcOpenDataMode DataMode/*[in,def,opt]*/)
  {
    GetDefaultInterface()->OpenTable(TableName/*[in]*/, View/*[in,def,opt]*/, 
                                     DataMode/*[in,def,opt]*/);
  }

  void __fastcall PrintOut(Access_97::AcPrintRange PrintRange/*[in,def,opt]*/, 
                           VARIANT PageFrom/*[in,opt]*/, VARIANT PageTo/*[in,opt]*/, 
                           Access_97::AcPrintQuality PrintQuality/*[in,def,opt]*/, 
                           VARIANT Copies/*[in,opt]*/, VARIANT CollateCopies/*[in,opt]*/)
  {
    GetDefaultInterface()->PrintOut(PrintRange/*[in,def,opt]*/, PageFrom/*[in,opt]*/, 
                                    PageTo/*[in,opt]*/, PrintQuality/*[in,def,opt]*/, 
                                    Copies/*[in,opt]*/, CollateCopies/*[in,opt]*/);
  }

  void __fastcall Quit(Access_97::AcQuitOption Options/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Quit(Options/*[in,def,opt]*/);
  }

  void __fastcall Requery(VARIANT ControlName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Requery(ControlName/*[in,opt]*/);
  }

  void __fastcall RepaintObject(Access_97::AcObjectType ObjectType/*[in,def,opt]*/, 
                                VARIANT ObjectName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RepaintObject(ObjectType/*[in,def,opt]*/, ObjectName/*[in,opt]*/);
  }

  void __fastcall Rename(VARIANT NewName/*[in]*/, Access_97::AcObjectType ObjectType/*[in,def,opt]*/, 
                         VARIANT OldName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Rename(NewName/*[in]*/, ObjectType/*[in,def,opt]*/, OldName/*[in,opt]*/);
  }

  void __fastcall Restore(void)
  {
    GetDefaultInterface()->Restore();
  }

  void __fastcall RunMacro(VARIANT MacroName/*[in]*/, VARIANT RepeatCount/*[in,opt]*/= TNoParam(), 
                           VARIANT RepeatExpression/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RunMacro(MacroName/*[in]*/, RepeatCount/*[in,opt]*/, 
                                    RepeatExpression/*[in,opt]*/);
  }

  void __fastcall RunSQL(VARIANT SQLStatement/*[in]*/, 
                         VARIANT UseTransaction/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RunSQL(SQLStatement/*[in]*/, UseTransaction/*[in,opt]*/);
  }

  void __fastcall SelectObject(Access_97::AcObjectType ObjectType/*[in]*/, 
                               VARIANT ObjectName/*[in,opt]*/= TNoParam(), 
                               VARIANT InDatabaseWindow/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SelectObject(ObjectType/*[in]*/, ObjectName/*[in,opt]*/, 
                                        InDatabaseWindow/*[in,opt]*/);
  }

  void __fastcall SetWarnings(VARIANT WarningsOn/*[in]*/)
  {
    GetDefaultInterface()->SetWarnings(WarningsOn/*[in]*/);
  }

  void __fastcall ShowAllRecords(void)
  {
    GetDefaultInterface()->ShowAllRecords();
  }

  void __fastcall OpenReport(VARIANT ReportName/*[in]*/, Access_97::AcView View/*[in,def,opt]*/, 
                             VARIANT FilterName/*[in,opt]*/= TNoParam(), 
                             VARIANT WhereCondition/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OpenReport(ReportName/*[in]*/, View/*[in,def,opt]*/, 
                                      FilterName/*[in,opt]*/, WhereCondition/*[in,opt]*/);
  }

  void __fastcall TransferDatabase(Access_97::AcDataTransferType TransferType/*[in,def,opt]*/, 
                                   VARIANT DatabaseType/*[in,opt]*/, 
                                   VARIANT DatabaseName/*[in,opt]*/, 
                                   Access_97::AcObjectType ObjectType/*[in,def,opt]*/, 
                                   VARIANT Source/*[in,opt]*/, VARIANT Destination/*[in,opt]*/, 
                                   VARIANT StructureOnly/*[in,opt]*/, VARIANT StoreLogin/*[in,opt]*/)
  {
    GetDefaultInterface()->TransferDatabase(TransferType/*[in,def,opt]*/, DatabaseType/*[in,opt]*/, 
                                            DatabaseName/*[in,opt]*/, ObjectType/*[in,def,opt]*/, 
                                            Source/*[in,opt]*/, Destination/*[in,opt]*/, 
                                            StructureOnly/*[in,opt]*/, StoreLogin/*[in,opt]*/);
  }

  void __fastcall TransferSpreadsheet(Access_97::AcDataTransferType TransferType/*[in,def,opt]*/, 
                                      Access_97::AcSpreadSheetType SpreadsheetType/*[in,def,opt]*/, 
                                      VARIANT TableName/*[in,opt]*/= TNoParam(), 
                                      VARIANT FileName/*[in,opt]*/= TNoParam(), 
                                      VARIANT HasFieldNames/*[in,opt]*/= TNoParam(), 
                                      VARIANT Range/*[in,opt]*/= TNoParam(), 
                                      VARIANT UseOA/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->TransferSpreadsheet(TransferType/*[in,def,opt]*/, 
                                               SpreadsheetType/*[in,def,opt]*/, 
                                               TableName/*[in,opt]*/, FileName/*[in,opt]*/, 
                                               HasFieldNames/*[in,opt]*/, Range/*[in,opt]*/, 
                                               UseOA/*[in,opt]*/);
  }

  void __fastcall TransferText(Access_97::AcTextTransferType TransferType/*[in,def,opt]*/, 
                               VARIANT SpecificationName/*[in,opt]*/= TNoParam(), 
                               VARIANT TableName/*[in,opt]*/= TNoParam(), 
                               VARIANT FileName/*[in,opt]*/= TNoParam(), 
                               VARIANT HasFieldNames/*[in,opt]*/= TNoParam(), 
                               VARIANT HTMLTableName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->TransferText(TransferType/*[in,def,opt]*/, SpecificationName/*[in,opt]*/, 
                                        TableName/*[in,opt]*/, FileName/*[in,opt]*/, 
                                        HasFieldNames/*[in,opt]*/, HTMLTableName/*[in,opt]*/);
  }

  void __fastcall OutputTo(Access_97::AcOutputObjectType ObjectType/*[in]*/, 
                           VARIANT ObjectName/*[in,opt]*/= TNoParam(), 
                           VARIANT OutputFormat/*[in,opt]*/= TNoParam(), 
                           VARIANT OutputFile/*[in,opt]*/= TNoParam(), 
                           VARIANT AutoStart/*[in,opt]*/= TNoParam(), 
                           VARIANT TemplateFile/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OutputTo(ObjectType/*[in]*/, ObjectName/*[in,opt]*/, 
                                    OutputFormat/*[in,opt]*/, OutputFile/*[in,opt]*/, 
                                    AutoStart/*[in,opt]*/, TemplateFile/*[in,opt]*/);
  }

  void __fastcall DeleteObject(Access_97::AcObjectType ObjectType/*[in,def,opt]*/, 
                               VARIANT ObjectName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->DeleteObject(ObjectType/*[in,def,opt]*/, ObjectName/*[in,opt]*/);
  }

  void __fastcall OpenModule(VARIANT ModuleName/*[in,opt]*/= TNoParam(), 
                             VARIANT ProcedureName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OpenModule(ModuleName/*[in,opt]*/, ProcedureName/*[in,opt]*/);
  }

  void __fastcall SendObject(Access_97::AcSendObjectType ObjectType/*[in,def,opt]*/, 
                             VARIANT ObjectName/*[in,opt]*/= TNoParam(), 
                             VARIANT OutputFormat/*[in,opt]*/= TNoParam(), 
                             VARIANT To/*[in,opt]*/= TNoParam(), VARIANT Cc/*[in,opt]*/= TNoParam(), 
                             VARIANT Bcc/*[in,opt]*/= TNoParam(), 
                             VARIANT Subject/*[in,opt]*/= TNoParam(), 
                             VARIANT MessageText/*[in,opt]*/= TNoParam(), 
                             VARIANT EditMessage/*[in,opt]*/= TNoParam(), 
                             VARIANT TemplateFile/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SendObject(ObjectType/*[in,def,opt]*/, ObjectName/*[in,opt]*/, 
                                      OutputFormat/*[in,opt]*/, To/*[in,opt]*/, Cc/*[in,opt]*/, 
                                      Bcc/*[in,opt]*/, Subject/*[in,opt]*/, MessageText/*[in,opt]*/, 
                                      EditMessage/*[in,opt]*/, TemplateFile/*[in,opt]*/);
  }

  void __fastcall ShowToolbar(VARIANT ToolbarName/*[in]*/, VARIANT Show/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ShowToolbar(ToolbarName/*[in]*/, Show/*[in,opt]*/);
  }

  void __fastcall Save(Access_97::AcObjectType ObjectType/*[in,def,opt]*/, 
                       VARIANT ObjectName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Save(ObjectType/*[in,def,opt]*/, ObjectName/*[in,opt]*/);
  }

  void __fastcall SetMenuItem(VARIANT MenuIndex/*[in]*/, 
                              VARIANT CommandIndex/*[in,opt]*/= TNoParam(), 
                              VARIANT SubcommandIndex/*[in,opt]*/= TNoParam(), 
                              VARIANT Flag/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SetMenuItem(MenuIndex/*[in]*/, CommandIndex/*[in,opt]*/, 
                                       SubcommandIndex/*[in,opt]*/, Flag/*[in,opt]*/);
  }

  void __fastcall RunCommand(Access_97::AcCommand Command/*[in]*/)
  {
    GetDefaultInterface()->RunCommand(Command/*[in]*/);
  }

  /*CoClassWriteProperties*/
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessHyperlink
// Help String      : 
// Default Interface: _Hyperlink
// Def. Intf. Object: _HyperlinkPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TAccessHyperlink : public Oleserver::TOleServer
{
  _HyperlinkPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessHyperlink(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _HyperlinkPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_HyperlinkPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get_SubAddress(void)
  {
    return GetDefaultInterface()->get_SubAddress();
  }

// StdProp:OleVariant
  void __fastcall set_SubAddress(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_SubAddress(pbstrResult/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Address(void)
  {
    return GetDefaultInterface()->get_Address();
  }

// StdProp:OleVariant
  void __fastcall set_Address(VARIANT pbstrResult/*[in]*/)
  {
    GetDefaultInterface()->set_Address(pbstrResult/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall Follow(VARIANT_BOOL NewWindow/*[in,def,opt]*/, 
                         VARIANT_BOOL AddHistory/*[in,def,opt]*/, VARIANT ExtraInfo/*[in,opt]*/, 
                         Office_97::MsoExtraInfoMethod Method/*[in,def,opt]*/, 
                         BSTR HeaderInfo/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Follow(NewWindow/*[in,def,opt]*/, AddHistory/*[in,def,opt]*/, 
                                  ExtraInfo/*[in,opt]*/, Method/*[in,def,opt]*/, 
                                  HeaderInfo/*[in,def,opt]*/);
  }

  /*CoClassWriteProperties*/
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessForm
// Help String      : 
// Default Interface: _Form
// Def. Intf. Object: _FormPtr
// Def. Intf. DISP? : No
// Event   Interface: _FormEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TAccessFormBeforeInsert)(System::TObject * Sender, 
                                                              short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormBeforeUpdate)(System::TObject * Sender, 
                                                              short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormDelete)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormBeforeDelConfirm)(System::TObject * Sender, 
                                                                  short* Cancel/*[out]*/, 
                                                                  short* Response/*[out]*/);
typedef void __fastcall (__closure * TAccessFormAfterDelConfirm)(System::TObject * Sender, 
                                                                 short* Status/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormOpen)(System::TObject * Sender, 
                                                      short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormUnload)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormDblClick)(System::TObject * Sender, 
                                                          short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessFormMouseDown)(System::TObject * Sender, 
                                                           short* Button/*[in,out]*/, 
                                                           short* Shift/*[in,out]*/, 
                                                           float* X/*[in,out]*/, 
                                                           float* Y/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormMouseMove)(System::TObject * Sender, 
                                                           short* Button/*[in,out]*/, 
                                                           short* Shift/*[in,out]*/, 
                                                           float* X/*[in,out]*/, 
                                                           float* Y/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormMouseUp)(System::TObject * Sender, 
                                                         short* Button/*[in,out]*/, 
                                                         short* Shift/*[in,out]*/, 
                                                         float* X/*[in,out]*/, float* Y/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormKeyDown)(System::TObject * Sender, 
                                                         short* KeyCode/*[in,out]*/, 
                                                         short* Shift/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormKeyPress)(System::TObject * Sender, 
                                                          short* KeyAscii/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormKeyUp)(System::TObject * Sender, 
                                                       short* KeyCode/*[in,out]*/, 
                                                       short* Shift/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormError)(System::TObject * Sender, 
                                                       short* DataErr/*[in,out]*/, 
                                                       short* Response/*[out]*/);
typedef void __fastcall (__closure * TAccessFormFilter)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/, 
                                                        short* FilterType/*[in,out]*/);
typedef void __fastcall (__closure * TAccessFormApplyFilter)(System::TObject * Sender, 
                                                             short* Cancel/*[out]*/, 
                                                             short* ApplyType/*[in,out]*/);

class PACKAGE TAccessForm : public Oleserver::TOleServer
{
  _FormPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessForm(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _FormPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_FormPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get_FormName(void)
  {
    return GetDefaultInterface()->get_FormName();
  }

// StdProp:WideString
  void __fastcall set_FormName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FormName(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecordSource(void)
  {
    return GetDefaultInterface()->get_RecordSource();
  }

// StdProp:WideString
  void __fastcall set_RecordSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Filter(void)
  {
    return GetDefaultInterface()->get_Filter();
  }

// StdProp:WideString
  void __fastcall set_Filter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Filter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FilterOn(void)
  {
    return GetDefaultInterface()->get_FilterOn();
  }

// StdProp:WordBool
  void __fastcall set_FilterOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FilterOn(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OrderBy(void)
  {
    return GetDefaultInterface()->get_OrderBy();
  }

// StdProp:WideString
  void __fastcall set_OrderBy(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderBy(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OrderByOn(void)
  {
    return GetDefaultInterface()->get_OrderByOn();
  }

// StdProp:WordBool
  void __fastcall set_OrderByOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderByOn(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowFilters(void)
  {
    return GetDefaultInterface()->get_AllowFilters();
  }

// StdProp:WordBool
  void __fastcall set_AllowFilters(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowFilters(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

// StdProp:WideString
  void __fastcall set_Caption(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DefaultView(void)
  {
    return GetDefaultInterface()->get_DefaultView();
  }

// StdProp:Byte
  void __fastcall set_DefaultView(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultView(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_ViewsAllowed(void)
  {
    return GetDefaultInterface()->get_ViewsAllowed();
  }

// StdProp:Byte
  void __fastcall set_ViewsAllowed(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ViewsAllowed(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowEditing(void)
  {
    return GetDefaultInterface()->get_AllowEditing();
  }

// StdProp:WordBool
  void __fastcall set_AllowEditing(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowEditing(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DefaultEditing(void)
  {
    return GetDefaultInterface()->get_DefaultEditing();
  }

// StdProp:Smallint
  void __fastcall set_DefaultEditing(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultEditing(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowEdits(void)
  {
    return GetDefaultInterface()->get_AllowEdits();
  }

// StdProp:WordBool
  void __fastcall set_AllowEdits(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowEdits(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowDeletions(void)
  {
    return GetDefaultInterface()->get_AllowDeletions();
  }

// StdProp:WordBool
  void __fastcall set_AllowDeletions(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowDeletions(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AllowAdditions(void)
  {
    return GetDefaultInterface()->get_AllowAdditions();
  }

// StdProp:WordBool
  void __fastcall set_AllowAdditions(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowAdditions(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DataEntry(void)
  {
    return GetDefaultInterface()->get_DataEntry();
  }

// StdProp:WordBool
  void __fastcall set_DataEntry(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DataEntry(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_AllowUpdating(void)
  {
    return GetDefaultInterface()->get_AllowUpdating();
  }

// StdProp:Byte
  void __fastcall set_AllowUpdating(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AllowUpdating(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_RecordsetType(void)
  {
    return GetDefaultInterface()->get_RecordsetType();
  }

// StdProp:Byte
  void __fastcall set_RecordsetType(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordsetType(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_RecordLocks(void)
  {
    return GetDefaultInterface()->get_RecordLocks();
  }

// StdProp:Byte
  void __fastcall set_RecordLocks(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordLocks(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_ScrollBars(void)
  {
    return GetDefaultInterface()->get_ScrollBars();
  }

// StdProp:Byte
  void __fastcall set_ScrollBars(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScrollBars(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RecordSelectors(void)
  {
    return GetDefaultInterface()->get_RecordSelectors();
  }

// StdProp:WordBool
  void __fastcall set_RecordSelectors(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSelectors(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_NavigationButtons(void)
  {
    return GetDefaultInterface()->get_NavigationButtons();
  }

// StdProp:WordBool
  void __fastcall set_NavigationButtons(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_NavigationButtons(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DividingLines(void)
  {
    return GetDefaultInterface()->get_DividingLines();
  }

// StdProp:WordBool
  void __fastcall set_DividingLines(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DividingLines(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoResize(void)
  {
    return GetDefaultInterface()->get_AutoResize();
  }

// StdProp:WordBool
  void __fastcall set_AutoResize(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AutoResize(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoCenter(void)
  {
    return GetDefaultInterface()->get_AutoCenter();
  }

// StdProp:WordBool
  void __fastcall set_AutoCenter(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AutoCenter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PopUp(void)
  {
    return GetDefaultInterface()->get_PopUp();
  }

// StdProp:WordBool
  void __fastcall set_PopUp(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PopUp(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Modal(void)
  {
    return GetDefaultInterface()->get_Modal();
  }

// StdProp:WordBool
  void __fastcall set_Modal(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Modal(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_BorderStyle(void)
  {
    return GetDefaultInterface()->get_BorderStyle();
  }

// StdProp:Byte
  void __fastcall set_BorderStyle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BorderStyle(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ControlBox(void)
  {
    return GetDefaultInterface()->get_ControlBox();
  }

// StdProp:WordBool
  void __fastcall set_ControlBox(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ControlBox(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MinButton(void)
  {
    return GetDefaultInterface()->get_MinButton();
  }

// StdProp:WordBool
  void __fastcall set_MinButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinButton(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MaxButton(void)
  {
    return GetDefaultInterface()->get_MaxButton();
  }

// StdProp:WordBool
  void __fastcall set_MaxButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MaxButton(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_MinMaxButtons(void)
  {
    return GetDefaultInterface()->get_MinMaxButtons();
  }

// StdProp:Byte
  void __fastcall set_MinMaxButtons(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinMaxButtons(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CloseButton(void)
  {
    return GetDefaultInterface()->get_CloseButton();
  }

// StdProp:WordBool
  void __fastcall set_CloseButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CloseButton(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_WhatsThisButton(void)
  {
    return GetDefaultInterface()->get_WhatsThisButton();
  }

// StdProp:WordBool
  void __fastcall set_WhatsThisButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WhatsThisButton(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

// StdProp:Smallint
  void __fastcall set_Width(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Width(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Picture(void)
  {
    return GetDefaultInterface()->get_Picture();
  }

// StdProp:WideString
  void __fastcall set_Picture(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Picture(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureType(void)
  {
    return GetDefaultInterface()->get_PictureType();
  }

// StdProp:Byte
  void __fastcall set_PictureType(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureType(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureSizeMode(void)
  {
    return GetDefaultInterface()->get_PictureSizeMode();
  }

// StdProp:Byte
  void __fastcall set_PictureSizeMode(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureSizeMode(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureAlignment(void)
  {
    return GetDefaultInterface()->get_PictureAlignment();
  }

// StdProp:Byte
  void __fastcall set_PictureAlignment(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureAlignment(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PictureTiling(void)
  {
    return GetDefaultInterface()->get_PictureTiling();
  }

// StdProp:WordBool
  void __fastcall set_PictureTiling(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureTiling(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_Cycle(void)
  {
    return GetDefaultInterface()->get_Cycle();
  }

// StdProp:Byte
  void __fastcall set_Cycle(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Cycle(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

// StdProp:WideString
  void __fastcall set_MenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Toolbar(void)
  {
    return GetDefaultInterface()->get_Toolbar();
  }

// StdProp:WideString
  void __fastcall set_Toolbar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Toolbar(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShortcutMenu(void)
  {
    return GetDefaultInterface()->get_ShortcutMenu();
  }

// StdProp:WordBool
  void __fastcall set_ShortcutMenu(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenu(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ShortcutMenuBar(void)
  {
    return GetDefaultInterface()->get_ShortcutMenuBar();
  }

// StdProp:WideString
  void __fastcall set_ShortcutMenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenuBar(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridX(void)
  {
    return GetDefaultInterface()->get_GridX();
  }

// StdProp:Smallint
  void __fastcall set_GridX(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridX(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridY(void)
  {
    return GetDefaultInterface()->get_GridY();
  }

// StdProp:Smallint
  void __fastcall set_GridY(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridY(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_LayoutForPrint(void)
  {
    return GetDefaultInterface()->get_LayoutForPrint();
  }

// StdProp:WordBool
  void __fastcall set_LayoutForPrint(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LayoutForPrint(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FastLaserPrinting(void)
  {
    return GetDefaultInterface()->get_FastLaserPrinting();
  }

// StdProp:WordBool
  void __fastcall set_FastLaserPrinting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FastLaserPrinting(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_HelpFile(void)
  {
    return GetDefaultInterface()->get_HelpFile();
  }

// StdProp:WideString
  void __fastcall set_HelpFile(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpFile(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HelpContextId(void)
  {
    return GetDefaultInterface()->get_HelpContextId();
  }

// StdProp:Integer
  void __fastcall set_HelpContextId(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpContextId(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_RowHeight(void)
  {
    return GetDefaultInterface()->get_RowHeight();
  }

// StdProp:Smallint
  void __fastcall set_RowHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RowHeight(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_DatasheetFontName(void)
  {
    return GetDefaultInterface()->get_DatasheetFontName();
  }

// StdProp:WideString
  void __fastcall set_DatasheetFontName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontName(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DatasheetFontHeight(void)
  {
    return GetDefaultInterface()->get_DatasheetFontHeight();
  }

// StdProp:Smallint
  void __fastcall set_DatasheetFontHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontHeight(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DatasheetFontWeight(void)
  {
    return GetDefaultInterface()->get_DatasheetFontWeight();
  }

// StdProp:Smallint
  void __fastcall set_DatasheetFontWeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontWeight(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DatasheetFontItalic(void)
  {
    return GetDefaultInterface()->get_DatasheetFontItalic();
  }

// StdProp:WordBool
  void __fastcall set_DatasheetFontItalic(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontItalic(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DatasheetFontUnderline(void)
  {
    return GetDefaultInterface()->get_DatasheetFontUnderline();
  }

// StdProp:WordBool
  void __fastcall set_DatasheetFontUnderline(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetFontUnderline(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_TabularCharSet(void)
  {
    return GetDefaultInterface()->get_TabularCharSet();
  }

// StdProp:Byte
  void __fastcall set_TabularCharSet(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TabularCharSet(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DatasheetGridlinesBehavior(void)
  {
    return GetDefaultInterface()->get_DatasheetGridlinesBehavior();
  }

// StdProp:Byte
  void __fastcall set_DatasheetGridlinesBehavior(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetGridlinesBehavior(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DatasheetGridlinesColor(void)
  {
    return GetDefaultInterface()->get_DatasheetGridlinesColor();
  }

// StdProp:Integer
  void __fastcall set_DatasheetGridlinesColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetGridlinesColor(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DatasheetCellsEffect(void)
  {
    return GetDefaultInterface()->get_DatasheetCellsEffect();
  }

// StdProp:Byte
  void __fastcall set_DatasheetCellsEffect(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetCellsEffect(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DatasheetForeColor(void)
  {
    return GetDefaultInterface()->get_DatasheetForeColor();
  }

// StdProp:Integer
  void __fastcall set_DatasheetForeColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetForeColor(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowGrid(void)
  {
    return GetDefaultInterface()->get_ShowGrid();
  }

// StdProp:WordBool
  void __fastcall set_ShowGrid(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShowGrid(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DatasheetBackColor(void)
  {
    return GetDefaultInterface()->get_DatasheetBackColor();
  }

// StdProp:Integer
  void __fastcall set_DatasheetBackColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DatasheetBackColor(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Hwnd(void)
  {
    return GetDefaultInterface()->get_Hwnd();
  }

// StdProp:Integer
  void __fastcall set_Hwnd(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Hwnd(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

// StdProp:Smallint
  void __fastcall set_Count(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Count(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Page(void)
  {
    return GetDefaultInterface()->get_Page();
  }

// StdProp:Integer
  void __fastcall set_Page(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Page(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Pages(void)
  {
    return GetDefaultInterface()->get_Pages();
  }

// StdProp:Smallint
  void __fastcall set_Pages(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Pages(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageWidth(void)
  {
    return GetDefaultInterface()->get_LogicalPageWidth();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageHeight(void)
  {
    return GetDefaultInterface()->get_LogicalPageHeight();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ZoomControl(void)
  {
    return GetDefaultInterface()->get_ZoomControl();
  }

// StdProp:Integer
  void __fastcall set_ZoomControl(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ZoomControl(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Painting(void)
  {
    return GetDefaultInterface()->get_Painting();
  }

// StdProp:WordBool
  void __fastcall set_Painting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Painting(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtMip(void)
  {
    return GetDefaultInterface()->get_PrtMip();
  }

// StdProp:OleVariant
  void __fastcall set_PrtMip(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtMip(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevMode(void)
  {
    return GetDefaultInterface()->get_PrtDevMode();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevMode(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevMode(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevNames(void)
  {
    return GetDefaultInterface()->get_PrtDevNames();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevNames(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevNames(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FrozenColumns(void)
  {
    return GetDefaultInterface()->get_FrozenColumns();
  }

// StdProp:Smallint
  void __fastcall set_FrozenColumns(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FrozenColumns(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_Bookmark(void)
  {
    return GetDefaultInterface()->get_Bookmark();
  }

// StdProp:OleVariant
  void __fastcall set_Bookmark(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Bookmark(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_TabularFamily(void)
  {
    return GetDefaultInterface()->get_TabularFamily();
  }

// StdProp:Byte
  void __fastcall set_TabularFamily(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TabularFamily(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Name(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PaletteSource(void)
  {
    return GetDefaultInterface()->get_PaletteSource();
  }

// StdProp:WideString
  void __fastcall set_PaletteSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaletteSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Tag(void)
  {
    return GetDefaultInterface()->get_Tag();
  }

// StdProp:WideString
  void __fastcall set_Tag(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Tag(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PaintPalette(void)
  {
    return GetDefaultInterface()->get_PaintPalette();
  }

// StdProp:OleVariant
  void __fastcall set_PaintPalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaintPalette(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMenu(void)
  {
    return GetDefaultInterface()->get_OnMenu();
  }

// StdProp:WideString
  void __fastcall set_OnMenu(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMenu(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_OpenArgs(void)
  {
    return GetDefaultInterface()->get_OpenArgs();
  }

// StdProp:OleVariant
  void __fastcall set_OpenArgs(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OpenArgs(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_ConnectSynch(void)
  {
    return GetDefaultInterface()->get_ConnectSynch();
  }

// StdProp:Smallint
  void __fastcall set_ConnectSynch(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ConnectSynch(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnCurrent(void)
  {
    return GetDefaultInterface()->get_OnCurrent();
  }

// StdProp:WideString
  void __fastcall set_OnCurrent(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnCurrent(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnInsert(void)
  {
    return GetDefaultInterface()->get_OnInsert();
  }

// StdProp:WideString
  void __fastcall set_OnInsert(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnInsert(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeInsert(void)
  {
    return GetDefaultInterface()->get_BeforeInsert();
  }

// StdProp:WideString
  void __fastcall set_BeforeInsert(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeInsert(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterInsert(void)
  {
    return GetDefaultInterface()->get_AfterInsert();
  }

// StdProp:WideString
  void __fastcall set_AfterInsert(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterInsert(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeUpdate(void)
  {
    return GetDefaultInterface()->get_BeforeUpdate();
  }

// StdProp:WideString
  void __fastcall set_BeforeUpdate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeUpdate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterUpdate(void)
  {
    return GetDefaultInterface()->get_AfterUpdate();
  }

// StdProp:WideString
  void __fastcall set_AfterUpdate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterUpdate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDelete(void)
  {
    return GetDefaultInterface()->get_OnDelete();
  }

// StdProp:WideString
  void __fastcall set_OnDelete(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDelete(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BeforeDelConfirm(void)
  {
    return GetDefaultInterface()->get_BeforeDelConfirm();
  }

// StdProp:WideString
  void __fastcall set_BeforeDelConfirm(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_BeforeDelConfirm(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AfterDelConfirm(void)
  {
    return GetDefaultInterface()->get_AfterDelConfirm();
  }

// StdProp:WideString
  void __fastcall set_AfterDelConfirm(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_AfterDelConfirm(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnOpen(void)
  {
    return GetDefaultInterface()->get_OnOpen();
  }

// StdProp:WideString
  void __fastcall set_OnOpen(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnOpen(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnLoad(void)
  {
    return GetDefaultInterface()->get_OnLoad();
  }

// StdProp:WideString
  void __fastcall set_OnLoad(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnLoad(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnResize(void)
  {
    return GetDefaultInterface()->get_OnResize();
  }

// StdProp:WideString
  void __fastcall set_OnResize(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnResize(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnUnload(void)
  {
    return GetDefaultInterface()->get_OnUnload();
  }

// StdProp:WideString
  void __fastcall set_OnUnload(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnUnload(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnClose(void)
  {
    return GetDefaultInterface()->get_OnClose();
  }

// StdProp:WideString
  void __fastcall set_OnClose(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnClose(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnActivate(void)
  {
    return GetDefaultInterface()->get_OnActivate();
  }

// StdProp:WideString
  void __fastcall set_OnActivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnActivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDeactivate(void)
  {
    return GetDefaultInterface()->get_OnDeactivate();
  }

// StdProp:WideString
  void __fastcall set_OnDeactivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDeactivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnGotFocus(void)
  {
    return GetDefaultInterface()->get_OnGotFocus();
  }

// StdProp:WideString
  void __fastcall set_OnGotFocus(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnGotFocus(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnLostFocus(void)
  {
    return GetDefaultInterface()->get_OnLostFocus();
  }

// StdProp:WideString
  void __fastcall set_OnLostFocus(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnLostFocus(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnClick(void)
  {
    return GetDefaultInterface()->get_OnClick();
  }

// StdProp:WideString
  void __fastcall set_OnClick(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnClick(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDblClick(void)
  {
    return GetDefaultInterface()->get_OnDblClick();
  }

// StdProp:WideString
  void __fastcall set_OnDblClick(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDblClick(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMouseDown(void)
  {
    return GetDefaultInterface()->get_OnMouseDown();
  }

// StdProp:WideString
  void __fastcall set_OnMouseDown(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMouseDown(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMouseMove(void)
  {
    return GetDefaultInterface()->get_OnMouseMove();
  }

// StdProp:WideString
  void __fastcall set_OnMouseMove(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMouseMove(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMouseUp(void)
  {
    return GetDefaultInterface()->get_OnMouseUp();
  }

// StdProp:WideString
  void __fastcall set_OnMouseUp(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMouseUp(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnKeyDown(void)
  {
    return GetDefaultInterface()->get_OnKeyDown();
  }

// StdProp:WideString
  void __fastcall set_OnKeyDown(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnKeyDown(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnKeyUp(void)
  {
    return GetDefaultInterface()->get_OnKeyUp();
  }

// StdProp:WideString
  void __fastcall set_OnKeyUp(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnKeyUp(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnKeyPress(void)
  {
    return GetDefaultInterface()->get_OnKeyPress();
  }

// StdProp:WideString
  void __fastcall set_OnKeyPress(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnKeyPress(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_KeyPreview(void)
  {
    return GetDefaultInterface()->get_KeyPreview();
  }

// StdProp:WordBool
  void __fastcall set_KeyPreview(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_KeyPreview(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnError(void)
  {
    return GetDefaultInterface()->get_OnError();
  }

// StdProp:WideString
  void __fastcall set_OnError(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnError(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnFilter(void)
  {
    return GetDefaultInterface()->get_OnFilter();
  }

// StdProp:WideString
  void __fastcall set_OnFilter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnFilter(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnApplyFilter(void)
  {
    return GetDefaultInterface()->get_OnApplyFilter();
  }

// StdProp:WideString
  void __fastcall set_OnApplyFilter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnApplyFilter(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnTimer(void)
  {
    return GetDefaultInterface()->get_OnTimer();
  }

// StdProp:WideString
  void __fastcall set_OnTimer(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnTimer(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_TimerInterval(void)
  {
    return GetDefaultInterface()->get_TimerInterval();
  }

// StdProp:Integer
  void __fastcall set_TimerInterval(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_TimerInterval(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Dirty(void)
  {
    return GetDefaultInterface()->get_Dirty();
  }

// StdProp:WordBool
  void __fastcall set_Dirty(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Dirty(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowWidth(void)
  {
    return GetDefaultInterface()->get_WindowWidth();
  }

// StdProp:Smallint
  void __fastcall set_WindowWidth(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WindowWidth(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_WindowHeight(void)
  {
    return GetDefaultInterface()->get_WindowHeight();
  }

// StdProp:Smallint
  void __fastcall set_WindowHeight(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_WindowHeight(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_CurrentView(void)
  {
    return GetDefaultInterface()->get_CurrentView();
  }

// StdProp:Smallint
  void __fastcall set_CurrentView(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentView(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_CurrentSectionTop(void)
  {
    return GetDefaultInterface()->get_CurrentSectionTop();
  }

// StdProp:Smallint
  void __fastcall set_CurrentSectionTop(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentSectionTop(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_CurrentSectionLeft(void)
  {
    return GetDefaultInterface()->get_CurrentSectionLeft();
  }

// StdProp:Smallint
  void __fastcall set_CurrentSectionLeft(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentSectionLeft(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelLeft(void)
  {
    return GetDefaultInterface()->get_SelLeft();
  }

// StdProp:Integer
  void __fastcall set_SelLeft(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelLeft(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelTop(void)
  {
    return GetDefaultInterface()->get_SelTop();
  }

// StdProp:Integer
  void __fastcall set_SelTop(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelTop(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelWidth(void)
  {
    return GetDefaultInterface()->get_SelWidth();
  }

// StdProp:Integer
  void __fastcall set_SelWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SelHeight(void)
  {
    return GetDefaultInterface()->get_SelHeight();
  }

// StdProp:Integer
  void __fastcall set_SelHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_SelHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CurrentRecord(void)
  {
    return GetDefaultInterface()->get_CurrentRecord();
  }

// StdProp:Integer
  void __fastcall set_CurrentRecord(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentRecord(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PictureData(void)
  {
    return GetDefaultInterface()->get_PictureData();
  }

// StdProp:OleVariant
  void __fastcall set_PictureData(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureData(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_InsideHeight(void)
  {
    return GetDefaultInterface()->get_InsideHeight();
  }

// StdProp:Integer
  void __fastcall set_InsideHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_InsideHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_InsideWidth(void)
  {
    return GetDefaultInterface()->get_InsideWidth();
  }

// StdProp:Integer
  void __fastcall set_InsideWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_InsideWidth(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PicturePalette(void)
  {
    return GetDefaultInterface()->get_PicturePalette();
  }

// StdProp:OleVariant
  void __fastcall set_PicturePalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PicturePalette(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasModule(void)
  {
    return GetDefaultInterface()->get_HasModule();
  }

// StdProp:WordBool
  void __fastcall set_HasModule(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HasModule(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_acHiddenCurrentPage(void)
  {
    return GetDefaultInterface()->get_acHiddenCurrentPage();
  }

// StdProp:Integer
  void __fastcall set_acHiddenCurrentPage(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_acHiddenCurrentPage(pRet/*[in]*/);
  }

// StdProp:
  Access_97::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:Smallint
  short __fastcall get_NewRecord(void)
  {
    return GetDefaultInterface()->get_NewRecord();
  }

// StdProp:
  Access_97::AccessControlPtr __fastcall get_ActiveControl(void)
  {
    return GetDefaultInterface()->get_ActiveControl();
  }

// StdProp:
  Access_97::AccessControlPtr __fastcall get_DefaultControl(long ControlType/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultControl(ControlType/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Dynaset(void)
  {
    return GetDefaultInterface()->get_Dynaset();
  }

// StdProp:
  Dao_97::RecordsetPtr __fastcall get_RecordsetClone(void)
  {
    return GetDefaultInterface()->get_RecordsetClone();
  }

// StdProp:
  Access_97::AccessSectionPtr __fastcall get_Section(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->get_Section(var/*[in]*/);
  }

// StdProp:
  Access_97::AccessFormPtr __fastcall get_Form(void)
  {
    return GetDefaultInterface()->get_Form();
  }

// StdProp:
  Access_97::ModulePtr __fastcall get_Module(void)
  {
    return GetDefaultInterface()->get_Module();
  }

// StdProp:
  Access_97::PropertiesPtr __fastcall get_Properties(void)
  {
    return GetDefaultInterface()->get_Properties();
  }

// StdProp:
  Access_97::AccessControlPtr __fastcall get_ConnectControl(void)
  {
    return GetDefaultInterface()->get_ConnectControl();
  }

// StdProp:
  Access_97::Controls_Ptr __fastcall get_Controls(void)
  {
    return GetDefaultInterface()->get_Controls();
  }

  /*CoClassWriteMethods*/
  void __fastcall Undo(void)
  {
    GetDefaultInterface()->Undo();
  }

  void __fastcall Recalc(void)
  {
    GetDefaultInterface()->Recalc();
  }

  void __fastcall Requery(void)
  {
    GetDefaultInterface()->Requery();
  }

  void __fastcall Refresh(void)
  {
    GetDefaultInterface()->Refresh();
  }

  void __fastcall Repaint(void)
  {
    GetDefaultInterface()->Repaint();
  }

  void __fastcall GoToPage(long PageNumber/*[in]*/, long Right/*[in,def,opt]*/, 
                           long Down/*[in,def,opt]*/)
  {
    GetDefaultInterface()->GoToPage(PageNumber/*[in]*/, Right/*[in,def,opt]*/, Down/*[in,def,opt]*/);
  }

  void __fastcall SetFocus(void)
  {
    GetDefaultInterface()->SetFocus();
  }

  TVariant __fastcall _Evaluate(BSTR bstrExpr/*[in]*/, LPSAFEARRAY* ppsa/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(bstrExpr/*[in]*/, ppsa/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property TOLEBOOL AllowEditing={ read=get_AllowEditing }; // 0, No
  __property short DefaultEditing={ read=get_DefaultEditing }; // 0, No
  __property unsigned_char AllowUpdating={ read=get_AllowUpdating }; // 0, No
  __property TOLEBOOL MinButton={ read=get_MinButton }; // 0, No
  __property TOLEBOOL MaxButton={ read=get_MaxButton }; // 0, No
  __property unsigned_char TabularCharSet={ read=get_TabularCharSet }; // 0, No
  __property TOLEBOOL ShowGrid={ read=get_ShowGrid }; // 0, No
  __property long LogicalPageWidth={ read=get_LogicalPageWidth }; // 0, No
  __property long LogicalPageHeight={ read=get_LogicalPageHeight }; // 0, No
  __property long ZoomControl={ read=get_ZoomControl }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtMip={ read=get_PrtMip }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevMode={ read=get_PrtDevMode }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevNames={ read=get_PrtDevNames }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Bookmark={ read=get_Bookmark }; // 0, No
  */
  __property unsigned_char TabularFamily={ read=get_TabularFamily }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PaintPalette={ read=get_PaintPalette }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant OpenArgs={ read=get_OpenArgs }; // 0, No
  */
  __property short ConnectSynch={ read=get_ConnectSynch }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PictureData={ read=get_PictureData }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PicturePalette={ read=get_PicturePalette }; // 0, No
  */
  __property long acHiddenCurrentPage={ read=get_acHiddenCurrentPage }; // 0, No
  __property Access_97::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property short NewRecord={ read=get_NewRecord }; // 0, No
  __property Access_97::AccessControlPtr ActiveControl={ read=get_ActiveControl }; // 0, Yes
  __property Access_97::AccessControlPtr DefaultControl[long ControlType]={ read=get_DefaultControl }; // 0, Yes
  __property LPDISPATCH Dynaset={ read=get_Dynaset }; // 0, No
  __property Dao_97::RecordsetPtr RecordsetClone={ read=get_RecordsetClone }; // 0, Yes
  __property Access_97::AccessSectionPtr Section[VARIANT var]={ read=get_Section }; // 0, Yes
  __property Access_97::AccessFormPtr Form={ read=get_Form }; // 0, Yes
  __property Access_97::ModulePtr Module={ read=get_Module }; // 0, Yes
  __property Access_97::PropertiesPtr Properties={ read=get_Properties }; // 0, Yes
  __property Access_97::AccessControlPtr ConnectControl={ read=get_ConnectControl }; // 0, Yes
  __property Access_97::Controls_Ptr Controls={ read=get_Controls }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR FormName={ read=get_FormName, stored=false }; // 0, No
  __property BSTR RecordSource={ read=get_RecordSource, stored=false }; // 0, No
  __property BSTR Filter={ read=get_Filter, stored=false }; // 0, No
  __property TOLEBOOL FilterOn={ read=get_FilterOn, stored=false }; // 0, No
  __property BSTR OrderBy={ read=get_OrderBy, stored=false }; // 0, No
  __property TOLEBOOL OrderByOn={ read=get_OrderByOn, stored=false }; // 0, No
  __property TOLEBOOL AllowFilters={ read=get_AllowFilters, stored=false }; // 0, No
  __property BSTR Caption={ read=get_Caption, stored=false }; // 0, No
  __property unsigned_char DefaultView={ read=get_DefaultView, stored=false }; // 0, No
  __property unsigned_char ViewsAllowed={ read=get_ViewsAllowed, stored=false }; // 0, No
  __property TOLEBOOL AllowEdits={ read=get_AllowEdits, stored=false }; // 0, No
  __property TOLEBOOL AllowDeletions={ read=get_AllowDeletions, stored=false }; // 0, No
  __property TOLEBOOL AllowAdditions={ read=get_AllowAdditions, stored=false }; // 0, No
  __property TOLEBOOL DataEntry={ read=get_DataEntry, stored=false }; // 0, No
  __property unsigned_char RecordsetType={ read=get_RecordsetType, stored=false }; // 0, No
  __property unsigned_char RecordLocks={ read=get_RecordLocks, stored=false }; // 0, No
  __property unsigned_char ScrollBars={ read=get_ScrollBars, stored=false }; // 0, No
  __property TOLEBOOL RecordSelectors={ read=get_RecordSelectors, stored=false }; // 0, No
  __property TOLEBOOL NavigationButtons={ read=get_NavigationButtons, stored=false }; // 0, No
  __property TOLEBOOL DividingLines={ read=get_DividingLines, stored=false }; // 0, No
  __property TOLEBOOL AutoResize={ read=get_AutoResize, stored=false }; // 0, No
  __property TOLEBOOL AutoCenter={ read=get_AutoCenter, stored=false }; // 0, No
  __property TOLEBOOL PopUp={ read=get_PopUp, stored=false }; // 0, No
  __property TOLEBOOL Modal={ read=get_Modal, stored=false }; // 0, No
  __property unsigned_char BorderStyle={ read=get_BorderStyle, stored=false }; // 0, No
  __property TOLEBOOL ControlBox={ read=get_ControlBox, stored=false }; // 0, No
  __property unsigned_char MinMaxButtons={ read=get_MinMaxButtons, stored=false }; // 0, No
  __property TOLEBOOL CloseButton={ read=get_CloseButton, stored=false }; // 0, No
  __property TOLEBOOL WhatsThisButton={ read=get_WhatsThisButton, stored=false }; // 0, No
  __property short Width={ read=get_Width, stored=false }; // 0, No
  __property BSTR Picture={ read=get_Picture, stored=false }; // 0, No
  __property unsigned_char PictureType={ read=get_PictureType, stored=false }; // 0, No
  __property unsigned_char PictureSizeMode={ read=get_PictureSizeMode, stored=false }; // 0, No
  __property unsigned_char PictureAlignment={ read=get_PictureAlignment, stored=false }; // 0, No
  __property TOLEBOOL PictureTiling={ read=get_PictureTiling, stored=false }; // 0, No
  __property unsigned_char Cycle={ read=get_Cycle, stored=false }; // 0, No
  __property BSTR MenuBar={ read=get_MenuBar, stored=false }; // 0, No
  __property BSTR Toolbar={ read=get_Toolbar, stored=false }; // 0, No
  __property TOLEBOOL ShortcutMenu={ read=get_ShortcutMenu, stored=false }; // 0, No
  __property BSTR ShortcutMenuBar={ read=get_ShortcutMenuBar, stored=false }; // 0, No
  __property short GridX={ read=get_GridX, stored=false }; // 0, No
  __property short GridY={ read=get_GridY, stored=false }; // 0, No
  __property TOLEBOOL LayoutForPrint={ read=get_LayoutForPrint, stored=false }; // 0, No
  __property TOLEBOOL FastLaserPrinting={ read=get_FastLaserPrinting, stored=false }; // 0, No
  __property BSTR HelpFile={ read=get_HelpFile, stored=false }; // 0, No
  __property long HelpContextId={ read=get_HelpContextId, stored=false }; // 0, No
  __property short RowHeight={ read=get_RowHeight, stored=false }; // 0, No
  __property BSTR DatasheetFontName={ read=get_DatasheetFontName, stored=false }; // 0, No
  __property short DatasheetFontHeight={ read=get_DatasheetFontHeight, stored=false }; // 0, No
  __property short DatasheetFontWeight={ read=get_DatasheetFontWeight, stored=false }; // 0, No
  __property TOLEBOOL DatasheetFontItalic={ read=get_DatasheetFontItalic, stored=false }; // 0, No
  __property TOLEBOOL DatasheetFontUnderline={ read=get_DatasheetFontUnderline, stored=false }; // 0, No
  __property unsigned_char DatasheetGridlinesBehavior={ read=get_DatasheetGridlinesBehavior, stored=false }; // 0, No
  __property long DatasheetGridlinesColor={ read=get_DatasheetGridlinesColor, stored=false }; // 0, No
  __property unsigned_char DatasheetCellsEffect={ read=get_DatasheetCellsEffect, stored=false }; // 0, No
  __property long DatasheetForeColor={ read=get_DatasheetForeColor, stored=false }; // 0, No
  __property long DatasheetBackColor={ read=get_DatasheetBackColor, stored=false }; // 0, No
  __property long Hwnd={ read=get_Hwnd, stored=false }; // 0, No
  __property short Count={ read=get_Count, stored=false }; // 0, No
  __property long Page={ read=get_Page, stored=false }; // 0, No
  __property short Pages={ read=get_Pages, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL Painting={ read=get_Painting, stored=false }; // 0, No
  __property short FrozenColumns={ read=get_FrozenColumns, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property BSTR PaletteSource={ read=get_PaletteSource, stored=false }; // 0, No
  __property BSTR Tag={ read=get_Tag, stored=false }; // 0, No
  __property BSTR OnMenu={ read=get_OnMenu, stored=false }; // 0, No
  __property BSTR OnCurrent={ read=get_OnCurrent, stored=false }; // 0, No
  __property BSTR OnInsert={ read=get_OnInsert, stored=false }; // 0, No
  __property BSTR BeforeInsert={ read=get_BeforeInsert, stored=false }; // 0, No
  __property BSTR AfterInsert={ read=get_AfterInsert, stored=false }; // 0, No
  __property BSTR BeforeUpdate={ read=get_BeforeUpdate, stored=false }; // 0, No
  __property BSTR AfterUpdate={ read=get_AfterUpdate, stored=false }; // 0, No
  __property BSTR OnDelete={ read=get_OnDelete, stored=false }; // 0, No
  __property BSTR BeforeDelConfirm={ read=get_BeforeDelConfirm, stored=false }; // 0, No
  __property BSTR AfterDelConfirm={ read=get_AfterDelConfirm, stored=false }; // 0, No
  __property BSTR OnOpen={ read=get_OnOpen, stored=false }; // 0, No
  __property BSTR OnLoad={ read=get_OnLoad, stored=false }; // 0, No
  __property BSTR OnResize={ read=get_OnResize, stored=false }; // 0, No
  __property BSTR OnUnload={ read=get_OnUnload, stored=false }; // 0, No
  __property BSTR OnClose={ read=get_OnClose, stored=false }; // 0, No
  __property BSTR OnActivate={ read=get_OnActivate, stored=false }; // 0, No
  __property BSTR OnDeactivate={ read=get_OnDeactivate, stored=false }; // 0, No
  __property BSTR OnGotFocus={ read=get_OnGotFocus, stored=false }; // 0, No
  __property BSTR OnLostFocus={ read=get_OnLostFocus, stored=false }; // 0, No
  __property BSTR OnClick={ read=get_OnClick, stored=false }; // 0, No
  __property BSTR OnDblClick={ read=get_OnDblClick, stored=false }; // 0, No
  __property BSTR OnMouseDown={ read=get_OnMouseDown, stored=false }; // 0, No
  __property BSTR OnMouseMove={ read=get_OnMouseMove, stored=false }; // 0, No
  __property BSTR OnMouseUp={ read=get_OnMouseUp, stored=false }; // 0, No
  __property BSTR OnKeyDown={ read=get_OnKeyDown, stored=false }; // 0, No
  __property BSTR OnKeyUp={ read=get_OnKeyUp, stored=false }; // 0, No
  __property BSTR OnKeyPress={ read=get_OnKeyPress, stored=false }; // 0, No
  __property TOLEBOOL KeyPreview={ read=get_KeyPreview, stored=false }; // 0, No
  __property BSTR OnError={ read=get_OnError, stored=false }; // 0, No
  __property BSTR OnFilter={ read=get_OnFilter, stored=false }; // 0, No
  __property BSTR OnApplyFilter={ read=get_OnApplyFilter, stored=false }; // 0, No
  __property BSTR OnTimer={ read=get_OnTimer, stored=false }; // 0, No
  __property long TimerInterval={ read=get_TimerInterval, stored=false }; // 0, No
  __property TOLEBOOL Dirty={ read=get_Dirty, stored=false }; // 0, No
  __property short WindowWidth={ read=get_WindowWidth, stored=false }; // 0, No
  __property short WindowHeight={ read=get_WindowHeight, stored=false }; // 0, No
  __property short CurrentView={ read=get_CurrentView, stored=false }; // 0, No
  __property short CurrentSectionTop={ read=get_CurrentSectionTop, stored=false }; // 0, No
  __property short CurrentSectionLeft={ read=get_CurrentSectionLeft, stored=false }; // 0, No
  __property long SelLeft={ read=get_SelLeft, stored=false }; // 0, No
  __property long SelTop={ read=get_SelTop, stored=false }; // 0, No
  __property long SelWidth={ read=get_SelWidth, stored=false }; // 0, No
  __property long SelHeight={ read=get_SelHeight, stored=false }; // 0, No
  __property long CurrentRecord={ read=get_CurrentRecord, stored=false }; // 0, No
  __property long InsideHeight={ read=get_InsideHeight, stored=false }; // 0, No
  __property long InsideWidth={ read=get_InsideWidth, stored=false }; // 0, No
  __property TOLEBOOL HasModule={ read=get_HasModule, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnLoad1;
  TNotifyEvent                   FOnCurrent1;
  TAccessFormBeforeInsert        FOnBeforeInsert;
  TNotifyEvent                   FOnAfterInsert;
  TAccessFormBeforeUpdate        FOnBeforeUpdate;
  TNotifyEvent                   FOnAfterUpdate;
  TAccessFormDelete              FOnDelete1;
  TAccessFormBeforeDelConfirm    FOnBeforeDelConfirm;
  TAccessFormAfterDelConfirm     FOnAfterDelConfirm;
  TAccessFormOpen                FOnOpen1;
  TNotifyEvent                   FOnResize1;
  TAccessFormUnload              FOnUnload1;
  TNotifyEvent                   FOnClose1;
  TNotifyEvent                   FOnActivate1;
  TNotifyEvent                   FOnDeactivate1;
  TNotifyEvent                   FOnGotFocus1;
  TNotifyEvent                   FOnLostFocus1;
  TNotifyEvent                   FOnClick1;
  TAccessFormDblClick            FOnDblClick1;
  TAccessFormMouseDown           FOnMouseDown1;
  TAccessFormMouseMove           FOnMouseMove1;
  TAccessFormMouseUp             FOnMouseUp1;
  TAccessFormKeyDown             FOnKeyDown1;
  TAccessFormKeyPress            FOnKeyPress1;
  TAccessFormKeyUp               FOnKeyUp1;
  TAccessFormError               FOnError1;
  TNotifyEvent                   FOnTimer1;
  TAccessFormFilter              FOnFilter1;
  TAccessFormApplyFilter         FOnApplyFilter1;
__published:
  __property TNotifyEvent OnLoad1={ read=FOnLoad1, write=FOnLoad1 };
  __property TNotifyEvent OnCurrent1={ read=FOnCurrent1, write=FOnCurrent1 };
  __property TAccessFormBeforeInsert OnBeforeInsert={ read=FOnBeforeInsert, write=FOnBeforeInsert };
  __property TNotifyEvent OnAfterInsert={ read=FOnAfterInsert, write=FOnAfterInsert };
  __property TAccessFormBeforeUpdate OnBeforeUpdate={ read=FOnBeforeUpdate, write=FOnBeforeUpdate };
  __property TNotifyEvent OnAfterUpdate={ read=FOnAfterUpdate, write=FOnAfterUpdate };
  __property TAccessFormDelete OnDelete1={ read=FOnDelete1, write=FOnDelete1 };
  __property TAccessFormBeforeDelConfirm OnBeforeDelConfirm={ read=FOnBeforeDelConfirm, write=FOnBeforeDelConfirm };
  __property TAccessFormAfterDelConfirm OnAfterDelConfirm={ read=FOnAfterDelConfirm, write=FOnAfterDelConfirm };
  __property TAccessFormOpen OnOpen1={ read=FOnOpen1, write=FOnOpen1 };
  __property TNotifyEvent OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TAccessFormUnload OnUnload1={ read=FOnUnload1, write=FOnUnload1 };
  __property TNotifyEvent OnClose1={ read=FOnClose1, write=FOnClose1 };
  __property TNotifyEvent OnActivate1={ read=FOnActivate1, write=FOnActivate1 };
  __property TNotifyEvent OnDeactivate1={ read=FOnDeactivate1, write=FOnDeactivate1 };
  __property TNotifyEvent OnGotFocus1={ read=FOnGotFocus1, write=FOnGotFocus1 };
  __property TNotifyEvent OnLostFocus1={ read=FOnLostFocus1, write=FOnLostFocus1 };
  __property TNotifyEvent OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TAccessFormDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TAccessFormMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TAccessFormMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TAccessFormMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TAccessFormKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TAccessFormKeyPress OnKeyPress1={ read=FOnKeyPress1, write=FOnKeyPress1 };
  __property TAccessFormKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TAccessFormError OnError1={ read=FOnError1, write=FOnError1 };
  __property TNotifyEvent OnTimer1={ read=FOnTimer1, write=FOnTimer1 };
  __property TAccessFormFilter OnFilter1={ read=FOnFilter1, write=FOnFilter1 };
  __property TAccessFormApplyFilter OnApplyFilter1={ read=FOnApplyFilter1, write=FOnApplyFilter1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessReport
// Help String      : 
// Default Interface: _Report
// Def. Intf. Object: _ReportPtr
// Def. Intf. DISP? : No
// Event   Interface: _ReportEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TAccessReportOpen)(System::TObject * Sender, 
                                                        short* Cancel/*[out]*/);
typedef void __fastcall (__closure * TAccessReportError)(System::TObject * Sender, 
                                                         short* DataErr/*[in,out]*/, 
                                                         short* Response/*[out]*/);
typedef void __fastcall (__closure * TAccessReportNoData)(System::TObject * Sender, 
                                                          short* Cancel/*[out]*/);

class PACKAGE TAccessReport : public Oleserver::TOleServer
{
  _ReportPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessReport(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ReportPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ReportPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get_FormName(void)
  {
    return GetDefaultInterface()->get_FormName();
  }

// StdProp:WideString
  void __fastcall set_FormName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FormName(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecordSource(void)
  {
    return GetDefaultInterface()->get_RecordSource();
  }

// StdProp:WideString
  void __fastcall set_RecordSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Filter(void)
  {
    return GetDefaultInterface()->get_Filter();
  }

// StdProp:WideString
  void __fastcall set_Filter(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Filter(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FilterOn(void)
  {
    return GetDefaultInterface()->get_FilterOn();
  }

// StdProp:WordBool
  void __fastcall set_FilterOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FilterOn(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OrderBy(void)
  {
    return GetDefaultInterface()->get_OrderBy();
  }

// StdProp:WideString
  void __fastcall set_OrderBy(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderBy(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OrderByOn(void)
  {
    return GetDefaultInterface()->get_OrderByOn();
  }

// StdProp:WordBool
  void __fastcall set_OrderByOn(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OrderByOn(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

// StdProp:WideString
  void __fastcall set_Caption(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_RecordLocks(void)
  {
    return GetDefaultInterface()->get_RecordLocks();
  }

// StdProp:Byte
  void __fastcall set_RecordLocks(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_RecordLocks(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PageHeader(void)
  {
    return GetDefaultInterface()->get_PageHeader();
  }

// StdProp:Byte
  void __fastcall set_PageHeader(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PageHeader(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PageFooter(void)
  {
    return GetDefaultInterface()->get_PageFooter();
  }

// StdProp:Byte
  void __fastcall set_PageFooter(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PageFooter(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_DateGrouping(void)
  {
    return GetDefaultInterface()->get_DateGrouping();
  }

// StdProp:Byte
  void __fastcall set_DateGrouping(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DateGrouping(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_GrpKeepTogether(void)
  {
    return GetDefaultInterface()->get_GrpKeepTogether();
  }

// StdProp:Byte
  void __fastcall set_GrpKeepTogether(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GrpKeepTogether(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MinButton(void)
  {
    return GetDefaultInterface()->get_MinButton();
  }

// StdProp:WordBool
  void __fastcall set_MinButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MinButton(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MaxButton(void)
  {
    return GetDefaultInterface()->get_MaxButton();
  }

// StdProp:WordBool
  void __fastcall set_MaxButton(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MaxButton(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

// StdProp:Smallint
  void __fastcall set_Width(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Width(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Picture(void)
  {
    return GetDefaultInterface()->get_Picture();
  }

// StdProp:WideString
  void __fastcall set_Picture(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Picture(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureType(void)
  {
    return GetDefaultInterface()->get_PictureType();
  }

// StdProp:Byte
  void __fastcall set_PictureType(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureType(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureSizeMode(void)
  {
    return GetDefaultInterface()->get_PictureSizeMode();
  }

// StdProp:Byte
  void __fastcall set_PictureSizeMode(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureSizeMode(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PictureAlignment(void)
  {
    return GetDefaultInterface()->get_PictureAlignment();
  }

// StdProp:Byte
  void __fastcall set_PictureAlignment(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureAlignment(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PictureTiling(void)
  {
    return GetDefaultInterface()->get_PictureTiling();
  }

// StdProp:WordBool
  void __fastcall set_PictureTiling(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureTiling(pRet/*[in]*/);
  }

// StdProp:Byte
  unsigned_char __fastcall get_PicturePages(void)
  {
    return GetDefaultInterface()->get_PicturePages();
  }

// StdProp:Byte
  void __fastcall set_PicturePages(unsigned_char pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PicturePages(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

// StdProp:WideString
  void __fastcall set_MenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Toolbar(void)
  {
    return GetDefaultInterface()->get_Toolbar();
  }

// StdProp:WideString
  void __fastcall set_Toolbar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Toolbar(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ShortcutMenuBar(void)
  {
    return GetDefaultInterface()->get_ShortcutMenuBar();
  }

// StdProp:WideString
  void __fastcall set_ShortcutMenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenuBar(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridX(void)
  {
    return GetDefaultInterface()->get_GridX();
  }

// StdProp:Smallint
  void __fastcall set_GridX(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridX(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_GridY(void)
  {
    return GetDefaultInterface()->get_GridY();
  }

// StdProp:Smallint
  void __fastcall set_GridY(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_GridY(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_LayoutForPrint(void)
  {
    return GetDefaultInterface()->get_LayoutForPrint();
  }

// StdProp:WordBool
  void __fastcall set_LayoutForPrint(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LayoutForPrint(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FastLaserPrinting(void)
  {
    return GetDefaultInterface()->get_FastLaserPrinting();
  }

// StdProp:WordBool
  void __fastcall set_FastLaserPrinting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FastLaserPrinting(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_HelpFile(void)
  {
    return GetDefaultInterface()->get_HelpFile();
  }

// StdProp:WideString
  void __fastcall set_HelpFile(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpFile(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HelpContextId(void)
  {
    return GetDefaultInterface()->get_HelpContextId();
  }

// StdProp:Integer
  void __fastcall set_HelpContextId(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HelpContextId(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Hwnd(void)
  {
    return GetDefaultInterface()->get_Hwnd();
  }

// StdProp:Integer
  void __fastcall set_Hwnd(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Hwnd(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

// StdProp:Smallint
  void __fastcall set_Count(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Count(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Page(void)
  {
    return GetDefaultInterface()->get_Page();
  }

// StdProp:Integer
  void __fastcall set_Page(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Page(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_Pages(void)
  {
    return GetDefaultInterface()->get_Pages();
  }

// StdProp:Smallint
  void __fastcall set_Pages(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Pages(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageWidth(void)
  {
    return GetDefaultInterface()->get_LogicalPageWidth();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageWidth(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_LogicalPageHeight(void)
  {
    return GetDefaultInterface()->get_LogicalPageHeight();
  }

// StdProp:Integer
  void __fastcall set_LogicalPageHeight(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_LogicalPageHeight(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ZoomControl(void)
  {
    return GetDefaultInterface()->get_ZoomControl();
  }

// StdProp:Integer
  void __fastcall set_ZoomControl(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ZoomControl(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HasData(void)
  {
    return GetDefaultInterface()->get_HasData();
  }

// StdProp:Integer
  void __fastcall set_HasData(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HasData(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

// StdProp:Integer
  void __fastcall set_Left(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Left(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

// StdProp:Integer
  void __fastcall set_Top(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Top(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

// StdProp:Integer
  void __fastcall set_Height(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Height(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintSection(void)
  {
    return GetDefaultInterface()->get_PrintSection();
  }

// StdProp:WordBool
  void __fastcall set_PrintSection(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrintSection(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_NextRecord(void)
  {
    return GetDefaultInterface()->get_NextRecord();
  }

// StdProp:WordBool
  void __fastcall set_NextRecord(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_NextRecord(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MoveLayout(void)
  {
    return GetDefaultInterface()->get_MoveLayout();
  }

// StdProp:WordBool
  void __fastcall set_MoveLayout(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MoveLayout(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FormatCount(void)
  {
    return GetDefaultInterface()->get_FormatCount();
  }

// StdProp:Smallint
  void __fastcall set_FormatCount(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FormatCount(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_PrintCount(void)
  {
    return GetDefaultInterface()->get_PrintCount();
  }

// StdProp:Smallint
  void __fastcall set_PrintCount(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrintCount(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Painting(void)
  {
    return GetDefaultInterface()->get_Painting();
  }

// StdProp:WordBool
  void __fastcall set_Painting(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Painting(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtMip(void)
  {
    return GetDefaultInterface()->get_PrtMip();
  }

// StdProp:OleVariant
  void __fastcall set_PrtMip(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtMip(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevMode(void)
  {
    return GetDefaultInterface()->get_PrtDevMode();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevMode(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevMode(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PrtDevNames(void)
  {
    return GetDefaultInterface()->get_PrtDevNames();
  }

// StdProp:OleVariant
  void __fastcall set_PrtDevNames(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PrtDevNames(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ForeColor(void)
  {
    return GetDefaultInterface()->get_ForeColor();
  }

// StdProp:Integer
  void __fastcall set_ForeColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ForeColor(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CurrentX(void)
  {
    return GetDefaultInterface()->get_CurrentX();
  }

// StdProp:Single
  void __fastcall set_CurrentX(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentX(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CurrentY(void)
  {
    return GetDefaultInterface()->get_CurrentY();
  }

// StdProp:Single
  void __fastcall set_CurrentY(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentY(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleHeight(void)
  {
    return GetDefaultInterface()->get_ScaleHeight();
  }

// StdProp:Single
  void __fastcall set_ScaleHeight(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleHeight(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleLeft(void)
  {
    return GetDefaultInterface()->get_ScaleLeft();
  }

// StdProp:Single
  void __fastcall set_ScaleLeft(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleLeft(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_ScaleMode(void)
  {
    return GetDefaultInterface()->get_ScaleMode();
  }

// StdProp:Smallint
  void __fastcall set_ScaleMode(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleMode(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleTop(void)
  {
    return GetDefaultInterface()->get_ScaleTop();
  }

// StdProp:Single
  void __fastcall set_ScaleTop(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleTop(pRet/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_ScaleWidth(void)
  {
    return GetDefaultInterface()->get_ScaleWidth();
  }

// StdProp:Single
  void __fastcall set_ScaleWidth(float pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ScaleWidth(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontBold(void)
  {
    return GetDefaultInterface()->get_FontBold();
  }

// StdProp:Smallint
  void __fastcall set_FontBold(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontBold(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontItalic(void)
  {
    return GetDefaultInterface()->get_FontItalic();
  }

// StdProp:Smallint
  void __fastcall set_FontItalic(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontItalic(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_FontName(void)
  {
    return GetDefaultInterface()->get_FontName();
  }

// StdProp:WideString
  void __fastcall set_FontName(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontName(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontSize(void)
  {
    return GetDefaultInterface()->get_FontSize();
  }

// StdProp:Smallint
  void __fastcall set_FontSize(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontSize(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FontUnderline(void)
  {
    return GetDefaultInterface()->get_FontUnderline();
  }

// StdProp:Smallint
  void __fastcall set_FontUnderline(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FontUnderline(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DrawMode(void)
  {
    return GetDefaultInterface()->get_DrawMode();
  }

// StdProp:Smallint
  void __fastcall set_DrawMode(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DrawMode(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DrawStyle(void)
  {
    return GetDefaultInterface()->get_DrawStyle();
  }

// StdProp:Smallint
  void __fastcall set_DrawStyle(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DrawStyle(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_DrawWidth(void)
  {
    return GetDefaultInterface()->get_DrawWidth();
  }

// StdProp:Smallint
  void __fastcall set_DrawWidth(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_DrawWidth(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_FillColor(void)
  {
    return GetDefaultInterface()->get_FillColor();
  }

// StdProp:Integer
  void __fastcall set_FillColor(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FillColor(pRet/*[in]*/);
  }

// StdProp:Smallint
  short __fastcall get_FillStyle(void)
  {
    return GetDefaultInterface()->get_FillStyle();
  }

// StdProp:Smallint
  void __fastcall set_FillStyle(short pRet/*[in]*/)
  {
    GetDefaultInterface()->set_FillStyle(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Name(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PaletteSource(void)
  {
    return GetDefaultInterface()->get_PaletteSource();
  }

// StdProp:WideString
  void __fastcall set_PaletteSource(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaletteSource(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Tag(void)
  {
    return GetDefaultInterface()->get_Tag();
  }

// StdProp:WideString
  void __fastcall set_Tag(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Tag(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PaintPalette(void)
  {
    return GetDefaultInterface()->get_PaintPalette();
  }

// StdProp:OleVariant
  void __fastcall set_PaintPalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PaintPalette(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnMenu(void)
  {
    return GetDefaultInterface()->get_OnMenu();
  }

// StdProp:WideString
  void __fastcall set_OnMenu(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnMenu(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnOpen(void)
  {
    return GetDefaultInterface()->get_OnOpen();
  }

// StdProp:WideString
  void __fastcall set_OnOpen(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnOpen(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnClose(void)
  {
    return GetDefaultInterface()->get_OnClose();
  }

// StdProp:WideString
  void __fastcall set_OnClose(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnClose(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnActivate(void)
  {
    return GetDefaultInterface()->get_OnActivate();
  }

// StdProp:WideString
  void __fastcall set_OnActivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnActivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDeactivate(void)
  {
    return GetDefaultInterface()->get_OnDeactivate();
  }

// StdProp:WideString
  void __fastcall set_OnDeactivate(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnDeactivate(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnNoData(void)
  {
    return GetDefaultInterface()->get_OnNoData();
  }

// StdProp:WideString
  void __fastcall set_OnNoData(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnNoData(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnPage(void)
  {
    return GetDefaultInterface()->get_OnPage();
  }

// StdProp:WideString
  void __fastcall set_OnPage(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnPage(pRet/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnError(void)
  {
    return GetDefaultInterface()->get_OnError();
  }

// StdProp:WideString
  void __fastcall set_OnError(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_OnError(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Dirty(void)
  {
    return GetDefaultInterface()->get_Dirty();
  }

// StdProp:WordBool
  void __fastcall set_Dirty(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_Dirty(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CurrentRecord(void)
  {
    return GetDefaultInterface()->get_CurrentRecord();
  }

// StdProp:Integer
  void __fastcall set_CurrentRecord(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_CurrentRecord(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PictureData(void)
  {
    return GetDefaultInterface()->get_PictureData();
  }

// StdProp:OleVariant
  void __fastcall set_PictureData(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PictureData(pRet/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PicturePalette(void)
  {
    return GetDefaultInterface()->get_PicturePalette();
  }

// StdProp:OleVariant
  void __fastcall set_PicturePalette(VARIANT pRet/*[in]*/)
  {
    GetDefaultInterface()->set_PicturePalette(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasModule(void)
  {
    return GetDefaultInterface()->get_HasModule();
  }

// StdProp:WordBool
  void __fastcall set_HasModule(VARIANT_BOOL pRet/*[in]*/)
  {
    GetDefaultInterface()->set_HasModule(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_acHiddenCurrentPage(void)
  {
    return GetDefaultInterface()->get_acHiddenCurrentPage();
  }

// StdProp:Integer
  void __fastcall set_acHiddenCurrentPage(long pRet/*[in]*/)
  {
    GetDefaultInterface()->set_acHiddenCurrentPage(pRet/*[in]*/);
  }

// StdProp:
  Access_97::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Access_97::AccessControlPtr __fastcall get_ActiveControl(void)
  {
    return GetDefaultInterface()->get_ActiveControl();
  }

// StdProp:
  Access_97::AccessControlPtr __fastcall get_DefaultControl(long ControlType/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultControl(ControlType/*[in]*/);
  }

// StdProp:
  Access_97::AccessSectionPtr __fastcall get_Section(VARIANT Index/*[in]*/)
  {
    return GetDefaultInterface()->get_Section(Index/*[in]*/);
  }

// StdProp:
  Access_97::AccessGroupLevelPtr __fastcall get_GroupLevel(long Index/*[in]*/)
  {
    return GetDefaultInterface()->get_GroupLevel(Index/*[in]*/);
  }

// StdProp:
  Access_97::AccessReportPtr __fastcall get_Report(void)
  {
    return GetDefaultInterface()->get_Report();
  }

// StdProp:
  Access_97::ModulePtr __fastcall get_Module(void)
  {
    return GetDefaultInterface()->get_Module();
  }

// StdProp:
  Access_97::PropertiesPtr __fastcall get_Properties(void)
  {
    return GetDefaultInterface()->get_Properties();
  }

// StdProp:
  Access_97::Controls_Ptr __fastcall get_Controls(void)
  {
    return GetDefaultInterface()->get_Controls();
  }

  /*CoClassWriteMethods*/
  void __fastcall Circle(short flags/*[in]*/, float X/*[in]*/, float Y/*[in]*/, float radius/*[in]*/, 
                         long color/*[in]*/, float start/*[in]*/, float end/*[in]*/, 
                         float aspect/*[in]*/)
  {
    GetDefaultInterface()->Circle(flags/*[in]*/, X/*[in]*/, Y/*[in]*/, radius/*[in]*/, color/*[in]*/, 
                                  start/*[in]*/, end/*[in]*/, aspect/*[in]*/);
  }

  void __fastcall Line(short flags/*[in]*/, float x1/*[in]*/, float y1/*[in]*/, float x2/*[in]*/, 
                       float y2/*[in]*/, long color/*[in]*/)
  {
    GetDefaultInterface()->Line(flags/*[in]*/, x1/*[in]*/, y1/*[in]*/, x2/*[in]*/, y2/*[in]*/, 
                                color/*[in]*/);
  }

  void __fastcall PSet(short flags/*[in]*/, float X/*[in]*/, float Y/*[in]*/, long color/*[in]*/)
  {
    GetDefaultInterface()->PSet(flags/*[in]*/, X/*[in]*/, Y/*[in]*/, color/*[in]*/);
  }

  void __fastcall Scale(short flags/*[in]*/, float x1/*[in]*/, float y1/*[in]*/, float x2/*[in]*/, 
                        float y2/*[in]*/)
  {
    GetDefaultInterface()->Scale(flags/*[in]*/, x1/*[in]*/, y1/*[in]*/, x2/*[in]*/, y2/*[in]*/);
  }

  float __fastcall TextWidth(BSTR Expr/*[in]*/)
  {
    return GetDefaultInterface()->TextWidth(Expr/*[in]*/);
  }

  float __fastcall TextHeight(BSTR Expr/*[in]*/)
  {
    return GetDefaultInterface()->TextHeight(Expr/*[in]*/);
  }

  void __fastcall Print(BSTR Expr/*[in]*/)
  {
    GetDefaultInterface()->Print(Expr/*[in]*/);
  }

  TVariant __fastcall _Evaluate(BSTR bstrExpr/*[in]*/, LPSAFEARRAY* ppsa/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(bstrExpr/*[in]*/, ppsa/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property TOLEBOOL MinButton={ read=get_MinButton }; // 0, No
  __property TOLEBOOL MaxButton={ read=get_MaxButton }; // 0, No
  __property long LogicalPageWidth={ read=get_LogicalPageWidth }; // 0, No
  __property long LogicalPageHeight={ read=get_LogicalPageHeight }; // 0, No
  __property long ZoomControl={ read=get_ZoomControl }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtMip={ read=get_PrtMip }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevMode={ read=get_PrtDevMode }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PrtDevNames={ read=get_PrtDevNames }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PaintPalette={ read=get_PaintPalette }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PictureData={ read=get_PictureData }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PicturePalette={ read=get_PicturePalette }; // 0, No
  */
  __property long acHiddenCurrentPage={ read=get_acHiddenCurrentPage }; // 0, No
  __property Access_97::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Access_97::AccessControlPtr ActiveControl={ read=get_ActiveControl }; // 0, Yes
  __property Access_97::AccessControlPtr DefaultControl[long ControlType]={ read=get_DefaultControl }; // 0, Yes
  __property Access_97::AccessSectionPtr Section[VARIANT Index]={ read=get_Section }; // 0, Yes
  __property Access_97::AccessGroupLevelPtr GroupLevel[long Index]={ read=get_GroupLevel }; // 0, Yes
  __property Access_97::AccessReportPtr Report={ read=get_Report }; // 0, Yes
  __property Access_97::ModulePtr Module={ read=get_Module }; // 0, Yes
  __property Access_97::PropertiesPtr Properties={ read=get_Properties }; // 0, Yes
  __property Access_97::Controls_Ptr Controls={ read=get_Controls }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR FormName={ read=get_FormName, stored=false }; // 0, No
  __property BSTR RecordSource={ read=get_RecordSource, stored=false }; // 0, No
  __property BSTR Filter={ read=get_Filter, stored=false }; // 0, No
  __property TOLEBOOL FilterOn={ read=get_FilterOn, stored=false }; // 0, No
  __property BSTR OrderBy={ read=get_OrderBy, stored=false }; // 0, No
  __property TOLEBOOL OrderByOn={ read=get_OrderByOn, stored=false }; // 0, No
  __property BSTR Caption={ read=get_Caption, stored=false }; // 0, No
  __property unsigned_char RecordLocks={ read=get_RecordLocks, stored=false }; // 0, No
  __property unsigned_char PageHeader={ read=get_PageHeader, stored=false }; // 0, No
  __property unsigned_char PageFooter={ read=get_PageFooter, stored=false }; // 0, No
  __property unsigned_char DateGrouping={ read=get_DateGrouping, stored=false }; // 0, No
  __property unsigned_char GrpKeepTogether={ read=get_GrpKeepTogether, stored=false }; // 0, No
  __property short Width={ read=get_Width, stored=false }; // 0, No
  __property BSTR Picture={ read=get_Picture, stored=false }; // 0, No
  __property unsigned_char PictureType={ read=get_PictureType, stored=false }; // 0, No
  __property unsigned_char PictureSizeMode={ read=get_PictureSizeMode, stored=false }; // 0, No
  __property unsigned_char PictureAlignment={ read=get_PictureAlignment, stored=false }; // 0, No
  __property TOLEBOOL PictureTiling={ read=get_PictureTiling, stored=false }; // 0, No
  __property unsigned_char PicturePages={ read=get_PicturePages, stored=false }; // 0, No
  __property BSTR MenuBar={ read=get_MenuBar, stored=false }; // 0, No
  __property BSTR Toolbar={ read=get_Toolbar, stored=false }; // 0, No
  __property BSTR ShortcutMenuBar={ read=get_ShortcutMenuBar, stored=false }; // 0, No
  __property short GridX={ read=get_GridX, stored=false }; // 0, No
  __property short GridY={ read=get_GridY, stored=false }; // 0, No
  __property TOLEBOOL LayoutForPrint={ read=get_LayoutForPrint, stored=false }; // 0, No
  __property TOLEBOOL FastLaserPrinting={ read=get_FastLaserPrinting, stored=false }; // 0, No
  __property BSTR HelpFile={ read=get_HelpFile, stored=false }; // 0, No
  __property long HelpContextId={ read=get_HelpContextId, stored=false }; // 0, No
  __property long Hwnd={ read=get_Hwnd, stored=false }; // 0, No
  __property short Count={ read=get_Count, stored=false }; // 0, No
  __property long Page={ read=get_Page, stored=false }; // 0, No
  __property short Pages={ read=get_Pages, stored=false }; // 0, No
  __property long HasData={ read=get_HasData, stored=false }; // 0, No
  __property long Left={ read=get_Left, stored=false }; // 0, No
  __property long Top={ read=get_Top, stored=false }; // 0, No
  __property long Height={ read=get_Height, stored=false }; // 0, No
  __property TOLEBOOL PrintSection={ read=get_PrintSection, stored=false }; // 0, No
  __property TOLEBOOL NextRecord={ read=get_NextRecord, stored=false }; // 0, No
  __property TOLEBOOL MoveLayout={ read=get_MoveLayout, stored=false }; // 0, No
  __property short FormatCount={ read=get_FormatCount, stored=false }; // 0, No
  __property short PrintCount={ read=get_PrintCount, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL Painting={ read=get_Painting, stored=false }; // 0, No
  __property long ForeColor={ read=get_ForeColor, stored=false }; // 0, No
  __property float CurrentX={ read=get_CurrentX, stored=false }; // 0, No
  __property float CurrentY={ read=get_CurrentY, stored=false }; // 0, No
  __property float ScaleHeight={ read=get_ScaleHeight, stored=false }; // 0, No
  __property float ScaleLeft={ read=get_ScaleLeft, stored=false }; // 0, No
  __property short ScaleMode={ read=get_ScaleMode, stored=false }; // 0, No
  __property float ScaleTop={ read=get_ScaleTop, stored=false }; // 0, No
  __property float ScaleWidth={ read=get_ScaleWidth, stored=false }; // 0, No
  __property short FontBold={ read=get_FontBold, stored=false }; // 0, No
  __property short FontItalic={ read=get_FontItalic, stored=false }; // 0, No
  __property BSTR FontName={ read=get_FontName, stored=false }; // 0, No
  __property short FontSize={ read=get_FontSize, stored=false }; // 0, No
  __property short FontUnderline={ read=get_FontUnderline, stored=false }; // 0, No
  __property short DrawMode={ read=get_DrawMode, stored=false }; // 0, No
  __property short DrawStyle={ read=get_DrawStyle, stored=false }; // 0, No
  __property short DrawWidth={ read=get_DrawWidth, stored=false }; // 0, No
  __property long FillColor={ read=get_FillColor, stored=false }; // 0, No
  __property short FillStyle={ read=get_FillStyle, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property BSTR PaletteSource={ read=get_PaletteSource, stored=false }; // 0, No
  __property BSTR Tag={ read=get_Tag, stored=false }; // 0, No
  __property BSTR OnMenu={ read=get_OnMenu, stored=false }; // 0, No
  __property BSTR OnOpen={ read=get_OnOpen, stored=false }; // 0, No
  __property BSTR OnClose={ read=get_OnClose, stored=false }; // 0, No
  __property BSTR OnActivate={ read=get_OnActivate, stored=false }; // 0, No
  __property BSTR OnDeactivate={ read=get_OnDeactivate, stored=false }; // 0, No
  __property BSTR OnNoData={ read=get_OnNoData, stored=false }; // 0, No
  __property BSTR OnPage={ read=get_OnPage, stored=false }; // 0, No
  __property BSTR OnError={ read=get_OnError, stored=false }; // 0, No
  __property TOLEBOOL Dirty={ read=get_Dirty, stored=false }; // 0, No
  __property long CurrentRecord={ read=get_CurrentRecord, stored=false }; // 0, No
  __property TOLEBOOL HasModule={ read=get_HasModule, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TAccessReportOpen              FOnOpen1;
  TNotifyEvent                   FOnClose1;
  TNotifyEvent                   FOnActivate1;
  TNotifyEvent                   FOnDeactivate1;
  TAccessReportError             FOnError1;
  TAccessReportNoData            FOnNoData1;
  TNotifyEvent                   FOnPage1;
__published:
  __property TAccessReportOpen OnOpen1={ read=FOnOpen1, write=FOnOpen1 };
  __property TNotifyEvent OnClose1={ read=FOnClose1, write=FOnClose1 };
  __property TNotifyEvent OnActivate1={ read=FOnActivate1, write=FOnActivate1 };
  __property TNotifyEvent OnDeactivate1={ read=FOnDeactivate1, write=FOnDeactivate1 };
  __property TAccessReportError OnError1={ read=FOnError1, write=FOnError1 };
  __property TAccessReportNoData OnNoData1={ read=FOnNoData1, write=FOnNoData1 };
  __property TNotifyEvent OnPage1={ read=FOnPage1, write=FOnPage1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. Object: _ApplicationPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (11) AppObject CanCreate Predeclid
// *********************************************************************//
class PACKAGE TAccessApplication : public Oleserver::TOleServer
{
  _ApplicationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessApplication(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ApplicationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ApplicationPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Access_97::AccessApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CodeContextObject(void)
  {
    return GetDefaultInterface()->get_CodeContextObject();
  }

// StdProp:WideString
  BSTR __fastcall get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

// StdProp:WideString
  void __fastcall set_MenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(pRet/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CurrentObjectType(void)
  {
    return GetDefaultInterface()->get_CurrentObjectType();
  }

// StdProp:WideString
  BSTR __fastcall get_CurrentObjectName(void)
  {
    return GetDefaultInterface()->get_CurrentObjectName();
  }

// StdProp:
  Access_97::Forms_Ptr __fastcall get_Forms(void)
  {
    return GetDefaultInterface()->get_Forms();
  }

// StdProp:
  Access_97::ReportsPtr __fastcall get_Reports(void)
  {
    return GetDefaultInterface()->get_Reports();
  }

// StdProp:
  Access_97::ScreenPtr __fastcall get_Screen(void)
  {
    return GetDefaultInterface()->get_Screen();
  }

// StdProp:
  Access_97::IDoCmdPtr __fastcall get_DoCmd(void)
  {
    return GetDefaultInterface()->get_DoCmd();
  }

// StdProp:WideString
  BSTR __fastcall get_ShortcutMenuBar(void)
  {
    return GetDefaultInterface()->get_ShortcutMenuBar();
  }

// StdProp:WideString
  void __fastcall set_ShortcutMenuBar(BSTR pRet/*[in]*/)
  {
    GetDefaultInterface()->set_ShortcutMenuBar(pRet/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL pfVisible/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pfVisible/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

// StdProp:WordBool
  void __fastcall set_UserControl(VARIANT_BOOL pfUserCtrl/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(pfUserCtrl/*[in]*/);
  }

// StdProp:
  Dao_97::DBEnginePtr __fastcall get_DBEngine(void)
  {
    return GetDefaultInterface()->get_DBEngine();
  }

// StdProp:
  Office_97::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:
  Office_97::AssistantPtr __fastcall get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

// StdProp:
  Access_97::AccessReferencesPtr __fastcall get_References(void)
  {
    return GetDefaultInterface()->get_References();
  }

// StdProp:
  Access_97::ModulesPtr __fastcall get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

// StdProp:
  Office_97::FileSearchPtr __fastcall get_FileSearch(void)
  {
    return GetDefaultInterface()->get_FileSearch();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsCompiled(void)
  {
    return GetDefaultInterface()->get_IsCompiled();
  }

  /*CoClassWriteMethods*/
  void __fastcall NewCurrentDatabase(BSTR filepath/*[in]*/)
  {
    GetDefaultInterface()->NewCurrentDatabase(filepath/*[in]*/);
  }

  void __fastcall OpenCurrentDatabase(BSTR filepath/*[in]*/, VARIANT_BOOL Exclusive/*[in,def,opt]*/)
  {
    GetDefaultInterface()->OpenCurrentDatabase(filepath/*[in]*/, Exclusive/*[in,def,opt]*/);
  }

  TVariant __fastcall GetOption(BSTR OptionName/*[in]*/)
  {
    return GetDefaultInterface()->GetOption(OptionName/*[in]*/);
  }

  void __fastcall SetOption(BSTR OptionName/*[in]*/, VARIANT Setting/*[in]*/)
  {
    GetDefaultInterface()->SetOption(OptionName/*[in]*/, Setting/*[in]*/);
  }

  void __fastcall Echo(short EchoOn/*[in]*/, BSTR bstrStatusBarText/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Echo(EchoOn/*[in]*/, bstrStatusBarText/*[in,def,opt]*/);
  }

  void __fastcall CloseCurrentDatabase(void)
  {
    GetDefaultInterface()->CloseCurrentDatabase();
  }

  void __fastcall Quit(Access_97::AcQuitOption Option/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Quit(Option/*[in,def,opt]*/);
  }

  TVariant __fastcall SysCmd(Access_97::AcSysCmdAction Action/*[in]*/, VARIANT Argument2/*[in,opt]*/, 
                             VARIANT Argument3/*[in,opt]*/)
  {
    return GetDefaultInterface()->SysCmd(Action/*[in]*/, Argument2/*[in,opt]*/, 
                                         Argument3/*[in,opt]*/);
  }

  Access_97::AccessFormPtr __fastcall CreateForm(VARIANT Database/*[in,opt]*/, 
                                                 VARIANT FormTemplate/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateForm(Database/*[in,opt]*/, FormTemplate/*[in,opt]*/);
  }

  Access_97::AccessReportPtr __fastcall CreateReport(VARIANT Database/*[in,opt]*/, 
                                                     VARIANT ReportTemplate/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateReport(Database/*[in,opt]*/, ReportTemplate/*[in,opt]*/);
  }

  Access_97::AccessControlPtr __fastcall CreateControl(BSTR FormName/*[in]*/, 
                                                       Access_97::AcControlType ControlType/*[in]*/, 
                                                       Access_97::AcSection Section/*[in,def,opt]*/, 
                                                       VARIANT Parent/*[in,opt]*/, 
                                                       VARIANT ColumnName/*[in,opt]*/, 
                                                       VARIANT Left/*[in,opt]*/, 
                                                       VARIANT Top/*[in,opt]*/, 
                                                       VARIANT Width/*[in,opt]*/, 
                                                       VARIANT Height/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateControl(FormName/*[in]*/, ControlType/*[in]*/, 
                                                Section/*[in,def,opt]*/, Parent/*[in,opt]*/, 
                                                ColumnName/*[in,opt]*/, Left/*[in,opt]*/, 
                                                Top/*[in,opt]*/, Width/*[in,opt]*/, 
                                                Height/*[in,opt]*/);
  }

  Access_97::AccessControlPtr __fastcall CreateReportControl(BSTR ReportName/*[in]*/, 
                                                             Access_97::AcControlType ControlType/*[in]*/, 
                                                             Access_97::AcSection Section/*[in,def,opt]*/, 
                                                             VARIANT Parent/*[in,opt]*/, 
                                                             VARIANT ColumnName/*[in,opt]*/, 
                                                             VARIANT Left/*[in,opt]*/, 
                                                             VARIANT Top/*[in,opt]*/, 
                                                             VARIANT Width/*[in,opt]*/, 
                                                             VARIANT Height/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateReportControl(ReportName/*[in]*/, ControlType/*[in]*/, 
                                                      Section/*[in,def,opt]*/, Parent/*[in,opt]*/, 
                                                      ColumnName/*[in,opt]*/, Left/*[in,opt]*/, 
                                                      Top/*[in,opt]*/, Width/*[in,opt]*/, 
                                                      Height/*[in,opt]*/);
  }

  Access_97::AccessControlPtr __fastcall CreateControlEx(BSTR FormName/*[in]*/, 
                                                         Access_97::AcControlType ControlType/*[in]*/, 
                                                         Access_97::AcSection Section/*[in]*/, 
                                                         BSTR Parent/*[in]*/, 
                                                         BSTR ControlSource/*[in]*/, 
                                                         long Left/*[in]*/, long Top/*[in]*/, 
                                                         long Width/*[in]*/, long Height/*[in]*/)
  {
    return GetDefaultInterface()->CreateControlEx(FormName/*[in]*/, ControlType/*[in]*/, 
                                                  Section/*[in]*/, Parent/*[in]*/, 
                                                  ControlSource/*[in]*/, Left/*[in]*/, Top/*[in]*/, 
                                                  Width/*[in]*/, Height/*[in]*/);
  }

  Access_97::AccessControlPtr __fastcall CreateReportControlEx(BSTR ReportName/*[in]*/, 
                                                               Access_97::AcControlType ControlType/*[in]*/, 
                                                               Access_97::AcSection Section/*[in]*/, 
                                                               BSTR Parent/*[in]*/, 
                                                               BSTR ControlName/*[in]*/, 
                                                               long Left/*[in]*/, long Top/*[in]*/, 
                                                               long Width/*[in]*/, 
                                                               long Height/*[in]*/)
  {
    return GetDefaultInterface()->CreateReportControlEx(ReportName/*[in]*/, ControlType/*[in]*/, 
                                                        Section/*[in]*/, Parent/*[in]*/, 
                                                        ControlName/*[in]*/, Left/*[in]*/, 
                                                        Top/*[in]*/, Width/*[in]*/, Height/*[in]*/);
  }

  void __fastcall DeleteControl(BSTR FormName/*[in]*/, BSTR ControlName/*[in]*/)
  {
    GetDefaultInterface()->DeleteControl(FormName/*[in]*/, ControlName/*[in]*/);
  }

  void __fastcall DeleteReportControl(BSTR ReportName/*[in]*/, BSTR ControlName/*[in]*/)
  {
    GetDefaultInterface()->DeleteReportControl(ReportName/*[in]*/, ControlName/*[in]*/);
  }

  long __fastcall CreateGroupLevel(BSTR ReportName/*[in]*/, BSTR Expression/*[in]*/, 
                                   short Header/*[in]*/, short Footer/*[in]*/)
  {
    return GetDefaultInterface()->CreateGroupLevel(ReportName/*[in]*/, Expression/*[in]*/, 
                                                   Header/*[in]*/, Footer/*[in]*/);
  }

  TVariant __fastcall DMin(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DMin(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DMax(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DMax(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DSum(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DSum(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DAvg(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DAvg(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DLookup(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DLookup(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DLast(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DLast(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DVar(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DVar(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DVarP(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DVarP(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DStDev(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DStDev(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DStDevP(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DStDevP(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DFirst(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DFirst(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall DCount(BSTR Expr/*[in]*/, BSTR Domain/*[in]*/, VARIANT Criteria/*[in,opt]*/)
  {
    return GetDefaultInterface()->DCount(Expr/*[in]*/, Domain/*[in]*/, Criteria/*[in,opt]*/);
  }

  TVariant __fastcall Eval(BSTR StringExpr/*[in]*/)
  {
    return GetDefaultInterface()->Eval(StringExpr/*[in]*/);
  }

  BSTR __fastcall CurrentUser(void)
  {
    return GetDefaultInterface()->CurrentUser();
  }

  TVariant __fastcall DDEInitiate(BSTR Application/*[in]*/, BSTR Topic/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(Application/*[in]*/, Topic/*[in]*/);
  }

  void __fastcall DDEExecute(VARIANT ChanNum/*[in]*/, BSTR Command/*[in]*/)
  {
    GetDefaultInterface()->DDEExecute(ChanNum/*[in]*/, Command/*[in]*/);
  }

  void __fastcall DDEPoke(VARIANT ChanNum/*[in]*/, BSTR Item/*[in]*/, BSTR Data/*[in]*/)
  {
    GetDefaultInterface()->DDEPoke(ChanNum/*[in]*/, Item/*[in]*/, Data/*[in]*/);
  }

  BSTR __fastcall DDERequest(VARIANT ChanNum/*[in]*/, BSTR Item/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(ChanNum/*[in]*/, Item/*[in]*/);
  }

  void __fastcall DDETerminate(VARIANT ChanNum/*[in]*/)
  {
    GetDefaultInterface()->DDETerminate(ChanNum/*[in]*/);
  }

  void __fastcall DDETerminateAll(void)
  {
    GetDefaultInterface()->DDETerminateAll();
  }

  Dao_97::DatabasePtr __fastcall CurrentDb(void)
  {
    return GetDefaultInterface()->CurrentDb();
  }

  Dao_97::DatabasePtr __fastcall CodeDb(void)
  {
    return GetDefaultInterface()->CodeDb();
  }

  void __fastcall BeginUndoable(long Hwnd/*[in]*/)
  {
    GetDefaultInterface()->BeginUndoable(Hwnd/*[in]*/);
  }

  void __fastcall SetUndoRecording(short yesno/*[in]*/)
  {
    GetDefaultInterface()->SetUndoRecording(yesno/*[in]*/);
  }

  BSTR __fastcall BuildCriteria(BSTR Field/*[in]*/, short FieldType/*[in]*/, BSTR Expression/*[in]*/)
  {
    return GetDefaultInterface()->BuildCriteria(Field/*[in]*/, FieldType/*[in]*/, Expression/*[in]*/);
  }

  void __fastcall InsertText(BSTR Text/*[in]*/, BSTR ModuleName/*[in]*/)
  {
    GetDefaultInterface()->InsertText(Text/*[in]*/, ModuleName/*[in]*/);
  }

  void __fastcall ReloadAddIns(void)
  {
    GetDefaultInterface()->ReloadAddIns();
  }

  Dao_97::WorkspacePtr __fastcall DefaultWorkspaceClone(void)
  {
    return GetDefaultInterface()->DefaultWorkspaceClone();
  }

  void __fastcall RefreshTitleBar(void)
  {
    GetDefaultInterface()->RefreshTitleBar();
  }

  void __fastcall AddAutoCorrect(BSTR ChangeFrom/*[in]*/, BSTR ChangeTo/*[in]*/)
  {
    GetDefaultInterface()->AddAutoCorrect(ChangeFrom/*[in]*/, ChangeTo/*[in]*/);
  }

  void __fastcall DelAutoCorrect(BSTR ChangeFrom/*[in]*/)
  {
    GetDefaultInterface()->DelAutoCorrect(ChangeFrom/*[in]*/);
  }

  int __fastcall hWndAccessApp(void)
  {
    return GetDefaultInterface()->hWndAccessApp();
  }

  TVariant __fastcall Run(BSTR Procedure/*[in]*/, VARIANT* Arg1/*[in,out,opt]*/, 
                          VARIANT* Arg2/*[in,out,opt]*/, VARIANT* Arg3/*[in,out,opt]*/, 
                          VARIANT* Arg4/*[in,out,opt]*/, VARIANT* Arg5/*[in,out,opt]*/, 
                          VARIANT* Arg6/*[in,out,opt]*/, VARIANT* Arg7/*[in,out,opt]*/, 
                          VARIANT* Arg8/*[in,out,opt]*/, VARIANT* Arg9/*[in,out,opt]*/, 
                          VARIANT* Arg10/*[in,out,opt]*/, VARIANT* Arg11/*[in,out,opt]*/, 
                          VARIANT* Arg12/*[in,out,opt]*/, VARIANT* Arg13/*[in,out,opt]*/, 
                          VARIANT* Arg14/*[in,out,opt]*/, VARIANT* Arg15/*[in,out,opt]*/, 
                          VARIANT* Arg16/*[in,out,opt]*/, VARIANT* Arg17/*[in,out,opt]*/, 
                          VARIANT* Arg18/*[in,out,opt]*/, VARIANT* Arg19/*[in,out,opt]*/, 
                          VARIANT* Arg20/*[in,out,opt]*/, VARIANT* Arg21/*[in,out,opt]*/, 
                          VARIANT* Arg22/*[in,out,opt]*/, VARIANT* Arg23/*[in,out,opt]*/, 
                          VARIANT* Arg24/*[in,out,opt]*/, VARIANT* Arg25/*[in,out,opt]*/, 
                          VARIANT* Arg26/*[in,out,opt]*/, VARIANT* Arg27/*[in,out,opt]*/, 
                          VARIANT* Arg28/*[in,out,opt]*/, VARIANT* Arg29/*[in,out,opt]*/, 
                          VARIANT* Arg30/*[in,out,opt]*/)
  {
    return GetDefaultInterface()->Run(Procedure/*[in]*/, Arg1/*[in,out,opt]*/, Arg2/*[in,out,opt]*/, 
                                      Arg3/*[in,out,opt]*/, Arg4/*[in,out,opt]*/, 
                                      Arg5/*[in,out,opt]*/, Arg6/*[in,out,opt]*/, 
                                      Arg7/*[in,out,opt]*/, Arg8/*[in,out,opt]*/, 
                                      Arg9/*[in,out,opt]*/, Arg10/*[in,out,opt]*/, 
                                      Arg11/*[in,out,opt]*/, Arg12/*[in,out,opt]*/, 
                                      Arg13/*[in,out,opt]*/, Arg14/*[in,out,opt]*/, 
                                      Arg15/*[in,out,opt]*/, Arg16/*[in,out,opt]*/, 
                                      Arg17/*[in,out,opt]*/, Arg18/*[in,out,opt]*/, 
                                      Arg19/*[in,out,opt]*/, Arg20/*[in,out,opt]*/, 
                                      Arg21/*[in,out,opt]*/, Arg22/*[in,out,opt]*/, 
                                      Arg23/*[in,out,opt]*/, Arg24/*[in,out,opt]*/, 
                                      Arg25/*[in,out,opt]*/, Arg26/*[in,out,opt]*/, 
                                      Arg27/*[in,out,opt]*/, Arg28/*[in,out,opt]*/, 
                                      Arg29/*[in,out,opt]*/, Arg30/*[in,out,opt]*/);
  }

  TVariant __fastcall Nz(VARIANT Value/*[in]*/, VARIANT ValueIfNull/*[in,opt]*/)
  {
    return GetDefaultInterface()->Nz(Value/*[in]*/, ValueIfNull/*[in,opt]*/);
  }

  LPDISPATCH __fastcall LoadPicture(BSTR FileName/*[in]*/)
  {
    return GetDefaultInterface()->LoadPicture(FileName/*[in]*/);
  }

  void __fastcall ReplaceModule(long objtyp/*[in]*/, BSTR ModuleName/*[in]*/, BSTR FileName/*[in]*/, 
                                long token/*[in]*/)
  {
    GetDefaultInterface()->ReplaceModule(objtyp/*[in]*/, ModuleName/*[in]*/, FileName/*[in]*/, 
                                         token/*[in]*/);
  }

  TVariant __fastcall AccessError(VARIANT ErrorNumber/*[in]*/)
  {
    return GetDefaultInterface()->AccessError(ErrorNumber/*[in]*/);
  }

  TVariant __fastcall BuilderString(void)
  {
    return GetDefaultInterface()->BuilderString();
  }

  TVariant __fastcall StringFromGUID(VARIANT Guid/*[in]*/)
  {
    return GetDefaultInterface()->StringFromGUID(Guid/*[in]*/);
  }

  TVariant __fastcall GUIDFromString(VARIANT String/*[in]*/)
  {
    return GetDefaultInterface()->GUIDFromString(String/*[in]*/);
  }

  TVariant __fastcall AppLoadString(long id/*[in]*/)
  {
    return GetDefaultInterface()->AppLoadString(id/*[in]*/);
  }

  void __fastcall FollowHyperlink(BSTR Address/*[in]*/, BSTR SubAddress/*[in,def,opt]*/, 
                                  VARIANT_BOOL NewWindow/*[in,def,opt]*/, 
                                  VARIANT_BOOL AddHistory/*[in,def,opt]*/, 
                                  VARIANT ExtraInfo/*[in,opt]*/, 
                                  Office_97::MsoExtraInfoMethod Method/*[in,def,opt]*/, 
                                  BSTR HeaderInfo/*[in,def,opt]*/)
  {
    GetDefaultInterface()->FollowHyperlink(Address/*[in]*/, SubAddress/*[in,def,opt]*/, 
                                           NewWindow/*[in,def,opt]*/, AddHistory/*[in,def,opt]*/, 
                                           ExtraInfo/*[in,opt]*/, Method/*[in,def,opt]*/, 
                                           HeaderInfo/*[in,def,opt]*/);
  }

  void __fastcall SaveAsText(long ObjectType/*[in]*/, BSTR ObjectName/*[in]*/, BSTR FileName/*[in]*/)
  {
    GetDefaultInterface()->SaveAsText(ObjectType/*[in]*/, ObjectName/*[in]*/, FileName/*[in]*/);
  }

  void __fastcall LoadFromText(long ObjectType/*[in]*/, BSTR ObjectName/*[in]*/, 
                               BSTR FileName/*[in]*/)
  {
    GetDefaultInterface()->LoadFromText(ObjectType/*[in]*/, ObjectName/*[in]*/, FileName/*[in]*/);
  }

  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall RefreshDatabaseWindow(void)
  {
    GetDefaultInterface()->RefreshDatabaseWindow();
  }

  void __fastcall RunCommand(Access_97::AcCommand Command/*[in]*/)
  {
    GetDefaultInterface()->RunCommand(Command/*[in]*/);
  }

  BSTR __fastcall HyperlinkPart(VARIANT Hyperlink/*[in]*/, 
                                Access_97::AcHyperlinkPart Part/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->HyperlinkPart(Hyperlink/*[in]*/, Part/*[in,def,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Access_97::AccessApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property LPDISPATCH CodeContextObject={ read=get_CodeContextObject }; // 0, No
  __property long CurrentObjectType={ read=get_CurrentObjectType }; // 0, No
  __property BSTR CurrentObjectName={ read=get_CurrentObjectName }; // 0, No
  __property Access_97::Forms_Ptr Forms={ read=get_Forms }; // 0, Yes
  __property Access_97::ReportsPtr Reports={ read=get_Reports }; // 0, Yes
  __property Access_97::ScreenPtr Screen={ read=get_Screen }; // 0, Yes
  __property Access_97::IDoCmdPtr DoCmd={ read=get_DoCmd }; // 0, Yes
  __property Dao_97::DBEnginePtr DBEngine={ read=get_DBEngine }; // 0, Yes
  __property Office_97::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property Office_97::AssistantPtr Assistant={ read=get_Assistant }; // 0, Yes
  __property Access_97::AccessReferencesPtr References={ read=get_References }; // 0, Yes
  __property Access_97::ModulesPtr Modules={ read=get_Modules }; // 0, Yes
  __property Office_97::FileSearchPtr FileSearch={ read=get_FileSearch }; // 0, Yes
  __property TOLEBOOL IsCompiled={ read=get_IsCompiled }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR MenuBar={ read=get_MenuBar, stored=false }; // 0, No
  __property BSTR ShortcutMenuBar={ read=get_ShortcutMenuBar, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL UserControl={ read=get_UserControl, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAccessReferences
// Help String      : 
// Default Interface: _References
// Def. Intf. Object: _ReferencesPtr
// Def. Intf. DISP? : No
// Event   Interface: _References_Events
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TAccessReferencesItemAdded)(System::TObject * Sender, 
                                                                 Access_97::Reference* Reference);
typedef void __fastcall (__closure * TAccessReferencesItemRemoved)(System::TObject * Sender, 
                                                                   Access_97::Reference* Reference);

class PACKAGE TAccessReferences : public Oleserver::TOleServer
{
  _ReferencesPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAccessReferences(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ReferencesPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ReferencesPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:Integer
  long __fastcall get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  Access_97::ReferencePtr __fastcall Item(VARIANT var/*[in]*/)
  {
    return GetDefaultInterface()->Item(var/*[in]*/);
  }

  LPUNKNOWN __fastcall _NewEnum(void)
  {
    return GetDefaultInterface()->_NewEnum();
  }

  Access_97::ReferencePtr __fastcall AddFromGuid(BSTR Guid/*[in]*/, long Major/*[in]*/, 
                                                 long Minor/*[in]*/)
  {
    return GetDefaultInterface()->AddFromGuid(Guid/*[in]*/, Major/*[in]*/, Minor/*[in]*/);
  }

  Access_97::ReferencePtr __fastcall AddFromFile(BSTR FileName/*[in]*/)
  {
    return GetDefaultInterface()->AddFromFile(FileName/*[in]*/);
  }

  void __fastcall Remove(Access_97::Reference* Reference/*[in]*/)
  {
    GetDefaultInterface()->Remove(Reference/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property long Count={ read=get_Count }; // 0, No
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TAccessReferencesItemAdded     FOnItemAdded;
  TAccessReferencesItemRemoved   FOnItemRemoved;
__published:
  __property TAccessReferencesItemAdded OnItemAdded={ read=FOnItemAdded, write=FOnItemAdded };
  __property TAccessReferencesItemRemoved OnItemRemoved={ read=FOnItemRemoved, write=FOnItemRemoved };
};

};     // namespace Access_97

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Access_97;
#endif

#pragma option pop

#endif // Access_97_SRVRH

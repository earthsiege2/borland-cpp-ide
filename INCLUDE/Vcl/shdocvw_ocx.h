// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.0.1.2  $
// File generated on 1/24/2000 10:20:00 AM from Type Library described below.

// ************************************************************************ //
// Type Lib: \winnt\system32\shdocvw.dll (1)
// IID\LCID: {EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B}\0
// Helpfile: 
// DepndLst: 
//   (1) v2.0 stdole, (D:\WINNT\System32\stdole2.tlb)
//   (2) v4.0 StdVCL, (D:\tlbgen\rampage\typelib\typelibraries\testing\stdvcl40.tlb)
// ************************************************************************ //
#ifndef   __SHDocVw_OCX_h__
#define   __SHDocVw_OCX_h__

#pragma option push -b -w-inl

#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0500)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "SHDocVw_TLB.h"
namespace Shdocvw_tlb
{

// *********************************************************************//
// HelpString: Microsoft Internet Controls
// Version:    1.1
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCppWebBrowser_V1
// Help String      : WebBrowser Control
// Default Interface: IWebBrowser
// Def. Intf. Object: TCOMIWebBrowser
// Def. Intf. DISP? : No
// Event   Interface: DWebBrowserEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TCppWebBrowser_V1BeforeNavigate)(System::TObject * Sender, 
                                                                      BSTR URL/*[in]*/, long Flags, 
                                                                      BSTR TargetFrameName, 
                                                                      TVariant* PostData, 
                                                                      BSTR Headers, 
                                                                      TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1NavigateComplete)(System::TObject * Sender, 
                                                                        BSTR URL/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1StatusTextChange)(System::TObject * Sender, 
                                                                        BSTR Text/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1ProgressChange)(System::TObject * Sender, 
                                                                      long Progress/*[in]*/, 
                                                                      long ProgressMax/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1CommandStateChange)(System::TObject * Sender, 
                                                                          long Command/*[in]*/, 
                                                                          TOLEBOOL Enable/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1NewWindow)(System::TObject * Sender, 
                                                                 BSTR URL/*[in]*/, 
                                                                 long Flags/*[in]*/, 
                                                                 BSTR TargetFrameName/*[in]*/, 
                                                                 TVariant* PostData/*[in]*/, 
                                                                 BSTR Headers/*[in]*/, 
                                                                 TOLEBOOL* Processed/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1TitleChange)(System::TObject * Sender, 
                                                                   BSTR Text/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1FrameBeforeNavigate)(System::TObject * Sender, 
                                                                           BSTR URL/*[in]*/, 
                                                                           long Flags, 
                                                                           BSTR TargetFrameName, 
                                                                           TVariant* PostData, 
                                                                           BSTR Headers, 
                                                                           TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1FrameNavigateComplete)(System::TObject * Sender, 
                                                                             BSTR URL/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1FrameNewWindow)(System::TObject * Sender, 
                                                                      BSTR URL/*[in]*/, 
                                                                      long Flags/*[in]*/, 
                                                                      BSTR TargetFrameName/*[in]*/, 
                                                                      TVariant* PostData/*[in]*/, 
                                                                      BSTR Headers/*[in]*/, 
                                                                      TOLEBOOL* Processed/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1Quit)(System::TObject * Sender, 
                                                            TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowser_V1PropertyChange)(System::TObject * Sender, 
                                                                      BSTR Property/*[in]*/);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host WebBrowser Control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TCppWebBrowser_V1 : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TCppWebBrowser_V1BeforeNavigate FOnBeforeNavigate;
  TCppWebBrowser_V1NavigateComplete FOnNavigateComplete;
  TCppWebBrowser_V1StatusTextChange FOnStatusTextChange;
  TCppWebBrowser_V1ProgressChange FOnProgressChange;
  TNotifyEvent                   FOnDownloadComplete;
  TCppWebBrowser_V1CommandStateChange FOnCommandStateChange;
  TNotifyEvent                   FOnDownloadBegin;
  TCppWebBrowser_V1NewWindow     FOnNewWindow;
  TCppWebBrowser_V1TitleChange   FOnTitleChange;
  TCppWebBrowser_V1FrameBeforeNavigate FOnFrameBeforeNavigate;
  TCppWebBrowser_V1FrameNavigateComplete FOnFrameNavigateComplete;
  TCppWebBrowser_V1FrameNewWindow FOnFrameNewWindow;
  TCppWebBrowser_V1Quit          FOnQuit;
  TNotifyEvent                   FOnWindowMove;
  TNotifyEvent                   FOnWindowResize;
  TNotifyEvent                   FOnWindowActivate;
  TCppWebBrowser_V1PropertyChange FOnPropertyChange;

  // Default Interace of OCX
  //
  TCOMIWebBrowser m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  LPDISPATCH      __fastcall Get_Application(void);
  LPDISPATCH      __fastcall Get_Parent(void);
  LPDISPATCH      __fastcall Get_Container(void);
  LPDISPATCH      __fastcall Get_Document(void);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[17];
  static TControlData CControlData;
  static GUID         CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  TCOMIWebBrowser __fastcall GetDefaultInterface();
  TCOMIWebBrowser __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TCppWebBrowser_V1(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall TCppWebBrowser_V1(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  void            __fastcall GoBack(void);
  void            __fastcall GoForward(void);
  void            __fastcall GoHome(void);
  void            __fastcall GoSearch(void);
  void            __fastcall Navigate(BSTR URL/*[in]*/, TVariant* Flags/*[in,opt]*/= TNoParam(), 
                                      TVariant* TargetFrameName/*[in,opt]*/= TNoParam(), 
                                      TVariant* PostData/*[in,opt]*/= TNoParam(), 
                                      TVariant* Headers/*[in,opt]*/= TNoParam());
  void            __fastcall Refresh(void);
  void            __fastcall Refresh2(TVariant* Level/*[in,opt]*/= TNoParam());
  void            __fastcall Stop(void);

  // OCX properties
  //
  __property _di_IDispatch Application={ read=GetIDispatchProp, index=200 }; // 8, No
  __property _di_IDispatch Parent={ read=GetIDispatchProp, index=201 }; // 8, No
  __property _di_IDispatch Container={ read=GetIDispatchProp, index=202 }; // 8, No
  __property _di_IDispatch Document={ read=GetIDispatchProp, index=203 }; // 8, No
  __property bool TopLevelContainer={ read=GetWordBoolProp, index=204 }; // 9, No
  __property System::WideString Type={ read=GetWideStringProp, index=205 }; // 7, No
  __property System::WideString LocationName={ read=GetWideStringProp, index=210 }; // 7, No
  __property System::WideString LocationURL={ read=GetWideStringProp, index=211 }; // 7, No
  __property bool Busy={ read=GetWordBoolProp, index=212 }; // 9, No
  __property TCOMIWebBrowser ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //

  // OCX Events
  //
  __property TCppWebBrowser_V1BeforeNavigate OnBeforeNavigate={ read=FOnBeforeNavigate, write=FOnBeforeNavigate };
  __property TCppWebBrowser_V1NavigateComplete OnNavigateComplete={ read=FOnNavigateComplete, write=FOnNavigateComplete };
  __property TCppWebBrowser_V1StatusTextChange OnStatusTextChange={ read=FOnStatusTextChange, write=FOnStatusTextChange };
  __property TCppWebBrowser_V1ProgressChange OnProgressChange={ read=FOnProgressChange, write=FOnProgressChange };
  __property TNotifyEvent OnDownloadComplete={ read=FOnDownloadComplete, write=FOnDownloadComplete };
  __property TCppWebBrowser_V1CommandStateChange OnCommandStateChange={ read=FOnCommandStateChange, write=FOnCommandStateChange };
  __property TNotifyEvent OnDownloadBegin={ read=FOnDownloadBegin, write=FOnDownloadBegin };
  __property TCppWebBrowser_V1NewWindow OnNewWindow={ read=FOnNewWindow, write=FOnNewWindow };
  __property TCppWebBrowser_V1TitleChange OnTitleChange={ read=FOnTitleChange, write=FOnTitleChange };
  __property TCppWebBrowser_V1FrameBeforeNavigate OnFrameBeforeNavigate={ read=FOnFrameBeforeNavigate, write=FOnFrameBeforeNavigate };
  __property TCppWebBrowser_V1FrameNavigateComplete OnFrameNavigateComplete={ read=FOnFrameNavigateComplete, write=FOnFrameNavigateComplete };
  __property TCppWebBrowser_V1FrameNewWindow OnFrameNewWindow={ read=FOnFrameNewWindow, write=FOnFrameNewWindow };
  __property TCppWebBrowser_V1Quit OnQuit={ read=FOnQuit, write=FOnQuit };
  __property TNotifyEvent OnWindowMove={ read=FOnWindowMove, write=FOnWindowMove };
  __property TNotifyEvent OnWindowResize={ read=FOnWindowResize, write=FOnWindowResize };
  __property TNotifyEvent OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TCppWebBrowser_V1PropertyChange OnPropertyChange={ read=FOnPropertyChange, write=FOnPropertyChange };
};
typedef TCppWebBrowser_V1  TCppWebBrowser_V1Proxy;


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCppWebBrowser
// Help String      : WebBrowser Control
// Default Interface: IWebBrowser2
// Def. Intf. Object: IWebBrowser2Disp
// Def. Intf. DISP? : No
// Event   Interface: DWebBrowserEvents2
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TCppWebBrowserStatusTextChange)(System::TObject * Sender, 
                                                                     BSTR Text/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserProgressChange)(System::TObject * Sender, 
                                                                   long Progress/*[in]*/, 
                                                                   long ProgressMax/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserCommandStateChange)(System::TObject * Sender, 
                                                                       long Command/*[in]*/, 
                                                                       TOLEBOOL Enable/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserTitleChange)(System::TObject * Sender, 
                                                                BSTR Text/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserPropertyChange)(System::TObject * Sender, 
                                                                   BSTR szProperty/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserBeforeNavigate2)(System::TObject * Sender, 
                                                                    LPDISPATCH pDisp/*[in]*/, 
                                                                    TVariant* URL/*[in]*/, 
                                                                    TVariant* Flags/*[in]*/, 
                                                                    TVariant* TargetFrameName/*[in]*/, 
                                                                    TVariant* PostData/*[in]*/, 
                                                                    TVariant* Headers/*[in]*/, 
                                                                    TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowserNewWindow2)(System::TObject * Sender, 
                                                               LPDISPATCH* ppDisp/*[in,out]*/, 
                                                               TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppWebBrowserNavigateComplete2)(System::TObject * Sender, 
                                                                      LPDISPATCH pDisp/*[in]*/, 
                                                                      TVariant* URL/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserDocumentComplete)(System::TObject * Sender, 
                                                                     LPDISPATCH pDisp/*[in]*/, 
                                                                     TVariant* URL/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserOnVisible)(System::TObject * Sender, 
                                                              TOLEBOOL Visible/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserOnToolBar)(System::TObject * Sender, 
                                                              TOLEBOOL ToolBar/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserOnMenuBar)(System::TObject * Sender, 
                                                              TOLEBOOL MenuBar/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserOnStatusBar)(System::TObject * Sender, 
                                                                TOLEBOOL StatusBar/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserOnFullScreen)(System::TObject * Sender, 
                                                                 TOLEBOOL FullScreen/*[in]*/);
typedef void __fastcall (__closure * TCppWebBrowserOnTheaterMode)(System::TObject * Sender, 
                                                                  TOLEBOOL TheaterMode/*[in]*/);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host WebBrowser Control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TCppWebBrowser : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TCppWebBrowserStatusTextChange FOnStatusTextChange;
  TCppWebBrowserProgressChange   FOnProgressChange;
  TCppWebBrowserCommandStateChange FOnCommandStateChange;
  TNotifyEvent                   FOnDownloadBegin;
  TNotifyEvent                   FOnDownloadComplete;
  TCppWebBrowserTitleChange      FOnTitleChange;
  TCppWebBrowserPropertyChange   FOnPropertyChange;
  TCppWebBrowserBeforeNavigate2  FOnBeforeNavigate2;
  TCppWebBrowserNewWindow2       FOnNewWindow2;
  TCppWebBrowserNavigateComplete2 FOnNavigateComplete2;
  TCppWebBrowserDocumentComplete FOnDocumentComplete;
  TNotifyEvent                   FOnQuit;
  TCppWebBrowserOnVisible        FOnVisible;
  TCppWebBrowserOnToolBar        FOnToolBar;
  TCppWebBrowserOnMenuBar        FOnMenuBar;
  TCppWebBrowserOnStatusBar      FOnStatusBar;
  TCppWebBrowserOnFullScreen     FOnFullScreen;
  TCppWebBrowserOnTheaterMode    FOnTheaterMode;

  // Default Interace of OCX
  //
  IWebBrowser2Disp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  LPDISPATCH      __fastcall Get_Application(void);
  LPDISPATCH      __fastcall Get_Parent(void);
  LPDISPATCH      __fastcall Get_Container(void);
  LPDISPATCH      __fastcall Get_Document(void);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[18];
  static TControlData CControlData;
  static GUID         CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  IWebBrowser2Disp __fastcall GetDefaultInterface();
  IWebBrowser2Disp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TCppWebBrowser(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall TCppWebBrowser(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  void            __fastcall GoBack(void);
  void            __fastcall GoForward(void);
  void            __fastcall GoHome(void);
  void            __fastcall GoSearch(void);
  void            __fastcall Navigate(BSTR URL/*[in]*/, TVariant* Flags/*[in,opt]*/= TNoParam(), 
                                      TVariant* TargetFrameName/*[in,opt]*/= TNoParam(), 
                                      TVariant* PostData/*[in,opt]*/= TNoParam(), 
                                      TVariant* Headers/*[in,opt]*/= TNoParam());
  void            __fastcall Refresh(void);
  void            __fastcall Refresh2(TVariant* Level/*[in,opt]*/= TNoParam());
  void            __fastcall Stop(void);
  void            __fastcall Quit(void);
  void            __fastcall ClientToWindow(int* pcx/*[in,out]*/, int* pcy/*[in,out]*/);
  void            __fastcall PutProperty(BSTR Property/*[in]*/, TVariantInParam vtValue/*[in]*/);
  TVariant        __fastcall GetProperty(BSTR Property/*[in]*/);
  void            __fastcall Navigate2(TVariant* URL/*[in]*/, 
                                       TVariant* Flags/*[in,opt]*/= TNoParam(), 
                                       TVariant* TargetFrameName/*[in,opt]*/= TNoParam(), 
                                       TVariant* PostData/*[in,opt]*/= TNoParam(), 
                                       TVariant* Headers/*[in,opt]*/= TNoParam());
  Shdocvw_tlb::OLECMDF __fastcall QueryStatusWB(Shdocvw_tlb::OLECMDID cmdID/*[in]*/);
  void            __fastcall ExecWB(Shdocvw_tlb::OLECMDID cmdID/*[in]*/, 
                                    Shdocvw_tlb::OLECMDEXECOPT cmdexecopt/*[in]*/, 
                                    TVariant* pvaIn/*[in,opt]*/= TNoParam(), 
                                    TVariant* pvaOut/*[in,out,opt]*/= TNoParam());
  void            __fastcall ShowBrowserBar(TVariant* pvaClsid/*[in]*/, 
                                            TVariant* pvarShow/*[in,opt]*/= TNoParam(), 
                                            TVariant* pvarSize/*[in,opt]*/= TNoParam());

  // OCX properties
  //
  __property _di_IDispatch Application={ read=GetIDispatchProp, index=200 }; // 8, No
  __property _di_IDispatch Parent={ read=GetIDispatchProp, index=201 }; // 8, No
  __property _di_IDispatch Container={ read=GetIDispatchProp, index=202 }; // 8, No
  __property _di_IDispatch Document={ read=GetIDispatchProp, index=203 }; // 8, No
  __property bool TopLevelContainer={ read=GetWordBoolProp, index=204 }; // 9, No
  __property System::WideString Type={ read=GetWideStringProp, index=205 }; // 7, No
  __property System::WideString LocationName={ read=GetWideStringProp, index=210 }; // 7, No
  __property System::WideString LocationURL={ read=GetWideStringProp, index=211 }; // 7, No
  __property bool Busy={ read=GetWordBoolProp, index=212 }; // 9, No
  __property System::WideString Name={ read=GetWideStringProp, index=0 }; // 7, No
  __property int HWND={ read=GetIntegerProp, index=-515 }; // 2, No
  __property System::WideString FullName={ read=GetWideStringProp, index=400 }; // 7, No
  __property System::WideString Path={ read=GetWideStringProp, index=401 }; // 7, No
  __property Activex::TOleEnum ReadyState={ read=GetTOleEnumProp, index=-525 }; // 16, No
  __property IWebBrowser2Disp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //
  __property bool Visible={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=402 }; // 9, No
  __property bool StatusBar={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=403 }; // 9, No
  __property System::WideString StatusText={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=404 }; // 7, No
  __property int ToolBar={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=405 }; // 2, No
  __property bool MenuBar={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=406 }; // 9, No
  __property bool FullScreen={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=407 }; // 9, No
  __property bool Offline={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=550 }; // 9, No
  __property bool Silent={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=551 }; // 9, No
  __property bool RegisterAsBrowser={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=552 }; // 9, No
  __property bool RegisterAsDropTarget={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=553 }; // 9, No
  __property bool TheaterMode={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=554 }; // 9, No
  __property bool AddressBar={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=555 }; // 9, No
  __property bool Resizable={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=556 }; // 9, No

  // OCX Events
  //
  __property TCppWebBrowserStatusTextChange OnStatusTextChange={ read=FOnStatusTextChange, write=FOnStatusTextChange };
  __property TCppWebBrowserProgressChange OnProgressChange={ read=FOnProgressChange, write=FOnProgressChange };
  __property TCppWebBrowserCommandStateChange OnCommandStateChange={ read=FOnCommandStateChange, write=FOnCommandStateChange };
  __property TNotifyEvent OnDownloadBegin={ read=FOnDownloadBegin, write=FOnDownloadBegin };
  __property TNotifyEvent OnDownloadComplete={ read=FOnDownloadComplete, write=FOnDownloadComplete };
  __property TCppWebBrowserTitleChange OnTitleChange={ read=FOnTitleChange, write=FOnTitleChange };
  __property TCppWebBrowserPropertyChange OnPropertyChange={ read=FOnPropertyChange, write=FOnPropertyChange };
  __property TCppWebBrowserBeforeNavigate2 OnBeforeNavigate2={ read=FOnBeforeNavigate2, write=FOnBeforeNavigate2 };
  __property TCppWebBrowserNewWindow2 OnNewWindow2={ read=FOnNewWindow2, write=FOnNewWindow2 };
  __property TCppWebBrowserNavigateComplete2 OnNavigateComplete2={ read=FOnNavigateComplete2, write=FOnNavigateComplete2 };
  __property TCppWebBrowserDocumentComplete OnDocumentComplete={ read=FOnDocumentComplete, write=FOnDocumentComplete };
  __property TNotifyEvent OnQuit={ read=FOnQuit, write=FOnQuit };
  __property TCppWebBrowserOnVisible OnVisible={ read=FOnVisible, write=FOnVisible };
  __property TCppWebBrowserOnToolBar OnToolBar={ read=FOnToolBar, write=FOnToolBar };
  __property TCppWebBrowserOnMenuBar OnMenuBar={ read=FOnMenuBar, write=FOnMenuBar };
  __property TCppWebBrowserOnStatusBar OnStatusBar={ read=FOnStatusBar, write=FOnStatusBar };
  __property TCppWebBrowserOnFullScreen OnFullScreen={ read=FOnFullScreen, write=FOnFullScreen };
  __property TCppWebBrowserOnTheaterMode OnTheaterMode={ read=FOnTheaterMode, write=FOnTheaterMode };
};
typedef TCppWebBrowser  TCppWebBrowserProxy;


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCppInternetExplorer
// Help String      : Internet Explorer Application.
// Default Interface: IWebBrowser2
// Def. Intf. Object: IWebBrowser2Ptr
// Def. Intf. DISP? : No
// Event   Interface: DWebBrowserEvents2
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TCppInternetExplorerStatusTextChange)(System::TObject * Sender, 
                                                                           BSTR Text/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerProgressChange)(System::TObject * Sender, 
                                                                         long Progress/*[in]*/, 
                                                                         long ProgressMax/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerCommandStateChange)(System::TObject * Sender, 
                                                                             long Command/*[in]*/, 
                                                                             TOLEBOOL Enable/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerTitleChange)(System::TObject * Sender, 
                                                                      BSTR Text/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerPropertyChange)(System::TObject * Sender, 
                                                                         BSTR szProperty/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerBeforeNavigate2)(System::TObject * Sender, 
                                                                          LPDISPATCH pDisp/*[in]*/, 
                                                                          TVariant* URL/*[in]*/, 
                                                                          TVariant* Flags/*[in]*/, 
                                                                          TVariant* TargetFrameName/*[in]*/, 
                                                                          TVariant* PostData/*[in]*/, 
                                                                          TVariant* Headers/*[in]*/, 
                                                                          TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppInternetExplorerNewWindow2)(System::TObject * Sender, 
                                                                     LPDISPATCH* ppDisp/*[in,out]*/, 
                                                                     TOLEBOOL* Cancel/*[in,out]*/);
typedef void __fastcall (__closure * TCppInternetExplorerNavigateComplete2)(System::TObject * Sender, 
                                                                            LPDISPATCH pDisp/*[in]*/, 
                                                                            TVariant* URL/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerDocumentComplete)(System::TObject * Sender, 
                                                                           LPDISPATCH pDisp/*[in]*/, 
                                                                           TVariant* URL/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerOnVisible)(System::TObject * Sender, 
                                                                    TOLEBOOL Visible/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerOnToolBar)(System::TObject * Sender, 
                                                                    TOLEBOOL ToolBar/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerOnMenuBar)(System::TObject * Sender, 
                                                                    TOLEBOOL MenuBar/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerOnStatusBar)(System::TObject * Sender, 
                                                                      TOLEBOOL StatusBar/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerOnFullScreen)(System::TObject * Sender, 
                                                                       TOLEBOOL FullScreen/*[in]*/);
typedef void __fastcall (__closure * TCppInternetExplorerOnTheaterMode)(System::TObject * Sender, 
                                                                        TOLEBOOL TheaterMode/*[in]*/);

class PACKAGE TCppInternetExplorer : public Oleserver::TOleServer
{
  IWebBrowser2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCppInternetExplorer(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IWebBrowser2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IWebBrowser2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  LPDISPATCH __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  LPDISPATCH __fastcall Get_Container(void)
  {
    return GetDefaultInterface()->get_Container();
  }

  LPDISPATCH __fastcall Get_Document(void)
  {
    return GetDefaultInterface()->get_Document();
  }

  TOLEBOOL __fastcall Get_TopLevelContainer(void)
  {
    return GetDefaultInterface()->get_TopLevelContainer();
  }

  BSTR __fastcall Get_Type(void)
  {
    return GetDefaultInterface()->get_Type();
  }

  long __fastcall Get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

  void __fastcall Set_Left(long pl/*[in]*/)
  {
    GetDefaultInterface()->set_Left(pl/*[in]*/);
  }

  long __fastcall Get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

  void __fastcall Set_Top(long pl/*[in]*/)
  {
    GetDefaultInterface()->set_Top(pl/*[in]*/);
  }

  long __fastcall Get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

  void __fastcall Set_Width(long pl/*[in]*/)
  {
    GetDefaultInterface()->set_Width(pl/*[in]*/);
  }

  long __fastcall Get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

  void __fastcall Set_Height(long pl/*[in]*/)
  {
    GetDefaultInterface()->set_Height(pl/*[in]*/);
  }

  BSTR __fastcall Get_LocationName(void)
  {
    return GetDefaultInterface()->get_LocationName();
  }

  BSTR __fastcall Get_LocationURL(void)
  {
    return GetDefaultInterface()->get_LocationURL();
  }

  TOLEBOOL __fastcall Get_Busy(void)
  {
    return GetDefaultInterface()->get_Busy();
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  long __fastcall Get_HWND(void)
  {
    return GetDefaultInterface()->get_HWND();
  }

  BSTR __fastcall Get_FullName(void)
  {
    return GetDefaultInterface()->get_FullName();
  }

  BSTR __fastcall Get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

  TOLEBOOL __fastcall Get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

  void __fastcall Set_Visible(TOLEBOOL pBool/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(pBool/*[in]*/);
  }

  TOLEBOOL __fastcall Get_StatusBar(void)
  {
    return GetDefaultInterface()->get_StatusBar();
  }

  void __fastcall Set_StatusBar(TOLEBOOL pBool/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(pBool/*[in]*/);
  }

  BSTR __fastcall Get_StatusText(void)
  {
    return GetDefaultInterface()->get_StatusText();
  }

  void __fastcall Set_StatusText(BSTR StatusText/*[in]*/)
  {
    GetDefaultInterface()->set_StatusText(StatusText/*[in]*/);
  }

  int __fastcall Get_ToolBar(void)
  {
    return GetDefaultInterface()->get_ToolBar();
  }

  void __fastcall Set_ToolBar(int Value/*[in]*/)
  {
    GetDefaultInterface()->set_ToolBar(Value/*[in]*/);
  }

  TOLEBOOL __fastcall Get_MenuBar(void)
  {
    return GetDefaultInterface()->get_MenuBar();
  }

  void __fastcall Set_MenuBar(TOLEBOOL Value/*[in]*/)
  {
    GetDefaultInterface()->set_MenuBar(Value/*[in]*/);
  }

  TOLEBOOL __fastcall Get_FullScreen(void)
  {
    return GetDefaultInterface()->get_FullScreen();
  }

  void __fastcall Set_FullScreen(TOLEBOOL pbFullScreen/*[in]*/)
  {
    GetDefaultInterface()->set_FullScreen(pbFullScreen/*[in]*/);
  }

  Shdocvw_tlb::tagREADYSTATE __fastcall Get_ReadyState(void)
  {
    return GetDefaultInterface()->get_ReadyState();
  }

  TOLEBOOL __fastcall Get_Offline(void)
  {
    return GetDefaultInterface()->get_Offline();
  }

  void __fastcall Set_Offline(TOLEBOOL pbOffline/*[in]*/)
  {
    GetDefaultInterface()->set_Offline(pbOffline/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Silent(void)
  {
    return GetDefaultInterface()->get_Silent();
  }

  void __fastcall Set_Silent(TOLEBOOL pbSilent/*[in]*/)
  {
    GetDefaultInterface()->set_Silent(pbSilent/*[in]*/);
  }

  TOLEBOOL __fastcall Get_RegisterAsBrowser(void)
  {
    return GetDefaultInterface()->get_RegisterAsBrowser();
  }

  void __fastcall Set_RegisterAsBrowser(TOLEBOOL pbRegister/*[in]*/)
  {
    GetDefaultInterface()->set_RegisterAsBrowser(pbRegister/*[in]*/);
  }

  TOLEBOOL __fastcall Get_RegisterAsDropTarget(void)
  {
    return GetDefaultInterface()->get_RegisterAsDropTarget();
  }

  void __fastcall Set_RegisterAsDropTarget(TOLEBOOL pbRegister/*[in]*/)
  {
    GetDefaultInterface()->set_RegisterAsDropTarget(pbRegister/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TheaterMode(void)
  {
    return GetDefaultInterface()->get_TheaterMode();
  }

  void __fastcall Set_TheaterMode(TOLEBOOL pbRegister/*[in]*/)
  {
    GetDefaultInterface()->set_TheaterMode(pbRegister/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AddressBar(void)
  {
    return GetDefaultInterface()->get_AddressBar();
  }

  void __fastcall Set_AddressBar(TOLEBOOL Value/*[in]*/)
  {
    GetDefaultInterface()->set_AddressBar(Value/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Resizable(void)
  {
    return GetDefaultInterface()->get_Resizable();
  }

  void __fastcall Set_Resizable(TOLEBOOL Value/*[in]*/)
  {
    GetDefaultInterface()->set_Resizable(Value/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall GoBack(void)
  {
    GetDefaultInterface()->GoBack();
  }

  void __fastcall GoForward(void)
  {
    GetDefaultInterface()->GoForward();
  }

  void __fastcall GoHome(void)
  {
    GetDefaultInterface()->GoHome();
  }

  void __fastcall GoSearch(void)
  {
    GetDefaultInterface()->GoSearch();
  }

  void __fastcall Navigate(BSTR URL/*[in]*/, TVariant* Flags/*[in,opt]*/= TNoParam(), 
                           TVariant* TargetFrameName/*[in,opt]*/= TNoParam(), 
                           TVariant* PostData/*[in,opt]*/= TNoParam(), 
                           TVariant* Headers/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Navigate(URL/*[in]*/, Flags/*[in,opt]*/, TargetFrameName/*[in,opt]*/, 
                                    PostData/*[in,opt]*/, Headers/*[in,opt]*/);
  }

  void __fastcall Refresh(void)
  {
    GetDefaultInterface()->Refresh();
  }

  void __fastcall Refresh2(TVariant* Level/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Refresh2(Level/*[in,opt]*/);
  }

  void __fastcall Stop(void)
  {
    GetDefaultInterface()->Stop();
  }

  void __fastcall Quit(void)
  {
    GetDefaultInterface()->Quit();
  }

  void __fastcall ClientToWindow(int* pcx/*[in,out]*/, int* pcy/*[in,out]*/)
  {
    GetDefaultInterface()->ClientToWindow(pcx/*[in,out]*/, pcy/*[in,out]*/);
  }

  void __fastcall PutProperty(BSTR Property/*[in]*/, TVariantInParam vtValue/*[in]*/)
  {
    GetDefaultInterface()->PutProperty(Property/*[in]*/, vtValue/*[in]*/);
  }

  TVariant __fastcall GetProperty(BSTR Property/*[in]*/)
  {
    return GetDefaultInterface()->GetProperty(Property/*[in]*/);
  }

  void __fastcall Navigate2(TVariant* URL/*[in]*/, TVariant* Flags/*[in,opt]*/= TNoParam(), 
                            TVariant* TargetFrameName/*[in,opt]*/= TNoParam(), 
                            TVariant* PostData/*[in,opt]*/= TNoParam(), 
                            TVariant* Headers/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Navigate2(URL/*[in]*/, Flags/*[in,opt]*/, TargetFrameName/*[in,opt]*/, 
                                     PostData/*[in,opt]*/, Headers/*[in,opt]*/);
  }

  Shdocvw_tlb::OLECMDF __fastcall QueryStatusWB(Shdocvw_tlb::OLECMDID cmdID/*[in]*/)
  {
    return GetDefaultInterface()->QueryStatusWB(cmdID/*[in]*/);
  }

  void __fastcall ExecWB(Shdocvw_tlb::OLECMDID cmdID/*[in]*/, 
                         Shdocvw_tlb::OLECMDEXECOPT cmdexecopt/*[in]*/, 
                         TVariant* pvaIn/*[in,opt]*/= TNoParam(), 
                         TVariant* pvaOut/*[in,out,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ExecWB(cmdID/*[in]*/, cmdexecopt/*[in]*/, pvaIn/*[in,opt]*/, 
                                  pvaOut/*[in,out,opt]*/);
  }

  void __fastcall ShowBrowserBar(TVariant* pvaClsid/*[in]*/, 
                                 TVariant* pvarShow/*[in,opt]*/= TNoParam(), 
                                 TVariant* pvarSize/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ShowBrowserBar(pvaClsid/*[in]*/, pvarShow/*[in,opt]*/, 
                                          pvarSize/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property LPDISPATCH Application={ read=Get_Application }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property LPDISPATCH Container={ read=Get_Container }; // 0, No
  __property LPDISPATCH Document={ read=Get_Document }; // 0, No
  __property TOLEBOOL TopLevelContainer={ read=Get_TopLevelContainer }; // 0, No
  __property BSTR Type={ read=Get_Type }; // 0, No
  __property BSTR LocationName={ read=Get_LocationName }; // 0, No
  __property BSTR LocationURL={ read=Get_LocationURL }; // 0, No
  __property TOLEBOOL Busy={ read=Get_Busy }; // 0, No
  __property BSTR Name={ read=Get_Name }; // 0, No
  __property long HWND={ read=Get_HWND }; // 0, No
  __property BSTR FullName={ read=Get_FullName }; // 0, No
  __property BSTR Path={ read=Get_Path }; // 0, No
  __property Shdocvw_tlb::tagREADYSTATE ReadyState={ read=Get_ReadyState }; // 0, No
  /*CoClassWriteProperties*/
  __property long Left={ read=Get_Left, write=Set_Left, stored=false }; // 0, No
  __property long Top={ read=Get_Top, write=Set_Top, stored=false }; // 0, No
  __property long Width={ read=Get_Width, write=Set_Width, stored=false }; // 0, No
  __property long Height={ read=Get_Height, write=Set_Height, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=Get_Visible, write=Set_Visible, stored=false }; // 0, No
  __property TOLEBOOL StatusBar={ read=Get_StatusBar, write=Set_StatusBar, stored=false }; // 0, No
  __property BSTR StatusText={ read=Get_StatusText, write=Set_StatusText, stored=false }; // 0, No
  __property int ToolBar={ read=Get_ToolBar, write=Set_ToolBar, stored=false }; // 0, No
  __property TOLEBOOL MenuBar={ read=Get_MenuBar, write=Set_MenuBar, stored=false }; // 0, No
  __property TOLEBOOL FullScreen={ read=Get_FullScreen, write=Set_FullScreen, stored=false }; // 0, No
  __property TOLEBOOL Offline={ read=Get_Offline, write=Set_Offline, stored=false }; // 0, No
  __property TOLEBOOL Silent={ read=Get_Silent, write=Set_Silent, stored=false }; // 0, No
  __property TOLEBOOL RegisterAsBrowser={ read=Get_RegisterAsBrowser, write=Set_RegisterAsBrowser, stored=false }; // 0, No
  __property TOLEBOOL RegisterAsDropTarget={ read=Get_RegisterAsDropTarget, write=Set_RegisterAsDropTarget, stored=false }; // 0, No
  __property TOLEBOOL TheaterMode={ read=Get_TheaterMode, write=Set_TheaterMode, stored=false }; // 0, No
  __property TOLEBOOL AddressBar={ read=Get_AddressBar, write=Set_AddressBar, stored=false }; // 0, No
  __property TOLEBOOL Resizable={ read=Get_Resizable, write=Set_Resizable, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TCppInternetExplorerStatusTextChange FOnStatusTextChange;
  TCppInternetExplorerProgressChange FOnProgressChange;
  TCppInternetExplorerCommandStateChange FOnCommandStateChange;
  TNotifyEvent                   FOnDownloadBegin;
  TNotifyEvent                   FOnDownloadComplete;
  TCppInternetExplorerTitleChange FOnTitleChange;
  TCppInternetExplorerPropertyChange FOnPropertyChange;
  TCppInternetExplorerBeforeNavigate2 FOnBeforeNavigate2;
  TCppInternetExplorerNewWindow2 FOnNewWindow2;
  TCppInternetExplorerNavigateComplete2 FOnNavigateComplete2;
  TCppInternetExplorerDocumentComplete FOnDocumentComplete;
  TNotifyEvent                   FOnQuit;
  TCppInternetExplorerOnVisible  FOnVisible;
  TCppInternetExplorerOnToolBar  FOnToolBar;
  TCppInternetExplorerOnMenuBar  FOnMenuBar;
  TCppInternetExplorerOnStatusBar FOnStatusBar;
  TCppInternetExplorerOnFullScreen FOnFullScreen;
  TCppInternetExplorerOnTheaterMode FOnTheaterMode;
__published:
  __property TCppInternetExplorerStatusTextChange OnStatusTextChange={ read=FOnStatusTextChange, write=FOnStatusTextChange };
  __property TCppInternetExplorerProgressChange OnProgressChange={ read=FOnProgressChange, write=FOnProgressChange };
  __property TCppInternetExplorerCommandStateChange OnCommandStateChange={ read=FOnCommandStateChange, write=FOnCommandStateChange };
  __property TNotifyEvent OnDownloadBegin={ read=FOnDownloadBegin, write=FOnDownloadBegin };
  __property TNotifyEvent OnDownloadComplete={ read=FOnDownloadComplete, write=FOnDownloadComplete };
  __property TCppInternetExplorerTitleChange OnTitleChange={ read=FOnTitleChange, write=FOnTitleChange };
  __property TCppInternetExplorerPropertyChange OnPropertyChange={ read=FOnPropertyChange, write=FOnPropertyChange };
  __property TCppInternetExplorerBeforeNavigate2 OnBeforeNavigate2={ read=FOnBeforeNavigate2, write=FOnBeforeNavigate2 };
  __property TCppInternetExplorerNewWindow2 OnNewWindow2={ read=FOnNewWindow2, write=FOnNewWindow2 };
  __property TCppInternetExplorerNavigateComplete2 OnNavigateComplete2={ read=FOnNavigateComplete2, write=FOnNavigateComplete2 };
  __property TCppInternetExplorerDocumentComplete OnDocumentComplete={ read=FOnDocumentComplete, write=FOnDocumentComplete };
  __property TNotifyEvent OnQuit={ read=FOnQuit, write=FOnQuit };
  __property TCppInternetExplorerOnVisible OnVisible={ read=FOnVisible, write=FOnVisible };
  __property TCppInternetExplorerOnToolBar OnToolBar={ read=FOnToolBar, write=FOnToolBar };
  __property TCppInternetExplorerOnMenuBar OnMenuBar={ read=FOnMenuBar, write=FOnMenuBar };
  __property TCppInternetExplorerOnStatusBar OnStatusBar={ read=FOnStatusBar, write=FOnStatusBar };
  __property TCppInternetExplorerOnFullScreen OnFullScreen={ read=FOnFullScreen, write=FOnFullScreen };
  __property TCppInternetExplorerOnTheaterMode OnTheaterMode={ read=FOnTheaterMode, write=FOnTheaterMode };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCppShellWindows
// Help String      : ShellDispatch Load in Shell Context
// Default Interface: IShellWindows
// Def. Intf. Object: IShellWindowsPtr
// Def. Intf. DISP? : No
// Event   Interface: DShellWindowsEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TCppShellWindowsWindowRegistered)(System::TObject * Sender, 
                                                                       long lCookie/*[in]*/);
typedef void __fastcall (__closure * TCppShellWindowsWindowRevoked)(System::TObject * Sender, 
                                                                    long lCookie/*[in]*/);

class PACKAGE TCppShellWindows : public Oleserver::TOleServer
{
  IShellWindowsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCppShellWindows(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IShellWindowsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IShellWindowsPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  long __fastcall Get_Count(void)
  {
    return GetDefaultInterface()->get_Count();
  }

  /*CoClassWriteMethods*/
  LPDISPATCH __fastcall Item(TVariantInParam index/*[in,opt]*/)
  {
    return GetDefaultInterface()->Item(index/*[in,opt]*/);
  }

  LPUNKNOWN __fastcall _NewEnum(void)
  {
    return GetDefaultInterface()->_NewEnum();
  }

  void __fastcall Register(LPDISPATCH pid/*[in]*/, long HWND/*[in]*/, int swClass/*[in]*/, 
                           long* plCookie/*[out]*/)
  {
    GetDefaultInterface()->Register(pid/*[in]*/, HWND/*[in]*/, swClass/*[in]*/, plCookie/*[out]*/);
  }

  void __fastcall RegisterPending(long lThreadId/*[in]*/, TVariant* pvarloc/*[in]*/, 
                                  TVariant* pvarlocRoot/*[in]*/, int swClass/*[in]*/, 
                                  long* plCookie/*[out]*/)
  {
    GetDefaultInterface()->RegisterPending(lThreadId/*[in]*/, pvarloc/*[in]*/, pvarlocRoot/*[in]*/, 
                                           swClass/*[in]*/, plCookie/*[out]*/);
  }

  void __fastcall Revoke(long lCookie/*[in]*/)
  {
    GetDefaultInterface()->Revoke(lCookie/*[in]*/);
  }

  void __fastcall OnNavigate(long lCookie/*[in]*/, TVariant* pvarloc/*[in]*/)
  {
    GetDefaultInterface()->OnNavigate(lCookie/*[in]*/, pvarloc/*[in]*/);
  }

  void __fastcall OnActivated(long lCookie/*[in]*/, TOLEBOOL fActive/*[in]*/)
  {
    GetDefaultInterface()->OnActivated(lCookie/*[in]*/, fActive/*[in]*/);
  }

  LPDISPATCH __fastcall FindWindow(TVariant* pvarloc/*[in]*/, TVariant* pvarlocRoot/*[in]*/, 
                                   int swClass/*[in]*/, long* pHWND/*[out]*/, 
                                   int swfwOptions/*[in]*/)
  {
    return GetDefaultInterface()->FindWindow(pvarloc/*[in]*/, pvarlocRoot/*[in]*/, swClass/*[in]*/, 
                                             pHWND/*[out]*/, swfwOptions/*[in]*/);
  }

  void __fastcall OnCreated(long lCookie/*[in]*/, LPUNKNOWN punk/*[in]*/)
  {
    GetDefaultInterface()->OnCreated(lCookie/*[in]*/, punk/*[in]*/);
  }

  void __fastcall ProcessAttachDetach(TOLEBOOL fAttach/*[in]*/)
  {
    GetDefaultInterface()->ProcessAttachDetach(fAttach/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property long Count={ read=Get_Count }; // 0, No
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TCppShellWindowsWindowRegistered FOnWindowRegistered;
  TCppShellWindowsWindowRevoked  FOnWindowRevoked;
__published:
  __property TCppShellWindowsWindowRegistered OnWindowRegistered={ read=FOnWindowRegistered, write=FOnWindowRegistered };
  __property TCppShellWindowsWindowRevoked OnWindowRevoked={ read=FOnWindowRevoked, write=FOnWindowRevoked };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCppShellUIHelper
// Help String      : 
// Default Interface: IShellUIHelper
// Def. Intf. Object: IShellUIHelperPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TCppShellUIHelper : public Oleserver::TOleServer
{
  IShellUIHelperPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCppShellUIHelper(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IShellUIHelperPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IShellUIHelperPtr intf);


  /*CoClassWriteArrayPropMethods*/
  /*CoClassWriteMethods*/
  void __fastcall ResetFirstBootMode(void)
  {
    GetDefaultInterface()->ResetFirstBootMode();
  }

  void __fastcall ResetSafeMode(void)
  {
    GetDefaultInterface()->ResetSafeMode();
  }

  void __fastcall RefreshOfflineDesktop(void)
  {
    GetDefaultInterface()->RefreshOfflineDesktop();
  }

  void __fastcall AddFavorite(BSTR URL/*[in]*/, TVariant* Title/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AddFavorite(URL/*[in]*/, Title/*[in,opt]*/);
  }

  void __fastcall AddChannel(BSTR URL/*[in]*/)
  {
    GetDefaultInterface()->AddChannel(URL/*[in]*/);
  }

  void __fastcall AddDesktopComponent(BSTR URL/*[in]*/, BSTR Type/*[in]*/, 
                                      TVariant* Left/*[in,opt]*/= TNoParam(), 
                                      TVariant* Top/*[in,opt]*/= TNoParam(), 
                                      TVariant* Width/*[in,opt]*/= TNoParam(), 
                                      TVariant* Height/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AddDesktopComponent(URL/*[in]*/, Type/*[in]*/, Left/*[in,opt]*/, 
                                               Top/*[in,opt]*/, Width/*[in,opt]*/, 
                                               Height/*[in,opt]*/);
  }

  TOLEBOOL __fastcall IsSubscribed(BSTR URL/*[in]*/)
  {
    return GetDefaultInterface()->IsSubscribed(URL/*[in]*/);
  }

  void __fastcall NavigateAndFind(BSTR URL/*[in]*/, BSTR strQuery/*[in]*/, 
                                  TVariant* varTargetFrame/*[in]*/)
  {
    GetDefaultInterface()->NavigateAndFind(URL/*[in]*/, strQuery/*[in]*/, varTargetFrame/*[in]*/);
  }

  void __fastcall ImportExportFavorites(TOLEBOOL fImport/*[in]*/, BSTR strImpExpPath/*[in]*/)
  {
    GetDefaultInterface()->ImportExportFavorites(fImport/*[in]*/, strImpExpPath/*[in]*/);
  }

  void __fastcall AutoCompleteSaveForm(TVariant* Form/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AutoCompleteSaveForm(Form/*[in,opt]*/);
  }

  void __fastcall AutoScan(BSTR strSearch/*[in]*/, BSTR strFailureUrl/*[in]*/, 
                           TVariant* pvarTargetFrame/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AutoScan(strSearch/*[in]*/, strFailureUrl/*[in]*/, 
                                    pvarTargetFrame/*[in,opt]*/);
  }

  void __fastcall AutoCompleteAttach(TVariant* Reserved/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AutoCompleteAttach(Reserved/*[in,opt]*/);
  }

  TVariant __fastcall ShowBrowserUI(BSTR bstrName/*[in]*/, TVariant* pvarIn/*[in]*/)
  {
    return GetDefaultInterface()->ShowBrowserUI(bstrName/*[in]*/, pvarIn/*[in]*/);
  }

  /*CoClassWriteProperties*/
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TShellFavoritesNameSpace
// Help String      : 
// Default Interface: IShellFavoritesNameSpace
// Def. Intf. Object: IShellFavoritesNameSpacePtr
// Def. Intf. DISP? : No
// Event   Interface: _ShellFavoritesNameSpaceEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TShellFavoritesNameSpaceFavoritesSelectionChange)(System::TObject * Sender, 
                                                                                       long cItems/*[in]*/, 
                                                                                       long hItem/*[in]*/, 
                                                                                       BSTR strName/*[in]*/, 
                                                                                       BSTR strUrl/*[in]*/, 
                                                                                       long cVisits/*[in]*/, 
                                                                                       BSTR strDate/*[in]*/, 
                                                                                       long fAvailableOffline/*[in]*/);

class PACKAGE TShellFavoritesNameSpace : public Oleserver::TOleServer
{
  IShellFavoritesNameSpacePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TShellFavoritesNameSpace(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IShellFavoritesNameSpacePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IShellFavoritesNameSpacePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  TOLEBOOL __fastcall Get_FOfflinePackInstalled(void)
  {
    return GetDefaultInterface()->get_FOfflinePackInstalled();
  }

  /*CoClassWriteMethods*/
  void __fastcall MoveSelectionUp(void)
  {
    GetDefaultInterface()->MoveSelectionUp();
  }

  void __fastcall MoveSelectionDown(void)
  {
    GetDefaultInterface()->MoveSelectionDown();
  }

  void __fastcall ResetSort(void)
  {
    GetDefaultInterface()->ResetSort();
  }

  void __fastcall NewFolder(void)
  {
    GetDefaultInterface()->NewFolder();
  }

  void __fastcall Synchronize(void)
  {
    GetDefaultInterface()->Synchronize();
  }

  void __fastcall Import(void)
  {
    GetDefaultInterface()->Import();
  }

  void __fastcall Export(void)
  {
    GetDefaultInterface()->Export();
  }

  void __fastcall InvokeContextMenuCommand(BSTR strCommand/*[in]*/)
  {
    GetDefaultInterface()->InvokeContextMenuCommand(strCommand/*[in]*/);
  }

  void __fastcall MoveSelectionTo(void)
  {
    GetDefaultInterface()->MoveSelectionTo();
  }

  TOLEBOOL __fastcall CreateSubscriptionForSelection(void)
  {
    return GetDefaultInterface()->CreateSubscriptionForSelection();
  }

  TOLEBOOL __fastcall DeleteSubscriptionForSelection(void)
  {
    return GetDefaultInterface()->DeleteSubscriptionForSelection();
  }

  void __fastcall SetRoot(BSTR bstrFullPath/*[in]*/)
  {
    GetDefaultInterface()->SetRoot(bstrFullPath/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property TOLEBOOL FOfflinePackInstalled={ read=Get_FOfflinePackInstalled }; // 0, No
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TShellFavoritesNameSpaceFavoritesSelectionChange FOnFavoritesSelectionChange;
__published:
  __property TShellFavoritesNameSpaceFavoritesSelectionChange OnFavoritesSelectionChange={ read=FOnFavoritesSelectionChange, write=FOnFavoritesSelectionChange };
};

};     // namespace Shdocvw_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Shdocvw_tlb;
#endif

#pragma option pop

#endif // __SHDocVw_OCX_h__

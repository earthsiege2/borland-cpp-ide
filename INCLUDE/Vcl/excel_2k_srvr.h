// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.0.1.3  $
// File generated on 1/24/2000 09:44:54 AM from Type Library described below.

// ************************************************************************ //
// Type Lib: d:\tlbgen\rampage\typelib\TypeLibraries\EXCEL9.olb (1)
// IID\LCID: {00020813-0000-0000-C000-000000000046}\0
// Helpfile: d:\tlbgen\rampage\typelib\TypeLibraries\VBAXL9.CHM
// DepndLst: 
//   (1) v2.1 Office, (D:\msof2k\Office\mso9.dll)
//   (2) v2.0 stdole, (D:\WINNT\System32\stdole2.tlb)
//   (3) v5.3 VBIDE, (D:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
//   (4) v4.0 StdVCL, (D:\tlbgen\rampage\typelib\typelibraries\testing\stdvcl40.tlb)
// ************************************************************************ //
#ifndef   __Excel_2K_SRVR_h__
#define   __Excel_2K_SRVR_h__

#pragma option push -b -w-inl

#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0500)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "Office_2K.h"
#include "VBIDE_2K.h"

#include "Excel_2K.h"
namespace Excel_2k
{

// *********************************************************************//
// HelpString: Microsoft Excel 9.0 Object Library
// Version:    1.3
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelQueryTable
// Help String      : 
// Default Interface: _QueryTable
// Def. Intf. Object: _QueryTablePtr
// Def. Intf. DISP? : Yes
// Event   Interface: RefreshEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelQueryTableBeforeRefresh)(System::TObject * Sender, 
                                                                    TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelQueryTableAfterRefresh)(System::TObject * Sender, 
                                                                   TOLEBOOL Success/*[in]*/);

class PACKAGE TExcelQueryTable : public Oleserver::TOleServer
{
  _QueryTablePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelQueryTable(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _QueryTablePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_QueryTablePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  void __fastcall Set_Name(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Name(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_FieldNames(void)
  {
    return GetDefaultInterface()->get_FieldNames();
  }

  void __fastcall Set_FieldNames(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_FieldNames(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_RowNumbers(void)
  {
    return GetDefaultInterface()->get_RowNumbers();
  }

  void __fastcall Set_RowNumbers(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RowNumbers(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_FillAdjacentFormulas(void)
  {
    return GetDefaultInterface()->get_FillAdjacentFormulas();
  }

  void __fastcall Set_FillAdjacentFormulas(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_FillAdjacentFormulas(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasAutoFormat(void)
  {
    return GetDefaultInterface()->get_HasAutoFormat();
  }

  void __fastcall Set_HasAutoFormat(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_HasAutoFormat(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_RefreshOnFileOpen(void)
  {
    return GetDefaultInterface()->get_RefreshOnFileOpen();
  }

  void __fastcall Set_RefreshOnFileOpen(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RefreshOnFileOpen(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Refreshing(void)
  {
    return GetDefaultInterface()->get_Refreshing();
  }

  TOLEBOOL __fastcall Get_FetchedRowOverflow(void)
  {
    return GetDefaultInterface()->get_FetchedRowOverflow();
  }

  TOLEBOOL __fastcall Get_BackgroundQuery(void)
  {
    return GetDefaultInterface()->get_BackgroundQuery();
  }

  void __fastcall Set_BackgroundQuery(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_BackgroundQuery(Param1/*[in]*/);
  }

  Excel_2k::XlCellInsertionMode __fastcall Get_RefreshStyle(void)
  {
    return GetDefaultInterface()->get_RefreshStyle();
  }

  void __fastcall Set_RefreshStyle(Excel_2k::XlCellInsertionMode Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RefreshStyle(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableRefresh(void)
  {
    return GetDefaultInterface()->get_EnableRefresh();
  }

  void __fastcall Set_EnableRefresh(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_EnableRefresh(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SavePassword(void)
  {
    return GetDefaultInterface()->get_SavePassword();
  }

  void __fastcall Set_SavePassword(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_SavePassword(Param1/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Get_Destination(void)
  {
    return GetDefaultInterface()->get_Destination();
  }

  TVariant __fastcall Get_Connection(void)
  {
    return GetDefaultInterface()->get_Connection();
  }

  void __fastcall Set_Connection(TVariantInParam Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Connection(Param1/*[in]*/);
  }

  TVariant __fastcall Get_Sql(void)
  {
    return GetDefaultInterface()->get_Sql();
  }

  void __fastcall Set_Sql(TVariantInParam Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Sql(Param1/*[in]*/);
  }

  BSTR __fastcall Get_PostText(void)
  {
    return GetDefaultInterface()->get_PostText();
  }

  void __fastcall Set_PostText(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_PostText(Param1/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Get_ResultRange(void)
  {
    return GetDefaultInterface()->get_ResultRange();
  }

  Excel_2k::ParametersPtr __fastcall Get_Parameters(void)
  {
    return GetDefaultInterface()->get_Parameters();
  }

  LPDISPATCH __fastcall Get_Recordset(void)
  {
    return GetDefaultInterface()->get_Recordset();
  }

  void __fastcall _Set_Recordset(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->_set_Recordset(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SaveData(void)
  {
    return GetDefaultInterface()->get_SaveData();
  }

  void __fastcall Set_SaveData(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_SaveData(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TablesOnlyFromHTML(void)
  {
    return GetDefaultInterface()->get_TablesOnlyFromHTML();
  }

  void __fastcall Set_TablesOnlyFromHTML(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TablesOnlyFromHTML(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableEditing(void)
  {
    return GetDefaultInterface()->get_EnableEditing();
  }

  void __fastcall Set_EnableEditing(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_EnableEditing(Param1/*[in]*/);
  }

  Excel_2k::XlPlatform __fastcall Get_TextFilePlatform(void)
  {
    return GetDefaultInterface()->get_TextFilePlatform();
  }

  void __fastcall Set_TextFilePlatform(Excel_2k::XlPlatform Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFilePlatform(Param1/*[in]*/);
  }

  long __fastcall Get_TextFileStartRow(void)
  {
    return GetDefaultInterface()->get_TextFileStartRow();
  }

  void __fastcall Set_TextFileStartRow(long Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileStartRow(Param1/*[in]*/);
  }

  Excel_2k::XlTextParsingType __fastcall Get_TextFileParseType(void)
  {
    return GetDefaultInterface()->get_TextFileParseType();
  }

  void __fastcall Set_TextFileParseType(Excel_2k::XlTextParsingType Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileParseType(Param1/*[in]*/);
  }

  Excel_2k::XlTextQualifier __fastcall Get_TextFileTextQualifier(void)
  {
    return GetDefaultInterface()->get_TextFileTextQualifier();
  }

  void __fastcall Set_TextFileTextQualifier(Excel_2k::XlTextQualifier Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileTextQualifier(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TextFileConsecutiveDelimiter(void)
  {
    return GetDefaultInterface()->get_TextFileConsecutiveDelimiter();
  }

  void __fastcall Set_TextFileConsecutiveDelimiter(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileConsecutiveDelimiter(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TextFileTabDelimiter(void)
  {
    return GetDefaultInterface()->get_TextFileTabDelimiter();
  }

  void __fastcall Set_TextFileTabDelimiter(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileTabDelimiter(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TextFileSemicolonDelimiter(void)
  {
    return GetDefaultInterface()->get_TextFileSemicolonDelimiter();
  }

  void __fastcall Set_TextFileSemicolonDelimiter(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileSemicolonDelimiter(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TextFileCommaDelimiter(void)
  {
    return GetDefaultInterface()->get_TextFileCommaDelimiter();
  }

  void __fastcall Set_TextFileCommaDelimiter(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileCommaDelimiter(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TextFileSpaceDelimiter(void)
  {
    return GetDefaultInterface()->get_TextFileSpaceDelimiter();
  }

  void __fastcall Set_TextFileSpaceDelimiter(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileSpaceDelimiter(Param1/*[in]*/);
  }

  BSTR __fastcall Get_TextFileOtherDelimiter(void)
  {
    return GetDefaultInterface()->get_TextFileOtherDelimiter();
  }

  void __fastcall Set_TextFileOtherDelimiter(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileOtherDelimiter(Param1/*[in]*/);
  }

  TVariant __fastcall Get_TextFileColumnDataTypes(void)
  {
    return GetDefaultInterface()->get_TextFileColumnDataTypes();
  }

  void __fastcall Set_TextFileColumnDataTypes(TVariantInParam Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileColumnDataTypes(Param1/*[in]*/);
  }

  TVariant __fastcall Get_TextFileFixedColumnWidths(void)
  {
    return GetDefaultInterface()->get_TextFileFixedColumnWidths();
  }

  void __fastcall Set_TextFileFixedColumnWidths(TVariantInParam Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileFixedColumnWidths(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PreserveColumnInfo(void)
  {
    return GetDefaultInterface()->get_PreserveColumnInfo();
  }

  void __fastcall Set_PreserveColumnInfo(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_PreserveColumnInfo(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PreserveFormatting(void)
  {
    return GetDefaultInterface()->get_PreserveFormatting();
  }

  void __fastcall Set_PreserveFormatting(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_PreserveFormatting(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AdjustColumnWidth(void)
  {
    return GetDefaultInterface()->get_AdjustColumnWidth();
  }

  void __fastcall Set_AdjustColumnWidth(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AdjustColumnWidth(Param1/*[in]*/);
  }

  TVariant __fastcall Get_CommandText(void)
  {
    return GetDefaultInterface()->get_CommandText();
  }

  void __fastcall Set_CommandText(TVariantInParam Param1/*[in]*/)
  {
    GetDefaultInterface()->set_CommandText(Param1/*[in]*/);
  }

  Excel_2k::XlCmdType __fastcall Get_CommandType(void)
  {
    return GetDefaultInterface()->get_CommandType();
  }

  void __fastcall Set_CommandType(Excel_2k::XlCmdType Param1/*[in]*/)
  {
    GetDefaultInterface()->set_CommandType(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TextFilePromptOnRefresh(void)
  {
    return GetDefaultInterface()->get_TextFilePromptOnRefresh();
  }

  void __fastcall Set_TextFilePromptOnRefresh(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFilePromptOnRefresh(Param1/*[in]*/);
  }

  Excel_2k::xlQueryType __fastcall Get_QueryType(void)
  {
    return GetDefaultInterface()->get_QueryType();
  }

  TOLEBOOL __fastcall Get_MaintainConnection(void)
  {
    return GetDefaultInterface()->get_MaintainConnection();
  }

  void __fastcall Set_MaintainConnection(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_MaintainConnection(Param1/*[in]*/);
  }

  BSTR __fastcall Get_TextFileDecimalSeparator(void)
  {
    return GetDefaultInterface()->get_TextFileDecimalSeparator();
  }

  void __fastcall Set_TextFileDecimalSeparator(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileDecimalSeparator(Param1/*[in]*/);
  }

  BSTR __fastcall Get_TextFileThousandsSeparator(void)
  {
    return GetDefaultInterface()->get_TextFileThousandsSeparator();
  }

  void __fastcall Set_TextFileThousandsSeparator(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TextFileThousandsSeparator(Param1/*[in]*/);
  }

  long __fastcall Get_RefreshPeriod(void)
  {
    return GetDefaultInterface()->get_RefreshPeriod();
  }

  void __fastcall Set_RefreshPeriod(long Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RefreshPeriod(Param1/*[in]*/);
  }

  Excel_2k::xlWebSelectionType __fastcall Get_WebSelectionType(void)
  {
    return GetDefaultInterface()->get_WebSelectionType();
  }

  void __fastcall Set_WebSelectionType(Excel_2k::xlWebSelectionType Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebSelectionType(Param1/*[in]*/);
  }

  Excel_2k::xlWebFormatting __fastcall Get_WebFormatting(void)
  {
    return GetDefaultInterface()->get_WebFormatting();
  }

  void __fastcall Set_WebFormatting(Excel_2k::xlWebFormatting Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebFormatting(Param1/*[in]*/);
  }

  BSTR __fastcall Get_WebTables(void)
  {
    return GetDefaultInterface()->get_WebTables();
  }

  void __fastcall Set_WebTables(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebTables(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_WebPreFormattedTextToColumns(void)
  {
    return GetDefaultInterface()->get_WebPreFormattedTextToColumns();
  }

  void __fastcall Set_WebPreFormattedTextToColumns(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebPreFormattedTextToColumns(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_WebSingleBlockTextImport(void)
  {
    return GetDefaultInterface()->get_WebSingleBlockTextImport();
  }

  void __fastcall Set_WebSingleBlockTextImport(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebSingleBlockTextImport(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_WebDisableDateRecognition(void)
  {
    return GetDefaultInterface()->get_WebDisableDateRecognition();
  }

  void __fastcall Set_WebDisableDateRecognition(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebDisableDateRecognition(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_WebConsecutiveDelimitersAsOne(void)
  {
    return GetDefaultInterface()->get_WebConsecutiveDelimitersAsOne();
  }

  void __fastcall Set_WebConsecutiveDelimitersAsOne(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WebConsecutiveDelimitersAsOne(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall CancelRefresh(void)
  {
    GetDefaultInterface()->CancelRefresh();
  }

  void __fastcall Delete(void)
  {
    GetDefaultInterface()->Delete();
  }

  TOLEBOOL __fastcall Refresh(TVariantInParam BackgroundQuery/*[in,opt]*/= TNoParam())
  {
    return GetDefaultInterface()->Refresh(BackgroundQuery/*[in,opt]*/);
  }

  void __fastcall ResetTimer(void)
  {
    GetDefaultInterface()->ResetTimer();
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property TOLEBOOL HasAutoFormat={ read=Get_HasAutoFormat, write=Set_HasAutoFormat }; // 0, No
  __property TOLEBOOL Refreshing={ read=Get_Refreshing }; // 0, No
  __property TOLEBOOL FetchedRowOverflow={ read=Get_FetchedRowOverflow }; // 0, No
  __property Excel_2k::RangePtr Destination={ read=Get_Destination }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Connection={ read=Get_Connection, write=Set_Connection }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Sql={ read=Get_Sql, write=Set_Sql }; // 0, No
  */
  __property Excel_2k::RangePtr ResultRange={ read=Get_ResultRange }; // 0, Yes
  __property Excel_2k::ParametersPtr Parameters={ read=Get_Parameters }; // 0, Yes
  __property LPDISPATCH Recordset={ read=Get_Recordset, write=_Set_Recordset }; // 0, No
  __property TOLEBOOL TablesOnlyFromHTML={ read=Get_TablesOnlyFromHTML, write=Set_TablesOnlyFromHTML }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant TextFileColumnDataTypes={ read=Get_TextFileColumnDataTypes, write=Set_TextFileColumnDataTypes }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant TextFileFixedColumnWidths={ read=Get_TextFileFixedColumnWidths, write=Set_TextFileFixedColumnWidths }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant CommandText={ read=Get_CommandText, write=Set_CommandText }; // 0, No
  */
  __property Excel_2k::xlQueryType QueryType={ read=Get_QueryType }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR Name={ read=Get_Name, write=Set_Name, stored=false }; // 0, No
  __property TOLEBOOL FieldNames={ read=Get_FieldNames, write=Set_FieldNames, stored=false }; // 0, No
  __property TOLEBOOL RowNumbers={ read=Get_RowNumbers, write=Set_RowNumbers, stored=false }; // 0, No
  __property TOLEBOOL FillAdjacentFormulas={ read=Get_FillAdjacentFormulas, write=Set_FillAdjacentFormulas, stored=false }; // 0, No
  __property TOLEBOOL RefreshOnFileOpen={ read=Get_RefreshOnFileOpen, write=Set_RefreshOnFileOpen, stored=false }; // 0, No
  __property TOLEBOOL BackgroundQuery={ read=Get_BackgroundQuery, write=Set_BackgroundQuery, stored=false }; // 0, No
  __property Excel_2k::XlCellInsertionMode RefreshStyle={ read=Get_RefreshStyle, write=Set_RefreshStyle, stored=false }; // 0, No
  __property TOLEBOOL EnableRefresh={ read=Get_EnableRefresh, write=Set_EnableRefresh, stored=false }; // 0, No
  __property TOLEBOOL SavePassword={ read=Get_SavePassword, write=Set_SavePassword, stored=false }; // 0, No
  __property BSTR PostText={ read=Get_PostText, write=Set_PostText, stored=false }; // 0, No
  __property TOLEBOOL SaveData={ read=Get_SaveData, write=Set_SaveData, stored=false }; // 0, No
  __property TOLEBOOL EnableEditing={ read=Get_EnableEditing, write=Set_EnableEditing, stored=false }; // 0, No
  __property Excel_2k::XlPlatform TextFilePlatform={ read=Get_TextFilePlatform, write=Set_TextFilePlatform, stored=false }; // 0, No
  __property long TextFileStartRow={ read=Get_TextFileStartRow, write=Set_TextFileStartRow, stored=false }; // 0, No
  __property Excel_2k::XlTextParsingType TextFileParseType={ read=Get_TextFileParseType, write=Set_TextFileParseType, stored=false }; // 0, No
  __property Excel_2k::XlTextQualifier TextFileTextQualifier={ read=Get_TextFileTextQualifier, write=Set_TextFileTextQualifier, stored=false }; // 0, No
  __property TOLEBOOL TextFileConsecutiveDelimiter={ read=Get_TextFileConsecutiveDelimiter, write=Set_TextFileConsecutiveDelimiter, stored=false }; // 0, No
  __property TOLEBOOL TextFileTabDelimiter={ read=Get_TextFileTabDelimiter, write=Set_TextFileTabDelimiter, stored=false }; // 0, No
  __property TOLEBOOL TextFileSemicolonDelimiter={ read=Get_TextFileSemicolonDelimiter, write=Set_TextFileSemicolonDelimiter, stored=false }; // 0, No
  __property TOLEBOOL TextFileCommaDelimiter={ read=Get_TextFileCommaDelimiter, write=Set_TextFileCommaDelimiter, stored=false }; // 0, No
  __property TOLEBOOL TextFileSpaceDelimiter={ read=Get_TextFileSpaceDelimiter, write=Set_TextFileSpaceDelimiter, stored=false }; // 0, No
  __property BSTR TextFileOtherDelimiter={ read=Get_TextFileOtherDelimiter, write=Set_TextFileOtherDelimiter, stored=false }; // 0, No
  __property TOLEBOOL PreserveColumnInfo={ read=Get_PreserveColumnInfo, write=Set_PreserveColumnInfo, stored=false }; // 0, No
  __property TOLEBOOL PreserveFormatting={ read=Get_PreserveFormatting, write=Set_PreserveFormatting, stored=false }; // 0, No
  __property TOLEBOOL AdjustColumnWidth={ read=Get_AdjustColumnWidth, write=Set_AdjustColumnWidth, stored=false }; // 0, No
  __property Excel_2k::XlCmdType CommandType={ read=Get_CommandType, write=Set_CommandType, stored=false }; // 0, No
  __property TOLEBOOL TextFilePromptOnRefresh={ read=Get_TextFilePromptOnRefresh, write=Set_TextFilePromptOnRefresh, stored=false }; // 0, No
  __property TOLEBOOL MaintainConnection={ read=Get_MaintainConnection, write=Set_MaintainConnection, stored=false }; // 0, No
  __property BSTR TextFileDecimalSeparator={ read=Get_TextFileDecimalSeparator, write=Set_TextFileDecimalSeparator, stored=false }; // 0, No
  __property BSTR TextFileThousandsSeparator={ read=Get_TextFileThousandsSeparator, write=Set_TextFileThousandsSeparator, stored=false }; // 0, No
  __property long RefreshPeriod={ read=Get_RefreshPeriod, write=Set_RefreshPeriod, stored=false }; // 0, No
  __property Excel_2k::xlWebSelectionType WebSelectionType={ read=Get_WebSelectionType, write=Set_WebSelectionType, stored=false }; // 0, No
  __property Excel_2k::xlWebFormatting WebFormatting={ read=Get_WebFormatting, write=Set_WebFormatting, stored=false }; // 0, No
  __property BSTR WebTables={ read=Get_WebTables, write=Set_WebTables, stored=false }; // 0, No
  __property TOLEBOOL WebPreFormattedTextToColumns={ read=Get_WebPreFormattedTextToColumns, write=Set_WebPreFormattedTextToColumns, stored=false }; // 0, No
  __property TOLEBOOL WebSingleBlockTextImport={ read=Get_WebSingleBlockTextImport, write=Set_WebSingleBlockTextImport, stored=false }; // 0, No
  __property TOLEBOOL WebDisableDateRecognition={ read=Get_WebDisableDateRecognition, write=Set_WebDisableDateRecognition, stored=false }; // 0, No
  __property TOLEBOOL WebConsecutiveDelimitersAsOne={ read=Get_WebConsecutiveDelimitersAsOne, write=Set_WebConsecutiveDelimitersAsOne, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TExcelQueryTableBeforeRefresh  FOnBeforeRefresh;
  TExcelQueryTableAfterRefresh   FOnAfterRefresh;
__published:
  __property TExcelQueryTableBeforeRefresh OnBeforeRefresh={ read=FOnBeforeRefresh, write=FOnBeforeRefresh };
  __property TExcelQueryTableAfterRefresh OnAfterRefresh={ read=FOnAfterRefresh, write=FOnAfterRefresh };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. Object: _ApplicationPtr
// Def. Intf. DISP? : No
// Event   Interface: AppEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelApplicationNewWorkbook)(System::TObject * Sender, 
                                                                   Excel_2k::ExcelWorkbookPtr Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetSelectionChange)(System::TObject * Sender, 
                                                                            LPDISPATCH Sh/*[in]*/, 
                                                                            Excel_2k::RangePtr Target/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetBeforeDoubleClick)(System::TObject * Sender, 
                                                                              LPDISPATCH Sh/*[in]*/, 
                                                                              Excel_2k::RangePtr Target/*[in]*/, 
                                                                              TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetBeforeRightClick)(System::TObject * Sender, 
                                                                             LPDISPATCH Sh/*[in]*/, 
                                                                             Excel_2k::RangePtr Target/*[in]*/, 
                                                                             TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetActivate)(System::TObject * Sender, 
                                                                     LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetDeactivate)(System::TObject * Sender, 
                                                                       LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetCalculate)(System::TObject * Sender, 
                                                                      LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetChange)(System::TObject * Sender, 
                                                                   LPDISPATCH Sh/*[in]*/, 
                                                                   Excel_2k::RangePtr Target/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookOpen)(System::TObject * Sender, 
                                                                    Excel_2k::ExcelWorkbookPtr Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookActivate)(System::TObject * Sender, 
                                                                        Excel_2k::ExcelWorkbookPtr Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookDeactivate)(System::TObject * Sender, 
                                                                          Excel_2k::ExcelWorkbookPtr Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookBeforeClose)(System::TObject * Sender, 
                                                                           Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                           TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookBeforeSave)(System::TObject * Sender, 
                                                                          Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                          TOLEBOOL SaveAsUI/*[in]*/, 
                                                                          TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookBeforePrint)(System::TObject * Sender, 
                                                                           Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                           TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookNewSheet)(System::TObject * Sender, 
                                                                        Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                        LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookAddinInstall)(System::TObject * Sender, 
                                                                            Excel_2k::ExcelWorkbookPtr Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookAddinUninstall)(System::TObject * Sender, 
                                                                              Excel_2k::ExcelWorkbookPtr Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWindowResize)(System::TObject * Sender, 
                                                                    Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                    Excel_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWindowActivate)(System::TObject * Sender, 
                                                                      Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                      Excel_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWindowDeactivate)(System::TObject * Sender, 
                                                                        Excel_2k::ExcelWorkbookPtr Wb/*[in]*/, 
                                                                        Excel_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetFollowHyperlink)(System::TObject * Sender, 
                                                                            LPDISPATCH Sh/*[in]*/, 
                                                                            Excel_2k::HyperlinkPtr Target/*[in]*/);

class PACKAGE TExcelApplication : public Oleserver::TOleServer
{
  _ApplicationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelApplication(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ApplicationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ApplicationPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  Excel_2k::ExcelApplicationPtr __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  Excel_2k::RangePtr __fastcall Get_ActiveCell(void)
  {
    return GetDefaultInterface()->get_ActiveCell();
  }

  Excel_2k::ExcelChartPtr __fastcall Get_ActiveChart(void)
  {
    return GetDefaultInterface()->get_ActiveChart();
  }

  Excel_2k::DialogSheetPtr __fastcall Get_ActiveDialog(void)
  {
    return GetDefaultInterface()->get_ActiveDialog();
  }

  Excel_2k::MenuBarPtr __fastcall Get_ActiveMenuBar(void)
  {
    return GetDefaultInterface()->get_ActiveMenuBar();
  }

  BSTR __fastcall Get_ActivePrinter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ActivePrinter(lcid/*[in]*/);
  }

  void __fastcall Set_ActivePrinter(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(lcid/*[in]*/, RHS/*[in]*/);
  }

  LPDISPATCH __fastcall Get_ActiveSheet(void)
  {
    return GetDefaultInterface()->get_ActiveSheet();
  }

  Excel_2k::WINDOWPtr __fastcall Get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

  Excel_2k::ExcelWorkbookPtr __fastcall Get_ActiveWorkbook(void)
  {
    return GetDefaultInterface()->get_ActiveWorkbook();
  }

  Excel_2k::AddInsPtr __fastcall Get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

  Office_2k::AssistantPtr __fastcall Get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

  Excel_2k::RangePtr __fastcall Get_Cells(void)
  {
    return GetDefaultInterface()->get_Cells();
  }

  Excel_2k::SheetsPtr __fastcall Get_Charts(void)
  {
    return GetDefaultInterface()->get_Charts();
  }

  Excel_2k::RangePtr __fastcall Get_Columns(void)
  {
    return GetDefaultInterface()->get_Columns();
  }

  Office_2k::CommandBarsPtr __fastcall Get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

  long __fastcall Get_DDEAppReturnCode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DDEAppReturnCode(lcid/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_DialogSheets(void)
  {
    return GetDefaultInterface()->get_DialogSheets();
  }

  Excel_2k::MenuBarsPtr __fastcall Get_MenuBars(void)
  {
    return GetDefaultInterface()->get_MenuBars();
  }

  Excel_2k::ModulesPtr __fastcall Get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

  Excel_2k::NamesPtr __fastcall Get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

  Excel_2k::RangePtr __fastcall Get_Range(TVariantInParam Cell1/*[in]*/, 
                                          TVariantInParam Cell2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_Range(Cell1/*[in]*/, Cell2/*[in,opt]*/);
  }

  Excel_2k::RangePtr __fastcall Get_Rows(void)
  {
    return GetDefaultInterface()->get_Rows();
  }

  LPDISPATCH __fastcall Get_Selection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Selection(lcid/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_Sheets(void)
  {
    return GetDefaultInterface()->get_Sheets();
  }

  Excel_2k::MenuPtr __fastcall Get_ShortcutMenus(long Index/*[in]*/)
  {
    return GetDefaultInterface()->get_ShortcutMenus(Index/*[in]*/);
  }

  Excel_2k::ExcelWorkbookPtr __fastcall Get_ThisWorkbook(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ThisWorkbook(lcid/*[in]*/);
  }

  Excel_2k::ToolbarsPtr __fastcall Get_Toolbars(void)
  {
    return GetDefaultInterface()->get_Toolbars();
  }

  Excel_2k::WindozPtr __fastcall Get_Windoz(void)
  {
    return GetDefaultInterface()->get_Windoz();
  }

  Excel_2k::WorkbooksPtr __fastcall Get_Workbooks(void)
  {
    return GetDefaultInterface()->get_Workbooks();
  }

  Excel_2k::WorksheetFunctionPtr __fastcall Get_WorksheetFunction(void)
  {
    return GetDefaultInterface()->get_WorksheetFunction();
  }

  Excel_2k::SheetsPtr __fastcall Get_Worksheets(void)
  {
    return GetDefaultInterface()->get_Worksheets();
  }

  Excel_2k::SheetsPtr __fastcall Get_Excel4IntlMacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4IntlMacroSheets();
  }

  Excel_2k::SheetsPtr __fastcall Get_Excel4MacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4MacroSheets();
  }

  TOLEBOOL __fastcall Get_AlertBeforeOverwriting(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AlertBeforeOverwriting(lcid/*[in]*/);
  }

  void __fastcall Set_AlertBeforeOverwriting(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AlertBeforeOverwriting(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_AltStartupPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AltStartupPath(lcid/*[in]*/);
  }

  void __fastcall Set_AltStartupPath(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AltStartupPath(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AskToUpdateLinks(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AskToUpdateLinks(lcid/*[in]*/);
  }

  void __fastcall Set_AskToUpdateLinks(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AskToUpdateLinks(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableAnimations(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableAnimations(lcid/*[in]*/);
  }

  void __fastcall Set_EnableAnimations(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableAnimations(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::AutoCorrectPtr __fastcall Get_AutoCorrect(void)
  {
    return GetDefaultInterface()->get_AutoCorrect();
  }

  long __fastcall Get_Build(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Build(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_CalculateBeforeSave(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CalculateBeforeSave(lcid/*[in]*/);
  }

  void __fastcall Set_CalculateBeforeSave(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CalculateBeforeSave(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlCalculation __fastcall Get_Calculation(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Calculation(lcid/*[in]*/);
  }

  void __fastcall Set_Calculation(long lcid/*[in]*/, Excel_2k::XlCalculation RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Calculation(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_Caller(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Caller(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_CanPlaySounds(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CanPlaySounds(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_CanRecordSounds(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CanRecordSounds(lcid/*[in]*/);
  }

  BSTR __fastcall Get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

  void __fastcall Set_Caption(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_CellDragAndDrop(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CellDragAndDrop(lcid/*[in]*/);
  }

  void __fastcall Set_CellDragAndDrop(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CellDragAndDrop(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_ClipboardFormats(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ClipboardFormats(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayClipboardWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayClipboardWindow(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayClipboardWindow(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayClipboardWindow(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ColorButtons(void)
  {
    return GetDefaultInterface()->get_ColorButtons();
  }

  void __fastcall Set_ColorButtons(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ColorButtons(RHS/*[in]*/);
  }

  Excel_2k::XlCommandUnderlines __fastcall Get_CommandUnderlines(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CommandUnderlines(lcid/*[in]*/);
  }

  void __fastcall Set_CommandUnderlines(long lcid/*[in]*/, Excel_2k::XlCommandUnderlines RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CommandUnderlines(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ConstrainNumeric(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConstrainNumeric(lcid/*[in]*/);
  }

  void __fastcall Set_ConstrainNumeric(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ConstrainNumeric(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_CopyObjectsWithCells(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CopyObjectsWithCells(lcid/*[in]*/);
  }

  void __fastcall Set_CopyObjectsWithCells(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CopyObjectsWithCells(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlMousePointer __fastcall Get_Cursor(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Cursor(lcid/*[in]*/);
  }

  void __fastcall Set_Cursor(long lcid/*[in]*/, Excel_2k::XlMousePointer RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Cursor(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_CustomListCount(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CustomListCount(lcid/*[in]*/);
  }

  Excel_2k::XlCutCopyMode __fastcall Get_CutCopyMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CutCopyMode(lcid/*[in]*/);
  }

  void __fastcall Set_CutCopyMode(long lcid/*[in]*/, Excel_2k::XlCutCopyMode RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CutCopyMode(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_DataEntryMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DataEntryMode(lcid/*[in]*/);
  }

  void __fastcall Set_DataEntryMode(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DataEntryMode(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get__Default(void)
  {
    return GetDefaultInterface()->get__Default();
  }

  BSTR __fastcall Get_DefaultFilePath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultFilePath(lcid/*[in]*/);
  }

  void __fastcall Set_DefaultFilePath(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultFilePath(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::DialogsPtr __fastcall Get_Dialogs(void)
  {
    return GetDefaultInterface()->get_Dialogs();
  }

  TOLEBOOL __fastcall Get_DisplayAlerts(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayAlerts(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayAlerts(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAlerts(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayFormulaBar(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayFormulaBar(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayFormulaBar(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayFormulaBar(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayFullScreen(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayFullScreen(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayFullScreen(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayFullScreen(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayNoteIndicator(void)
  {
    return GetDefaultInterface()->get_DisplayNoteIndicator();
  }

  void __fastcall Set_DisplayNoteIndicator(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayNoteIndicator(RHS/*[in]*/);
  }

  Excel_2k::XlCommentDisplayMode __fastcall Get_DisplayCommentIndicator(void)
  {
    return GetDefaultInterface()->get_DisplayCommentIndicator();
  }

  void __fastcall Set_DisplayCommentIndicator(Excel_2k::XlCommentDisplayMode RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayCommentIndicator(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayExcel4Menus(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayExcel4Menus(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayExcel4Menus(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayExcel4Menus(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayRecentFiles(void)
  {
    return GetDefaultInterface()->get_DisplayRecentFiles();
  }

  void __fastcall Set_DisplayRecentFiles(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayRecentFiles(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayScrollBars(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayScrollBars(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayScrollBars(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayScrollBars(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayStatusBar(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayStatusBar(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayStatusBar(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayStatusBar(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EditDirectlyInCell(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EditDirectlyInCell(lcid/*[in]*/);
  }

  void __fastcall Set_EditDirectlyInCell(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EditDirectlyInCell(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableAutoComplete(void)
  {
    return GetDefaultInterface()->get_EnableAutoComplete();
  }

  void __fastcall Set_EnableAutoComplete(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableAutoComplete(RHS/*[in]*/);
  }

  Excel_2k::XlEnableCancelKey __fastcall Get_EnableCancelKey(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableCancelKey(lcid/*[in]*/);
  }

  void __fastcall Set_EnableCancelKey(long lcid/*[in]*/, Excel_2k::XlEnableCancelKey RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableCancelKey(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableSound(void)
  {
    return GetDefaultInterface()->get_EnableSound();
  }

  void __fastcall Set_EnableSound(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableSound(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableTipWizard(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableTipWizard(lcid/*[in]*/);
  }

  void __fastcall Set_EnableTipWizard(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableTipWizard(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_FileConverters(TVariantInParam Index1/*[in,opt]*/, 
                                         TVariantInParam Index2/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FileConverters(Index1/*[in,opt]*/, Index2/*[in,opt]*/, 
                                                     lcid/*[in]*/);
  }

  Office_2k::FileSearchPtr __fastcall Get_FileSearch(void)
  {
    return GetDefaultInterface()->get_FileSearch();
  }

  Office_2k::IFindPtr __fastcall Get_FileFind(void)
  {
    return GetDefaultInterface()->get_FileFind();
  }

  TOLEBOOL __fastcall Get_FixedDecimal(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FixedDecimal(lcid/*[in]*/);
  }

  void __fastcall Set_FixedDecimal(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_FixedDecimal(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_FixedDecimalPlaces(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FixedDecimalPlaces(lcid/*[in]*/);
  }

  void __fastcall Set_FixedDecimalPlaces(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_FixedDecimalPlaces(lcid/*[in]*/, RHS/*[in]*/);
  }

  double __fastcall Get_Height(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Height(lcid/*[in]*/);
  }

  void __fastcall Set_Height(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Height(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_IgnoreRemoteRequests(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_IgnoreRemoteRequests(lcid/*[in]*/);
  }

  void __fastcall Set_IgnoreRemoteRequests(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_IgnoreRemoteRequests(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Interactive(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Interactive(lcid/*[in]*/);
  }

  void __fastcall Set_Interactive(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Interactive(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_International(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_International(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Iteration(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Iteration(lcid/*[in]*/);
  }

  void __fastcall Set_Iteration(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Iteration(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_LargeButtons(void)
  {
    return GetDefaultInterface()->get_LargeButtons();
  }

  void __fastcall Set_LargeButtons(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_LargeButtons(RHS/*[in]*/);
  }

  double __fastcall Get_Left(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Left(lcid/*[in]*/);
  }

  void __fastcall Set_Left(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Left(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_LibraryPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_LibraryPath(lcid/*[in]*/);
  }

  TVariant __fastcall Get_MailSession(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MailSession(lcid/*[in]*/);
  }

  Excel_2k::XlMailSystem __fastcall Get_MailSystem(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MailSystem(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_MathCoprocessorAvailable(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MathCoprocessorAvailable(lcid/*[in]*/);
  }

  double __fastcall Get_MaxChange(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MaxChange(lcid/*[in]*/);
  }

  void __fastcall Set_MaxChange(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MaxChange(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_MaxIterations(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MaxIterations(lcid/*[in]*/);
  }

  void __fastcall Set_MaxIterations(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MaxIterations(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_MemoryFree(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MemoryFree(lcid/*[in]*/);
  }

  long __fastcall Get_MemoryTotal(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MemoryTotal(lcid/*[in]*/);
  }

  long __fastcall Get_MemoryUsed(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MemoryUsed(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_MouseAvailable(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MouseAvailable(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_MoveAfterReturn(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MoveAfterReturn(lcid/*[in]*/);
  }

  void __fastcall Set_MoveAfterReturn(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MoveAfterReturn(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlDirection __fastcall Get_MoveAfterReturnDirection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MoveAfterReturnDirection(lcid/*[in]*/);
  }

  void __fastcall Set_MoveAfterReturnDirection(long lcid/*[in]*/, Excel_2k::XlDirection RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MoveAfterReturnDirection(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::RecentFilesPtr __fastcall Get_RecentFiles(void)
  {
    return GetDefaultInterface()->get_RecentFiles();
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  BSTR __fastcall Get_NetworkTemplatesPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_NetworkTemplatesPath(lcid/*[in]*/);
  }

  Excel_2k::ODBCErrorsPtr __fastcall Get_ODBCErrors(void)
  {
    return GetDefaultInterface()->get_ODBCErrors();
  }

  long __fastcall Get_ODBCTimeout(void)
  {
    return GetDefaultInterface()->get_ODBCTimeout();
  }

  void __fastcall Set_ODBCTimeout(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ODBCTimeout(RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnCalculate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnCalculate(lcid/*[in]*/);
  }

  void __fastcall Set_OnCalculate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnCalculate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnData(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnData(lcid/*[in]*/);
  }

  void __fastcall Set_OnData(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnData(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnDoubleClick(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnDoubleClick(lcid/*[in]*/);
  }

  void __fastcall Set_OnDoubleClick(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnDoubleClick(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnEntry(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnEntry(lcid/*[in]*/);
  }

  void __fastcall Set_OnEntry(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnEntry(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnWindow(lcid/*[in]*/);
  }

  void __fastcall Set_OnWindow(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnWindow(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OperatingSystem(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OperatingSystem(lcid/*[in]*/);
  }

  BSTR __fastcall Get_OrganizationName(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OrganizationName(lcid/*[in]*/);
  }

  BSTR __fastcall Get_Path(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Path(lcid/*[in]*/);
  }

  BSTR __fastcall Get_PathSeparator(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PathSeparator(lcid/*[in]*/);
  }

  TVariant __fastcall Get_PreviousSelections(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PreviousSelections(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PivotTableSelection(void)
  {
    return GetDefaultInterface()->get_PivotTableSelection();
  }

  void __fastcall Set_PivotTableSelection(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PivotTableSelection(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PromptForSummaryInfo(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PromptForSummaryInfo(lcid/*[in]*/);
  }

  void __fastcall Set_PromptForSummaryInfo(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PromptForSummaryInfo(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_RecordRelative(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RecordRelative(lcid/*[in]*/);
  }

  Excel_2k::XlReferenceStyle __fastcall Get_ReferenceStyle(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ReferenceStyle(lcid/*[in]*/);
  }

  void __fastcall Set_ReferenceStyle(long lcid/*[in]*/, Excel_2k::XlReferenceStyle RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ReferenceStyle(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_RegisteredFunctions(TVariantInParam Index1/*[in,opt]*/, 
                                              TVariantInParam Index2/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RegisteredFunctions(Index1/*[in,opt]*/, Index2/*[in,opt]*/, 
                                                          lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_RollZoom(void)
  {
    return GetDefaultInterface()->get_RollZoom();
  }

  void __fastcall Set_RollZoom(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_RollZoom(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ScreenUpdating(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ScreenUpdating(lcid/*[in]*/);
  }

  void __fastcall Set_ScreenUpdating(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ScreenUpdating(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_SheetsInNewWorkbook(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SheetsInNewWorkbook(lcid/*[in]*/);
  }

  void __fastcall Set_SheetsInNewWorkbook(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SheetsInNewWorkbook(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowChartTipNames(void)
  {
    return GetDefaultInterface()->get_ShowChartTipNames();
  }

  void __fastcall Set_ShowChartTipNames(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowChartTipNames(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowChartTipValues(void)
  {
    return GetDefaultInterface()->get_ShowChartTipValues();
  }

  void __fastcall Set_ShowChartTipValues(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowChartTipValues(RHS/*[in]*/);
  }

  BSTR __fastcall Get_StandardFont(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardFont(lcid/*[in]*/);
  }

  void __fastcall Set_StandardFont(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StandardFont(lcid/*[in]*/, RHS/*[in]*/);
  }

  double __fastcall Get_StandardFontSize(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardFontSize(lcid/*[in]*/);
  }

  void __fastcall Set_StandardFontSize(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StandardFontSize(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_StartupPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StartupPath(lcid/*[in]*/);
  }

  TVariant __fastcall Get_StatusBar(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StatusBar(lcid/*[in]*/);
  }

  void __fastcall Set_StatusBar(long lcid/*[in]*/, TVariantInParam RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_TemplatesPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TemplatesPath(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowToolTips(void)
  {
    return GetDefaultInterface()->get_ShowToolTips();
  }

  void __fastcall Set_ShowToolTips(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowToolTips(RHS/*[in]*/);
  }

  double __fastcall Get_Top(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Top(lcid/*[in]*/);
  }

  void __fastcall Set_Top(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Top(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlFileFormat __fastcall Get_DefaultSaveFormat(void)
  {
    return GetDefaultInterface()->get_DefaultSaveFormat();
  }

  void __fastcall Set_DefaultSaveFormat(Excel_2k::XlFileFormat RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSaveFormat(RHS/*[in]*/);
  }

  BSTR __fastcall Get_TransitionMenuKey(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionMenuKey(lcid/*[in]*/);
  }

  void __fastcall Set_TransitionMenuKey(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionMenuKey(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_TransitionMenuKeyAction(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionMenuKeyAction(lcid/*[in]*/);
  }

  void __fastcall Set_TransitionMenuKeyAction(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionMenuKeyAction(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TransitionNavigKeys(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionNavigKeys(lcid/*[in]*/);
  }

  void __fastcall Set_TransitionNavigKeys(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionNavigKeys(lcid/*[in]*/, RHS/*[in]*/);
  }

  double __fastcall Get_UsableHeight(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UsableHeight(lcid/*[in]*/);
  }

  double __fastcall Get_UsableWidth(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UsableWidth(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

  void __fastcall Set_UserControl(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(RHS/*[in]*/);
  }

  BSTR __fastcall Get_UserName(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UserName(lcid/*[in]*/);
  }

  void __fastcall Set_UserName(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UserName(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_Value(void)
  {
    return GetDefaultInterface()->get_Value();
  }

  Vbide_2k::VBEPtr __fastcall Get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

  BSTR __fastcall Get_Version(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Version(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Visible(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Visible(lcid/*[in]*/);
  }

  void __fastcall Set_Visible(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(lcid/*[in]*/, RHS/*[in]*/);
  }

  double __fastcall Get_Width(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Width(lcid/*[in]*/);
  }

  void __fastcall Set_Width(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Width(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_WindowsForPens(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WindowsForPens(lcid/*[in]*/);
  }

  Excel_2k::XlWindowState __fastcall Get_WindowState(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WindowState(lcid/*[in]*/);
  }

  void __fastcall Set_WindowState(long lcid/*[in]*/, Excel_2k::XlWindowState RHS/*[in]*/)
  {
    GetDefaultInterface()->set_WindowState(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_UILanguage(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UILanguage(lcid/*[in]*/);
  }

  void __fastcall Set_UILanguage(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UILanguage(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_DefaultSheetDirection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultSheetDirection(lcid/*[in]*/);
  }

  void __fastcall Set_DefaultSheetDirection(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSheetDirection(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_CursorMovement(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CursorMovement(lcid/*[in]*/);
  }

  void __fastcall Set_CursorMovement(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CursorMovement(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ControlCharacters(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ControlCharacters(lcid/*[in]*/);
  }

  void __fastcall Set_ControlCharacters(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ControlCharacters(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableEvents(void)
  {
    return GetDefaultInterface()->get_EnableEvents();
  }

  void __fastcall Set_EnableEvents(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableEvents(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayInfoWindow(void)
  {
    return GetDefaultInterface()->get_DisplayInfoWindow();
  }

  void __fastcall Set_DisplayInfoWindow(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayInfoWindow(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ExtendList(void)
  {
    return GetDefaultInterface()->get_ExtendList();
  }

  void __fastcall Set_ExtendList(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ExtendList(RHS/*[in]*/);
  }

  Excel_2k::OLEDBErrorsPtr __fastcall Get_OLEDBErrors(void)
  {
    return GetDefaultInterface()->get_OLEDBErrors();
  }

  Office_2k::COMAddInsPtr __fastcall Get_COMAddIns(void)
  {
    return GetDefaultInterface()->get_COMAddIns();
  }

  Excel_2k::DefaultWebOptionsPtr __fastcall Get_DefaultWebOptions(void)
  {
    return GetDefaultInterface()->get_DefaultWebOptions();
  }

  BSTR __fastcall Get_ProductCode(void)
  {
    return GetDefaultInterface()->get_ProductCode();
  }

  BSTR __fastcall Get_UserLibraryPath(void)
  {
    return GetDefaultInterface()->get_UserLibraryPath();
  }

  TOLEBOOL __fastcall Get_AutoPercentEntry(void)
  {
    return GetDefaultInterface()->get_AutoPercentEntry();
  }

  void __fastcall Set_AutoPercentEntry(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoPercentEntry(RHS/*[in]*/);
  }

  Office_2k::LanguageSettingsPtr __fastcall Get_LanguageSettings(void)
  {
    return GetDefaultInterface()->get_LanguageSettings();
  }

  TOLEBOOL __fastcall Get_Dummy101(void)
  {
    return GetDefaultInterface()->get_Dummy101();
  }

  Office_2k::AnswerWizardPtr __fastcall Get_AnswerWizard(void)
  {
    return GetDefaultInterface()->get_AnswerWizard();
  }

  long __fastcall Get_CalculationVersion(void)
  {
    return GetDefaultInterface()->get_CalculationVersion();
  }

  TOLEBOOL __fastcall Get_ShowWindowsInTaskbar(void)
  {
    return GetDefaultInterface()->get_ShowWindowsInTaskbar();
  }

  void __fastcall Set_ShowWindowsInTaskbar(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowWindowsInTaskbar(RHS/*[in]*/);
  }

  Office_2k::MsoFeatureInstall __fastcall Get_FeatureInstall(void)
  {
    return GetDefaultInterface()->get_FeatureInstall();
  }

  void __fastcall Set_FeatureInstall(Office_2k::MsoFeatureInstall RHS/*[in]*/)
  {
    GetDefaultInterface()->set_FeatureInstall(RHS/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Calculate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Calculate(lcid/*[in]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR String/*[in]*/, 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, String/*[in]*/, lcid/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, TVariantInParam Item/*[in]*/, 
                          TVariantInParam Data/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall ExecuteExcel4Macro(BSTR String/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ExecuteExcel4Macro(String/*[in]*/, lcid/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Intersect(Excel_2k::RangePtr Arg1/*[in]*/, 
                                          Excel_2k::RangePtr Arg2/*[in]*/, 
                                          TVariantInParam Arg3/*[in,opt]*/, 
                                          TVariantInParam Arg4/*[in,opt]*/, 
                                          TVariantInParam Arg5/*[in,opt]*/, 
                                          TVariantInParam Arg6/*[in,opt]*/, 
                                          TVariantInParam Arg7/*[in,opt]*/, 
                                          TVariantInParam Arg8/*[in,opt]*/, 
                                          TVariantInParam Arg9/*[in,opt]*/, 
                                          TVariantInParam Arg10/*[in,opt]*/, 
                                          TVariantInParam Arg11/*[in,opt]*/, 
                                          TVariantInParam Arg12/*[in,opt]*/, 
                                          TVariantInParam Arg13/*[in,opt]*/, 
                                          TVariantInParam Arg14/*[in,opt]*/, 
                                          TVariantInParam Arg15/*[in,opt]*/, 
                                          TVariantInParam Arg16/*[in,opt]*/, 
                                          TVariantInParam Arg17/*[in,opt]*/, 
                                          TVariantInParam Arg18/*[in,opt]*/, 
                                          TVariantInParam Arg19/*[in,opt]*/, 
                                          TVariantInParam Arg20/*[in,opt]*/, 
                                          TVariantInParam Arg21/*[in,opt]*/, 
                                          TVariantInParam Arg22/*[in,opt]*/, 
                                          TVariantInParam Arg23/*[in,opt]*/, 
                                          TVariantInParam Arg24/*[in,opt]*/, 
                                          TVariantInParam Arg25/*[in,opt]*/, 
                                          TVariantInParam Arg26/*[in,opt]*/, 
                                          TVariantInParam Arg27/*[in,opt]*/, 
                                          TVariantInParam Arg28/*[in,opt]*/, 
                                          TVariantInParam Arg29/*[in,opt]*/, 
                                          TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Intersect(Arg1/*[in]*/, Arg2/*[in]*/, Arg3/*[in,opt]*/, 
                                            Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                            Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                            Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, Arg12/*[in,opt]*/, 
                                            Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                            Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, Arg18/*[in,opt]*/, 
                                            Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                            Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, Arg24/*[in,opt]*/, 
                                            Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                            Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, Arg30/*[in,opt]*/, 
                                            lcid/*[in]*/);
  }

  TVariant __fastcall Run(TVariantInParam Macro/*[in,opt]*/, TVariantInParam Arg1/*[in,opt]*/, 
                          TVariantInParam Arg2/*[in,opt]*/, TVariantInParam Arg3/*[in,opt]*/, 
                          TVariantInParam Arg4/*[in,opt]*/, TVariantInParam Arg5/*[in,opt]*/, 
                          TVariantInParam Arg6/*[in,opt]*/, TVariantInParam Arg7/*[in,opt]*/, 
                          TVariantInParam Arg8/*[in,opt]*/, TVariantInParam Arg9/*[in,opt]*/, 
                          TVariantInParam Arg10/*[in,opt]*/, TVariantInParam Arg11/*[in,opt]*/, 
                          TVariantInParam Arg12/*[in,opt]*/, TVariantInParam Arg13/*[in,opt]*/, 
                          TVariantInParam Arg14/*[in,opt]*/, TVariantInParam Arg15/*[in,opt]*/, 
                          TVariantInParam Arg16/*[in,opt]*/, TVariantInParam Arg17/*[in,opt]*/, 
                          TVariantInParam Arg18/*[in,opt]*/, TVariantInParam Arg19/*[in,opt]*/, 
                          TVariantInParam Arg20/*[in,opt]*/, TVariantInParam Arg21/*[in,opt]*/, 
                          TVariantInParam Arg22/*[in,opt]*/, TVariantInParam Arg23/*[in,opt]*/, 
                          TVariantInParam Arg24/*[in,opt]*/, TVariantInParam Arg25/*[in,opt]*/, 
                          TVariantInParam Arg26/*[in,opt]*/, TVariantInParam Arg27/*[in,opt]*/, 
                          TVariantInParam Arg28/*[in,opt]*/, TVariantInParam Arg29/*[in,opt]*/, 
                          TVariantInParam Arg30/*[in,opt]*/)
  {
    return GetDefaultInterface()->Run(Macro/*[in,opt]*/, Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, 
                                      Arg3/*[in,opt]*/, Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, 
                                      Arg6/*[in,opt]*/, Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, 
                                      Arg9/*[in,opt]*/, Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                      Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, 
                                      Arg15/*[in,opt]*/, Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                      Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, 
                                      Arg21/*[in,opt]*/, Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                      Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, 
                                      Arg27/*[in,opt]*/, Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                      Arg30/*[in,opt]*/);
  }

  TVariant __fastcall _Run2(TVariantInParam Macro/*[in,opt]*/, TVariantInParam Arg1/*[in,opt]*/, 
                            TVariantInParam Arg2/*[in,opt]*/, TVariantInParam Arg3/*[in,opt]*/, 
                            TVariantInParam Arg4/*[in,opt]*/, TVariantInParam Arg5/*[in,opt]*/, 
                            TVariantInParam Arg6/*[in,opt]*/, TVariantInParam Arg7/*[in,opt]*/, 
                            TVariantInParam Arg8/*[in,opt]*/, TVariantInParam Arg9/*[in,opt]*/, 
                            TVariantInParam Arg10/*[in,opt]*/, TVariantInParam Arg11/*[in,opt]*/, 
                            TVariantInParam Arg12/*[in,opt]*/, TVariantInParam Arg13/*[in,opt]*/, 
                            TVariantInParam Arg14/*[in,opt]*/, TVariantInParam Arg15/*[in,opt]*/, 
                            TVariantInParam Arg16/*[in,opt]*/, TVariantInParam Arg17/*[in,opt]*/, 
                            TVariantInParam Arg18/*[in,opt]*/, TVariantInParam Arg19/*[in,opt]*/, 
                            TVariantInParam Arg20/*[in,opt]*/, TVariantInParam Arg21/*[in,opt]*/, 
                            TVariantInParam Arg22/*[in,opt]*/, TVariantInParam Arg23/*[in,opt]*/, 
                            TVariantInParam Arg24/*[in,opt]*/, TVariantInParam Arg25/*[in,opt]*/, 
                            TVariantInParam Arg26/*[in,opt]*/, TVariantInParam Arg27/*[in,opt]*/, 
                            TVariantInParam Arg28/*[in,opt]*/, TVariantInParam Arg29/*[in,opt]*/, 
                            TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Run2(Macro/*[in,opt]*/, Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, 
                                        Arg3/*[in,opt]*/, Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, 
                                        Arg6/*[in,opt]*/, Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, 
                                        Arg9/*[in,opt]*/, Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                        Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, 
                                        Arg15/*[in,opt]*/, Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                        Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, 
                                        Arg21/*[in,opt]*/, Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                        Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, 
                                        Arg27/*[in,opt]*/, Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                        Arg30/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendKeys(TVariantInParam Keys/*[in]*/, 
                           TVariantInParam Wait/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SendKeys(Keys/*[in]*/, Wait/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Union(Excel_2k::RangePtr Arg1/*[in]*/, 
                                      Excel_2k::RangePtr Arg2/*[in]*/, 
                                      TVariantInParam Arg3/*[in,opt]*/, 
                                      TVariantInParam Arg4/*[in,opt]*/, 
                                      TVariantInParam Arg5/*[in,opt]*/, 
                                      TVariantInParam Arg6/*[in,opt]*/, 
                                      TVariantInParam Arg7/*[in,opt]*/, 
                                      TVariantInParam Arg8/*[in,opt]*/, 
                                      TVariantInParam Arg9/*[in,opt]*/, 
                                      TVariantInParam Arg10/*[in,opt]*/, 
                                      TVariantInParam Arg11/*[in,opt]*/, 
                                      TVariantInParam Arg12/*[in,opt]*/, 
                                      TVariantInParam Arg13/*[in,opt]*/, 
                                      TVariantInParam Arg14/*[in,opt]*/, 
                                      TVariantInParam Arg15/*[in,opt]*/, 
                                      TVariantInParam Arg16/*[in,opt]*/, 
                                      TVariantInParam Arg17/*[in,opt]*/, 
                                      TVariantInParam Arg18/*[in,opt]*/, 
                                      TVariantInParam Arg19/*[in,opt]*/, 
                                      TVariantInParam Arg20/*[in,opt]*/, 
                                      TVariantInParam Arg21/*[in,opt]*/, 
                                      TVariantInParam Arg22/*[in,opt]*/, 
                                      TVariantInParam Arg23/*[in,opt]*/, 
                                      TVariantInParam Arg24/*[in,opt]*/, 
                                      TVariantInParam Arg25/*[in,opt]*/, 
                                      TVariantInParam Arg26/*[in,opt]*/, 
                                      TVariantInParam Arg27/*[in,opt]*/, 
                                      TVariantInParam Arg28/*[in,opt]*/, 
                                      TVariantInParam Arg29/*[in,opt]*/, 
                                      TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Union(Arg1/*[in]*/, Arg2/*[in]*/, Arg3/*[in,opt]*/, 
                                        Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                        Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                        Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, Arg12/*[in,opt]*/, 
                                        Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                        Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, Arg18/*[in,opt]*/, 
                                        Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                        Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, Arg24/*[in,opt]*/, 
                                        Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                        Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, Arg30/*[in,opt]*/, 
                                        lcid/*[in]*/);
  }

  void __fastcall ActivateMicrosoftApp(Excel_2k::XlMSApplication Index/*[in]*/, 
                                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ActivateMicrosoftApp(Index/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall AddChartAutoFormat(TVariantInParam Chart/*[in]*/, BSTR Name/*[in]*/, 
                                     TVariantInParam Description/*[in,opt]*/= TNoParam(), 
                                     long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->AddChartAutoFormat(Chart/*[in]*/, Name/*[in]*/, Description/*[in,opt]*/, 
                                              lcid/*[in]*/);
  }

  void __fastcall AddCustomList(TVariantInParam ListArray/*[in]*/, 
                                TVariantInParam ByRow/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->AddCustomList(ListArray/*[in]*/, ByRow/*[in,opt]*/, lcid/*[in]*/);
  }

  double __fastcall CentimetersToPoints(double Centimeters/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CentimetersToPoints(Centimeters/*[in]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall CheckSpelling(BSTR Word/*[in]*/, TVariantInParam CustomDictionary/*[in,opt]*/, 
                                    TVariantInParam IgnoreUppercase/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CheckSpelling(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                IgnoreUppercase/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall ConvertFormula(TVariantInParam Formula/*[in]*/, 
                                     Excel_2k::XlReferenceStyle FromReferenceStyle/*[in]*/, 
                                     TVariantInParam ToReferenceStyle/*[in,opt]*/, 
                                     TVariantInParam ToAbsolute/*[in,opt]*/, 
                                     TVariantInParam RelativeTo/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ConvertFormula(Formula/*[in]*/, FromReferenceStyle/*[in]*/, 
                                                 ToReferenceStyle/*[in,opt]*/, 
                                                 ToAbsolute/*[in,opt]*/, RelativeTo/*[in,opt]*/, 
                                                 lcid/*[in]*/);
  }

  void __fastcall Dummy1(void)
  {
    GetDefaultInterface()->Dummy1();
  }

  void __fastcall Dummy2(void)
  {
    GetDefaultInterface()->Dummy2();
  }

  void __fastcall Dummy3(void)
  {
    GetDefaultInterface()->Dummy3();
  }

  void __fastcall Dummy4(void)
  {
    GetDefaultInterface()->Dummy4();
  }

  void __fastcall Dummy5(void)
  {
    GetDefaultInterface()->Dummy5();
  }

  void __fastcall Dummy6(void)
  {
    GetDefaultInterface()->Dummy6();
  }

  void __fastcall Dummy7(void)
  {
    GetDefaultInterface()->Dummy7();
  }

  void __fastcall Dummy8(void)
  {
    GetDefaultInterface()->Dummy8();
  }

  void __fastcall Dummy9(void)
  {
    GetDefaultInterface()->Dummy9();
  }

  void __fastcall Dummy10(void)
  {
    GetDefaultInterface()->Dummy10();
  }

  void __fastcall Dummy11(void)
  {
    GetDefaultInterface()->Dummy11();
  }

  void __fastcall DeleteChartAutoFormat(BSTR Name/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DeleteChartAutoFormat(Name/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DeleteCustomList(long ListNum/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DeleteCustomList(ListNum/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DoubleClick(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DoubleClick(lcid/*[in]*/);
  }

  void __fastcall _FindFile(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->_FindFile(lcid/*[in]*/);
  }

  TVariant __fastcall GetCustomListContents(long ListNum/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetCustomListContents(ListNum/*[in]*/, lcid/*[in]*/);
  }

  long __fastcall GetCustomListNum(TVariantInParam ListArray/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetCustomListNum(ListArray/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall GetOpenFilename(TVariantInParam FileFilter/*[in,opt]*/, 
                                      TVariantInParam FilterIndex/*[in,opt]*/, 
                                      TVariantInParam Title/*[in,opt]*/, 
                                      TVariantInParam ButtonText/*[in,opt]*/, 
                                      TVariantInParam MultiSelect/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetOpenFilename(FileFilter/*[in,opt]*/, FilterIndex/*[in,opt]*/, 
                                                  Title/*[in,opt]*/, ButtonText/*[in,opt]*/, 
                                                  MultiSelect/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall GetSaveAsFilename(TVariantInParam InitialFilename/*[in,opt]*/, 
                                        TVariantInParam FileFilter/*[in,opt]*/, 
                                        TVariantInParam FilterIndex/*[in,opt]*/, 
                                        TVariantInParam Title/*[in,opt]*/, 
                                        TVariantInParam ButtonText/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetSaveAsFilename(InitialFilename/*[in,opt]*/, 
                                                    FileFilter/*[in,opt]*/, FilterIndex/*[in,opt]*/, 
                                                    Title/*[in,opt]*/, ButtonText/*[in,opt]*/, 
                                                    lcid/*[in]*/);
  }

  void __fastcall Goto(TVariantInParam Reference/*[in,opt]*/= TNoParam(), 
                       TVariantInParam Scroll/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Goto(Reference/*[in,opt]*/, Scroll/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Help(TVariantInParam HelpFile/*[in,opt]*/= TNoParam(), 
                       TVariantInParam HelpContextID/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Help(HelpFile/*[in,opt]*/, HelpContextID/*[in,opt]*/, lcid/*[in]*/);
  }

  double __fastcall InchesToPoints(double Inches/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->InchesToPoints(Inches/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall InputBox(BSTR Prompt/*[in]*/, TVariantInParam Title/*[in,opt]*/, 
                               TVariantInParam Default/*[in,opt]*/, TVariantInParam Left/*[in,opt]*/, 
                               TVariantInParam Top/*[in,opt]*/, TVariantInParam HelpFile/*[in,opt]*/, 
                               TVariantInParam HelpContextID/*[in,opt]*/, 
                               TVariantInParam Type/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->InputBox(Prompt/*[in]*/, Title/*[in,opt]*/, Default/*[in,opt]*/, 
                                           Left/*[in,opt]*/, Top/*[in,opt]*/, HelpFile/*[in,opt]*/, 
                                           HelpContextID/*[in,opt]*/, Type/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall MacroOptions(TVariantInParam Macro/*[in,opt]*/= TNoParam(), 
                               TVariantInParam Description/*[in,opt]*/= TNoParam(), 
                               TVariantInParam HasMenu/*[in,opt]*/= TNoParam(), 
                               TVariantInParam MenuText/*[in,opt]*/= TNoParam(), 
                               TVariantInParam HasShortcutKey/*[in,opt]*/= TNoParam(), 
                               TVariantInParam ShortcutKey/*[in,opt]*/= TNoParam(), 
                               TVariantInParam Category/*[in,opt]*/= TNoParam(), 
                               TVariantInParam StatusBar/*[in,opt]*/= TNoParam(), 
                               TVariantInParam HelpContextID/*[in,opt]*/= TNoParam(), 
                               TVariantInParam HelpFile/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->MacroOptions(Macro/*[in,opt]*/, Description/*[in,opt]*/, 
                                        HasMenu/*[in,opt]*/, MenuText/*[in,opt]*/, 
                                        HasShortcutKey/*[in,opt]*/, ShortcutKey/*[in,opt]*/, 
                                        Category/*[in,opt]*/, StatusBar/*[in,opt]*/, 
                                        HelpContextID/*[in,opt]*/, HelpFile/*[in,opt]*/, 
                                        lcid/*[in]*/);
  }

  void __fastcall MailLogoff(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->MailLogoff(lcid/*[in]*/);
  }

  void __fastcall MailLogon(TVariantInParam Name/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                            TVariantInParam DownloadNewMail/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->MailLogon(Name/*[in,opt]*/, Password/*[in,opt]*/, 
                                     DownloadNewMail/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_2k::ExcelWorkbookPtr __fastcall NextLetter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->NextLetter(lcid/*[in]*/);
  }

  void __fastcall OnKey(BSTR Key/*[in]*/, TVariantInParam Procedure/*[in,opt]*/= TNoParam(), 
                        long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnKey(Key/*[in]*/, Procedure/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall OnRepeat(BSTR Text/*[in]*/, BSTR Procedure/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnRepeat(Text/*[in]*/, Procedure/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall OnTime(TVariantInParam EarliestTime/*[in]*/, BSTR Procedure/*[in]*/, 
                         TVariantInParam LatestTime/*[in,opt]*/= TNoParam(), 
                         TVariantInParam Schedule/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnTime(EarliestTime/*[in]*/, Procedure/*[in]*/, LatestTime/*[in,opt]*/, 
                                  Schedule/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall OnUndo(BSTR Text/*[in]*/, BSTR Procedure/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnUndo(Text/*[in]*/, Procedure/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall Quit(void)
  {
    GetDefaultInterface()->Quit();
  }

  void __fastcall RecordMacro(TVariantInParam BasicCode/*[in,opt]*/= TNoParam(), 
                              TVariantInParam XlmCode/*[in,opt]*/= TNoParam(), 
                              long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->RecordMacro(BasicCode/*[in,opt]*/, XlmCode/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall RegisterXLL(BSTR Filename/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->RegisterXLL(Filename/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall Repeat(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Repeat(lcid/*[in]*/);
  }

  void __fastcall ResetTipWizard(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ResetTipWizard(lcid/*[in]*/);
  }

  void __fastcall Save(TVariantInParam Filename/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Save(Filename/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SaveWorkspace(TVariantInParam Filename/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveWorkspace(Filename/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetDefaultChart(TVariantInParam FormatName/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam Gallery/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SetDefaultChart(FormatName/*[in,opt]*/, Gallery/*[in,opt]*/);
  }

  void __fastcall Undo(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Undo(lcid/*[in]*/);
  }

  void __fastcall Volatile(TVariantInParam Volatile/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Volatile(Volatile/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall _Wait(TVariantInParam Time/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->_Wait(Time/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _WSFunction(TVariantInParam Arg1/*[in,opt]*/, TVariantInParam Arg2/*[in,opt]*/, 
                                  TVariantInParam Arg3/*[in,opt]*/, TVariantInParam Arg4/*[in,opt]*/, 
                                  TVariantInParam Arg5/*[in,opt]*/, TVariantInParam Arg6/*[in,opt]*/, 
                                  TVariantInParam Arg7/*[in,opt]*/, TVariantInParam Arg8/*[in,opt]*/, 
                                  TVariantInParam Arg9/*[in,opt]*/, 
                                  TVariantInParam Arg10/*[in,opt]*/, 
                                  TVariantInParam Arg11/*[in,opt]*/, 
                                  TVariantInParam Arg12/*[in,opt]*/, 
                                  TVariantInParam Arg13/*[in,opt]*/, 
                                  TVariantInParam Arg14/*[in,opt]*/, 
                                  TVariantInParam Arg15/*[in,opt]*/, 
                                  TVariantInParam Arg16/*[in,opt]*/, 
                                  TVariantInParam Arg17/*[in,opt]*/, 
                                  TVariantInParam Arg18/*[in,opt]*/, 
                                  TVariantInParam Arg19/*[in,opt]*/, 
                                  TVariantInParam Arg20/*[in,opt]*/, 
                                  TVariantInParam Arg21/*[in,opt]*/, 
                                  TVariantInParam Arg22/*[in,opt]*/, 
                                  TVariantInParam Arg23/*[in,opt]*/, 
                                  TVariantInParam Arg24/*[in,opt]*/, 
                                  TVariantInParam Arg25/*[in,opt]*/, 
                                  TVariantInParam Arg26/*[in,opt]*/, 
                                  TVariantInParam Arg27/*[in,opt]*/, 
                                  TVariantInParam Arg28/*[in,opt]*/, 
                                  TVariantInParam Arg29/*[in,opt]*/, 
                                  TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_WSFunction(Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, Arg3/*[in,opt]*/, 
                                              Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                              Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                              Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                              Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, 
                                              Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                              Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                              Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, 
                                              Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                              Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                              Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, 
                                              Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                              Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                              Arg30/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Wait(TVariantInParam Time/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Wait(Time/*[in]*/, lcid/*[in]*/);
  }

  BSTR __fastcall GetPhonetic(TVariantInParam Text/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetPhonetic(Text/*[in,opt]*/);
  }

  void __fastcall Dummy12(void)
  {
    GetDefaultInterface()->Dummy12();
  }

  void __fastcall CalculateFull(void)
  {
    GetDefaultInterface()->CalculateFull();
  }

  TOLEBOOL __fastcall FindFile(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->FindFile(lcid/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property Excel_2k::ExcelApplicationPtr Parent={ read=Get_Parent }; // 0, Yes
  __property Excel_2k::RangePtr ActiveCell={ read=Get_ActiveCell }; // 0, Yes
  __property Excel_2k::ExcelChartPtr ActiveChart={ read=Get_ActiveChart }; // 0, Yes
  __property Excel_2k::DialogSheetPtr ActiveDialog={ read=Get_ActiveDialog }; // 0, Yes
  __property Excel_2k::MenuBarPtr ActiveMenuBar={ read=Get_ActiveMenuBar }; // 0, Yes
  __property BSTR ActivePrinter[long lcid]={ read=Get_ActivePrinter, write=Set_ActivePrinter }; // 0, No
  __property LPDISPATCH ActiveSheet={ read=Get_ActiveSheet }; // 0, No
  __property Excel_2k::WINDOWPtr ActiveWindow={ read=Get_ActiveWindow }; // 0, Yes
  __property Excel_2k::ExcelWorkbookPtr ActiveWorkbook={ read=Get_ActiveWorkbook }; // 0, Yes
  __property Excel_2k::AddInsPtr AddIns={ read=Get_AddIns }; // 0, Yes
  __property Office_2k::AssistantPtr Assistant={ read=Get_Assistant }; // 0, Yes
  __property Excel_2k::RangePtr Cells={ read=Get_Cells }; // 0, Yes
  __property Excel_2k::SheetsPtr Charts={ read=Get_Charts }; // 0, Yes
  __property Excel_2k::RangePtr Columns={ read=Get_Columns }; // 0, Yes
  __property Office_2k::CommandBarsPtr CommandBars={ read=Get_CommandBars }; // 0, Yes
  __property long DDEAppReturnCode[long lcid]={ read=Get_DDEAppReturnCode }; // 0, No
  __property Excel_2k::SheetsPtr DialogSheets={ read=Get_DialogSheets }; // 0, Yes
  __property Excel_2k::MenuBarsPtr MenuBars={ read=Get_MenuBars }; // 0, Yes
  __property Excel_2k::ModulesPtr Modules={ read=Get_Modules }; // 0, Yes
  __property Excel_2k::NamesPtr Names={ read=Get_Names }; // 0, Yes
  /*__property Excel_2k::RangePtr Range[TVariant Cell1][TVariant Cell2]={ read=Get_Range }; // 0, Yes*/
  __property Excel_2k::RangePtr Rows={ read=Get_Rows }; // 0, Yes
  __property LPDISPATCH Selection[long lcid]={ read=Get_Selection }; // 0, No
  __property Excel_2k::SheetsPtr Sheets={ read=Get_Sheets }; // 0, Yes
  __property Excel_2k::MenuPtr ShortcutMenus[long Index]={ read=Get_ShortcutMenus }; // 0, Yes
  __property Excel_2k::ExcelWorkbookPtr ThisWorkbook[long lcid]={ read=Get_ThisWorkbook }; // 0, Yes
  __property Excel_2k::ToolbarsPtr Toolbars={ read=Get_Toolbars }; // 0, Yes
  __property Excel_2k::WindozPtr Windoz={ read=Get_Windoz }; // 0, Yes
  __property Excel_2k::WorkbooksPtr Workbooks={ read=Get_Workbooks }; // 0, Yes
  __property Excel_2k::WorksheetFunctionPtr WorksheetFunction={ read=Get_WorksheetFunction }; // 0, Yes
  __property Excel_2k::SheetsPtr Worksheets={ read=Get_Worksheets }; // 0, Yes
  __property Excel_2k::SheetsPtr Excel4IntlMacroSheets={ read=Get_Excel4IntlMacroSheets }; // 0, Yes
  __property Excel_2k::SheetsPtr Excel4MacroSheets={ read=Get_Excel4MacroSheets }; // 0, Yes
  __property TOLEBOOL AlertBeforeOverwriting[long lcid]={ read=Get_AlertBeforeOverwriting, write=Set_AlertBeforeOverwriting }; // 0, No
  __property BSTR AltStartupPath[long lcid]={ read=Get_AltStartupPath, write=Set_AltStartupPath }; // 0, No
  __property TOLEBOOL AskToUpdateLinks[long lcid]={ read=Get_AskToUpdateLinks, write=Set_AskToUpdateLinks }; // 0, No
  __property TOLEBOOL EnableAnimations[long lcid]={ read=Get_EnableAnimations, write=Set_EnableAnimations }; // 0, No
  __property Excel_2k::AutoCorrectPtr AutoCorrect={ read=Get_AutoCorrect }; // 0, Yes
  __property long Build[long lcid]={ read=Get_Build }; // 0, No
  __property TOLEBOOL CalculateBeforeSave[long lcid]={ read=Get_CalculateBeforeSave, write=Set_CalculateBeforeSave }; // 0, No
  __property Excel_2k::XlCalculation Calculation[long lcid]={ read=Get_Calculation, write=Set_Calculation }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Caller[TVariant Index][long lcid]={ read=Get_Caller }; // 0, No
  */
  __property TOLEBOOL CanPlaySounds[long lcid]={ read=Get_CanPlaySounds }; // 0, No
  __property TOLEBOOL CanRecordSounds[long lcid]={ read=Get_CanRecordSounds }; // 0, No
  __property TOLEBOOL CellDragAndDrop[long lcid]={ read=Get_CellDragAndDrop, write=Set_CellDragAndDrop }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant ClipboardFormats[TVariant Index][long lcid]={ read=Get_ClipboardFormats }; // 0, No
  */
  __property TOLEBOOL DisplayClipboardWindow[long lcid]={ read=Get_DisplayClipboardWindow, write=Set_DisplayClipboardWindow }; // 0, No
  __property TOLEBOOL ColorButtons={ read=Get_ColorButtons, write=Set_ColorButtons }; // 0, No
  __property Excel_2k::XlCommandUnderlines CommandUnderlines[long lcid]={ read=Get_CommandUnderlines, write=Set_CommandUnderlines }; // 0, No
  __property TOLEBOOL ConstrainNumeric[long lcid]={ read=Get_ConstrainNumeric, write=Set_ConstrainNumeric }; // 0, No
  __property TOLEBOOL CopyObjectsWithCells[long lcid]={ read=Get_CopyObjectsWithCells, write=Set_CopyObjectsWithCells }; // 0, No
  __property Excel_2k::XlMousePointer Cursor[long lcid]={ read=Get_Cursor, write=Set_Cursor }; // 0, No
  __property long CustomListCount[long lcid]={ read=Get_CustomListCount }; // 0, No
  __property Excel_2k::XlCutCopyMode CutCopyMode[long lcid]={ read=Get_CutCopyMode, write=Set_CutCopyMode }; // 0, No
  __property long DataEntryMode[long lcid]={ read=Get_DataEntryMode, write=Set_DataEntryMode }; // 0, No
  __property BSTR _Default={ read=Get__Default }; // 0, No
  __property BSTR DefaultFilePath[long lcid]={ read=Get_DefaultFilePath, write=Set_DefaultFilePath }; // 0, No
  __property Excel_2k::DialogsPtr Dialogs={ read=Get_Dialogs }; // 0, Yes
  __property TOLEBOOL DisplayAlerts[long lcid]={ read=Get_DisplayAlerts, write=Set_DisplayAlerts }; // 0, No
  __property TOLEBOOL DisplayFormulaBar[long lcid]={ read=Get_DisplayFormulaBar, write=Set_DisplayFormulaBar }; // 0, No
  __property TOLEBOOL DisplayFullScreen[long lcid]={ read=Get_DisplayFullScreen, write=Set_DisplayFullScreen }; // 0, No
  __property TOLEBOOL DisplayExcel4Menus[long lcid]={ read=Get_DisplayExcel4Menus, write=Set_DisplayExcel4Menus }; // 0, No
  __property TOLEBOOL DisplayScrollBars[long lcid]={ read=Get_DisplayScrollBars, write=Set_DisplayScrollBars }; // 0, No
  __property TOLEBOOL DisplayStatusBar[long lcid]={ read=Get_DisplayStatusBar, write=Set_DisplayStatusBar }; // 0, No
  __property TOLEBOOL EditDirectlyInCell[long lcid]={ read=Get_EditDirectlyInCell, write=Set_EditDirectlyInCell }; // 0, No
  __property Excel_2k::XlEnableCancelKey EnableCancelKey[long lcid]={ read=Get_EnableCancelKey, write=Set_EnableCancelKey }; // 0, No
  __property TOLEBOOL EnableTipWizard[long lcid]={ read=Get_EnableTipWizard, write=Set_EnableTipWizard }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant FileConverters[TVariant Index1][TVariant Index2][long lcid]={ read=Get_FileConverters }; // 0, No
  */
  __property Office_2k::FileSearchPtr FileSearch={ read=Get_FileSearch }; // 0, Yes
  __property Office_2k::IFindPtr FileFind={ read=Get_FileFind }; // 0, Yes
  __property TOLEBOOL FixedDecimal[long lcid]={ read=Get_FixedDecimal, write=Set_FixedDecimal }; // 0, No
  __property long FixedDecimalPlaces[long lcid]={ read=Get_FixedDecimalPlaces, write=Set_FixedDecimalPlaces }; // 0, No
  __property double Height[long lcid]={ read=Get_Height, write=Set_Height }; // 0, No
  __property TOLEBOOL IgnoreRemoteRequests[long lcid]={ read=Get_IgnoreRemoteRequests, write=Set_IgnoreRemoteRequests }; // 0, No
  __property TOLEBOOL Interactive[long lcid]={ read=Get_Interactive, write=Set_Interactive }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant International[TVariant Index][long lcid]={ read=Get_International }; // 0, No
  */
  __property TOLEBOOL Iteration[long lcid]={ read=Get_Iteration, write=Set_Iteration }; // 0, No
  __property TOLEBOOL LargeButtons={ read=Get_LargeButtons, write=Set_LargeButtons }; // 0, No
  __property double Left[long lcid]={ read=Get_Left, write=Set_Left }; // 0, No
  __property BSTR LibraryPath[long lcid]={ read=Get_LibraryPath }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant MailSession[long lcid]={ read=Get_MailSession }; // 0, No
  */
  __property Excel_2k::XlMailSystem MailSystem[long lcid]={ read=Get_MailSystem }; // 0, No
  __property TOLEBOOL MathCoprocessorAvailable[long lcid]={ read=Get_MathCoprocessorAvailable }; // 0, No
  __property double MaxChange[long lcid]={ read=Get_MaxChange, write=Set_MaxChange }; // 0, No
  __property long MaxIterations[long lcid]={ read=Get_MaxIterations, write=Set_MaxIterations }; // 0, No
  __property long MemoryFree[long lcid]={ read=Get_MemoryFree }; // 0, No
  __property long MemoryTotal[long lcid]={ read=Get_MemoryTotal }; // 0, No
  __property long MemoryUsed[long lcid]={ read=Get_MemoryUsed }; // 0, No
  __property TOLEBOOL MouseAvailable[long lcid]={ read=Get_MouseAvailable }; // 0, No
  __property TOLEBOOL MoveAfterReturn[long lcid]={ read=Get_MoveAfterReturn, write=Set_MoveAfterReturn }; // 0, No
  __property Excel_2k::XlDirection MoveAfterReturnDirection[long lcid]={ read=Get_MoveAfterReturnDirection, write=Set_MoveAfterReturnDirection }; // 0, No
  __property Excel_2k::RecentFilesPtr RecentFiles={ read=Get_RecentFiles }; // 0, Yes
  __property BSTR Name={ read=Get_Name }; // 0, No
  __property BSTR NetworkTemplatesPath[long lcid]={ read=Get_NetworkTemplatesPath }; // 0, No
  __property Excel_2k::ODBCErrorsPtr ODBCErrors={ read=Get_ODBCErrors }; // 0, Yes
  __property BSTR OnCalculate[long lcid]={ read=Get_OnCalculate, write=Set_OnCalculate }; // 0, No
  __property BSTR OnData[long lcid]={ read=Get_OnData, write=Set_OnData }; // 0, No
  __property BSTR OnDoubleClick[long lcid]={ read=Get_OnDoubleClick, write=Set_OnDoubleClick }; // 0, No
  __property BSTR OnEntry[long lcid]={ read=Get_OnEntry, write=Set_OnEntry }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=Get_OnSheetActivate, write=Set_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=Get_OnSheetDeactivate, write=Set_OnSheetDeactivate }; // 0, No
  __property BSTR OnWindow[long lcid]={ read=Get_OnWindow, write=Set_OnWindow }; // 0, No
  __property BSTR OperatingSystem[long lcid]={ read=Get_OperatingSystem }; // 0, No
  __property BSTR OrganizationName[long lcid]={ read=Get_OrganizationName }; // 0, No
  __property BSTR Path[long lcid]={ read=Get_Path }; // 0, No
  __property BSTR PathSeparator[long lcid]={ read=Get_PathSeparator }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PreviousSelections[TVariant Index][long lcid]={ read=Get_PreviousSelections }; // 0, No
  */
  __property TOLEBOOL PromptForSummaryInfo[long lcid]={ read=Get_PromptForSummaryInfo, write=Set_PromptForSummaryInfo }; // 0, No
  __property TOLEBOOL RecordRelative[long lcid]={ read=Get_RecordRelative }; // 0, No
  __property Excel_2k::XlReferenceStyle ReferenceStyle[long lcid]={ read=Get_ReferenceStyle, write=Set_ReferenceStyle }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant RegisteredFunctions[TVariant Index1][TVariant Index2][long lcid]={ read=Get_RegisteredFunctions }; // 0, No
  */
  __property TOLEBOOL ScreenUpdating[long lcid]={ read=Get_ScreenUpdating, write=Set_ScreenUpdating }; // 0, No
  __property long SheetsInNewWorkbook[long lcid]={ read=Get_SheetsInNewWorkbook, write=Set_SheetsInNewWorkbook }; // 0, No
  __property BSTR StandardFont[long lcid]={ read=Get_StandardFont, write=Set_StandardFont }; // 0, No
  __property double StandardFontSize[long lcid]={ read=Get_StandardFontSize, write=Set_StandardFontSize }; // 0, No
  __property BSTR StartupPath[long lcid]={ read=Get_StartupPath }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant StatusBar[long lcid]={ read=Get_StatusBar, write=Set_StatusBar }; // 0, No
  */
  __property BSTR TemplatesPath[long lcid]={ read=Get_TemplatesPath }; // 0, No
  __property double Top[long lcid]={ read=Get_Top, write=Set_Top }; // 0, No
  __property BSTR TransitionMenuKey[long lcid]={ read=Get_TransitionMenuKey, write=Set_TransitionMenuKey }; // 0, No
  __property long TransitionMenuKeyAction[long lcid]={ read=Get_TransitionMenuKeyAction, write=Set_TransitionMenuKeyAction }; // 0, No
  __property TOLEBOOL TransitionNavigKeys[long lcid]={ read=Get_TransitionNavigKeys, write=Set_TransitionNavigKeys }; // 0, No
  __property double UsableHeight[long lcid]={ read=Get_UsableHeight }; // 0, No
  __property double UsableWidth[long lcid]={ read=Get_UsableWidth }; // 0, No
  __property BSTR UserName[long lcid]={ read=Get_UserName, write=Set_UserName }; // 0, No
  __property BSTR Value={ read=Get_Value }; // 0, No
  __property Vbide_2k::VBEPtr VBE={ read=Get_VBE }; // 0, Yes
  __property BSTR Version[long lcid]={ read=Get_Version }; // 0, No
  __property TOLEBOOL Visible[long lcid]={ read=Get_Visible, write=Set_Visible }; // 0, No
  __property double Width[long lcid]={ read=Get_Width, write=Set_Width }; // 0, No
  __property TOLEBOOL WindowsForPens[long lcid]={ read=Get_WindowsForPens }; // 0, No
  __property Excel_2k::XlWindowState WindowState[long lcid]={ read=Get_WindowState, write=Set_WindowState }; // 0, No
  __property long UILanguage[long lcid]={ read=Get_UILanguage, write=Set_UILanguage }; // 0, No
  __property long DefaultSheetDirection[long lcid]={ read=Get_DefaultSheetDirection, write=Set_DefaultSheetDirection }; // 0, No
  __property long CursorMovement[long lcid]={ read=Get_CursorMovement, write=Set_CursorMovement }; // 0, No
  __property TOLEBOOL ControlCharacters[long lcid]={ read=Get_ControlCharacters, write=Set_ControlCharacters }; // 0, No
  __property TOLEBOOL DisplayInfoWindow={ read=Get_DisplayInfoWindow, write=Set_DisplayInfoWindow }; // 0, No
  __property Excel_2k::OLEDBErrorsPtr OLEDBErrors={ read=Get_OLEDBErrors }; // 0, Yes
  __property Office_2k::COMAddInsPtr COMAddIns={ read=Get_COMAddIns }; // 0, Yes
  __property Excel_2k::DefaultWebOptionsPtr DefaultWebOptions={ read=Get_DefaultWebOptions }; // 0, Yes
  __property BSTR ProductCode={ read=Get_ProductCode }; // 0, No
  __property BSTR UserLibraryPath={ read=Get_UserLibraryPath }; // 0, No
  __property Office_2k::LanguageSettingsPtr LanguageSettings={ read=Get_LanguageSettings }; // 0, Yes
  __property TOLEBOOL Dummy101={ read=Get_Dummy101 }; // 0, No
  __property Office_2k::AnswerWizardPtr AnswerWizard={ read=Get_AnswerWizard }; // 0, Yes
  __property long CalculationVersion={ read=Get_CalculationVersion }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR Caption={ read=Get_Caption, write=Set_Caption, stored=false }; // 0, No
  __property TOLEBOOL DisplayNoteIndicator={ read=Get_DisplayNoteIndicator, write=Set_DisplayNoteIndicator, stored=false }; // 0, No
  __property Excel_2k::XlCommentDisplayMode DisplayCommentIndicator={ read=Get_DisplayCommentIndicator, write=Set_DisplayCommentIndicator, stored=false }; // 0, No
  __property TOLEBOOL DisplayRecentFiles={ read=Get_DisplayRecentFiles, write=Set_DisplayRecentFiles, stored=false }; // 0, No
  __property TOLEBOOL EnableAutoComplete={ read=Get_EnableAutoComplete, write=Set_EnableAutoComplete, stored=false }; // 0, No
  __property TOLEBOOL EnableSound={ read=Get_EnableSound, write=Set_EnableSound, stored=false }; // 0, No
  __property long ODBCTimeout={ read=Get_ODBCTimeout, write=Set_ODBCTimeout, stored=false }; // 0, No
  __property TOLEBOOL PivotTableSelection={ read=Get_PivotTableSelection, write=Set_PivotTableSelection, stored=false }; // 0, No
  __property TOLEBOOL RollZoom={ read=Get_RollZoom, write=Set_RollZoom, stored=false }; // 0, No
  __property TOLEBOOL ShowChartTipNames={ read=Get_ShowChartTipNames, write=Set_ShowChartTipNames, stored=false }; // 0, No
  __property TOLEBOOL ShowChartTipValues={ read=Get_ShowChartTipValues, write=Set_ShowChartTipValues, stored=false }; // 0, No
  __property TOLEBOOL ShowToolTips={ read=Get_ShowToolTips, write=Set_ShowToolTips, stored=false }; // 0, No
  __property Excel_2k::XlFileFormat DefaultSaveFormat={ read=Get_DefaultSaveFormat, write=Set_DefaultSaveFormat, stored=false }; // 0, No
  __property TOLEBOOL UserControl={ read=Get_UserControl, write=Set_UserControl, stored=false }; // 0, No
  __property TOLEBOOL EnableEvents={ read=Get_EnableEvents, write=Set_EnableEvents, stored=false }; // 0, No
  __property TOLEBOOL ExtendList={ read=Get_ExtendList, write=Set_ExtendList, stored=false }; // 0, No
  __property TOLEBOOL AutoPercentEntry={ read=Get_AutoPercentEntry, write=Set_AutoPercentEntry, stored=false }; // 0, No
  __property TOLEBOOL ShowWindowsInTaskbar={ read=Get_ShowWindowsInTaskbar, write=Set_ShowWindowsInTaskbar, stored=false }; // 0, No
  __property Office_2k::MsoFeatureInstall FeatureInstall={ read=Get_FeatureInstall, write=Set_FeatureInstall, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TExcelApplicationNewWorkbook   FOnNewWorkbook;
  TExcelApplicationSheetSelectionChange FOnSheetSelectionChange;
  TExcelApplicationSheetBeforeDoubleClick FOnSheetBeforeDoubleClick;
  TExcelApplicationSheetBeforeRightClick FOnSheetBeforeRightClick;
  TExcelApplicationSheetActivate FOnSheetActivate1;
  TExcelApplicationSheetDeactivate FOnSheetDeactivate1;
  TExcelApplicationSheetCalculate FOnSheetCalculate;
  TExcelApplicationSheetChange   FOnSheetChange;
  TExcelApplicationWorkbookOpen  FOnWorkbookOpen;
  TExcelApplicationWorkbookActivate FOnWorkbookActivate;
  TExcelApplicationWorkbookDeactivate FOnWorkbookDeactivate;
  TExcelApplicationWorkbookBeforeClose FOnWorkbookBeforeClose;
  TExcelApplicationWorkbookBeforeSave FOnWorkbookBeforeSave;
  TExcelApplicationWorkbookBeforePrint FOnWorkbookBeforePrint;
  TExcelApplicationWorkbookNewSheet FOnWorkbookNewSheet;
  TExcelApplicationWorkbookAddinInstall FOnWorkbookAddinInstall;
  TExcelApplicationWorkbookAddinUninstall FOnWorkbookAddinUninstall;
  TExcelApplicationWindowResize  FOnWindowResize;
  TExcelApplicationWindowActivate FOnWindowActivate;
  TExcelApplicationWindowDeactivate FOnWindowDeactivate;
  TExcelApplicationSheetFollowHyperlink FOnSheetFollowHyperlink;
__published:
  __property TExcelApplicationNewWorkbook OnNewWorkbook={ read=FOnNewWorkbook, write=FOnNewWorkbook };
  __property TExcelApplicationSheetSelectionChange OnSheetSelectionChange={ read=FOnSheetSelectionChange, write=FOnSheetSelectionChange };
  __property TExcelApplicationSheetBeforeDoubleClick OnSheetBeforeDoubleClick={ read=FOnSheetBeforeDoubleClick, write=FOnSheetBeforeDoubleClick };
  __property TExcelApplicationSheetBeforeRightClick OnSheetBeforeRightClick={ read=FOnSheetBeforeRightClick, write=FOnSheetBeforeRightClick };
  __property TExcelApplicationSheetActivate OnSheetActivate1={ read=FOnSheetActivate1, write=FOnSheetActivate1 };
  __property TExcelApplicationSheetDeactivate OnSheetDeactivate1={ read=FOnSheetDeactivate1, write=FOnSheetDeactivate1 };
  __property TExcelApplicationSheetCalculate OnSheetCalculate={ read=FOnSheetCalculate, write=FOnSheetCalculate };
  __property TExcelApplicationSheetChange OnSheetChange={ read=FOnSheetChange, write=FOnSheetChange };
  __property TExcelApplicationWorkbookOpen OnWorkbookOpen={ read=FOnWorkbookOpen, write=FOnWorkbookOpen };
  __property TExcelApplicationWorkbookActivate OnWorkbookActivate={ read=FOnWorkbookActivate, write=FOnWorkbookActivate };
  __property TExcelApplicationWorkbookDeactivate OnWorkbookDeactivate={ read=FOnWorkbookDeactivate, write=FOnWorkbookDeactivate };
  __property TExcelApplicationWorkbookBeforeClose OnWorkbookBeforeClose={ read=FOnWorkbookBeforeClose, write=FOnWorkbookBeforeClose };
  __property TExcelApplicationWorkbookBeforeSave OnWorkbookBeforeSave={ read=FOnWorkbookBeforeSave, write=FOnWorkbookBeforeSave };
  __property TExcelApplicationWorkbookBeforePrint OnWorkbookBeforePrint={ read=FOnWorkbookBeforePrint, write=FOnWorkbookBeforePrint };
  __property TExcelApplicationWorkbookNewSheet OnWorkbookNewSheet={ read=FOnWorkbookNewSheet, write=FOnWorkbookNewSheet };
  __property TExcelApplicationWorkbookAddinInstall OnWorkbookAddinInstall={ read=FOnWorkbookAddinInstall, write=FOnWorkbookAddinInstall };
  __property TExcelApplicationWorkbookAddinUninstall OnWorkbookAddinUninstall={ read=FOnWorkbookAddinUninstall, write=FOnWorkbookAddinUninstall };
  __property TExcelApplicationWindowResize OnWindowResize={ read=FOnWindowResize, write=FOnWindowResize };
  __property TExcelApplicationWindowActivate OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TExcelApplicationWindowDeactivate OnWindowDeactivate={ read=FOnWindowDeactivate, write=FOnWindowDeactivate };
  __property TExcelApplicationSheetFollowHyperlink OnSheetFollowHyperlink={ read=FOnSheetFollowHyperlink, write=FOnSheetFollowHyperlink };
private:
  bool     FAutoQuit;
__published:
  __property bool AutoQuit = {read=FAutoQuit, write=FAutoQuit};
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelChart
// Help String      : 
// Default Interface: _Chart
// Def. Intf. Object: _ChartPtr
// Def. Intf. DISP? : No
// Event   Interface: ChartEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelChartMouseDown)(System::TObject * Sender, 
                                                           long Button/*[in]*/, long Shift/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TExcelChartMouseUp)(System::TObject * Sender, 
                                                         long Button/*[in]*/, long Shift/*[in]*/, 
                                                         long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TExcelChartMouseMove)(System::TObject * Sender, 
                                                           long Button/*[in]*/, long Shift/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TExcelChartBeforeRightClick)(System::TObject * Sender, 
                                                                  TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelChartBeforeDoubleClick)(System::TObject * Sender, 
                                                                   long ElementID/*[in]*/, 
                                                                   long Arg1/*[in]*/, 
                                                                   long Arg2/*[in]*/, 
                                                                   TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelChartSelect)(System::TObject * Sender, 
                                                        long ElementID/*[in]*/, long Arg1/*[in]*/, 
                                                        long Arg2/*[in]*/);
typedef void __fastcall (__closure * TExcelChartSeriesChange)(System::TObject * Sender, 
                                                              long SeriesIndex/*[in]*/, 
                                                              long PointIndex/*[in]*/);

class PACKAGE TExcelChart : public Oleserver::TOleServer
{
  _ChartPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelChart(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ChartPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ChartPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  BSTR __fastcall Get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

  BSTR __fastcall Get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

  void __fastcall Set__CodeName(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(RHS/*[in]*/);
  }

  long __fastcall Get_Index(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Index(lcid/*[in]*/);
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  void __fastcall Set_Name(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Name(RHS/*[in]*/);
  }

  LPDISPATCH __fastcall Get_Next(void)
  {
    return GetDefaultInterface()->get_Next();
  }

  BSTR __fastcall Get_OnDoubleClick(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnDoubleClick(lcid/*[in]*/);
  }

  void __fastcall Set_OnDoubleClick(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnDoubleClick(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::PageSetupPtr __fastcall Get_PageSetup(void)
  {
    return GetDefaultInterface()->get_PageSetup();
  }

  LPDISPATCH __fastcall Get_Previous(void)
  {
    return GetDefaultInterface()->get_Previous();
  }

  TOLEBOOL __fastcall Get_ProtectContents(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectContents(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectDrawingObjects(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectDrawingObjects(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectionMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectionMode(lcid/*[in]*/);
  }

  Excel_2k::XlSheetVisibility __fastcall Get_Visible(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Visible(lcid/*[in]*/);
  }

  void __fastcall Set_Visible(long lcid/*[in]*/, Excel_2k::XlSheetVisibility RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::ShapesPtr __fastcall Get_Shapes(void)
  {
    return GetDefaultInterface()->get_Shapes();
  }

  Excel_2k::ChartGroupPtr __fastcall Get_Area3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Area3DGroup(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AutoScaling(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AutoScaling(lcid/*[in]*/);
  }

  void __fastcall Set_AutoScaling(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoScaling(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::ChartGroupPtr __fastcall Get_Bar3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Bar3DGroup(lcid/*[in]*/);
  }

  Excel_2k::ChartAreaPtr __fastcall Get_ChartArea(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ChartArea(lcid/*[in]*/);
  }

  Excel_2k::ChartTitlePtr __fastcall Get_ChartTitle(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ChartTitle(lcid/*[in]*/);
  }

  Excel_2k::ChartGroupPtr __fastcall Get_Column3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Column3DGroup(lcid/*[in]*/);
  }

  Excel_2k::CornersPtr __fastcall Get_Corners(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Corners(lcid/*[in]*/);
  }

  Excel_2k::DataTablePtr __fastcall Get_DataTable(void)
  {
    return GetDefaultInterface()->get_DataTable();
  }

  long __fastcall Get_DepthPercent(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DepthPercent(lcid/*[in]*/);
  }

  void __fastcall Set_DepthPercent(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DepthPercent(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlDisplayBlanksAs __fastcall Get_DisplayBlanksAs(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayBlanksAs(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayBlanksAs(long lcid/*[in]*/, Excel_2k::XlDisplayBlanksAs RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayBlanksAs(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_Elevation(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Elevation(lcid/*[in]*/);
  }

  void __fastcall Set_Elevation(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Elevation(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::FloorPtr __fastcall Get_Floor(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Floor(lcid/*[in]*/);
  }

  long __fastcall Get_GapDepth(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_GapDepth(lcid/*[in]*/);
  }

  void __fastcall Set_GapDepth(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_GapDepth(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_HasAxis(TVariantInParam Index1/*[in,opt]*/, 
                                  TVariantInParam Index2/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasAxis(Index1/*[in,opt]*/, Index2/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Set_HasAxis(TVariantInParam Index1/*[in,opt]*/, TVariantInParam Index2/*[in,opt]*/, 
                              long lcid/*[in]*/, TVariantInParam RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasAxis(Index1/*[in,opt]*/, Index2/*[in,opt]*/, lcid/*[in]*/, 
                                       RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasDataTable(void)
  {
    return GetDefaultInterface()->get_HasDataTable();
  }

  void __fastcall Set_HasDataTable(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasDataTable(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasLegend(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasLegend(lcid/*[in]*/);
  }

  void __fastcall Set_HasLegend(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasLegend(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasTitle(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasTitle(lcid/*[in]*/);
  }

  void __fastcall Set_HasTitle(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasTitle(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_HeightPercent(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HeightPercent(lcid/*[in]*/);
  }

  void __fastcall Set_HeightPercent(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HeightPercent(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::HyperlinksPtr __fastcall Get_Hyperlinks(void)
  {
    return GetDefaultInterface()->get_Hyperlinks();
  }

  Excel_2k::LegendPtr __fastcall Get_Legend(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Legend(lcid/*[in]*/);
  }

  Excel_2k::ChartGroupPtr __fastcall Get_Line3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Line3DGroup(lcid/*[in]*/);
  }

  long __fastcall Get_Perspective(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Perspective(lcid/*[in]*/);
  }

  void __fastcall Set_Perspective(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Perspective(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::ChartGroupPtr __fastcall Get_Pie3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Pie3DGroup(lcid/*[in]*/);
  }

  Excel_2k::PlotAreaPtr __fastcall Get_PlotArea(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PlotArea(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PlotVisibleOnly(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PlotVisibleOnly(lcid/*[in]*/);
  }

  void __fastcall Set_PlotVisibleOnly(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PlotVisibleOnly(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_RightAngleAxes(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RightAngleAxes(lcid/*[in]*/);
  }

  void __fastcall Set_RightAngleAxes(long lcid/*[in]*/, TVariantInParam RHS/*[in]*/)
  {
    GetDefaultInterface()->set_RightAngleAxes(lcid/*[in]*/, RHS/*[in]*/);
  }

  TVariant __fastcall Get_Rotation(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Rotation(lcid/*[in]*/);
  }

  void __fastcall Set_Rotation(long lcid/*[in]*/, TVariantInParam RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Rotation(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SizeWithWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SizeWithWindow(lcid/*[in]*/);
  }

  void __fastcall Set_SizeWithWindow(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SizeWithWindow(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowWindow(void)
  {
    return GetDefaultInterface()->get_ShowWindow();
  }

  void __fastcall Set_ShowWindow(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowWindow(RHS/*[in]*/);
  }

  long __fastcall Get_SubType(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SubType(lcid/*[in]*/);
  }

  void __fastcall Set_SubType(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SubType(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::ChartGroupPtr __fastcall Get_SurfaceGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SurfaceGroup(lcid/*[in]*/);
  }

  long __fastcall Get_Type(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Type(lcid/*[in]*/);
  }

  void __fastcall Set_Type(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Type(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlChartType __fastcall Get_ChartType(void)
  {
    return GetDefaultInterface()->get_ChartType();
  }

  void __fastcall Set_ChartType(Excel_2k::XlChartType RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ChartType(RHS/*[in]*/);
  }

  Excel_2k::WallsPtr __fastcall Get_Walls(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Walls(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_WallsAndGridlines2D(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WallsAndGridlines2D(lcid/*[in]*/);
  }

  void __fastcall Set_WallsAndGridlines2D(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_WallsAndGridlines2D(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlBarShape __fastcall Get_BarShape(void)
  {
    return GetDefaultInterface()->get_BarShape();
  }

  void __fastcall Set_BarShape(Excel_2k::XlBarShape RHS/*[in]*/)
  {
    GetDefaultInterface()->set_BarShape(RHS/*[in]*/);
  }

  Excel_2k::XlRowCol __fastcall Get_PlotBy(void)
  {
    return GetDefaultInterface()->get_PlotBy();
  }

  void __fastcall Set_PlotBy(Excel_2k::XlRowCol RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PlotBy(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectFormatting(void)
  {
    return GetDefaultInterface()->get_ProtectFormatting();
  }

  void __fastcall Set_ProtectFormatting(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectFormatting(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectData(void)
  {
    return GetDefaultInterface()->get_ProtectData();
  }

  void __fastcall Set_ProtectData(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectData(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectGoalSeek(void)
  {
    return GetDefaultInterface()->get_ProtectGoalSeek();
  }

  void __fastcall Set_ProtectGoalSeek(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectGoalSeek(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectSelection(void)
  {
    return GetDefaultInterface()->get_ProtectSelection();
  }

  void __fastcall Set_ProtectSelection(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectSelection(RHS/*[in]*/);
  }

  Excel_2k::PivotLayoutPtr __fastcall Get_PivotLayout(void)
  {
    return GetDefaultInterface()->get_PivotLayout();
  }

  TOLEBOOL __fastcall Get_HasPivotFields(void)
  {
    return GetDefaultInterface()->get_HasPivotFields();
  }

  void __fastcall Set_HasPivotFields(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasPivotFields(RHS/*[in]*/);
  }

  Office_2k::ScriptsPtr __fastcall Get_Scripts(void)
  {
    return GetDefaultInterface()->get_Scripts();
  }

  /*CoClassWriteMethods*/
  void __fastcall Activate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Activate(lcid/*[in]*/);
  }

  void __fastcall Copy(TVariantInParam Before/*[in,opt]*/= TNoParam(), 
                       TVariantInParam After/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Copy(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Delete(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Delete(lcid/*[in]*/);
  }

  void __fastcall Move(TVariantInParam Before/*[in,opt]*/= TNoParam(), 
                       TVariantInParam After/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Move(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall _PrintOut(TVariantInParam From/*[in,opt]*/= TNoParam(), 
                            TVariantInParam To/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Copies/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Preview/*[in,opt]*/= TNoParam(), 
                            TVariantInParam ActivePrinter/*[in,opt]*/= TNoParam(), 
                            TVariantInParam PrintToFile/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Collate/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->_PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                     Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                     PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintPreview(TVariantInParam EnableChanges/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintPreview(EnableChanges/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Protect(TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                          TVariantInParam DrawingObjects/*[in,opt]*/= TNoParam(), 
                          TVariantInParam Contents/*[in,opt]*/= TNoParam(), 
                          TVariantInParam Scenarios/*[in,opt]*/= TNoParam(), 
                          TVariantInParam UserInterfaceOnly/*[in,opt]*/= TNoParam(), 
                          long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Protect(Password/*[in,opt]*/, DrawingObjects/*[in,opt]*/, 
                                   Contents/*[in,opt]*/, Scenarios/*[in,opt]*/, 
                                   UserInterfaceOnly/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SaveAs(BSTR Filename/*[in]*/, TVariantInParam FileFormat/*[in,opt]*/= TNoParam(), 
                         TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                         TVariantInParam WriteResPassword/*[in,opt]*/= TNoParam(), 
                         TVariantInParam ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                         TVariantInParam CreateBackup/*[in,opt]*/= TNoParam(), 
                         TVariantInParam AddToMru/*[in,opt]*/= TNoParam(), 
                         TVariantInParam TextCodepage/*[in,opt]*/= TNoParam(), 
                         TVariantInParam TextVisualLayout/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveAs(Filename/*[in]*/, FileFormat/*[in,opt]*/, Password/*[in,opt]*/, 
                                  WriteResPassword/*[in,opt]*/, ReadOnlyRecommended/*[in,opt]*/, 
                                  CreateBackup/*[in,opt]*/, AddToMru/*[in,opt]*/, 
                                  TextCodepage/*[in,opt]*/, TextVisualLayout/*[in,opt]*/, 
                                  lcid/*[in]*/);
  }

  void __fastcall Select(TVariantInParam Replace/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Select(Replace/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Unprotect(TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ApplyDataLabels(Excel_2k::XlDataLabelsType Type/*[in,def,opt]*/, 
                                  TVariantInParam LegendKey/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam AutoText/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam HasLeaderLines/*[in,opt]*/= TNoParam(), 
                                  long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ApplyDataLabels(Type/*[in,def,opt]*/, LegendKey/*[in,opt]*/, 
                                           AutoText/*[in,opt]*/, HasLeaderLines/*[in,opt]*/, 
                                           lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Arcs(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Arcs(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall AreaGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->AreaGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall AutoFormat(long Gallery/*[in]*/, TVariantInParam Format/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AutoFormat(Gallery/*[in]*/, Format/*[in,opt]*/);
  }

  LPDISPATCH __fastcall Axes(TVariantInParam Type/*[in,opt]*/, 
                             Excel_2k::XlAxisGroup AxisGroup/*[in,def,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Axes(Type/*[in,opt]*/, AxisGroup/*[in,def,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetBackgroundPicture(BSTR Filename/*[in]*/)
  {
    GetDefaultInterface()->SetBackgroundPicture(Filename/*[in]*/);
  }

  LPDISPATCH __fastcall BarGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->BarGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Buttons(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Buttons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ChartGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ChartGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ChartObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ChartObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ChartWizard(TVariantInParam Source/*[in,opt]*/= TNoParam(), 
                              TVariantInParam Gallery/*[in,opt]*/= TNoParam(), 
                              TVariantInParam Format/*[in,opt]*/= TNoParam(), 
                              TVariantInParam PlotBy/*[in,opt]*/= TNoParam(), 
                              TVariantInParam CategoryLabels/*[in,opt]*/= TNoParam(), 
                              TVariantInParam SeriesLabels/*[in,opt]*/= TNoParam(), 
                              TVariantInParam HasLegend/*[in,opt]*/= TNoParam(), 
                              TVariantInParam Title/*[in,opt]*/= TNoParam(), 
                              TVariantInParam CategoryTitle/*[in,opt]*/= TNoParam(), 
                              TVariantInParam ValueTitle/*[in,opt]*/= TNoParam(), 
                              TVariantInParam ExtraTitle/*[in,opt]*/= TNoParam(), 
                              long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ChartWizard(Source/*[in,opt]*/, Gallery/*[in,opt]*/, Format/*[in,opt]*/, 
                                       PlotBy/*[in,opt]*/, CategoryLabels/*[in,opt]*/, 
                                       SeriesLabels/*[in,opt]*/, HasLegend/*[in,opt]*/, 
                                       Title/*[in,opt]*/, CategoryTitle/*[in,opt]*/, 
                                       ValueTitle/*[in,opt]*/, ExtraTitle/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall CheckBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CheckBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CheckSpelling(TVariantInParam CustomDictionary/*[in,opt]*/= TNoParam(), 
                                TVariantInParam IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                TVariantInParam AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                TVariantInParam SpellLang/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                         AlwaysSuggest/*[in,opt]*/, SpellLang/*[in,opt]*/, 
                                         lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ColumnGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ColumnGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CopyPicture(Excel_2k::XlPictureAppearance Appearance/*[in,def,opt]*/, 
                              Excel_2k::XlCopyPictureFormat Format/*[in,def,opt]*/, 
                              Excel_2k::XlPictureAppearance Size/*[in,def,opt]*/, 
                              long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->CopyPicture(Appearance/*[in,def,opt]*/, Format/*[in,def,opt]*/, 
                                       Size/*[in,def,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CreatePublisher(TVariantInParam Edition/*[in,opt]*/, 
                                  Excel_2k::XlPictureAppearance Appearance/*[in,def,opt]*/, 
                                  Excel_2k::XlPictureAppearance Size/*[in,def,opt]*/, 
                                  TVariantInParam ContainsPICT/*[in,opt]*/, 
                                  TVariantInParam ContainsBIFF/*[in,opt]*/, 
                                  TVariantInParam ContainsRTF/*[in,opt]*/, 
                                  TVariantInParam ContainsVALU/*[in,opt]*/, long lcid/*[in]*/)
  {
    GetDefaultInterface()->CreatePublisher(Edition/*[in,opt]*/, Appearance/*[in,def,opt]*/, 
                                           Size/*[in,def,opt]*/, ContainsPICT/*[in,opt]*/, 
                                           ContainsBIFF/*[in,opt]*/, ContainsRTF/*[in,opt]*/, 
                                           ContainsVALU/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Deselect(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Deselect(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DoughnutGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DoughnutGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Drawings(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Drawings(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DrawingObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DrawingObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DropDowns(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DropDowns(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall GroupBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall GroupObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Labels(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Labels(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall LineGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->LineGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Lines(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Lines(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ListBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ListBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_2k::ExcelChartPtr __fastcall Location(Excel_2k::XlChartLocation Where/*[in]*/, 
                                              TVariantInParam Name/*[in,opt]*/)
  {
    return GetDefaultInterface()->Location(Where/*[in]*/, Name/*[in,opt]*/);
  }

  LPDISPATCH __fastcall OLEObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OLEObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall OptionButtons(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OptionButtons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Ovals(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Ovals(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Paste(TVariantInParam Type/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Paste(Type/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Pictures(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Pictures(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall PieGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->PieGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall RadarGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->RadarGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Rectangles(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Rectangles(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ScrollBars(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ScrollBars(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall SeriesCollection(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->SeriesCollection(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Spinners(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Spinners(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall TextBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->TextBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ApplyCustomType(Excel_2k::XlChartType ChartType/*[in]*/, 
                                  TVariantInParam TypeName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ApplyCustomType(ChartType/*[in]*/, TypeName/*[in,opt]*/);
  }

  LPDISPATCH __fastcall XYGroups(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->XYGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CopyChartBuild(void)
  {
    GetDefaultInterface()->CopyChartBuild();
  }

  void __fastcall GetChartElement(long x/*[in]*/, long y/*[in]*/, long* ElementID/*[in]*/, 
                                  long* Arg1/*[in]*/, long* Arg2/*[in]*/)
  {
    GetDefaultInterface()->GetChartElement(x/*[in]*/, y/*[in]*/, ElementID/*[in]*/, Arg1/*[in]*/, 
                                           Arg2/*[in]*/);
  }

  void __fastcall SetSourceData(Excel_2k::RangePtr Source/*[in]*/, 
                                TVariantInParam PlotBy/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SetSourceData(Source/*[in]*/, PlotBy/*[in,opt]*/);
  }

  TOLEBOOL __fastcall Export(BSTR Filename/*[in]*/, TVariantInParam FilterName/*[in,opt]*/, 
                             TVariantInParam Interactive/*[in,opt]*/)
  {
    return GetDefaultInterface()->Export(Filename/*[in]*/, FilterName/*[in,opt]*/, 
                                         Interactive/*[in,opt]*/);
  }

  void __fastcall Refresh(void)
  {
    GetDefaultInterface()->Refresh();
  }

  void __fastcall PrintOut(TVariantInParam From/*[in,opt]*/= TNoParam(), 
                           TVariantInParam To/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Copies/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Preview/*[in,opt]*/= TNoParam(), 
                           TVariantInParam ActivePrinter/*[in,opt]*/= TNoParam(), 
                           TVariantInParam PrintToFile/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Collate/*[in,opt]*/= TNoParam(), 
                           TVariantInParam PrToFileName/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                    Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                    PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, 
                                    PrToFileName/*[in,opt]*/, lcid/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property BSTR CodeName={ read=Get_CodeName }; // 0, No
  __property long Index[long lcid]={ read=Get_Index }; // 0, No
  __property LPDISPATCH Next={ read=Get_Next }; // 0, No
  __property BSTR OnDoubleClick[long lcid]={ read=Get_OnDoubleClick, write=Set_OnDoubleClick }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=Get_OnSheetActivate, write=Set_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=Get_OnSheetDeactivate, write=Set_OnSheetDeactivate }; // 0, No
  __property Excel_2k::PageSetupPtr PageSetup={ read=Get_PageSetup }; // 0, Yes
  __property LPDISPATCH Previous={ read=Get_Previous }; // 0, No
  __property TOLEBOOL ProtectContents[long lcid]={ read=Get_ProtectContents }; // 0, No
  __property TOLEBOOL ProtectDrawingObjects[long lcid]={ read=Get_ProtectDrawingObjects }; // 0, No
  __property TOLEBOOL ProtectionMode[long lcid]={ read=Get_ProtectionMode }; // 0, No
  __property Excel_2k::XlSheetVisibility Visible[long lcid]={ read=Get_Visible, write=Set_Visible }; // 0, No
  __property Excel_2k::ShapesPtr Shapes={ read=Get_Shapes }; // 0, Yes
  __property Excel_2k::ChartGroupPtr Area3DGroup[long lcid]={ read=Get_Area3DGroup }; // 0, Yes
  __property TOLEBOOL AutoScaling[long lcid]={ read=Get_AutoScaling, write=Set_AutoScaling }; // 0, No
  __property Excel_2k::ChartGroupPtr Bar3DGroup[long lcid]={ read=Get_Bar3DGroup }; // 0, Yes
  __property Excel_2k::ChartAreaPtr ChartArea[long lcid]={ read=Get_ChartArea }; // 0, Yes
  __property Excel_2k::ChartTitlePtr ChartTitle[long lcid]={ read=Get_ChartTitle }; // 0, Yes
  __property Excel_2k::ChartGroupPtr Column3DGroup[long lcid]={ read=Get_Column3DGroup }; // 0, Yes
  __property Excel_2k::CornersPtr Corners[long lcid]={ read=Get_Corners }; // 0, Yes
  __property Excel_2k::DataTablePtr DataTable={ read=Get_DataTable }; // 0, Yes
  __property long DepthPercent[long lcid]={ read=Get_DepthPercent, write=Set_DepthPercent }; // 0, No
  __property Excel_2k::XlDisplayBlanksAs DisplayBlanksAs[long lcid]={ read=Get_DisplayBlanksAs, write=Set_DisplayBlanksAs }; // 0, No
  __property long Elevation[long lcid]={ read=Get_Elevation, write=Set_Elevation }; // 0, No
  __property Excel_2k::FloorPtr Floor[long lcid]={ read=Get_Floor }; // 0, Yes
  __property long GapDepth[long lcid]={ read=Get_GapDepth, write=Set_GapDepth }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant HasAxis[TVariant Index1][TVariant Index2][long lcid]={ read=Get_HasAxis, write=Set_HasAxis }; // 0, No
  */
  __property TOLEBOOL HasLegend[long lcid]={ read=Get_HasLegend, write=Set_HasLegend }; // 0, No
  __property TOLEBOOL HasTitle[long lcid]={ read=Get_HasTitle, write=Set_HasTitle }; // 0, No
  __property long HeightPercent[long lcid]={ read=Get_HeightPercent, write=Set_HeightPercent }; // 0, No
  __property Excel_2k::HyperlinksPtr Hyperlinks={ read=Get_Hyperlinks }; // 0, Yes
  __property Excel_2k::LegendPtr Legend[long lcid]={ read=Get_Legend }; // 0, Yes
  __property Excel_2k::ChartGroupPtr Line3DGroup[long lcid]={ read=Get_Line3DGroup }; // 0, Yes
  __property long Perspective[long lcid]={ read=Get_Perspective, write=Set_Perspective }; // 0, No
  __property Excel_2k::ChartGroupPtr Pie3DGroup[long lcid]={ read=Get_Pie3DGroup }; // 0, Yes
  __property Excel_2k::PlotAreaPtr PlotArea[long lcid]={ read=Get_PlotArea }; // 0, Yes
  __property TOLEBOOL PlotVisibleOnly[long lcid]={ read=Get_PlotVisibleOnly, write=Set_PlotVisibleOnly }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant RightAngleAxes[long lcid]={ read=Get_RightAngleAxes, write=Set_RightAngleAxes }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Rotation[long lcid]={ read=Get_Rotation, write=Set_Rotation }; // 0, No
  */
  __property TOLEBOOL SizeWithWindow[long lcid]={ read=Get_SizeWithWindow, write=Set_SizeWithWindow }; // 0, No
  __property long SubType[long lcid]={ read=Get_SubType, write=Set_SubType }; // 0, No
  __property Excel_2k::ChartGroupPtr SurfaceGroup[long lcid]={ read=Get_SurfaceGroup }; // 0, Yes
  __property long Type[long lcid]={ read=Get_Type, write=Set_Type }; // 0, No
  __property Excel_2k::WallsPtr Walls[long lcid]={ read=Get_Walls }; // 0, Yes
  __property TOLEBOOL WallsAndGridlines2D[long lcid]={ read=Get_WallsAndGridlines2D, write=Set_WallsAndGridlines2D }; // 0, No
  __property Excel_2k::PivotLayoutPtr PivotLayout={ read=Get_PivotLayout }; // 0, Yes
  __property Office_2k::ScriptsPtr Scripts={ read=Get_Scripts }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR _CodeName={ read=Get__CodeName, write=Set__CodeName, stored=false }; // 0, No
  __property BSTR Name={ read=Get_Name, write=Set_Name, stored=false }; // 0, No
  __property TOLEBOOL HasDataTable={ read=Get_HasDataTable, write=Set_HasDataTable, stored=false }; // 0, No
  __property TOLEBOOL ShowWindow={ read=Get_ShowWindow, write=Set_ShowWindow, stored=false }; // 0, No
  __property Excel_2k::XlChartType ChartType={ read=Get_ChartType, write=Set_ChartType, stored=false }; // 0, No
  __property Excel_2k::XlBarShape BarShape={ read=Get_BarShape, write=Set_BarShape, stored=false }; // 0, No
  __property Excel_2k::XlRowCol PlotBy={ read=Get_PlotBy, write=Set_PlotBy, stored=false }; // 0, No
  __property TOLEBOOL ProtectFormatting={ read=Get_ProtectFormatting, write=Set_ProtectFormatting, stored=false }; // 0, No
  __property TOLEBOOL ProtectData={ read=Get_ProtectData, write=Set_ProtectData, stored=false }; // 0, No
  __property TOLEBOOL ProtectGoalSeek={ read=Get_ProtectGoalSeek, write=Set_ProtectGoalSeek, stored=false }; // 0, No
  __property TOLEBOOL ProtectSelection={ read=Get_ProtectSelection, write=Set_ProtectSelection, stored=false }; // 0, No
  __property TOLEBOOL HasPivotFields={ read=Get_HasPivotFields, write=Set_HasPivotFields, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnActivate;
  TNotifyEvent                   FOnDeactivate;
  TNotifyEvent                   FOnResize;
  TExcelChartMouseDown           FOnMouseDown;
  TExcelChartMouseUp             FOnMouseUp;
  TExcelChartMouseMove           FOnMouseMove;
  TExcelChartBeforeRightClick    FOnBeforeRightClick;
  TNotifyEvent                   FOnDragPlot;
  TNotifyEvent                   FOnDragOver;
  TExcelChartBeforeDoubleClick   FOnBeforeDoubleClick;
  TExcelChartSelect              FOnSelect;
  TExcelChartSeriesChange        FOnSeriesChange;
  TNotifyEvent                   FOnCalculate;
__published:
  __property TNotifyEvent OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TNotifyEvent OnDeactivate={ read=FOnDeactivate, write=FOnDeactivate };
  __property TNotifyEvent OnResize={ read=FOnResize, write=FOnResize };
  __property TExcelChartMouseDown OnMouseDown={ read=FOnMouseDown, write=FOnMouseDown };
  __property TExcelChartMouseUp OnMouseUp={ read=FOnMouseUp, write=FOnMouseUp };
  __property TExcelChartMouseMove OnMouseMove={ read=FOnMouseMove, write=FOnMouseMove };
  __property TExcelChartBeforeRightClick OnBeforeRightClick={ read=FOnBeforeRightClick, write=FOnBeforeRightClick };
  __property TNotifyEvent OnDragPlot={ read=FOnDragPlot, write=FOnDragPlot };
  __property TNotifyEvent OnDragOver={ read=FOnDragOver, write=FOnDragOver };
  __property TExcelChartBeforeDoubleClick OnBeforeDoubleClick={ read=FOnBeforeDoubleClick, write=FOnBeforeDoubleClick };
  __property TExcelChartSelect OnSelect={ read=FOnSelect, write=FOnSelect };
  __property TExcelChartSeriesChange OnSeriesChange={ read=FOnSeriesChange, write=FOnSeriesChange };
  __property TNotifyEvent OnCalculate={ read=FOnCalculate, write=FOnCalculate };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelWorksheet
// Help String      : 
// Default Interface: _Worksheet
// Def. Intf. Object: _WorksheetPtr
// Def. Intf. DISP? : No
// Event   Interface: DocEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelWorksheetSelectionChange)(System::TObject * Sender, 
                                                                     Excel_2k::RangePtr Target/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetBeforeDoubleClick)(System::TObject * Sender, 
                                                                       Excel_2k::RangePtr Target/*[in]*/, 
                                                                       TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetBeforeRightClick)(System::TObject * Sender, 
                                                                      Excel_2k::RangePtr Target/*[in]*/, 
                                                                      TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetChange)(System::TObject * Sender, 
                                                            Excel_2k::RangePtr Target/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetFollowHyperlink)(System::TObject * Sender, 
                                                                     Excel_2k::HyperlinkPtr Target/*[in]*/);

class PACKAGE TExcelWorksheet : public Oleserver::TOleServer
{
  _WorksheetPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelWorksheet(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _WorksheetPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_WorksheetPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  BSTR __fastcall Get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

  BSTR __fastcall Get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

  void __fastcall Set__CodeName(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(RHS/*[in]*/);
  }

  long __fastcall Get_Index(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Index(lcid/*[in]*/);
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  void __fastcall Set_Name(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Name(RHS/*[in]*/);
  }

  LPDISPATCH __fastcall Get_Next(void)
  {
    return GetDefaultInterface()->get_Next();
  }

  BSTR __fastcall Get_OnDoubleClick(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnDoubleClick(lcid/*[in]*/);
  }

  void __fastcall Set_OnDoubleClick(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnDoubleClick(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::PageSetupPtr __fastcall Get_PageSetup(void)
  {
    return GetDefaultInterface()->get_PageSetup();
  }

  LPDISPATCH __fastcall Get_Previous(void)
  {
    return GetDefaultInterface()->get_Previous();
  }

  TOLEBOOL __fastcall Get_ProtectContents(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectContents(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectDrawingObjects(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectDrawingObjects(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectionMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectionMode(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectScenarios(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectScenarios(lcid/*[in]*/);
  }

  Excel_2k::XlSheetVisibility __fastcall Get_Visible(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Visible(lcid/*[in]*/);
  }

  void __fastcall Set_Visible(long lcid/*[in]*/, Excel_2k::XlSheetVisibility RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::ShapesPtr __fastcall Get_Shapes(void)
  {
    return GetDefaultInterface()->get_Shapes();
  }

  TOLEBOOL __fastcall Get_TransitionExpEval(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionExpEval(lcid/*[in]*/);
  }

  void __fastcall Set_TransitionExpEval(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionExpEval(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AutoFilterMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AutoFilterMode(lcid/*[in]*/);
  }

  void __fastcall Set_AutoFilterMode(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoFilterMode(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableCalculation(void)
  {
    return GetDefaultInterface()->get_EnableCalculation();
  }

  void __fastcall Set_EnableCalculation(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableCalculation(RHS/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Get_Cells(void)
  {
    return GetDefaultInterface()->get_Cells();
  }

  Excel_2k::RangePtr __fastcall Get_CircularReference(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CircularReference(lcid/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Get_Columns(void)
  {
    return GetDefaultInterface()->get_Columns();
  }

  Excel_2k::XlConsolidationFunction __fastcall Get_ConsolidationFunction(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConsolidationFunction(lcid/*[in]*/);
  }

  TVariant __fastcall Get_ConsolidationOptions(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConsolidationOptions(lcid/*[in]*/);
  }

  TVariant __fastcall Get_ConsolidationSources(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConsolidationSources(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayAutomaticPageBreaks(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayAutomaticPageBreaks(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayAutomaticPageBreaks(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAutomaticPageBreaks(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableAutoFilter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableAutoFilter(lcid/*[in]*/);
  }

  void __fastcall Set_EnableAutoFilter(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableAutoFilter(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlEnableSelection __fastcall Get_EnableSelection(void)
  {
    return GetDefaultInterface()->get_EnableSelection();
  }

  void __fastcall Set_EnableSelection(Excel_2k::XlEnableSelection RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableSelection(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnableOutlining(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableOutlining(lcid/*[in]*/);
  }

  void __fastcall Set_EnableOutlining(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableOutlining(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EnablePivotTable(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnablePivotTable(lcid/*[in]*/);
  }

  void __fastcall Set_EnablePivotTable(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnablePivotTable(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_FilterMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FilterMode(lcid/*[in]*/);
  }

  Excel_2k::NamesPtr __fastcall Get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

  BSTR __fastcall Get_OnCalculate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnCalculate(lcid/*[in]*/);
  }

  void __fastcall Set_OnCalculate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnCalculate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnData(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnData(lcid/*[in]*/);
  }

  void __fastcall Set_OnData(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnData(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnEntry(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnEntry(lcid/*[in]*/);
  }

  void __fastcall Set_OnEntry(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnEntry(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::OutlinePtr __fastcall Get_Outline(void)
  {
    return GetDefaultInterface()->get_Outline();
  }

  Excel_2k::RangePtr __fastcall Get_Range(TVariantInParam Cell1/*[in]*/, 
                                          TVariantInParam Cell2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_Range(Cell1/*[in]*/, Cell2/*[in,opt]*/);
  }

  Excel_2k::RangePtr __fastcall Get_Rows(void)
  {
    return GetDefaultInterface()->get_Rows();
  }

  BSTR __fastcall Get_ScrollArea(void)
  {
    return GetDefaultInterface()->get_ScrollArea();
  }

  void __fastcall Set_ScrollArea(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ScrollArea(RHS/*[in]*/);
  }

  double __fastcall Get_StandardHeight(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardHeight(lcid/*[in]*/);
  }

  double __fastcall Get_StandardWidth(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardWidth(lcid/*[in]*/);
  }

  void __fastcall Set_StandardWidth(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StandardWidth(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TransitionFormEntry(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionFormEntry(lcid/*[in]*/);
  }

  void __fastcall Set_TransitionFormEntry(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionFormEntry(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlSheetType __fastcall Get_Type(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Type(lcid/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Get_UsedRange(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UsedRange(lcid/*[in]*/);
  }

  Excel_2k::HPageBreaksPtr __fastcall Get_HPageBreaks(void)
  {
    return GetDefaultInterface()->get_HPageBreaks();
  }

  Excel_2k::VPageBreaksPtr __fastcall Get_VPageBreaks(void)
  {
    return GetDefaultInterface()->get_VPageBreaks();
  }

  Excel_2k::QueryTablesPtr __fastcall Get_QueryTables(void)
  {
    return GetDefaultInterface()->get_QueryTables();
  }

  TOLEBOOL __fastcall Get_DisplayPageBreaks(void)
  {
    return GetDefaultInterface()->get_DisplayPageBreaks();
  }

  void __fastcall Set_DisplayPageBreaks(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayPageBreaks(RHS/*[in]*/);
  }

  Excel_2k::CommentsPtr __fastcall Get_Comments(void)
  {
    return GetDefaultInterface()->get_Comments();
  }

  Excel_2k::HyperlinksPtr __fastcall Get_Hyperlinks(void)
  {
    return GetDefaultInterface()->get_Hyperlinks();
  }

  long __fastcall Get__DisplayRightToLeft(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get__DisplayRightToLeft(lcid/*[in]*/);
  }

  void __fastcall Set__DisplayRightToLeft(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set__DisplayRightToLeft(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::AutoFilterPtr __fastcall Get_AutoFilter(void)
  {
    return GetDefaultInterface()->get_AutoFilter();
  }

  TOLEBOOL __fastcall Get_DisplayRightToLeft(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayRightToLeft(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayRightToLeft(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayRightToLeft(lcid/*[in]*/, RHS/*[in]*/);
  }

  Office_2k::ScriptsPtr __fastcall Get_Scripts(void)
  {
    return GetDefaultInterface()->get_Scripts();
  }

  /*CoClassWriteMethods*/
  void __fastcall Activate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Activate(lcid/*[in]*/);
  }

  void __fastcall Copy(TVariantInParam Before/*[in,opt]*/= TNoParam(), 
                       TVariantInParam After/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Copy(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Delete(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Delete(lcid/*[in]*/);
  }

  void __fastcall Move(TVariantInParam Before/*[in,opt]*/= TNoParam(), 
                       TVariantInParam After/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Move(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall _PrintOut(TVariantInParam From/*[in,opt]*/= TNoParam(), 
                            TVariantInParam To/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Copies/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Preview/*[in,opt]*/= TNoParam(), 
                            TVariantInParam ActivePrinter/*[in,opt]*/= TNoParam(), 
                            TVariantInParam PrintToFile/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Collate/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->_PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                     Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                     PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintPreview(TVariantInParam EnableChanges/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintPreview(EnableChanges/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Protect(TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                          TVariantInParam DrawingObjects/*[in,opt]*/= TNoParam(), 
                          TVariantInParam Contents/*[in,opt]*/= TNoParam(), 
                          TVariantInParam Scenarios/*[in,opt]*/= TNoParam(), 
                          TVariantInParam UserInterfaceOnly/*[in,opt]*/= TNoParam(), 
                          long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Protect(Password/*[in,opt]*/, DrawingObjects/*[in,opt]*/, 
                                   Contents/*[in,opt]*/, Scenarios/*[in,opt]*/, 
                                   UserInterfaceOnly/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SaveAs(BSTR Filename/*[in]*/, TVariantInParam FileFormat/*[in,opt]*/= TNoParam(), 
                         TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                         TVariantInParam WriteResPassword/*[in,opt]*/= TNoParam(), 
                         TVariantInParam ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                         TVariantInParam CreateBackup/*[in,opt]*/= TNoParam(), 
                         TVariantInParam AddToMru/*[in,opt]*/= TNoParam(), 
                         TVariantInParam TextCodepage/*[in,opt]*/= TNoParam(), 
                         TVariantInParam TextVisualLayout/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveAs(Filename/*[in]*/, FileFormat/*[in,opt]*/, Password/*[in,opt]*/, 
                                  WriteResPassword/*[in,opt]*/, ReadOnlyRecommended/*[in,opt]*/, 
                                  CreateBackup/*[in,opt]*/, AddToMru/*[in,opt]*/, 
                                  TextCodepage/*[in,opt]*/, TextVisualLayout/*[in,opt]*/, 
                                  lcid/*[in]*/);
  }

  void __fastcall Select(TVariantInParam Replace/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Select(Replace/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Unprotect(TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Arcs(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Arcs(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetBackgroundPicture(BSTR Filename/*[in]*/)
  {
    GetDefaultInterface()->SetBackgroundPicture(Filename/*[in]*/);
  }

  LPDISPATCH __fastcall Buttons(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Buttons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Calculate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Calculate(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ChartObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ChartObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall CheckBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CheckBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CheckSpelling(TVariantInParam CustomDictionary/*[in,opt]*/= TNoParam(), 
                                TVariantInParam IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                TVariantInParam AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                TVariantInParam SpellLang/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                         AlwaysSuggest/*[in,opt]*/, SpellLang/*[in,opt]*/, 
                                         lcid/*[in]*/);
  }

  void __fastcall ClearArrows(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ClearArrows(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Drawings(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Drawings(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DrawingObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DrawingObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DropDowns(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DropDowns(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall ResetAllPageBreaks(void)
  {
    GetDefaultInterface()->ResetAllPageBreaks();
  }

  LPDISPATCH __fastcall GroupBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall GroupObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Labels(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Labels(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Lines(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Lines(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ListBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ListBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall OLEObjects(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OLEObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall OptionButtons(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OptionButtons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Ovals(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Ovals(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Paste(TVariantInParam Destination/*[in,opt]*/= TNoParam(), 
                        TVariantInParam Link/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Paste(Destination/*[in,opt]*/, Link/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PasteSpecial(TVariantInParam Format/*[in,opt]*/= TNoParam(), 
                               TVariantInParam Link/*[in,opt]*/= TNoParam(), 
                               TVariantInParam DisplayAsIcon/*[in,opt]*/= TNoParam(), 
                               TVariantInParam IconFileName/*[in,opt]*/= TNoParam(), 
                               TVariantInParam IconIndex/*[in,opt]*/= TNoParam(), 
                               TVariantInParam IconLabel/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PasteSpecial(Format/*[in,opt]*/, Link/*[in,opt]*/, 
                                        DisplayAsIcon/*[in,opt]*/, IconFileName/*[in,opt]*/, 
                                        IconIndex/*[in,opt]*/, IconLabel/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Pictures(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Pictures(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall PivotTables(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->PivotTables(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_2k::PivotTablePtr __fastcall PivotTableWizard(TVariantInParam SourceType/*[in,opt]*/, 
                                                      TVariantInParam SourceData/*[in,opt]*/, 
                                                      TVariantInParam TableDestination/*[in,opt]*/, 
                                                      TVariantInParam TableName/*[in,opt]*/, 
                                                      TVariantInParam RowGrand/*[in,opt]*/, 
                                                      TVariantInParam ColumnGrand/*[in,opt]*/, 
                                                      TVariantInParam SaveData/*[in,opt]*/, 
                                                      TVariantInParam HasAutoFormat/*[in,opt]*/, 
                                                      TVariantInParam AutoPage/*[in,opt]*/, 
                                                      TVariantInParam Reserved/*[in,opt]*/, 
                                                      TVariantInParam BackgroundQuery/*[in,opt]*/, 
                                                      TVariantInParam OptimizeCache/*[in,opt]*/, 
                                                      TVariantInParam PageFieldOrder/*[in,opt]*/, 
                                                      TVariantInParam PageFieldWrapCount/*[in,opt]*/, 
                                                      TVariantInParam ReadData/*[in,opt]*/, 
                                                      TVariantInParam Connection/*[in,opt]*/, 
                                                      long lcid/*[in]*/)
  {
    return GetDefaultInterface()->PivotTableWizard(SourceType/*[in,opt]*/, SourceData/*[in,opt]*/, 
                                                   TableDestination/*[in,opt]*/, 
                                                   TableName/*[in,opt]*/, RowGrand/*[in,opt]*/, 
                                                   ColumnGrand/*[in,opt]*/, SaveData/*[in,opt]*/, 
                                                   HasAutoFormat/*[in,opt]*/, AutoPage/*[in,opt]*/, 
                                                   Reserved/*[in,opt]*/, BackgroundQuery/*[in,opt]*/, 
                                                   OptimizeCache/*[in,opt]*/, 
                                                   PageFieldOrder/*[in,opt]*/, 
                                                   PageFieldWrapCount/*[in,opt]*/, 
                                                   ReadData/*[in,opt]*/, Connection/*[in,opt]*/, 
                                                   lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Rectangles(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Rectangles(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Scenarios(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Scenarios(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ScrollBars(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ScrollBars(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ShowAllData(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ShowAllData(lcid/*[in]*/);
  }

  void __fastcall ShowDataForm(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ShowDataForm(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Spinners(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Spinners(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall TextBoxes(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->TextBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ClearCircles(void)
  {
    GetDefaultInterface()->ClearCircles();
  }

  void __fastcall CircleInvalid(void)
  {
    GetDefaultInterface()->CircleInvalid();
  }

  void __fastcall PrintOut(TVariantInParam From/*[in,opt]*/= TNoParam(), 
                           TVariantInParam To/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Copies/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Preview/*[in,opt]*/= TNoParam(), 
                           TVariantInParam ActivePrinter/*[in,opt]*/= TNoParam(), 
                           TVariantInParam PrintToFile/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Collate/*[in,opt]*/= TNoParam(), 
                           TVariantInParam PrToFileName/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                    Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                    PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, 
                                    PrToFileName/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall _CheckSpelling(TVariantInParam CustomDictionary/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam SpellLang/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam IgnoreFinalYaa/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam SpellScript/*[in,opt]*/= TNoParam(), 
                                 long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->_CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                          AlwaysSuggest/*[in,opt]*/, SpellLang/*[in,opt]*/, 
                                          IgnoreFinalYaa/*[in,opt]*/, SpellScript/*[in,opt]*/, 
                                          lcid/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property BSTR CodeName={ read=Get_CodeName }; // 0, No
  __property long Index[long lcid]={ read=Get_Index }; // 0, No
  __property LPDISPATCH Next={ read=Get_Next }; // 0, No
  __property BSTR OnDoubleClick[long lcid]={ read=Get_OnDoubleClick, write=Set_OnDoubleClick }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=Get_OnSheetActivate, write=Set_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=Get_OnSheetDeactivate, write=Set_OnSheetDeactivate }; // 0, No
  __property Excel_2k::PageSetupPtr PageSetup={ read=Get_PageSetup }; // 0, Yes
  __property LPDISPATCH Previous={ read=Get_Previous }; // 0, No
  __property TOLEBOOL ProtectContents[long lcid]={ read=Get_ProtectContents }; // 0, No
  __property TOLEBOOL ProtectDrawingObjects[long lcid]={ read=Get_ProtectDrawingObjects }; // 0, No
  __property TOLEBOOL ProtectionMode[long lcid]={ read=Get_ProtectionMode }; // 0, No
  __property TOLEBOOL ProtectScenarios[long lcid]={ read=Get_ProtectScenarios }; // 0, No
  __property Excel_2k::XlSheetVisibility Visible[long lcid]={ read=Get_Visible, write=Set_Visible }; // 0, No
  __property Excel_2k::ShapesPtr Shapes={ read=Get_Shapes }; // 0, Yes
  __property TOLEBOOL TransitionExpEval[long lcid]={ read=Get_TransitionExpEval, write=Set_TransitionExpEval }; // 0, No
  __property TOLEBOOL AutoFilterMode[long lcid]={ read=Get_AutoFilterMode, write=Set_AutoFilterMode }; // 0, No
  __property Excel_2k::RangePtr Cells={ read=Get_Cells }; // 0, Yes
  __property Excel_2k::RangePtr CircularReference[long lcid]={ read=Get_CircularReference }; // 0, Yes
  __property Excel_2k::RangePtr Columns={ read=Get_Columns }; // 0, Yes
  __property Excel_2k::XlConsolidationFunction ConsolidationFunction[long lcid]={ read=Get_ConsolidationFunction }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant ConsolidationOptions[long lcid]={ read=Get_ConsolidationOptions }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant ConsolidationSources[long lcid]={ read=Get_ConsolidationSources }; // 0, No
  */
  __property TOLEBOOL DisplayAutomaticPageBreaks[long lcid]={ read=Get_DisplayAutomaticPageBreaks, write=Set_DisplayAutomaticPageBreaks }; // 0, No
  __property TOLEBOOL EnableAutoFilter[long lcid]={ read=Get_EnableAutoFilter, write=Set_EnableAutoFilter }; // 0, No
  __property TOLEBOOL EnableOutlining[long lcid]={ read=Get_EnableOutlining, write=Set_EnableOutlining }; // 0, No
  __property TOLEBOOL EnablePivotTable[long lcid]={ read=Get_EnablePivotTable, write=Set_EnablePivotTable }; // 0, No
  __property TOLEBOOL FilterMode[long lcid]={ read=Get_FilterMode }; // 0, No
  __property Excel_2k::NamesPtr Names={ read=Get_Names }; // 0, Yes
  __property BSTR OnCalculate[long lcid]={ read=Get_OnCalculate, write=Set_OnCalculate }; // 0, No
  __property BSTR OnData[long lcid]={ read=Get_OnData, write=Set_OnData }; // 0, No
  __property BSTR OnEntry[long lcid]={ read=Get_OnEntry, write=Set_OnEntry }; // 0, No
  __property Excel_2k::OutlinePtr Outline={ read=Get_Outline }; // 0, Yes
  /*__property Excel_2k::RangePtr Range[TVariant Cell1][TVariant Cell2]={ read=Get_Range }; // 0, Yes*/
  __property Excel_2k::RangePtr Rows={ read=Get_Rows }; // 0, Yes
  __property double StandardHeight[long lcid]={ read=Get_StandardHeight }; // 0, No
  __property double StandardWidth[long lcid]={ read=Get_StandardWidth, write=Set_StandardWidth }; // 0, No
  __property TOLEBOOL TransitionFormEntry[long lcid]={ read=Get_TransitionFormEntry, write=Set_TransitionFormEntry }; // 0, No
  __property Excel_2k::XlSheetType Type[long lcid]={ read=Get_Type }; // 0, No
  __property Excel_2k::RangePtr UsedRange[long lcid]={ read=Get_UsedRange }; // 0, Yes
  __property Excel_2k::HPageBreaksPtr HPageBreaks={ read=Get_HPageBreaks }; // 0, Yes
  __property Excel_2k::VPageBreaksPtr VPageBreaks={ read=Get_VPageBreaks }; // 0, Yes
  __property Excel_2k::QueryTablesPtr QueryTables={ read=Get_QueryTables }; // 0, Yes
  __property Excel_2k::CommentsPtr Comments={ read=Get_Comments }; // 0, Yes
  __property Excel_2k::HyperlinksPtr Hyperlinks={ read=Get_Hyperlinks }; // 0, Yes
  __property long _DisplayRightToLeft[long lcid]={ read=Get__DisplayRightToLeft, write=Set__DisplayRightToLeft }; // 0, No
  __property Excel_2k::AutoFilterPtr AutoFilter={ read=Get_AutoFilter }; // 0, Yes
  __property TOLEBOOL DisplayRightToLeft[long lcid]={ read=Get_DisplayRightToLeft, write=Set_DisplayRightToLeft }; // 0, No
  __property Office_2k::ScriptsPtr Scripts={ read=Get_Scripts }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR _CodeName={ read=Get__CodeName, write=Set__CodeName, stored=false }; // 0, No
  __property BSTR Name={ read=Get_Name, write=Set_Name, stored=false }; // 0, No
  __property TOLEBOOL EnableCalculation={ read=Get_EnableCalculation, write=Set_EnableCalculation, stored=false }; // 0, No
  __property Excel_2k::XlEnableSelection EnableSelection={ read=Get_EnableSelection, write=Set_EnableSelection, stored=false }; // 0, No
  __property BSTR ScrollArea={ read=Get_ScrollArea, write=Set_ScrollArea, stored=false }; // 0, No
  __property TOLEBOOL DisplayPageBreaks={ read=Get_DisplayPageBreaks, write=Set_DisplayPageBreaks, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TExcelWorksheetSelectionChange FOnSelectionChange;
  TExcelWorksheetBeforeDoubleClick FOnBeforeDoubleClick;
  TExcelWorksheetBeforeRightClick FOnBeforeRightClick;
  TNotifyEvent                   FOnActivate;
  TNotifyEvent                   FOnDeactivate;
  TNotifyEvent                   FOnCalculate1;
  TExcelWorksheetChange          FOnChange;
  TExcelWorksheetFollowHyperlink FOnFollowHyperlink;
__published:
  __property TExcelWorksheetSelectionChange OnSelectionChange={ read=FOnSelectionChange, write=FOnSelectionChange };
  __property TExcelWorksheetBeforeDoubleClick OnBeforeDoubleClick={ read=FOnBeforeDoubleClick, write=FOnBeforeDoubleClick };
  __property TExcelWorksheetBeforeRightClick OnBeforeRightClick={ read=FOnBeforeRightClick, write=FOnBeforeRightClick };
  __property TNotifyEvent OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TNotifyEvent OnDeactivate={ read=FOnDeactivate, write=FOnDeactivate };
  __property TNotifyEvent OnCalculate1={ read=FOnCalculate1, write=FOnCalculate1 };
  __property TExcelWorksheetChange OnChange={ read=FOnChange, write=FOnChange };
  __property TExcelWorksheetFollowHyperlink OnFollowHyperlink={ read=FOnFollowHyperlink, write=FOnFollowHyperlink };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelGlobal
// Help String      : 
// Default Interface: _Global
// Def. Intf. Object: _GlobalPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (27) AppObject CanCreate Predeclid Hidden
// *********************************************************************//
class PACKAGE TExcelGlobal : public Oleserver::TOleServer
{
  _GlobalPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelGlobal(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _GlobalPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_GlobalPtr intf);


  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  Excel_2k::ExcelApplicationPtr __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  Excel_2k::RangePtr __fastcall Get_ActiveCell(void)
  {
    return GetDefaultInterface()->get_ActiveCell();
  }

  Excel_2k::ExcelChartPtr __fastcall Get_ActiveChart(void)
  {
    return GetDefaultInterface()->get_ActiveChart();
  }

  Excel_2k::DialogSheetPtr __fastcall Get_ActiveDialog(void)
  {
    return GetDefaultInterface()->get_ActiveDialog();
  }

  Excel_2k::MenuBarPtr __fastcall Get_ActiveMenuBar(void)
  {
    return GetDefaultInterface()->get_ActiveMenuBar();
  }

  BSTR __fastcall Get_ActivePrinter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ActivePrinter(lcid/*[in]*/);
  }

  void __fastcall Set_ActivePrinter(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(lcid/*[in]*/, RHS/*[in]*/);
  }

  LPDISPATCH __fastcall Get_ActiveSheet(void)
  {
    return GetDefaultInterface()->get_ActiveSheet();
  }

  Excel_2k::WINDOWPtr __fastcall Get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

  Excel_2k::ExcelWorkbookPtr __fastcall Get_ActiveWorkbook(void)
  {
    return GetDefaultInterface()->get_ActiveWorkbook();
  }

  Excel_2k::AddInsPtr __fastcall Get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

  Office_2k::AssistantPtr __fastcall Get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

  Excel_2k::RangePtr __fastcall Get_Cells(void)
  {
    return GetDefaultInterface()->get_Cells();
  }

  Excel_2k::SheetsPtr __fastcall Get_Charts(void)
  {
    return GetDefaultInterface()->get_Charts();
  }

  Excel_2k::RangePtr __fastcall Get_Columns(void)
  {
    return GetDefaultInterface()->get_Columns();
  }

  Office_2k::CommandBarsPtr __fastcall Get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

  long __fastcall Get_DDEAppReturnCode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DDEAppReturnCode(lcid/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_DialogSheets(void)
  {
    return GetDefaultInterface()->get_DialogSheets();
  }

  Excel_2k::MenuBarsPtr __fastcall Get_MenuBars(void)
  {
    return GetDefaultInterface()->get_MenuBars();
  }

  Excel_2k::ModulesPtr __fastcall Get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

  Excel_2k::NamesPtr __fastcall Get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

  Excel_2k::RangePtr __fastcall Get_Range(TVariantInParam Cell1/*[in]*/, 
                                          TVariantInParam Cell2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_Range(Cell1/*[in]*/, Cell2/*[in,opt]*/);
  }

  Excel_2k::RangePtr __fastcall Get_Rows(void)
  {
    return GetDefaultInterface()->get_Rows();
  }

  LPDISPATCH __fastcall Get_Selection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Selection(lcid/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_Sheets(void)
  {
    return GetDefaultInterface()->get_Sheets();
  }

  Excel_2k::MenuPtr __fastcall Get_ShortcutMenus(long Index/*[in]*/)
  {
    return GetDefaultInterface()->get_ShortcutMenus(Index/*[in]*/);
  }

  Excel_2k::ExcelWorkbookPtr __fastcall Get_ThisWorkbook(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ThisWorkbook(lcid/*[in]*/);
  }

  Excel_2k::ToolbarsPtr __fastcall Get_Toolbars(void)
  {
    return GetDefaultInterface()->get_Toolbars();
  }

  Excel_2k::WindozPtr __fastcall Get_Windoz(void)
  {
    return GetDefaultInterface()->get_Windoz();
  }

  Excel_2k::WorkbooksPtr __fastcall Get_Workbooks(void)
  {
    return GetDefaultInterface()->get_Workbooks();
  }

  Excel_2k::WorksheetFunctionPtr __fastcall Get_WorksheetFunction(void)
  {
    return GetDefaultInterface()->get_WorksheetFunction();
  }

  Excel_2k::SheetsPtr __fastcall Get_Worksheets(void)
  {
    return GetDefaultInterface()->get_Worksheets();
  }

  Excel_2k::SheetsPtr __fastcall Get_Excel4IntlMacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4IntlMacroSheets();
  }

  Excel_2k::SheetsPtr __fastcall Get_Excel4MacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4MacroSheets();
  }

  /*CoClassWriteMethods*/
  void __fastcall Calculate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Calculate(lcid/*[in]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR String/*[in]*/, 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, String/*[in]*/, lcid/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, TVariantInParam Item/*[in]*/, 
                          TVariantInParam Data/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(TVariantInParam Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall ExecuteExcel4Macro(BSTR String/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ExecuteExcel4Macro(String/*[in]*/, lcid/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Intersect(Excel_2k::RangePtr Arg1/*[in]*/, 
                                          Excel_2k::RangePtr Arg2/*[in]*/, 
                                          TVariantInParam Arg3/*[in,opt]*/, 
                                          TVariantInParam Arg4/*[in,opt]*/, 
                                          TVariantInParam Arg5/*[in,opt]*/, 
                                          TVariantInParam Arg6/*[in,opt]*/, 
                                          TVariantInParam Arg7/*[in,opt]*/, 
                                          TVariantInParam Arg8/*[in,opt]*/, 
                                          TVariantInParam Arg9/*[in,opt]*/, 
                                          TVariantInParam Arg10/*[in,opt]*/, 
                                          TVariantInParam Arg11/*[in,opt]*/, 
                                          TVariantInParam Arg12/*[in,opt]*/, 
                                          TVariantInParam Arg13/*[in,opt]*/, 
                                          TVariantInParam Arg14/*[in,opt]*/, 
                                          TVariantInParam Arg15/*[in,opt]*/, 
                                          TVariantInParam Arg16/*[in,opt]*/, 
                                          TVariantInParam Arg17/*[in,opt]*/, 
                                          TVariantInParam Arg18/*[in,opt]*/, 
                                          TVariantInParam Arg19/*[in,opt]*/, 
                                          TVariantInParam Arg20/*[in,opt]*/, 
                                          TVariantInParam Arg21/*[in,opt]*/, 
                                          TVariantInParam Arg22/*[in,opt]*/, 
                                          TVariantInParam Arg23/*[in,opt]*/, 
                                          TVariantInParam Arg24/*[in,opt]*/, 
                                          TVariantInParam Arg25/*[in,opt]*/, 
                                          TVariantInParam Arg26/*[in,opt]*/, 
                                          TVariantInParam Arg27/*[in,opt]*/, 
                                          TVariantInParam Arg28/*[in,opt]*/, 
                                          TVariantInParam Arg29/*[in,opt]*/, 
                                          TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Intersect(Arg1/*[in]*/, Arg2/*[in]*/, Arg3/*[in,opt]*/, 
                                            Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                            Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                            Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, Arg12/*[in,opt]*/, 
                                            Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                            Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, Arg18/*[in,opt]*/, 
                                            Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                            Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, Arg24/*[in,opt]*/, 
                                            Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                            Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, Arg30/*[in,opt]*/, 
                                            lcid/*[in]*/);
  }

  TVariant __fastcall Run(TVariantInParam Macro/*[in,opt]*/, TVariantInParam Arg1/*[in,opt]*/, 
                          TVariantInParam Arg2/*[in,opt]*/, TVariantInParam Arg3/*[in,opt]*/, 
                          TVariantInParam Arg4/*[in,opt]*/, TVariantInParam Arg5/*[in,opt]*/, 
                          TVariantInParam Arg6/*[in,opt]*/, TVariantInParam Arg7/*[in,opt]*/, 
                          TVariantInParam Arg8/*[in,opt]*/, TVariantInParam Arg9/*[in,opt]*/, 
                          TVariantInParam Arg10/*[in,opt]*/, TVariantInParam Arg11/*[in,opt]*/, 
                          TVariantInParam Arg12/*[in,opt]*/, TVariantInParam Arg13/*[in,opt]*/, 
                          TVariantInParam Arg14/*[in,opt]*/, TVariantInParam Arg15/*[in,opt]*/, 
                          TVariantInParam Arg16/*[in,opt]*/, TVariantInParam Arg17/*[in,opt]*/, 
                          TVariantInParam Arg18/*[in,opt]*/, TVariantInParam Arg19/*[in,opt]*/, 
                          TVariantInParam Arg20/*[in,opt]*/, TVariantInParam Arg21/*[in,opt]*/, 
                          TVariantInParam Arg22/*[in,opt]*/, TVariantInParam Arg23/*[in,opt]*/, 
                          TVariantInParam Arg24/*[in,opt]*/, TVariantInParam Arg25/*[in,opt]*/, 
                          TVariantInParam Arg26/*[in,opt]*/, TVariantInParam Arg27/*[in,opt]*/, 
                          TVariantInParam Arg28/*[in,opt]*/, TVariantInParam Arg29/*[in,opt]*/, 
                          TVariantInParam Arg30/*[in,opt]*/)
  {
    return GetDefaultInterface()->Run(Macro/*[in,opt]*/, Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, 
                                      Arg3/*[in,opt]*/, Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, 
                                      Arg6/*[in,opt]*/, Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, 
                                      Arg9/*[in,opt]*/, Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                      Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, 
                                      Arg15/*[in,opt]*/, Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                      Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, 
                                      Arg21/*[in,opt]*/, Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                      Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, 
                                      Arg27/*[in,opt]*/, Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                      Arg30/*[in,opt]*/);
  }

  TVariant __fastcall _Run2(TVariantInParam Macro/*[in,opt]*/, TVariantInParam Arg1/*[in,opt]*/, 
                            TVariantInParam Arg2/*[in,opt]*/, TVariantInParam Arg3/*[in,opt]*/, 
                            TVariantInParam Arg4/*[in,opt]*/, TVariantInParam Arg5/*[in,opt]*/, 
                            TVariantInParam Arg6/*[in,opt]*/, TVariantInParam Arg7/*[in,opt]*/, 
                            TVariantInParam Arg8/*[in,opt]*/, TVariantInParam Arg9/*[in,opt]*/, 
                            TVariantInParam Arg10/*[in,opt]*/, TVariantInParam Arg11/*[in,opt]*/, 
                            TVariantInParam Arg12/*[in,opt]*/, TVariantInParam Arg13/*[in,opt]*/, 
                            TVariantInParam Arg14/*[in,opt]*/, TVariantInParam Arg15/*[in,opt]*/, 
                            TVariantInParam Arg16/*[in,opt]*/, TVariantInParam Arg17/*[in,opt]*/, 
                            TVariantInParam Arg18/*[in,opt]*/, TVariantInParam Arg19/*[in,opt]*/, 
                            TVariantInParam Arg20/*[in,opt]*/, TVariantInParam Arg21/*[in,opt]*/, 
                            TVariantInParam Arg22/*[in,opt]*/, TVariantInParam Arg23/*[in,opt]*/, 
                            TVariantInParam Arg24/*[in,opt]*/, TVariantInParam Arg25/*[in,opt]*/, 
                            TVariantInParam Arg26/*[in,opt]*/, TVariantInParam Arg27/*[in,opt]*/, 
                            TVariantInParam Arg28/*[in,opt]*/, TVariantInParam Arg29/*[in,opt]*/, 
                            TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Run2(Macro/*[in,opt]*/, Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, 
                                        Arg3/*[in,opt]*/, Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, 
                                        Arg6/*[in,opt]*/, Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, 
                                        Arg9/*[in,opt]*/, Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                        Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, 
                                        Arg15/*[in,opt]*/, Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                        Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, 
                                        Arg21/*[in,opt]*/, Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                        Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, 
                                        Arg27/*[in,opt]*/, Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                        Arg30/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendKeys(TVariantInParam Keys/*[in]*/, 
                           TVariantInParam Wait/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SendKeys(Keys/*[in]*/, Wait/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Union(Excel_2k::RangePtr Arg1/*[in]*/, 
                                      Excel_2k::RangePtr Arg2/*[in]*/, 
                                      TVariantInParam Arg3/*[in,opt]*/, 
                                      TVariantInParam Arg4/*[in,opt]*/, 
                                      TVariantInParam Arg5/*[in,opt]*/, 
                                      TVariantInParam Arg6/*[in,opt]*/, 
                                      TVariantInParam Arg7/*[in,opt]*/, 
                                      TVariantInParam Arg8/*[in,opt]*/, 
                                      TVariantInParam Arg9/*[in,opt]*/, 
                                      TVariantInParam Arg10/*[in,opt]*/, 
                                      TVariantInParam Arg11/*[in,opt]*/, 
                                      TVariantInParam Arg12/*[in,opt]*/, 
                                      TVariantInParam Arg13/*[in,opt]*/, 
                                      TVariantInParam Arg14/*[in,opt]*/, 
                                      TVariantInParam Arg15/*[in,opt]*/, 
                                      TVariantInParam Arg16/*[in,opt]*/, 
                                      TVariantInParam Arg17/*[in,opt]*/, 
                                      TVariantInParam Arg18/*[in,opt]*/, 
                                      TVariantInParam Arg19/*[in,opt]*/, 
                                      TVariantInParam Arg20/*[in,opt]*/, 
                                      TVariantInParam Arg21/*[in,opt]*/, 
                                      TVariantInParam Arg22/*[in,opt]*/, 
                                      TVariantInParam Arg23/*[in,opt]*/, 
                                      TVariantInParam Arg24/*[in,opt]*/, 
                                      TVariantInParam Arg25/*[in,opt]*/, 
                                      TVariantInParam Arg26/*[in,opt]*/, 
                                      TVariantInParam Arg27/*[in,opt]*/, 
                                      TVariantInParam Arg28/*[in,opt]*/, 
                                      TVariantInParam Arg29/*[in,opt]*/, 
                                      TVariantInParam Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Union(Arg1/*[in]*/, Arg2/*[in]*/, Arg3/*[in,opt]*/, 
                                        Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                        Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                        Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, Arg12/*[in,opt]*/, 
                                        Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                        Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, Arg18/*[in,opt]*/, 
                                        Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                        Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, Arg24/*[in,opt]*/, 
                                        Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                        Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, Arg30/*[in,opt]*/, 
                                        lcid/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property Excel_2k::ExcelApplicationPtr Parent={ read=Get_Parent }; // 0, Yes
  __property Excel_2k::RangePtr ActiveCell={ read=Get_ActiveCell }; // 0, Yes
  __property Excel_2k::ExcelChartPtr ActiveChart={ read=Get_ActiveChart }; // 0, Yes
  __property Excel_2k::DialogSheetPtr ActiveDialog={ read=Get_ActiveDialog }; // 0, Yes
  __property Excel_2k::MenuBarPtr ActiveMenuBar={ read=Get_ActiveMenuBar }; // 0, Yes
  __property BSTR ActivePrinter[long lcid]={ read=Get_ActivePrinter, write=Set_ActivePrinter }; // 0, No
  __property LPDISPATCH ActiveSheet={ read=Get_ActiveSheet }; // 0, No
  __property Excel_2k::WINDOWPtr ActiveWindow={ read=Get_ActiveWindow }; // 0, Yes
  __property Excel_2k::ExcelWorkbookPtr ActiveWorkbook={ read=Get_ActiveWorkbook }; // 0, Yes
  __property Excel_2k::AddInsPtr AddIns={ read=Get_AddIns }; // 0, Yes
  __property Office_2k::AssistantPtr Assistant={ read=Get_Assistant }; // 0, Yes
  __property Excel_2k::RangePtr Cells={ read=Get_Cells }; // 0, Yes
  __property Excel_2k::SheetsPtr Charts={ read=Get_Charts }; // 0, Yes
  __property Excel_2k::RangePtr Columns={ read=Get_Columns }; // 0, Yes
  __property Office_2k::CommandBarsPtr CommandBars={ read=Get_CommandBars }; // 0, Yes
  __property long DDEAppReturnCode[long lcid]={ read=Get_DDEAppReturnCode }; // 0, No
  __property Excel_2k::SheetsPtr DialogSheets={ read=Get_DialogSheets }; // 0, Yes
  __property Excel_2k::MenuBarsPtr MenuBars={ read=Get_MenuBars }; // 0, Yes
  __property Excel_2k::ModulesPtr Modules={ read=Get_Modules }; // 0, Yes
  __property Excel_2k::NamesPtr Names={ read=Get_Names }; // 0, Yes
  /*__property Excel_2k::RangePtr Range[TVariant Cell1][TVariant Cell2]={ read=Get_Range }; // 0, Yes*/
  __property Excel_2k::RangePtr Rows={ read=Get_Rows }; // 0, Yes
  __property LPDISPATCH Selection[long lcid]={ read=Get_Selection }; // 0, No
  __property Excel_2k::SheetsPtr Sheets={ read=Get_Sheets }; // 0, Yes
  __property Excel_2k::MenuPtr ShortcutMenus[long Index]={ read=Get_ShortcutMenus }; // 0, Yes
  __property Excel_2k::ExcelWorkbookPtr ThisWorkbook[long lcid]={ read=Get_ThisWorkbook }; // 0, Yes
  __property Excel_2k::ToolbarsPtr Toolbars={ read=Get_Toolbars }; // 0, Yes
  __property Excel_2k::WindozPtr Windoz={ read=Get_Windoz }; // 0, Yes
  __property Excel_2k::WorkbooksPtr Workbooks={ read=Get_Workbooks }; // 0, Yes
  __property Excel_2k::WorksheetFunctionPtr WorksheetFunction={ read=Get_WorksheetFunction }; // 0, Yes
  __property Excel_2k::SheetsPtr Worksheets={ read=Get_Worksheets }; // 0, Yes
  __property Excel_2k::SheetsPtr Excel4IntlMacroSheets={ read=Get_Excel4IntlMacroSheets }; // 0, Yes
  __property Excel_2k::SheetsPtr Excel4MacroSheets={ read=Get_Excel4MacroSheets }; // 0, Yes
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelWorkbook
// Help String      : 
// Default Interface: _Workbook
// Def. Intf. Object: _WorkbookPtr
// Def. Intf. DISP? : No
// Event   Interface: WorkbookEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelWorkbookBeforeClose)(System::TObject * Sender, 
                                                                TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookBeforeSave)(System::TObject * Sender, 
                                                               TOLEBOOL SaveAsUI/*[in]*/, 
                                                               TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookBeforePrint)(System::TObject * Sender, 
                                                                TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookNewSheet)(System::TObject * Sender, 
                                                             LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookWindowResize)(System::TObject * Sender, 
                                                                 Excel_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookWindowActivate)(System::TObject * Sender, 
                                                                   Excel_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookWindowDeactivate)(System::TObject * Sender, 
                                                                     Excel_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetSelectionChange)(System::TObject * Sender, 
                                                                         LPDISPATCH Sh/*[in]*/, 
                                                                         Excel_2k::RangePtr Target/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetBeforeDoubleClick)(System::TObject * Sender, 
                                                                           LPDISPATCH Sh/*[in]*/, 
                                                                           Excel_2k::RangePtr Target/*[in]*/, 
                                                                           TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetBeforeRightClick)(System::TObject * Sender, 
                                                                          LPDISPATCH Sh/*[in]*/, 
                                                                          Excel_2k::RangePtr Target/*[in]*/, 
                                                                          TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetActivate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetDeactivate)(System::TObject * Sender, 
                                                                    LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetCalculate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetChange)(System::TObject * Sender, 
                                                                LPDISPATCH Sh/*[in]*/, 
                                                                Excel_2k::RangePtr Target/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetFollowHyperlink)(System::TObject * Sender, 
                                                                         LPDISPATCH Sh/*[in]*/, 
                                                                         Excel_2k::HyperlinkPtr Target/*[in]*/);

class PACKAGE TExcelWorkbook : public Oleserver::TOleServer
{
  _WorkbookPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelWorkbook(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _WorkbookPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_WorkbookPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  TOLEBOOL __fastcall Get_AcceptLabelsInFormulas(void)
  {
    return GetDefaultInterface()->get_AcceptLabelsInFormulas();
  }

  void __fastcall Set_AcceptLabelsInFormulas(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AcceptLabelsInFormulas(RHS/*[in]*/);
  }

  Excel_2k::ExcelChartPtr __fastcall Get_ActiveChart(void)
  {
    return GetDefaultInterface()->get_ActiveChart();
  }

  LPDISPATCH __fastcall Get_ActiveSheet(void)
  {
    return GetDefaultInterface()->get_ActiveSheet();
  }

  BSTR __fastcall Get_Author(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Author(lcid/*[in]*/);
  }

  void __fastcall Set_Author(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Author(lcid/*[in]*/, RHS/*[in]*/);
  }

  long __fastcall Get_AutoUpdateFrequency(void)
  {
    return GetDefaultInterface()->get_AutoUpdateFrequency();
  }

  void __fastcall Set_AutoUpdateFrequency(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoUpdateFrequency(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AutoUpdateSaveChanges(void)
  {
    return GetDefaultInterface()->get_AutoUpdateSaveChanges();
  }

  void __fastcall Set_AutoUpdateSaveChanges(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoUpdateSaveChanges(RHS/*[in]*/);
  }

  long __fastcall Get_ChangeHistoryDuration(void)
  {
    return GetDefaultInterface()->get_ChangeHistoryDuration();
  }

  void __fastcall Set_ChangeHistoryDuration(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ChangeHistoryDuration(RHS/*[in]*/);
  }

  LPDISPATCH __fastcall Get_BuiltinDocumentProperties(void)
  {
    return GetDefaultInterface()->get_BuiltinDocumentProperties();
  }

  Excel_2k::SheetsPtr __fastcall Get_Charts(void)
  {
    return GetDefaultInterface()->get_Charts();
  }

  BSTR __fastcall Get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

  BSTR __fastcall Get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

  void __fastcall Set__CodeName(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(RHS/*[in]*/);
  }

  TVariant __fastcall Get_Colors(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Colors(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Set_Colors(TVariantInParam Index/*[in,opt]*/, long lcid/*[in]*/, 
                             TVariantInParam RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Colors(Index/*[in,opt]*/, lcid/*[in]*/, RHS/*[in]*/);
  }

  Office_2k::CommandBarsPtr __fastcall Get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

  BSTR __fastcall Get_Comments(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Comments(lcid/*[in]*/);
  }

  void __fastcall Set_Comments(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Comments(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlSaveConflictResolution __fastcall Get_ConflictResolution(void)
  {
    return GetDefaultInterface()->get_ConflictResolution();
  }

  void __fastcall Set_ConflictResolution(Excel_2k::XlSaveConflictResolution RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ConflictResolution(RHS/*[in]*/);
  }

  LPDISPATCH __fastcall Get_Container(void)
  {
    return GetDefaultInterface()->get_Container();
  }

  TOLEBOOL __fastcall Get_CreateBackup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CreateBackup(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Get_CustomDocumentProperties(void)
  {
    return GetDefaultInterface()->get_CustomDocumentProperties();
  }

  TOLEBOOL __fastcall Get_Date1904(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Date1904(lcid/*[in]*/);
  }

  void __fastcall Set_Date1904(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Date1904(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_DialogSheets(void)
  {
    return GetDefaultInterface()->get_DialogSheets();
  }

  Excel_2k::xlDisplayDrawingObjects __fastcall Get_DisplayDrawingObjects(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayDrawingObjects(lcid/*[in]*/);
  }

  void __fastcall Set_DisplayDrawingObjects(long lcid/*[in]*/, 
                                            Excel_2k::xlDisplayDrawingObjects RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayDrawingObjects(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::XlFileFormat __fastcall Get_FileFormat(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FileFormat(lcid/*[in]*/);
  }

  BSTR __fastcall Get_FullName(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FullName(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasMailer(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasMailer(lcid/*[in]*/);
  }

  void __fastcall Set_HasMailer(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasMailer(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasPassword(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasPassword(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasRoutingSlip(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasRoutingSlip(lcid/*[in]*/);
  }

  void __fastcall Set_HasRoutingSlip(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasRoutingSlip(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_IsAddin(void)
  {
    return GetDefaultInterface()->get_IsAddin();
  }

  void __fastcall Set_IsAddin(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_IsAddin(RHS/*[in]*/);
  }

  BSTR __fastcall Get_Keywords(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Keywords(lcid/*[in]*/);
  }

  void __fastcall Set_Keywords(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Keywords(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::MailerPtr __fastcall Get_Mailer(void)
  {
    return GetDefaultInterface()->get_Mailer();
  }

  Excel_2k::SheetsPtr __fastcall Get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

  TOLEBOOL __fastcall Get_MultiUserEditing(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MultiUserEditing(lcid/*[in]*/);
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  Excel_2k::NamesPtr __fastcall Get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

  BSTR __fastcall Get_OnSave(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSave(lcid/*[in]*/);
  }

  void __fastcall Set_OnSave(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSave(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

  void __fastcall Set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_Path(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Path(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PersonalViewListSettings(void)
  {
    return GetDefaultInterface()->get_PersonalViewListSettings();
  }

  void __fastcall Set_PersonalViewListSettings(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PersonalViewListSettings(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PersonalViewPrintSettings(void)
  {
    return GetDefaultInterface()->get_PersonalViewPrintSettings();
  }

  void __fastcall Set_PersonalViewPrintSettings(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PersonalViewPrintSettings(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PrecisionAsDisplayed(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PrecisionAsDisplayed(lcid/*[in]*/);
  }

  void __fastcall Set_PrecisionAsDisplayed(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PrecisionAsDisplayed(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ProtectStructure(void)
  {
    return GetDefaultInterface()->get_ProtectStructure();
  }

  TOLEBOOL __fastcall Get_ProtectWindows(void)
  {
    return GetDefaultInterface()->get_ProtectWindows();
  }

  TOLEBOOL __fastcall Get_ReadOnly(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ReadOnly(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ReadOnlyRecommended(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ReadOnlyRecommended(lcid/*[in]*/);
  }

  long __fastcall Get_RevisionNumber(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RevisionNumber(lcid/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Routed(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Routed(lcid/*[in]*/);
  }

  Excel_2k::RoutingSlipPtr __fastcall Get_RoutingSlip(void)
  {
    return GetDefaultInterface()->get_RoutingSlip();
  }

  TOLEBOOL __fastcall Get_Saved(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Saved(lcid/*[in]*/);
  }

  void __fastcall Set_Saved(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Saved(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SaveLinkValues(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SaveLinkValues(lcid/*[in]*/);
  }

  void __fastcall Set_SaveLinkValues(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SaveLinkValues(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_Sheets(void)
  {
    return GetDefaultInterface()->get_Sheets();
  }

  TOLEBOOL __fastcall Get_ShowConflictHistory(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ShowConflictHistory(lcid/*[in]*/);
  }

  void __fastcall Set_ShowConflictHistory(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowConflictHistory(lcid/*[in]*/, RHS/*[in]*/);
  }

  Excel_2k::StylesPtr __fastcall Get_Styles(void)
  {
    return GetDefaultInterface()->get_Styles();
  }

  BSTR __fastcall Get_Subject(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Subject(lcid/*[in]*/);
  }

  void __fastcall Set_Subject(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Subject(lcid/*[in]*/, RHS/*[in]*/);
  }

  BSTR __fastcall Get_Title(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Title(lcid/*[in]*/);
  }

  void __fastcall Set_Title(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Title(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_UpdateRemoteReferences(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UpdateRemoteReferences(lcid/*[in]*/);
  }

  void __fastcall Set_UpdateRemoteReferences(long lcid/*[in]*/, TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UpdateRemoteReferences(lcid/*[in]*/, RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

  void __fastcall Set_UserControl(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(RHS/*[in]*/);
  }

  TVariant __fastcall Get_UserStatus(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UserStatus(lcid/*[in]*/);
  }

  Excel_2k::CustomViewsPtr __fastcall Get_CustomViews(void)
  {
    return GetDefaultInterface()->get_CustomViews();
  }

  Excel_2k::WindozPtr __fastcall Get_Windoz(void)
  {
    return GetDefaultInterface()->get_Windoz();
  }

  Excel_2k::SheetsPtr __fastcall Get_Worksheets(void)
  {
    return GetDefaultInterface()->get_Worksheets();
  }

  TOLEBOOL __fastcall Get_WriteReserved(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WriteReserved(lcid/*[in]*/);
  }

  BSTR __fastcall Get_WriteReservedBy(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WriteReservedBy(lcid/*[in]*/);
  }

  Excel_2k::SheetsPtr __fastcall Get_Excel4IntlMacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4IntlMacroSheets();
  }

  Excel_2k::SheetsPtr __fastcall Get_Excel4MacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4MacroSheets();
  }

  TOLEBOOL __fastcall Get_TemplateRemoveExtData(void)
  {
    return GetDefaultInterface()->get_TemplateRemoveExtData();
  }

  void __fastcall Set_TemplateRemoveExtData(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TemplateRemoveExtData(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HighlightChangesOnScreen(void)
  {
    return GetDefaultInterface()->get_HighlightChangesOnScreen();
  }

  void __fastcall Set_HighlightChangesOnScreen(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HighlightChangesOnScreen(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_KeepChangeHistory(void)
  {
    return GetDefaultInterface()->get_KeepChangeHistory();
  }

  void __fastcall Set_KeepChangeHistory(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_KeepChangeHistory(RHS/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ListChangesOnNewSheet(void)
  {
    return GetDefaultInterface()->get_ListChangesOnNewSheet();
  }

  void __fastcall Set_ListChangesOnNewSheet(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ListChangesOnNewSheet(RHS/*[in]*/);
  }

  Vbide_2k::VBProjectPtr __fastcall Get_VBProject(void)
  {
    return GetDefaultInterface()->get_VBProject();
  }

  TOLEBOOL __fastcall Get_IsInplace(void)
  {
    return GetDefaultInterface()->get_IsInplace();
  }

  Excel_2k::PublishObjectsPtr __fastcall Get_PublishObjects(void)
  {
    return GetDefaultInterface()->get_PublishObjects();
  }

  Excel_2k::WebOptionsPtr __fastcall Get_WebOptions(void)
  {
    return GetDefaultInterface()->get_WebOptions();
  }

  Office_2k::HTMLProjectPtr __fastcall Get_HTMLProject(void)
  {
    return GetDefaultInterface()->get_HTMLProject();
  }

  TOLEBOOL __fastcall Get_EnvelopeVisible(void)
  {
    return GetDefaultInterface()->get_EnvelopeVisible();
  }

  void __fastcall Set_EnvelopeVisible(TOLEBOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnvelopeVisible(RHS/*[in]*/);
  }

  long __fastcall Get_CalculationVersion(void)
  {
    return GetDefaultInterface()->get_CalculationVersion();
  }

  TOLEBOOL __fastcall Get_VBASigned(void)
  {
    return GetDefaultInterface()->get_VBASigned();
  }

  /*CoClassWriteMethods*/
  void __fastcall Activate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Activate(lcid/*[in]*/);
  }

  void __fastcall ChangeFileAccess(Excel_2k::XlFileAccess Mode/*[in]*/, 
                                   TVariantInParam WritePassword/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Notify/*[in,opt]*/= TNoParam(), 
                                   long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ChangeFileAccess(Mode/*[in]*/, WritePassword/*[in,opt]*/, 
                                            Notify/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ChangeLink(BSTR Name/*[in]*/, BSTR NewName/*[in]*/, 
                             Excel_2k::XlLinkType Type/*[in,def,opt]*/, 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ChangeLink(Name/*[in]*/, NewName/*[in]*/, Type/*[in,def,opt]*/, 
                                      lcid/*[in]*/);
  }

  void __fastcall Close(TVariantInParam SaveChanges/*[in,opt]*/= TNoParam(), 
                        TVariantInParam Filename/*[in,opt]*/= TNoParam(), 
                        TVariantInParam RouteWorkbook/*[in,opt]*/= TNoParam(), 
                        long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Close(SaveChanges/*[in,opt]*/, Filename/*[in,opt]*/, 
                                 RouteWorkbook/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall DeleteNumberFormat(BSTR NumberFormat/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DeleteNumberFormat(NumberFormat/*[in]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall ExclusiveAccess(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ExclusiveAccess(lcid/*[in]*/);
  }

  void __fastcall ForwardMailer(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ForwardMailer(lcid/*[in]*/);
  }

  TVariant __fastcall LinkInfo(BSTR Name/*[in]*/, Excel_2k::XlLinkInfo LinkInfo/*[in]*/, 
                               TVariantInParam Type/*[in,opt]*/, 
                               TVariantInParam EditionRef/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->LinkInfo(Name/*[in]*/, LinkInfo/*[in]*/, Type/*[in,opt]*/, 
                                           EditionRef/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall LinkSources(TVariantInParam Type/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->LinkSources(Type/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall MergeWorkbook(TVariantInParam Filename/*[in]*/)
  {
    GetDefaultInterface()->MergeWorkbook(Filename/*[in]*/);
  }

  Excel_2k::WINDOWPtr __fastcall NewWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->NewWindow(lcid/*[in]*/);
  }

  void __fastcall OpenLinks(BSTR Name/*[in]*/, TVariantInParam ReadOnly/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Type/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OpenLinks(Name/*[in]*/, ReadOnly/*[in,opt]*/, Type/*[in,opt]*/, 
                                     lcid/*[in]*/);
  }

  Excel_2k::PivotCachesPtr __fastcall PivotCaches(void)
  {
    return GetDefaultInterface()->PivotCaches();
  }

  void __fastcall Post(TVariantInParam DestName/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Post(DestName/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall _PrintOut(TVariantInParam From/*[in,opt]*/= TNoParam(), 
                            TVariantInParam To/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Copies/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Preview/*[in,opt]*/= TNoParam(), 
                            TVariantInParam ActivePrinter/*[in,opt]*/= TNoParam(), 
                            TVariantInParam PrintToFile/*[in,opt]*/= TNoParam(), 
                            TVariantInParam Collate/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->_PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                     Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                     PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintPreview(TVariantInParam EnableChanges/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintPreview(EnableChanges/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Protect(TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                          TVariantInParam Structure/*[in,opt]*/= TNoParam(), 
                          TVariantInParam Windoz/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Protect(Password/*[in,opt]*/, Structure/*[in,opt]*/, Windoz/*[in,opt]*/);
  }

  void __fastcall ProtectSharing(TVariantInParam Filename/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam WriteResPassword/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam CreateBackup/*[in,opt]*/= TNoParam(), 
                                 TVariantInParam SharingPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ProtectSharing(Filename/*[in,opt]*/, Password/*[in,opt]*/, 
                                          WriteResPassword/*[in,opt]*/, 
                                          ReadOnlyRecommended/*[in,opt]*/, CreateBackup/*[in,opt]*/, 
                                          SharingPassword/*[in,opt]*/);
  }

  void __fastcall RefreshAll(void)
  {
    GetDefaultInterface()->RefreshAll();
  }

  void __fastcall Reply(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Reply(lcid/*[in]*/);
  }

  void __fastcall ReplyAll(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ReplyAll(lcid/*[in]*/);
  }

  void __fastcall RemoveUser(long Index/*[in]*/)
  {
    GetDefaultInterface()->RemoveUser(Index/*[in]*/);
  }

  void __fastcall Route(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Route(lcid/*[in]*/);
  }

  void __fastcall RunAutoMacros(Excel_2k::XlRunAutoMacro Which/*[in]*/, 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->RunAutoMacros(Which/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall Save(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Save(lcid/*[in]*/);
  }

  void __fastcall SaveAs(TVariantInParam Filename/*[in,opt]*/, 
                         TVariantInParam FileFormat/*[in,opt]*/, 
                         TVariantInParam Password/*[in,opt]*/, 
                         TVariantInParam WriteResPassword/*[in,opt]*/, 
                         TVariantInParam ReadOnlyRecommended/*[in,opt]*/, 
                         TVariantInParam CreateBackup/*[in,opt]*/, 
                         Excel_2k::XlSaveAsAccessMode AccessMode/*[in,def,opt]*/, 
                         TVariantInParam ConflictResolution/*[in,opt]*/, 
                         TVariantInParam AddToMru/*[in,opt]*/, 
                         TVariantInParam TextCodepage/*[in,opt]*/, 
                         TVariantInParam TextVisualLayout/*[in,opt]*/, long lcid/*[in]*/)
  {
    GetDefaultInterface()->SaveAs(Filename/*[in,opt]*/, FileFormat/*[in,opt]*/, Password/*[in,opt]*/, 
                                  WriteResPassword/*[in,opt]*/, ReadOnlyRecommended/*[in,opt]*/, 
                                  CreateBackup/*[in,opt]*/, AccessMode/*[in,def,opt]*/, 
                                  ConflictResolution/*[in,opt]*/, AddToMru/*[in,opt]*/, 
                                  TextCodepage/*[in,opt]*/, TextVisualLayout/*[in,opt]*/, 
                                  lcid/*[in]*/);
  }

  void __fastcall SaveCopyAs(TVariantInParam Filename/*[in,opt]*/= TNoParam(), 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveCopyAs(Filename/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendMail(TVariantInParam Recipients/*[in]*/, 
                           TVariantInParam Subject/*[in,opt]*/= TNoParam(), 
                           TVariantInParam ReturnReceipt/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SendMail(Recipients/*[in]*/, Subject/*[in,opt]*/, 
                                    ReturnReceipt/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendMailer(TVariantInParam FileFormat/*[in,opt]*/, 
                             Excel_2k::XlPriority Priority/*[in,def,opt]*/, long lcid/*[in]*/)
  {
    GetDefaultInterface()->SendMailer(FileFormat/*[in,opt]*/, Priority/*[in,def,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetLinkOnData(BSTR Name/*[in]*/, TVariantInParam Procedure/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SetLinkOnData(Name/*[in]*/, Procedure/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Unprotect(TVariantInParam Password/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall UnprotectSharing(TVariantInParam SharingPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->UnprotectSharing(SharingPassword/*[in,opt]*/);
  }

  void __fastcall UpdateFromFile(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->UpdateFromFile(lcid/*[in]*/);
  }

  void __fastcall UpdateLink(TVariantInParam Name/*[in,opt]*/= TNoParam(), 
                             TVariantInParam Type/*[in,opt]*/= TNoParam(), 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->UpdateLink(Name/*[in,opt]*/, Type/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall HighlightChangesOptions(TVariantInParam When/*[in,opt]*/= TNoParam(), 
                                          TVariantInParam Who/*[in,opt]*/= TNoParam(), 
                                          TVariantInParam Where/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->HighlightChangesOptions(When/*[in,opt]*/, Who/*[in,opt]*/, 
                                                   Where/*[in,opt]*/);
  }

  void __fastcall PurgeChangeHistoryNow(long Days/*[in]*/, 
                                        TVariantInParam SharingPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PurgeChangeHistoryNow(Days/*[in]*/, SharingPassword/*[in,opt]*/);
  }

  void __fastcall AcceptAllChanges(TVariantInParam When/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Who/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Where/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AcceptAllChanges(When/*[in,opt]*/, Who/*[in,opt]*/, Where/*[in,opt]*/);
  }

  void __fastcall RejectAllChanges(TVariantInParam When/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Who/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Where/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RejectAllChanges(When/*[in,opt]*/, Who/*[in,opt]*/, Where/*[in,opt]*/);
  }

  void __fastcall PivotTableWizard(TVariantInParam SourceType/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam SourceData/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam TableDestination/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam TableName/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam RowGrand/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam ColumnGrand/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam SaveData/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam HasAutoFormat/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam AutoPage/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Reserved/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam BackgroundQuery/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam OptimizeCache/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam PageFieldOrder/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam PageFieldWrapCount/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam ReadData/*[in,opt]*/= TNoParam(), 
                                   TVariantInParam Connection/*[in,opt]*/= TNoParam(), 
                                   long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PivotTableWizard(SourceType/*[in,opt]*/, SourceData/*[in,opt]*/, 
                                            TableDestination/*[in,opt]*/, TableName/*[in,opt]*/, 
                                            RowGrand/*[in,opt]*/, ColumnGrand/*[in,opt]*/, 
                                            SaveData/*[in,opt]*/, HasAutoFormat/*[in,opt]*/, 
                                            AutoPage/*[in,opt]*/, Reserved/*[in,opt]*/, 
                                            BackgroundQuery/*[in,opt]*/, OptimizeCache/*[in,opt]*/, 
                                            PageFieldOrder/*[in,opt]*/, 
                                            PageFieldWrapCount/*[in,opt]*/, ReadData/*[in,opt]*/, 
                                            Connection/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ResetColors(void)
  {
    GetDefaultInterface()->ResetColors();
  }

  void __fastcall FollowHyperlink(BSTR Address/*[in]*/, 
                                  TVariantInParam SubAddress/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam NewWindow/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam AddHistory/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam ExtraInfo/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam Method/*[in,opt]*/= TNoParam(), 
                                  TVariantInParam HeaderInfo/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->FollowHyperlink(Address/*[in]*/, SubAddress/*[in,opt]*/, 
                                           NewWindow/*[in,opt]*/, AddHistory/*[in,opt]*/, 
                                           ExtraInfo/*[in,opt]*/, Method/*[in,opt]*/, 
                                           HeaderInfo/*[in,opt]*/);
  }

  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall PrintOut(TVariantInParam From/*[in,opt]*/= TNoParam(), 
                           TVariantInParam To/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Copies/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Preview/*[in,opt]*/= TNoParam(), 
                           TVariantInParam ActivePrinter/*[in,opt]*/= TNoParam(), 
                           TVariantInParam PrintToFile/*[in,opt]*/= TNoParam(), 
                           TVariantInParam Collate/*[in,opt]*/= TNoParam(), 
                           TVariantInParam PrToFileName/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                    Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                    PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, 
                                    PrToFileName/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall WebPagePreview(void)
  {
    GetDefaultInterface()->WebPagePreview();
  }

  void __fastcall ReloadAs(Office_2k::MsoEncoding Encoding/*[in]*/)
  {
    GetDefaultInterface()->ReloadAs(Encoding/*[in]*/);
  }

  void __fastcall Dummy1(long unused/*[in]*/)
  {
    GetDefaultInterface()->Dummy1(unused/*[in]*/);
  }

  void __fastcall sblt(BSTR s/*[in]*/)
  {
    GetDefaultInterface()->sblt(s/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property Excel_2k::ExcelChartPtr ActiveChart={ read=Get_ActiveChart }; // 0, Yes
  __property LPDISPATCH ActiveSheet={ read=Get_ActiveSheet }; // 0, No
  __property BSTR Author[long lcid]={ read=Get_Author, write=Set_Author }; // 0, No
  __property LPDISPATCH BuiltinDocumentProperties={ read=Get_BuiltinDocumentProperties }; // 0, No
  __property Excel_2k::SheetsPtr Charts={ read=Get_Charts }; // 0, Yes
  __property BSTR CodeName={ read=Get_CodeName }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Colors[TVariant Index][long lcid]={ read=Get_Colors, write=Set_Colors }; // 0, No
  */
  __property Office_2k::CommandBarsPtr CommandBars={ read=Get_CommandBars }; // 0, Yes
  __property BSTR Comments[long lcid]={ read=Get_Comments, write=Set_Comments }; // 0, No
  __property LPDISPATCH Container={ read=Get_Container }; // 0, No
  __property TOLEBOOL CreateBackup[long lcid]={ read=Get_CreateBackup }; // 0, No
  __property LPDISPATCH CustomDocumentProperties={ read=Get_CustomDocumentProperties }; // 0, No
  __property TOLEBOOL Date1904[long lcid]={ read=Get_Date1904, write=Set_Date1904 }; // 0, No
  __property Excel_2k::SheetsPtr DialogSheets={ read=Get_DialogSheets }; // 0, Yes
  __property Excel_2k::xlDisplayDrawingObjects DisplayDrawingObjects[long lcid]={ read=Get_DisplayDrawingObjects, write=Set_DisplayDrawingObjects }; // 0, No
  __property Excel_2k::XlFileFormat FileFormat[long lcid]={ read=Get_FileFormat }; // 0, No
  __property BSTR FullName[long lcid]={ read=Get_FullName }; // 0, No
  __property TOLEBOOL HasMailer[long lcid]={ read=Get_HasMailer, write=Set_HasMailer }; // 0, No
  __property TOLEBOOL HasPassword[long lcid]={ read=Get_HasPassword }; // 0, No
  __property TOLEBOOL HasRoutingSlip[long lcid]={ read=Get_HasRoutingSlip, write=Set_HasRoutingSlip }; // 0, No
  __property BSTR Keywords[long lcid]={ read=Get_Keywords, write=Set_Keywords }; // 0, No
  __property Excel_2k::MailerPtr Mailer={ read=Get_Mailer }; // 0, Yes
  __property Excel_2k::SheetsPtr Modules={ read=Get_Modules }; // 0, Yes
  __property TOLEBOOL MultiUserEditing[long lcid]={ read=Get_MultiUserEditing }; // 0, No
  __property BSTR Name={ read=Get_Name }; // 0, No
  __property Excel_2k::NamesPtr Names={ read=Get_Names }; // 0, Yes
  __property BSTR OnSave[long lcid]={ read=Get_OnSave, write=Set_OnSave }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=Get_OnSheetActivate, write=Set_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=Get_OnSheetDeactivate, write=Set_OnSheetDeactivate }; // 0, No
  __property BSTR Path[long lcid]={ read=Get_Path }; // 0, No
  __property TOLEBOOL PrecisionAsDisplayed[long lcid]={ read=Get_PrecisionAsDisplayed, write=Set_PrecisionAsDisplayed }; // 0, No
  __property TOLEBOOL ProtectStructure={ read=Get_ProtectStructure }; // 0, No
  __property TOLEBOOL ProtectWindows={ read=Get_ProtectWindows }; // 0, No
  __property TOLEBOOL ReadOnly[long lcid]={ read=Get_ReadOnly }; // 0, No
  __property TOLEBOOL ReadOnlyRecommended[long lcid]={ read=Get_ReadOnlyRecommended }; // 0, No
  __property long RevisionNumber[long lcid]={ read=Get_RevisionNumber }; // 0, No
  __property TOLEBOOL Routed[long lcid]={ read=Get_Routed }; // 0, No
  __property Excel_2k::RoutingSlipPtr RoutingSlip={ read=Get_RoutingSlip }; // 0, Yes
  __property TOLEBOOL Saved[long lcid]={ read=Get_Saved, write=Set_Saved }; // 0, No
  __property TOLEBOOL SaveLinkValues[long lcid]={ read=Get_SaveLinkValues, write=Set_SaveLinkValues }; // 0, No
  __property Excel_2k::SheetsPtr Sheets={ read=Get_Sheets }; // 0, Yes
  __property TOLEBOOL ShowConflictHistory[long lcid]={ read=Get_ShowConflictHistory, write=Set_ShowConflictHistory }; // 0, No
  __property Excel_2k::StylesPtr Styles={ read=Get_Styles }; // 0, Yes
  __property BSTR Subject[long lcid]={ read=Get_Subject, write=Set_Subject }; // 0, No
  __property BSTR Title[long lcid]={ read=Get_Title, write=Set_Title }; // 0, No
  __property TOLEBOOL UpdateRemoteReferences[long lcid]={ read=Get_UpdateRemoteReferences, write=Set_UpdateRemoteReferences }; // 0, No
  __property TOLEBOOL UserControl={ read=Get_UserControl, write=Set_UserControl }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant UserStatus[long lcid]={ read=Get_UserStatus }; // 0, No
  */
  __property Excel_2k::CustomViewsPtr CustomViews={ read=Get_CustomViews }; // 0, Yes
  __property Excel_2k::WindozPtr Windoz={ read=Get_Windoz }; // 0, Yes
  __property Excel_2k::SheetsPtr Worksheets={ read=Get_Worksheets }; // 0, Yes
  __property TOLEBOOL WriteReserved[long lcid]={ read=Get_WriteReserved }; // 0, No
  __property BSTR WriteReservedBy[long lcid]={ read=Get_WriteReservedBy }; // 0, No
  __property Excel_2k::SheetsPtr Excel4IntlMacroSheets={ read=Get_Excel4IntlMacroSheets }; // 0, Yes
  __property Excel_2k::SheetsPtr Excel4MacroSheets={ read=Get_Excel4MacroSheets }; // 0, Yes
  __property Vbide_2k::VBProjectPtr VBProject={ read=Get_VBProject }; // 0, Yes
  __property TOLEBOOL IsInplace={ read=Get_IsInplace }; // 0, No
  __property Excel_2k::PublishObjectsPtr PublishObjects={ read=Get_PublishObjects }; // 0, Yes
  __property Excel_2k::WebOptionsPtr WebOptions={ read=Get_WebOptions }; // 0, Yes
  __property Office_2k::HTMLProjectPtr HTMLProject={ read=Get_HTMLProject }; // 0, Yes
  __property long CalculationVersion={ read=Get_CalculationVersion }; // 0, No
  __property TOLEBOOL VBASigned={ read=Get_VBASigned }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL AcceptLabelsInFormulas={ read=Get_AcceptLabelsInFormulas, write=Set_AcceptLabelsInFormulas, stored=false }; // 0, No
  __property long AutoUpdateFrequency={ read=Get_AutoUpdateFrequency, write=Set_AutoUpdateFrequency, stored=false }; // 0, No
  __property TOLEBOOL AutoUpdateSaveChanges={ read=Get_AutoUpdateSaveChanges, write=Set_AutoUpdateSaveChanges, stored=false }; // 0, No
  __property long ChangeHistoryDuration={ read=Get_ChangeHistoryDuration, write=Set_ChangeHistoryDuration, stored=false }; // 0, No
  __property BSTR _CodeName={ read=Get__CodeName, write=Set__CodeName, stored=false }; // 0, No
  __property Excel_2k::XlSaveConflictResolution ConflictResolution={ read=Get_ConflictResolution, write=Set_ConflictResolution, stored=false }; // 0, No
  __property TOLEBOOL IsAddin={ read=Get_IsAddin, write=Set_IsAddin, stored=false }; // 0, No
  __property TOLEBOOL PersonalViewListSettings={ read=Get_PersonalViewListSettings, write=Set_PersonalViewListSettings, stored=false }; // 0, No
  __property TOLEBOOL PersonalViewPrintSettings={ read=Get_PersonalViewPrintSettings, write=Set_PersonalViewPrintSettings, stored=false }; // 0, No
  __property TOLEBOOL TemplateRemoveExtData={ read=Get_TemplateRemoveExtData, write=Set_TemplateRemoveExtData, stored=false }; // 0, No
  __property TOLEBOOL HighlightChangesOnScreen={ read=Get_HighlightChangesOnScreen, write=Set_HighlightChangesOnScreen, stored=false }; // 0, No
  __property TOLEBOOL KeepChangeHistory={ read=Get_KeepChangeHistory, write=Set_KeepChangeHistory, stored=false }; // 0, No
  __property TOLEBOOL ListChangesOnNewSheet={ read=Get_ListChangesOnNewSheet, write=Set_ListChangesOnNewSheet, stored=false }; // 0, No
  __property TOLEBOOL EnvelopeVisible={ read=Get_EnvelopeVisible, write=Set_EnvelopeVisible, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnOpen;
  TNotifyEvent                   FOnActivate;
  TNotifyEvent                   FOnDeactivate;
  TExcelWorkbookBeforeClose      FOnBeforeClose;
  TExcelWorkbookBeforeSave       FOnBeforeSave;
  TExcelWorkbookBeforePrint      FOnBeforePrint;
  TExcelWorkbookNewSheet         FOnNewSheet;
  TNotifyEvent                   FOnAddinInstall;
  TNotifyEvent                   FOnAddinUninstall;
  TExcelWorkbookWindowResize     FOnWindowResize;
  TExcelWorkbookWindowActivate   FOnWindowActivate;
  TExcelWorkbookWindowDeactivate FOnWindowDeactivate;
  TExcelWorkbookSheetSelectionChange FOnSheetSelectionChange;
  TExcelWorkbookSheetBeforeDoubleClick FOnSheetBeforeDoubleClick;
  TExcelWorkbookSheetBeforeRightClick FOnSheetBeforeRightClick;
  TExcelWorkbookSheetActivate    FOnSheetActivate1;
  TExcelWorkbookSheetDeactivate  FOnSheetDeactivate1;
  TExcelWorkbookSheetCalculate   FOnSheetCalculate;
  TExcelWorkbookSheetChange      FOnSheetChange;
  TExcelWorkbookSheetFollowHyperlink FOnSheetFollowHyperlink;
__published:
  __property TNotifyEvent OnOpen={ read=FOnOpen, write=FOnOpen };
  __property TNotifyEvent OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TNotifyEvent OnDeactivate={ read=FOnDeactivate, write=FOnDeactivate };
  __property TExcelWorkbookBeforeClose OnBeforeClose={ read=FOnBeforeClose, write=FOnBeforeClose };
  __property TExcelWorkbookBeforeSave OnBeforeSave={ read=FOnBeforeSave, write=FOnBeforeSave };
  __property TExcelWorkbookBeforePrint OnBeforePrint={ read=FOnBeforePrint, write=FOnBeforePrint };
  __property TExcelWorkbookNewSheet OnNewSheet={ read=FOnNewSheet, write=FOnNewSheet };
  __property TNotifyEvent OnAddinInstall={ read=FOnAddinInstall, write=FOnAddinInstall };
  __property TNotifyEvent OnAddinUninstall={ read=FOnAddinUninstall, write=FOnAddinUninstall };
  __property TExcelWorkbookWindowResize OnWindowResize={ read=FOnWindowResize, write=FOnWindowResize };
  __property TExcelWorkbookWindowActivate OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TExcelWorkbookWindowDeactivate OnWindowDeactivate={ read=FOnWindowDeactivate, write=FOnWindowDeactivate };
  __property TExcelWorkbookSheetSelectionChange OnSheetSelectionChange={ read=FOnSheetSelectionChange, write=FOnSheetSelectionChange };
  __property TExcelWorkbookSheetBeforeDoubleClick OnSheetBeforeDoubleClick={ read=FOnSheetBeforeDoubleClick, write=FOnSheetBeforeDoubleClick };
  __property TExcelWorkbookSheetBeforeRightClick OnSheetBeforeRightClick={ read=FOnSheetBeforeRightClick, write=FOnSheetBeforeRightClick };
  __property TExcelWorkbookSheetActivate OnSheetActivate1={ read=FOnSheetActivate1, write=FOnSheetActivate1 };
  __property TExcelWorkbookSheetDeactivate OnSheetDeactivate1={ read=FOnSheetDeactivate1, write=FOnSheetDeactivate1 };
  __property TExcelWorkbookSheetCalculate OnSheetCalculate={ read=FOnSheetCalculate, write=FOnSheetCalculate };
  __property TExcelWorkbookSheetChange OnSheetChange={ read=FOnSheetChange, write=FOnSheetChange };
  __property TExcelWorkbookSheetFollowHyperlink OnSheetFollowHyperlink={ read=FOnSheetFollowHyperlink, write=FOnSheetFollowHyperlink };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelOLEObject
// Help String      : 
// Default Interface: _OLEObject
// Def. Intf. Object: _OLEObjectPtr
// Def. Intf. DISP? : Yes
// Event   Interface: OLEObjectEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TExcelOLEObject : public Oleserver::TOleServer
{
  _OLEObjectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelOLEObject(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _OLEObjectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_OLEObjectPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Excel_2k::ExcelApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  Excel_2k::XlCreator __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  Excel_2k::RangePtr __fastcall Get_BottomRightCell(void)
  {
    return GetDefaultInterface()->get_BottomRightCell();
  }

  TOLEBOOL __fastcall Get_Enabled(void)
  {
    return GetDefaultInterface()->get_Enabled();
  }

  void __fastcall Set_Enabled(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Enabled(Param1/*[in]*/);
  }

  double __fastcall Get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

  void __fastcall Set_Height(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Height(Param1/*[in]*/);
  }

  long __fastcall Get_Index(void)
  {
    return GetDefaultInterface()->get_Index();
  }

  double __fastcall Get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

  void __fastcall Set_Left(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Left(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Locked(void)
  {
    return GetDefaultInterface()->get_Locked();
  }

  void __fastcall Set_Locked(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Locked(Param1/*[in]*/);
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  void __fastcall Set_Name(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Name(Param1/*[in]*/);
  }

  BSTR __fastcall Get_OnAction(void)
  {
    return GetDefaultInterface()->get_OnAction();
  }

  void __fastcall Set_OnAction(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_OnAction(Param1/*[in]*/);
  }

  TVariant __fastcall Get_Placement(void)
  {
    return GetDefaultInterface()->get_Placement();
  }

  void __fastcall Set_Placement(TVariantInParam Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Placement(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PrintObject(void)
  {
    return GetDefaultInterface()->get_PrintObject();
  }

  void __fastcall Set_PrintObject(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_PrintObject(Param1/*[in]*/);
  }

  double __fastcall Get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

  void __fastcall Set_Top(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Top(Param1/*[in]*/);
  }

  Excel_2k::RangePtr __fastcall Get_TopLeftCell(void)
  {
    return GetDefaultInterface()->get_TopLeftCell();
  }

  TOLEBOOL __fastcall Get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

  void __fastcall Set_Visible(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(Param1/*[in]*/);
  }

  double __fastcall Get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

  void __fastcall Set_Width(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Width(Param1/*[in]*/);
  }

  long __fastcall Get_ZOrder(void)
  {
    return GetDefaultInterface()->get_ZOrder();
  }

  Excel_2k::ShapeRangePtr __fastcall Get_ShapeRange(void)
  {
    return GetDefaultInterface()->get_ShapeRange();
  }

  Excel_2k::BorderPtr __fastcall Get_Border(void)
  {
    return GetDefaultInterface()->get_Border();
  }

  Excel_2k::InteriorPtr __fastcall Get_Interior(void)
  {
    return GetDefaultInterface()->get_Interior();
  }

  TOLEBOOL __fastcall Get_Shadow(void)
  {
    return GetDefaultInterface()->get_Shadow();
  }

  void __fastcall Set_Shadow(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Shadow(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AutoLoad(void)
  {
    return GetDefaultInterface()->get_AutoLoad();
  }

  void __fastcall Set_AutoLoad(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AutoLoad(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_AutoUpdate(void)
  {
    return GetDefaultInterface()->get_AutoUpdate();
  }

  void __fastcall Set_AutoUpdate(TOLEBOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AutoUpdate(Param1/*[in]*/);
  }

  LPDISPATCH __fastcall Get_Object(void)
  {
    return GetDefaultInterface()->get_Object();
  }

  TVariant __fastcall Get_OLEType(void)
  {
    return GetDefaultInterface()->get_OLEType();
  }

  BSTR __fastcall Get_SourceName(void)
  {
    return GetDefaultInterface()->get_SourceName();
  }

  void __fastcall Set_SourceName(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_SourceName(Param1/*[in]*/);
  }

  BSTR __fastcall Get_LinkedCell(void)
  {
    return GetDefaultInterface()->get_LinkedCell();
  }

  void __fastcall Set_LinkedCell(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_LinkedCell(Param1/*[in]*/);
  }

  BSTR __fastcall Get_ListFillRange(void)
  {
    return GetDefaultInterface()->get_ListFillRange();
  }

  void __fastcall Set_ListFillRange(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_ListFillRange(Param1/*[in]*/);
  }

  BSTR __fastcall Get_ProgId(void)
  {
    return GetDefaultInterface()->get_ProgId();
  }

  BSTR __fastcall Get_AltHTML(void)
  {
    return GetDefaultInterface()->get_AltHTML();
  }

  void __fastcall Set_AltHTML(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AltHTML(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  TVariant __fastcall BringToFront(void)
  {
    return GetDefaultInterface()->BringToFront();
  }

  TVariant __fastcall Copy(void)
  {
    return GetDefaultInterface()->Copy();
  }

  TVariant __fastcall CopyPicture(Excel_2k::XlPictureAppearance Appearance/*[in,def,opt]*/, 
                                  Excel_2k::XlCopyPictureFormat Format/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->CopyPicture(Appearance/*[in,def,opt]*/, Format/*[in,def,opt]*/);
  }

  TVariant __fastcall Cut(void)
  {
    return GetDefaultInterface()->Cut();
  }

  TVariant __fastcall Delete(void)
  {
    return GetDefaultInterface()->Delete();
  }

  LPDISPATCH __fastcall Duplicate(void)
  {
    return GetDefaultInterface()->Duplicate();
  }

  TVariant __fastcall Select(TVariantInParam Replace/*[in,opt]*/= TNoParam())
  {
    return GetDefaultInterface()->Select(Replace/*[in,opt]*/);
  }

  TVariant __fastcall SendToBack(void)
  {
    return GetDefaultInterface()->SendToBack();
  }

  TVariant __fastcall Activate(void)
  {
    return GetDefaultInterface()->Activate();
  }

  TVariant __fastcall _Update(void)
  {
    return GetDefaultInterface()->_Update();
  }

  TVariant __fastcall Verb(Excel_2k::XlOLEVerb Verb/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->Verb(Verb/*[in,def,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_2k::ExcelApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property Excel_2k::XlCreator Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property Excel_2k::RangePtr BottomRightCell={ read=Get_BottomRightCell }; // 0, Yes
  __property long Index={ read=Get_Index }; // 0, No
  __property BSTR OnAction={ read=Get_OnAction, write=Set_OnAction }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Placement={ read=Get_Placement, write=Set_Placement }; // 0, No
  */
  __property Excel_2k::RangePtr TopLeftCell={ read=Get_TopLeftCell }; // 0, Yes
  __property long ZOrder={ read=Get_ZOrder }; // 0, No
  __property Excel_2k::ShapeRangePtr ShapeRange={ read=Get_ShapeRange }; // 0, Yes
  __property Excel_2k::BorderPtr Border={ read=Get_Border }; // 0, Yes
  __property Excel_2k::InteriorPtr Interior={ read=Get_Interior }; // 0, Yes
  __property LPDISPATCH Object={ read=Get_Object }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant OLEType={ read=Get_OLEType }; // 0, No
  */
  __property BSTR ProgId={ read=Get_ProgId }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL Enabled={ read=Get_Enabled, write=Set_Enabled, stored=false }; // 0, No
  __property double Height={ read=Get_Height, write=Set_Height, stored=false }; // 0, No
  __property double Left={ read=Get_Left, write=Set_Left, stored=false }; // 0, No
  __property TOLEBOOL Locked={ read=Get_Locked, write=Set_Locked, stored=false }; // 0, No
  __property BSTR Name={ read=Get_Name, write=Set_Name, stored=false }; // 0, No
  __property TOLEBOOL PrintObject={ read=Get_PrintObject, write=Set_PrintObject, stored=false }; // 0, No
  __property double Top={ read=Get_Top, write=Set_Top, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=Get_Visible, write=Set_Visible, stored=false }; // 0, No
  __property double Width={ read=Get_Width, write=Set_Width, stored=false }; // 0, No
  __property TOLEBOOL Shadow={ read=Get_Shadow, write=Set_Shadow, stored=false }; // 0, No
  __property TOLEBOOL AutoLoad={ read=Get_AutoLoad, write=Set_AutoLoad, stored=false }; // 0, No
  __property TOLEBOOL AutoUpdate={ read=Get_AutoUpdate, write=Set_AutoUpdate, stored=false }; // 0, No
  __property BSTR SourceName={ read=Get_SourceName, write=Set_SourceName, stored=false }; // 0, No
  __property BSTR LinkedCell={ read=Get_LinkedCell, write=Set_LinkedCell, stored=false }; // 0, No
  __property BSTR ListFillRange={ read=Get_ListFillRange, write=Set_ListFillRange, stored=false }; // 0, No
  __property BSTR AltHTML={ read=Get_AltHTML, write=Set_AltHTML, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnGotFocus;
  TNotifyEvent                   FOnLostFocus;
__published:
  __property TNotifyEvent OnGotFocus={ read=FOnGotFocus, write=FOnGotFocus };
  __property TNotifyEvent OnLostFocus={ read=FOnLostFocus, write=FOnLostFocus };
};

};     // namespace Excel_2k

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Excel_2k;
#endif

#pragma option pop

#endif // __Excel_2K_SRVR_h__

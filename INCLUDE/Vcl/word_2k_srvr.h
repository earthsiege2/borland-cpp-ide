// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.0.1.1  $
// File generated on 1/24/2000 09:45:30 AM from Type Library described below.

// ************************************************************************ //
// Type Lib: d:\tlbgen\rampage\typelib\TypeLibraries\MSWORD9.olb (1)
// IID\LCID: {00020905-0000-0000-C000-000000000046}\0
// Helpfile: d:\tlbgen\rampage\typelib\TypeLibraries\VBAWRD9.CHM
// DepndLst: 
//   (1) v2.0 stdole, (D:\WINNT\System32\stdole2.tlb)
//   (2) v2.1 Office, (D:\msof2k\Office\mso9.dll)
//   (3) v5.3 VBIDE, (D:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
//   (4) v4.0 StdVCL, (D:\tlbgen\rampage\typelib\typelibraries\testing\stdvcl40.tlb)
// ************************************************************************ //
#ifndef   __Word_2K_SRVR_h__
#define   __Word_2K_SRVR_h__

#pragma option push -b -w-inl

#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0500)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "Office_2K.h"
#include "VBIDE_2K.h"

#include "Word_2K.h"
namespace Word_2k
{

// *********************************************************************//
// HelpString: Microsoft Word 9.0 Object Library
// Version:    8.1
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordGlobal
// Help String      : 
// Default Interface: _Global
// Def. Intf. Object: _GlobalPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (11) AppObject CanCreate Predeclid
// *********************************************************************//
class PACKAGE TWordGlobal : public Oleserver::TOleServer
{
  _GlobalPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordGlobal(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _GlobalPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_GlobalPtr intf);


  /*CoClassWriteArrayPropMethods*/
  Word_2k::WordApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  long __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  Word_2k::DocumentsPtr __fastcall Get_Documents(void)
  {
    return GetDefaultInterface()->get_Documents();
  }

  Word_2k::WindozPtr __fastcall Get_Windoz(void)
  {
    return GetDefaultInterface()->get_Windoz();
  }

  Word_2k::WordDocumentPtr __fastcall Get_ActiveDocument(void)
  {
    return GetDefaultInterface()->get_ActiveDocument();
  }

  Word_2k::WINDOWPtr __fastcall Get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

  Word_2k::SelectionPtr __fastcall Get_Selection(void)
  {
    return GetDefaultInterface()->get_Selection();
  }

  LPDISPATCH __fastcall Get_WordBasic(void)
  {
    return GetDefaultInterface()->get_WordBasic();
  }

  TOLEBOOL __fastcall Get_PrintPreview(void)
  {
    return GetDefaultInterface()->get_PrintPreview();
  }

  void __fastcall Set_PrintPreview(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintPreview(prop/*[in]*/);
  }

  Word_2k::RecentFilesPtr __fastcall Get_RecentFiles(void)
  {
    return GetDefaultInterface()->get_RecentFiles();
  }

  Word_2k::TemplatePtr __fastcall Get_NormalTemplate(void)
  {
    return GetDefaultInterface()->get_NormalTemplate();
  }

  Word_2k::SYSTEMPtr __fastcall Get_System(void)
  {
    return GetDefaultInterface()->get_System();
  }

  Word_2k::AutoCorrectPtr __fastcall Get_AutoCorrect(void)
  {
    return GetDefaultInterface()->get_AutoCorrect();
  }

  Word_2k::FontNamesPtr __fastcall Get_FontNames(void)
  {
    return GetDefaultInterface()->get_FontNames();
  }

  Word_2k::FontNamesPtr __fastcall Get_LandscapeFontNames(void)
  {
    return GetDefaultInterface()->get_LandscapeFontNames();
  }

  Word_2k::FontNamesPtr __fastcall Get_PortraitFontNames(void)
  {
    return GetDefaultInterface()->get_PortraitFontNames();
  }

  Word_2k::LanguagesPtr __fastcall Get_Languages(void)
  {
    return GetDefaultInterface()->get_Languages();
  }

  Office_2k::AssistantPtr __fastcall Get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

  Word_2k::FileConvertersPtr __fastcall Get_FileConverters(void)
  {
    return GetDefaultInterface()->get_FileConverters();
  }

  Word_2k::DialogsPtr __fastcall Get_Dialogs(void)
  {
    return GetDefaultInterface()->get_Dialogs();
  }

  Word_2k::CaptionLabelsPtr __fastcall Get_CaptionLabels(void)
  {
    return GetDefaultInterface()->get_CaptionLabels();
  }

  Word_2k::AutoCaptionsPtr __fastcall Get_AutoCaptions(void)
  {
    return GetDefaultInterface()->get_AutoCaptions();
  }

  Word_2k::AddInsPtr __fastcall Get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

  Word_2k::TasksPtr __fastcall Get_Tasks(void)
  {
    return GetDefaultInterface()->get_Tasks();
  }

  LPDISPATCH __fastcall Get_MacroContainer(void)
  {
    return GetDefaultInterface()->get_MacroContainer();
  }

  Office_2k::CommandBarsPtr __fastcall Get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

  Word_2k::SynonymInfoPtr __fastcall Get_SynonymInfo(BSTR Word/*[in]*/, 
                                                     TVariant* LanguageID/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_SynonymInfo(Word/*[in]*/, LanguageID/*[in,opt]*/);
  }

  Vbide_2k::VBEPtr __fastcall Get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

  Word_2k::ListGalleriesPtr __fastcall Get_ListGalleries(void)
  {
    return GetDefaultInterface()->get_ListGalleries();
  }

  BSTR __fastcall Get_ActivePrinter(void)
  {
    return GetDefaultInterface()->get_ActivePrinter();
  }

  void __fastcall Set_ActivePrinter(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(prop/*[in]*/);
  }

  Word_2k::TemplatesPtr __fastcall Get_Templates(void)
  {
    return GetDefaultInterface()->get_Templates();
  }

  LPDISPATCH __fastcall Get_CustomizationContext(void)
  {
    return GetDefaultInterface()->get_CustomizationContext();
  }

  void __fastcall Set_CustomizationContext(LPDISPATCH prop/*[in]*/)
  {
    GetDefaultInterface()->set_CustomizationContext(prop/*[in]*/);
  }

  Word_2k::KeyBindingsPtr __fastcall Get_KeyBindings(void)
  {
    return GetDefaultInterface()->get_KeyBindings();
  }

  Word_2k::KeysBoundToPtr __fastcall Get_KeysBoundTo(Word_2k::WdKeyCategory KeyCategory/*[in]*/, 
                                                     BSTR Command/*[in]*/, 
                                                     TVariant* CommandParameter/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_KeysBoundTo(KeyCategory/*[in]*/, Command/*[in]*/, 
                                                  CommandParameter/*[in,opt]*/);
  }

  Word_2k::KeyBindingPtr __fastcall Get_FindKey(long KeyCode/*[in]*/, TVariant* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_FindKey(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

  Word_2k::OptionsPtr __fastcall Get_Options(void)
  {
    return GetDefaultInterface()->get_Options();
  }

  Word_2k::DictionariesPtr __fastcall Get_CustomDictionaries(void)
  {
    return GetDefaultInterface()->get_CustomDictionaries();
  }

  void __fastcall Set_StatusBar(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowVisualBasicEditor(void)
  {
    return GetDefaultInterface()->get_ShowVisualBasicEditor();
  }

  void __fastcall Set_ShowVisualBasicEditor(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowVisualBasicEditor(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_IsObjectValid(LPDISPATCH Object/*[in]*/)
  {
    return GetDefaultInterface()->get_IsObjectValid(Object/*[in]*/);
  }

  Word_2k::HangulHanjaConversionDictionariesPtr __fastcall Get_HangulHanjaDictionaries(void)
  {
    return GetDefaultInterface()->get_HangulHanjaDictionaries();
  }

  Office_2k::LanguageSettingsPtr __fastcall Get_LanguageSettings(void)
  {
    return GetDefaultInterface()->get_LanguageSettings();
  }

  Office_2k::AnswerWizardPtr __fastcall Get_AnswerWizard(void)
  {
    return GetDefaultInterface()->get_AnswerWizard();
  }

  /*CoClassWriteMethods*/
  TOLEBOOL __fastcall Repeat(TVariant* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Repeat(Times/*[in,opt]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR Command/*[in]*/)
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, Command/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, BSTR Item/*[in]*/, BSTR Data/*[in]*/)
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/);
  }

  BSTR __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/)
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/);
  }

  void __fastcall DDETerminateAll(void)
  {
    GetDefaultInterface()->DDETerminateAll();
  }

  long __fastcall BuildKeyCode(Word_2k::WdKey Arg1/*[in]*/, TVariant* Arg2/*[in,opt]*/, 
                               TVariant* Arg3/*[in,opt]*/, TVariant* Arg4/*[in,opt]*/)
  {
    return GetDefaultInterface()->BuildKeyCode(Arg1/*[in]*/, Arg2/*[in,opt]*/, Arg3/*[in,opt]*/, 
                                               Arg4/*[in,opt]*/);
  }

  BSTR __fastcall KeyString(long KeyCode/*[in]*/, TVariant* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->KeyString(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

  TOLEBOOL __fastcall CheckSpelling(BSTR Word/*[in]*/, TVariant* CustomDictionary/*[in,opt]*/, 
                                    TVariant* IgnoreUppercase/*[in,opt]*/, 
                                    TVariant* MainDictionary/*[in,opt]*/, 
                                    TVariant* CustomDictionary2/*[in,opt]*/, 
                                    TVariant* CustomDictionary3/*[in,opt]*/, 
                                    TVariant* CustomDictionary4/*[in,opt]*/, 
                                    TVariant* CustomDictionary5/*[in,opt]*/, 
                                    TVariant* CustomDictionary6/*[in,opt]*/, 
                                    TVariant* CustomDictionary7/*[in,opt]*/, 
                                    TVariant* CustomDictionary8/*[in,opt]*/, 
                                    TVariant* CustomDictionary9/*[in,opt]*/, 
                                    TVariant* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->CheckSpelling(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                IgnoreUppercase/*[in,opt]*/, 
                                                MainDictionary/*[in,opt]*/, 
                                                CustomDictionary2/*[in,opt]*/, 
                                                CustomDictionary3/*[in,opt]*/, 
                                                CustomDictionary4/*[in,opt]*/, 
                                                CustomDictionary5/*[in,opt]*/, 
                                                CustomDictionary6/*[in,opt]*/, 
                                                CustomDictionary7/*[in,opt]*/, 
                                                CustomDictionary8/*[in,opt]*/, 
                                                CustomDictionary9/*[in,opt]*/, 
                                                CustomDictionary10/*[in,opt]*/);
  }

  Word_2k::SpellingSuggestionsPtr __fastcall GetSpellingSuggestions(BSTR Word/*[in]*/, 
                                                                    TVariant* CustomDictionary/*[in,opt]*/, 
                                                                    TVariant* IgnoreUppercase/*[in,opt]*/, 
                                                                    TVariant* MainDictionary/*[in,opt]*/, 
                                                                    TVariant* SuggestionMode/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary2/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary3/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary4/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary5/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary6/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary7/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary8/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary9/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetSpellingSuggestions(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                         IgnoreUppercase/*[in,opt]*/, 
                                                         MainDictionary/*[in,opt]*/, 
                                                         SuggestionMode/*[in,opt]*/, 
                                                         CustomDictionary2/*[in,opt]*/, 
                                                         CustomDictionary3/*[in,opt]*/, 
                                                         CustomDictionary4/*[in,opt]*/, 
                                                         CustomDictionary5/*[in,opt]*/, 
                                                         CustomDictionary6/*[in,opt]*/, 
                                                         CustomDictionary7/*[in,opt]*/, 
                                                         CustomDictionary8/*[in,opt]*/, 
                                                         CustomDictionary9/*[in,opt]*/, 
                                                         CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall Help(TVariant* HelpType/*[in]*/)
  {
    GetDefaultInterface()->Help(HelpType/*[in]*/);
  }

  Word_2k::WINDOWPtr __fastcall NewWindow(void)
  {
    return GetDefaultInterface()->NewWindow();
  }

  BSTR __fastcall CleanString(BSTR String/*[in]*/)
  {
    return GetDefaultInterface()->CleanString(String/*[in]*/);
  }

  void __fastcall ChangeFileOpenDirectory(BSTR Path/*[in]*/)
  {
    GetDefaultInterface()->ChangeFileOpenDirectory(Path/*[in]*/);
  }

  float __fastcall InchesToPoints(float Inches/*[in]*/)
  {
    return GetDefaultInterface()->InchesToPoints(Inches/*[in]*/);
  }

  float __fastcall CentimetersToPoints(float Centimeters/*[in]*/)
  {
    return GetDefaultInterface()->CentimetersToPoints(Centimeters/*[in]*/);
  }

  float __fastcall MillimetersToPoints(float Millimeters/*[in]*/)
  {
    return GetDefaultInterface()->MillimetersToPoints(Millimeters/*[in]*/);
  }

  float __fastcall PicasToPoints(float Picas/*[in]*/)
  {
    return GetDefaultInterface()->PicasToPoints(Picas/*[in]*/);
  }

  float __fastcall LinesToPoints(float Lines/*[in]*/)
  {
    return GetDefaultInterface()->LinesToPoints(Lines/*[in]*/);
  }

  float __fastcall PointsToInches(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToInches(Points/*[in]*/);
  }

  float __fastcall PointsToCentimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToCentimeters(Points/*[in]*/);
  }

  float __fastcall PointsToMillimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToMillimeters(Points/*[in]*/);
  }

  float __fastcall PointsToPicas(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToPicas(Points/*[in]*/);
  }

  float __fastcall PointsToLines(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToLines(Points/*[in]*/);
  }

  float __fastcall PointsToPixels(float Points/*[in]*/, TVariant* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PointsToPixels(Points/*[in]*/, fVertical/*[in,opt]*/);
  }

  float __fastcall PixelsToPoints(float Pixels/*[in]*/, TVariant* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PixelsToPoints(Pixels/*[in]*/, fVertical/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property long Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property BSTR Name={ read=Get_Name }; // 0, No
  __property Word_2k::DocumentsPtr Documents={ read=Get_Documents }; // 0, Yes
  __property Word_2k::WindozPtr Windoz={ read=Get_Windoz }; // 0, Yes
  __property Word_2k::WordDocumentPtr ActiveDocument={ read=Get_ActiveDocument }; // 0, Yes
  __property Word_2k::WINDOWPtr ActiveWindow={ read=Get_ActiveWindow }; // 0, Yes
  __property Word_2k::SelectionPtr Selection={ read=Get_Selection }; // 0, Yes
  __property LPDISPATCH WordBasic={ read=Get_WordBasic }; // 0, No
  __property Word_2k::RecentFilesPtr RecentFiles={ read=Get_RecentFiles }; // 0, Yes
  __property Word_2k::TemplatePtr NormalTemplate={ read=Get_NormalTemplate }; // 0, Yes
  __property Word_2k::SYSTEMPtr System={ read=Get_System }; // 0, Yes
  __property Word_2k::AutoCorrectPtr AutoCorrect={ read=Get_AutoCorrect }; // 0, Yes
  __property Word_2k::FontNamesPtr FontNames={ read=Get_FontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr LandscapeFontNames={ read=Get_LandscapeFontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr PortraitFontNames={ read=Get_PortraitFontNames }; // 0, Yes
  __property Word_2k::LanguagesPtr Languages={ read=Get_Languages }; // 0, Yes
  __property Office_2k::AssistantPtr Assistant={ read=Get_Assistant }; // 0, Yes
  __property Word_2k::FileConvertersPtr FileConverters={ read=Get_FileConverters }; // 0, Yes
  __property Word_2k::DialogsPtr Dialogs={ read=Get_Dialogs }; // 0, Yes
  __property Word_2k::CaptionLabelsPtr CaptionLabels={ read=Get_CaptionLabels }; // 0, Yes
  __property Word_2k::AutoCaptionsPtr AutoCaptions={ read=Get_AutoCaptions }; // 0, Yes
  __property Word_2k::AddInsPtr AddIns={ read=Get_AddIns }; // 0, Yes
  __property Word_2k::TasksPtr Tasks={ read=Get_Tasks }; // 0, Yes
  __property LPDISPATCH MacroContainer={ read=Get_MacroContainer }; // 0, No
  __property Office_2k::CommandBarsPtr CommandBars={ read=Get_CommandBars }; // 0, Yes
  __property Word_2k::SynonymInfoPtr SynonymInfo[BSTR Word][TVariant* LanguageID]={ read=Get_SynonymInfo }; // 0, Yes
  __property Vbide_2k::VBEPtr VBE={ read=Get_VBE }; // 0, Yes
  __property Word_2k::ListGalleriesPtr ListGalleries={ read=Get_ListGalleries }; // 0, Yes
  __property Word_2k::TemplatesPtr Templates={ read=Get_Templates }; // 0, Yes
  __property LPDISPATCH CustomizationContext={ read=Get_CustomizationContext, write=Set_CustomizationContext }; // 0, No
  __property Word_2k::KeyBindingsPtr KeyBindings={ read=Get_KeyBindings }; // 0, Yes
  __property Word_2k::KeysBoundToPtr KeysBoundTo[Word_2k::WdKeyCategory KeyCategory][BSTR Command][TVariant* CommandParameter]={ read=Get_KeysBoundTo }; // 0, Yes
  __property Word_2k::KeyBindingPtr FindKey[long KeyCode][TVariant* KeyCode2]={ read=Get_FindKey }; // 0, Yes
  __property Word_2k::OptionsPtr Options={ read=Get_Options }; // 0, Yes
  __property Word_2k::DictionariesPtr CustomDictionaries={ read=Get_CustomDictionaries }; // 0, Yes
  __property BSTR StatusBar={ write=Set_StatusBar }; // 0, No
  __property TOLEBOOL IsObjectValid[LPDISPATCH Object]={ read=Get_IsObjectValid }; // 0, No
  __property Word_2k::HangulHanjaConversionDictionariesPtr HangulHanjaDictionaries={ read=Get_HangulHanjaDictionaries }; // 0, Yes
  __property Office_2k::LanguageSettingsPtr LanguageSettings={ read=Get_LanguageSettings }; // 0, Yes
  __property Office_2k::AnswerWizardPtr AnswerWizard={ read=Get_AnswerWizard }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL PrintPreview={ read=Get_PrintPreview, write=Set_PrintPreview, stored=false }; // 0, No
  __property BSTR ActivePrinter={ read=Get_ActivePrinter, write=Set_ActivePrinter, stored=false }; // 0, No
  __property TOLEBOOL ShowVisualBasicEditor={ read=Get_ShowVisualBasicEditor, write=Set_ShowVisualBasicEditor, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordDocument
// Help String      : 
// Default Interface: _Document
// Def. Intf. Object: _DocumentPtr
// Def. Intf. DISP? : No
// Event   Interface: DocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordDocument : public Oleserver::TOleServer
{
  _DocumentPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordDocument(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _DocumentPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_DocumentPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  Word_2k::WordApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  long __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  LPDISPATCH __fastcall Get_BuiltInDocumentProperties(void)
  {
    return GetDefaultInterface()->get_BuiltInDocumentProperties();
  }

  LPDISPATCH __fastcall Get_CustomDocumentProperties(void)
  {
    return GetDefaultInterface()->get_CustomDocumentProperties();
  }

  BSTR __fastcall Get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

  Word_2k::BookmarksPtr __fastcall Get_Bookmarks(void)
  {
    return GetDefaultInterface()->get_Bookmarks();
  }

  Word_2k::TablesPtr __fastcall Get_Tables(void)
  {
    return GetDefaultInterface()->get_Tables();
  }

  Word_2k::FootnotesPtr __fastcall Get_Footnotes(void)
  {
    return GetDefaultInterface()->get_Footnotes();
  }

  Word_2k::EndnotesPtr __fastcall Get_Endnotes(void)
  {
    return GetDefaultInterface()->get_Endnotes();
  }

  Word_2k::CommentsPtr __fastcall Get_Comments(void)
  {
    return GetDefaultInterface()->get_Comments();
  }

  Word_2k::WdDocumentType __fastcall Get_Type(void)
  {
    return GetDefaultInterface()->get_Type();
  }

  TOLEBOOL __fastcall Get_AutoHyphenation(void)
  {
    return GetDefaultInterface()->get_AutoHyphenation();
  }

  void __fastcall Set_AutoHyphenation(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_AutoHyphenation(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HyphenateCaps(void)
  {
    return GetDefaultInterface()->get_HyphenateCaps();
  }

  void __fastcall Set_HyphenateCaps(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_HyphenateCaps(prop/*[in]*/);
  }

  long __fastcall Get_HyphenationZone(void)
  {
    return GetDefaultInterface()->get_HyphenationZone();
  }

  void __fastcall Set_HyphenationZone(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_HyphenationZone(prop/*[in]*/);
  }

  long __fastcall Get_ConsecutiveHyphensLimit(void)
  {
    return GetDefaultInterface()->get_ConsecutiveHyphensLimit();
  }

  void __fastcall Set_ConsecutiveHyphensLimit(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_ConsecutiveHyphensLimit(prop/*[in]*/);
  }

  Word_2k::SectionsPtr __fastcall Get_Sections(void)
  {
    return GetDefaultInterface()->get_Sections();
  }

  Word_2k::ParagraphsPtr __fastcall Get_Paragraphs(void)
  {
    return GetDefaultInterface()->get_Paragraphs();
  }

  Word_2k::WordsPtr __fastcall Get_Words(void)
  {
    return GetDefaultInterface()->get_Words();
  }

  Word_2k::SentencesPtr __fastcall Get_Sentences(void)
  {
    return GetDefaultInterface()->get_Sentences();
  }

  Word_2k::CharactersPtr __fastcall Get_Characters(void)
  {
    return GetDefaultInterface()->get_Characters();
  }

  Word_2k::FieldsPtr __fastcall Get_Fields(void)
  {
    return GetDefaultInterface()->get_Fields();
  }

  Word_2k::FormFieldsPtr __fastcall Get_FormFields(void)
  {
    return GetDefaultInterface()->get_FormFields();
  }

  Word_2k::StylesPtr __fastcall Get_Styles(void)
  {
    return GetDefaultInterface()->get_Styles();
  }

  Word_2k::FramesPtr __fastcall Get_Frames(void)
  {
    return GetDefaultInterface()->get_Frames();
  }

  Word_2k::TablesOfFiguresPtr __fastcall Get_TablesOfFigures(void)
  {
    return GetDefaultInterface()->get_TablesOfFigures();
  }

  Word_2k::VariablesPtr __fastcall Get_Variables(void)
  {
    return GetDefaultInterface()->get_Variables();
  }

  Word_2k::MailMergePtr __fastcall Get_MailMerge(void)
  {
    return GetDefaultInterface()->get_MailMerge();
  }

  Word_2k::EnvelopePtr __fastcall Get_Envelope(void)
  {
    return GetDefaultInterface()->get_Envelope();
  }

  BSTR __fastcall Get_FullName(void)
  {
    return GetDefaultInterface()->get_FullName();
  }

  Word_2k::RevisionsPtr __fastcall Get_Revisions(void)
  {
    return GetDefaultInterface()->get_Revisions();
  }

  Word_2k::TablesOfContentsPtr __fastcall Get_TablesOfContents(void)
  {
    return GetDefaultInterface()->get_TablesOfContents();
  }

  Word_2k::TablesOfAuthoritiesPtr __fastcall Get_TablesOfAuthorities(void)
  {
    return GetDefaultInterface()->get_TablesOfAuthorities();
  }

  Word_2k::PageSetupPtr __fastcall Get_PageSetup(void)
  {
    return GetDefaultInterface()->get_PageSetup();
  }

  void __fastcall Set_PageSetup(Word_2k::PageSetupPtr prop/*[in]*/)
  {
    GetDefaultInterface()->set_PageSetup(prop/*[in]*/);
  }

  Word_2k::WindozPtr __fastcall Get_Windoz(void)
  {
    return GetDefaultInterface()->get_Windoz();
  }

  TOLEBOOL __fastcall Get_HasRoutingSlip(void)
  {
    return GetDefaultInterface()->get_HasRoutingSlip();
  }

  void __fastcall Set_HasRoutingSlip(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_HasRoutingSlip(prop/*[in]*/);
  }

  Word_2k::RoutingSlipPtr __fastcall Get_RoutingSlip(void)
  {
    return GetDefaultInterface()->get_RoutingSlip();
  }

  TOLEBOOL __fastcall Get_Routed(void)
  {
    return GetDefaultInterface()->get_Routed();
  }

  Word_2k::TablesOfAuthoritiesCategoriesPtr __fastcall Get_TablesOfAuthoritiesCategories(void)
  {
    return GetDefaultInterface()->get_TablesOfAuthoritiesCategories();
  }

  Word_2k::IndexesPtr __fastcall Get_Indexes(void)
  {
    return GetDefaultInterface()->get_Indexes();
  }

  TOLEBOOL __fastcall Get_Saved(void)
  {
    return GetDefaultInterface()->get_Saved();
  }

  void __fastcall Set_Saved(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Saved(prop/*[in]*/);
  }

  Word_2k::RangePtr __fastcall Get_Content(void)
  {
    return GetDefaultInterface()->get_Content();
  }

  Word_2k::WINDOWPtr __fastcall Get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

  Word_2k::WdDocumentKind __fastcall Get_Kind(void)
  {
    return GetDefaultInterface()->get_Kind();
  }

  void __fastcall Set_Kind(Word_2k::WdDocumentKind prop/*[in]*/)
  {
    GetDefaultInterface()->set_Kind(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ReadOnly(void)
  {
    return GetDefaultInterface()->get_ReadOnly();
  }

  Word_2k::SubdocumentsPtr __fastcall Get_Subdocuments(void)
  {
    return GetDefaultInterface()->get_Subdocuments();
  }

  TOLEBOOL __fastcall Get_IsMasterDocument(void)
  {
    return GetDefaultInterface()->get_IsMasterDocument();
  }

  float __fastcall Get_DefaultTabStop(void)
  {
    return GetDefaultInterface()->get_DefaultTabStop();
  }

  void __fastcall Set_DefaultTabStop(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultTabStop(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_EmbedTrueTypeFonts(void)
  {
    return GetDefaultInterface()->get_EmbedTrueTypeFonts();
  }

  void __fastcall Set_EmbedTrueTypeFonts(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_EmbedTrueTypeFonts(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SaveFormsData(void)
  {
    return GetDefaultInterface()->get_SaveFormsData();
  }

  void __fastcall Set_SaveFormsData(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SaveFormsData(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ReadOnlyRecommended(void)
  {
    return GetDefaultInterface()->get_ReadOnlyRecommended();
  }

  void __fastcall Set_ReadOnlyRecommended(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReadOnlyRecommended(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SaveSubsetFonts(void)
  {
    return GetDefaultInterface()->get_SaveSubsetFonts();
  }

  void __fastcall Set_SaveSubsetFonts(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SaveSubsetFonts(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Compatibility(Word_2k::WdCompatibility Type/*[in]*/)
  {
    return GetDefaultInterface()->get_Compatibility(Type/*[in]*/);
  }

  void __fastcall Set_Compatibility(Word_2k::WdCompatibility Type/*[in]*/, TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Compatibility(Type/*[in]*/, prop/*[in]*/);
  }

  Word_2k::StoryRangesPtr __fastcall Get_StoryRanges(void)
  {
    return GetDefaultInterface()->get_StoryRanges();
  }

  Office_2k::CommandBarsPtr __fastcall Get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

  TOLEBOOL __fastcall Get_IsSubdocument(void)
  {
    return GetDefaultInterface()->get_IsSubdocument();
  }

  long __fastcall Get_SaveFormat(void)
  {
    return GetDefaultInterface()->get_SaveFormat();
  }

  Word_2k::WdProtectionType __fastcall Get_ProtectionType(void)
  {
    return GetDefaultInterface()->get_ProtectionType();
  }

  Word_2k::HyperlinksPtr __fastcall Get_Hyperlinks(void)
  {
    return GetDefaultInterface()->get_Hyperlinks();
  }

  Word_2k::ShapesPtr __fastcall Get_Shapes(void)
  {
    return GetDefaultInterface()->get_Shapes();
  }

  Word_2k::ListTemplatesPtr __fastcall Get_ListTemplates(void)
  {
    return GetDefaultInterface()->get_ListTemplates();
  }

  Word_2k::ListsPtr __fastcall Get_Lists(void)
  {
    return GetDefaultInterface()->get_Lists();
  }

  TOLEBOOL __fastcall Get_UpdateStylesOnOpen(void)
  {
    return GetDefaultInterface()->get_UpdateStylesOnOpen();
  }

  void __fastcall Set_UpdateStylesOnOpen(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_UpdateStylesOnOpen(prop/*[in]*/);
  }

  TVariant __fastcall Get_AttachedTemplate(void)
  {
    return GetDefaultInterface()->get_AttachedTemplate();
  }

  void __fastcall Set_AttachedTemplate(TVariant* prop/*[in]*/)
  {
    GetDefaultInterface()->set_AttachedTemplate(prop/*[in]*/);
  }

  Word_2k::InlineShapesPtr __fastcall Get_InlineShapes(void)
  {
    return GetDefaultInterface()->get_InlineShapes();
  }

  Word_2k::ShapePtr __fastcall Get_Background(void)
  {
    return GetDefaultInterface()->get_Background();
  }

  void __fastcall Set_Background(Word_2k::ShapePtr prop/*[in]*/)
  {
    GetDefaultInterface()->set_Background(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_GrammarChecked(void)
  {
    return GetDefaultInterface()->get_GrammarChecked();
  }

  void __fastcall Set_GrammarChecked(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_GrammarChecked(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SpellingChecked(void)
  {
    return GetDefaultInterface()->get_SpellingChecked();
  }

  void __fastcall Set_SpellingChecked(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpellingChecked(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowGrammaticalErrors(void)
  {
    return GetDefaultInterface()->get_ShowGrammaticalErrors();
  }

  void __fastcall Set_ShowGrammaticalErrors(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowGrammaticalErrors(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowSpellingErrors(void)
  {
    return GetDefaultInterface()->get_ShowSpellingErrors();
  }

  void __fastcall Set_ShowSpellingErrors(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowSpellingErrors(prop/*[in]*/);
  }

  Word_2k::VersionsPtr __fastcall Get_Versions(void)
  {
    return GetDefaultInterface()->get_Versions();
  }

  TOLEBOOL __fastcall Get_ShowSummary(void)
  {
    return GetDefaultInterface()->get_ShowSummary();
  }

  void __fastcall Set_ShowSummary(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowSummary(prop/*[in]*/);
  }

  Word_2k::WdSummaryMode __fastcall Get_SummaryViewMode(void)
  {
    return GetDefaultInterface()->get_SummaryViewMode();
  }

  void __fastcall Set_SummaryViewMode(Word_2k::WdSummaryMode prop/*[in]*/)
  {
    GetDefaultInterface()->set_SummaryViewMode(prop/*[in]*/);
  }

  long __fastcall Get_SummaryLength(void)
  {
    return GetDefaultInterface()->get_SummaryLength();
  }

  void __fastcall Set_SummaryLength(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SummaryLength(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PrintFractionalWidths(void)
  {
    return GetDefaultInterface()->get_PrintFractionalWidths();
  }

  void __fastcall Set_PrintFractionalWidths(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintFractionalWidths(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PrintPostScriptOverText(void)
  {
    return GetDefaultInterface()->get_PrintPostScriptOverText();
  }

  void __fastcall Set_PrintPostScriptOverText(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintPostScriptOverText(prop/*[in]*/);
  }

  LPDISPATCH __fastcall Get_Container(void)
  {
    return GetDefaultInterface()->get_Container();
  }

  TOLEBOOL __fastcall Get_PrintFormsData(void)
  {
    return GetDefaultInterface()->get_PrintFormsData();
  }

  void __fastcall Set_PrintFormsData(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintFormsData(prop/*[in]*/);
  }

  Word_2k::ListParagraphsPtr __fastcall Get_ListParagraphs(void)
  {
    return GetDefaultInterface()->get_ListParagraphs();
  }

  void __fastcall Set_Password(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Password(Param1/*[in]*/);
  }

  void __fastcall Set_WritePassword(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WritePassword(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasPassword(void)
  {
    return GetDefaultInterface()->get_HasPassword();
  }

  TOLEBOOL __fastcall Get_WriteReserved(void)
  {
    return GetDefaultInterface()->get_WriteReserved();
  }

  BSTR __fastcall Get_ActiveWritingStyle(TVariant* LanguageID/*[in]*/)
  {
    return GetDefaultInterface()->get_ActiveWritingStyle(LanguageID/*[in]*/);
  }

  void __fastcall Set_ActiveWritingStyle(TVariant* LanguageID/*[in]*/, BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ActiveWritingStyle(LanguageID/*[in]*/, prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

  void __fastcall Set_UserControl(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_HasMailer(void)
  {
    return GetDefaultInterface()->get_HasMailer();
  }

  void __fastcall Set_HasMailer(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_HasMailer(prop/*[in]*/);
  }

  Word_2k::MailerPtr __fastcall Get_Mailer(void)
  {
    return GetDefaultInterface()->get_Mailer();
  }

  Word_2k::ReadabilityStatisticsPtr __fastcall Get_ReadabilityStatistics(void)
  {
    return GetDefaultInterface()->get_ReadabilityStatistics();
  }

  Word_2k::ProofreadingErrorsPtr __fastcall Get_GrammaticalErrors(void)
  {
    return GetDefaultInterface()->get_GrammaticalErrors();
  }

  Word_2k::ProofreadingErrorsPtr __fastcall Get_SpellingErrors(void)
  {
    return GetDefaultInterface()->get_SpellingErrors();
  }

  Vbide_2k::VBProjectPtr __fastcall Get_VBProject(void)
  {
    return GetDefaultInterface()->get_VBProject();
  }

  TOLEBOOL __fastcall Get_FormsDesign(void)
  {
    return GetDefaultInterface()->get_FormsDesign();
  }

  BSTR __fastcall Get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

  void __fastcall Set__CodeName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(prop/*[in]*/);
  }

  BSTR __fastcall Get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

  TOLEBOOL __fastcall Get_SnapToGrid(void)
  {
    return GetDefaultInterface()->get_SnapToGrid();
  }

  void __fastcall Set_SnapToGrid(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SnapToGrid(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SnapToShapes(void)
  {
    return GetDefaultInterface()->get_SnapToShapes();
  }

  void __fastcall Set_SnapToShapes(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SnapToShapes(prop/*[in]*/);
  }

  float __fastcall Get_GridDistanceHorizontal(void)
  {
    return GetDefaultInterface()->get_GridDistanceHorizontal();
  }

  void __fastcall Set_GridDistanceHorizontal(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridDistanceHorizontal(prop/*[in]*/);
  }

  float __fastcall Get_GridDistanceVertical(void)
  {
    return GetDefaultInterface()->get_GridDistanceVertical();
  }

  void __fastcall Set_GridDistanceVertical(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridDistanceVertical(prop/*[in]*/);
  }

  float __fastcall Get_GridOriginHorizontal(void)
  {
    return GetDefaultInterface()->get_GridOriginHorizontal();
  }

  void __fastcall Set_GridOriginHorizontal(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridOriginHorizontal(prop/*[in]*/);
  }

  float __fastcall Get_GridOriginVertical(void)
  {
    return GetDefaultInterface()->get_GridOriginVertical();
  }

  void __fastcall Set_GridOriginVertical(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridOriginVertical(prop/*[in]*/);
  }

  long __fastcall Get_GridSpaceBetweenHorizontalLines(void)
  {
    return GetDefaultInterface()->get_GridSpaceBetweenHorizontalLines();
  }

  void __fastcall Set_GridSpaceBetweenHorizontalLines(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridSpaceBetweenHorizontalLines(prop/*[in]*/);
  }

  long __fastcall Get_GridSpaceBetweenVerticalLines(void)
  {
    return GetDefaultInterface()->get_GridSpaceBetweenVerticalLines();
  }

  void __fastcall Set_GridSpaceBetweenVerticalLines(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridSpaceBetweenVerticalLines(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_GridOriginFromMargin(void)
  {
    return GetDefaultInterface()->get_GridOriginFromMargin();
  }

  void __fastcall Set_GridOriginFromMargin(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridOriginFromMargin(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_KerningByAlgorithm(void)
  {
    return GetDefaultInterface()->get_KerningByAlgorithm();
  }

  void __fastcall Set_KerningByAlgorithm(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_KerningByAlgorithm(prop/*[in]*/);
  }

  Word_2k::WdJustificationMode __fastcall Get_JustificationMode(void)
  {
    return GetDefaultInterface()->get_JustificationMode();
  }

  void __fastcall Set_JustificationMode(Word_2k::WdJustificationMode prop/*[in]*/)
  {
    GetDefaultInterface()->set_JustificationMode(prop/*[in]*/);
  }

  Word_2k::WdFarEastLineBreakLevel __fastcall Get_FarEastLineBreakLevel(void)
  {
    return GetDefaultInterface()->get_FarEastLineBreakLevel();
  }

  void __fastcall Set_FarEastLineBreakLevel(Word_2k::WdFarEastLineBreakLevel prop/*[in]*/)
  {
    GetDefaultInterface()->set_FarEastLineBreakLevel(prop/*[in]*/);
  }

  BSTR __fastcall Get_NoLineBreakBefore(void)
  {
    return GetDefaultInterface()->get_NoLineBreakBefore();
  }

  void __fastcall Set_NoLineBreakBefore(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NoLineBreakBefore(prop/*[in]*/);
  }

  BSTR __fastcall Get_NoLineBreakAfter(void)
  {
    return GetDefaultInterface()->get_NoLineBreakAfter();
  }

  void __fastcall Set_NoLineBreakAfter(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NoLineBreakAfter(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_TrackRevisions(void)
  {
    return GetDefaultInterface()->get_TrackRevisions();
  }

  void __fastcall Set_TrackRevisions(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_TrackRevisions(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PrintRevisions(void)
  {
    return GetDefaultInterface()->get_PrintRevisions();
  }

  void __fastcall Set_PrintRevisions(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintRevisions(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowRevisions(void)
  {
    return GetDefaultInterface()->get_ShowRevisions();
  }

  void __fastcall Set_ShowRevisions(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowRevisions(prop/*[in]*/);
  }

  BSTR __fastcall Get_ActiveTheme(void)
  {
    return GetDefaultInterface()->get_ActiveTheme();
  }

  BSTR __fastcall Get_ActiveThemeDisplayName(void)
  {
    return GetDefaultInterface()->get_ActiveThemeDisplayName();
  }

  Word_2k::EmailPtr __fastcall Get_Email(void)
  {
    return GetDefaultInterface()->get_Email();
  }

  Office_2k::ScriptsPtr __fastcall Get_Scripts(void)
  {
    return GetDefaultInterface()->get_Scripts();
  }

  TOLEBOOL __fastcall Get_LanguageDetected(void)
  {
    return GetDefaultInterface()->get_LanguageDetected();
  }

  void __fastcall Set_LanguageDetected(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_LanguageDetected(prop/*[in]*/);
  }

  Word_2k::WdFarEastLineBreakLanguageID __fastcall Get_FarEastLineBreakLanguage(void)
  {
    return GetDefaultInterface()->get_FarEastLineBreakLanguage();
  }

  void __fastcall Set_FarEastLineBreakLanguage(Word_2k::WdFarEastLineBreakLanguageID prop/*[in]*/)
  {
    GetDefaultInterface()->set_FarEastLineBreakLanguage(prop/*[in]*/);
  }

  Word_2k::FramesetPtr __fastcall Get_Frameset(void)
  {
    return GetDefaultInterface()->get_Frameset();
  }

  TVariant __fastcall Get_ClickAndTypeParagraphStyle(void)
  {
    return GetDefaultInterface()->get_ClickAndTypeParagraphStyle();
  }

  void __fastcall Set_ClickAndTypeParagraphStyle(TVariant* prop/*[in]*/)
  {
    GetDefaultInterface()->set_ClickAndTypeParagraphStyle(prop/*[in]*/);
  }

  Office_2k::HTMLProjectPtr __fastcall Get_HTMLProject(void)
  {
    return GetDefaultInterface()->get_HTMLProject();
  }

  Word_2k::WebOptionsPtr __fastcall Get_WebOptions(void)
  {
    return GetDefaultInterface()->get_WebOptions();
  }

  Office_2k::MsoEncoding __fastcall Get_OpenEncoding(void)
  {
    return GetDefaultInterface()->get_OpenEncoding();
  }

  Office_2k::MsoEncoding __fastcall Get_SaveEncoding(void)
  {
    return GetDefaultInterface()->get_SaveEncoding();
  }

  void __fastcall Set_SaveEncoding(Office_2k::MsoEncoding prop/*[in]*/)
  {
    GetDefaultInterface()->set_SaveEncoding(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_OptimizeForWord97(void)
  {
    return GetDefaultInterface()->get_OptimizeForWord97();
  }

  void __fastcall Set_OptimizeForWord97(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_OptimizeForWord97(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_VBASigned(void)
  {
    return GetDefaultInterface()->get_VBASigned();
  }

  /*CoClassWriteMethods*/
  void __fastcall Close(TVariant* SaveChanges/*[in,opt]*/= TNoParam(), 
                        TVariant* OriginalFormat/*[in,opt]*/= TNoParam(), 
                        TVariant* RouteDocument/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Close(SaveChanges/*[in,opt]*/, OriginalFormat/*[in,opt]*/, 
                                 RouteDocument/*[in,opt]*/);
  }

  void __fastcall SaveAs(TVariant* FileName/*[in,opt]*/= TNoParam(), 
                         TVariant* FileFormat/*[in,opt]*/= TNoParam(), 
                         TVariant* LockComments/*[in,opt]*/= TNoParam(), 
                         TVariant* Password/*[in,opt]*/= TNoParam(), 
                         TVariant* AddToRecentFiles/*[in,opt]*/= TNoParam(), 
                         TVariant* WritePassword/*[in,opt]*/= TNoParam(), 
                         TVariant* ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                         TVariant* EmbedTrueTypeFonts/*[in,opt]*/= TNoParam(), 
                         TVariant* SaveNativePictureFormat/*[in,opt]*/= TNoParam(), 
                         TVariant* SaveFormsData/*[in,opt]*/= TNoParam(), 
                         TVariant* SaveAsAOCELetter/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SaveAs(FileName/*[in,opt]*/, FileFormat/*[in,opt]*/, 
                                  LockComments/*[in,opt]*/, Password/*[in,opt]*/, 
                                  AddToRecentFiles/*[in,opt]*/, WritePassword/*[in,opt]*/, 
                                  ReadOnlyRecommended/*[in,opt]*/, EmbedTrueTypeFonts/*[in,opt]*/, 
                                  SaveNativePictureFormat/*[in,opt]*/, SaveFormsData/*[in,opt]*/, 
                                  SaveAsAOCELetter/*[in,opt]*/);
  }

  void __fastcall Repaginate(void)
  {
    GetDefaultInterface()->Repaginate();
  }

  void __fastcall FitToPages(void)
  {
    GetDefaultInterface()->FitToPages();
  }

  void __fastcall ManualHyphenation(void)
  {
    GetDefaultInterface()->ManualHyphenation();
  }

  void __fastcall Select(void)
  {
    GetDefaultInterface()->Select();
  }

  void __fastcall DataForm(void)
  {
    GetDefaultInterface()->DataForm();
  }

  void __fastcall Route(void)
  {
    GetDefaultInterface()->Route();
  }

  void __fastcall Save(void)
  {
    GetDefaultInterface()->Save();
  }

  void __fastcall PrintOutOld(TVariant* Background/*[in,opt]*/= TNoParam(), 
                              TVariant* Append/*[in,opt]*/= TNoParam(), 
                              TVariant* Range/*[in,opt]*/= TNoParam(), 
                              TVariant* OutputFileName/*[in,opt]*/= TNoParam(), 
                              TVariant* From/*[in,opt]*/= TNoParam(), 
                              TVariant* To/*[in,opt]*/= TNoParam(), 
                              TVariant* Item/*[in,opt]*/= TNoParam(), 
                              TVariant* Copies/*[in,opt]*/= TNoParam(), 
                              TVariant* Pages/*[in,opt]*/= TNoParam(), 
                              TVariant* PageType/*[in,opt]*/= TNoParam(), 
                              TVariant* PrintToFile/*[in,opt]*/= TNoParam(), 
                              TVariant* Collate/*[in,opt]*/= TNoParam(), 
                              TVariant* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                              TVariant* ManualDuplexPrint/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOutOld(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                       OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                       Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                       PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                       Collate/*[in,opt]*/, ActivePrinterMacGX/*[in,opt]*/, 
                                       ManualDuplexPrint/*[in,opt]*/);
  }

  void __fastcall SendMail(void)
  {
    GetDefaultInterface()->SendMail();
  }

  Word_2k::RangePtr __fastcall Range(TVariant* Start/*[in,opt]*/, TVariant* End/*[in,opt]*/)
  {
    return GetDefaultInterface()->Range(Start/*[in,opt]*/, End/*[in,opt]*/);
  }

  void __fastcall RunAutoMacro(Word_2k::WdAutoMacros Which/*[in]*/)
  {
    GetDefaultInterface()->RunAutoMacro(Which/*[in]*/);
  }

  void __fastcall Activate(void)
  {
    GetDefaultInterface()->Activate();
  }

  void __fastcall PrintPreview(void)
  {
    GetDefaultInterface()->PrintPreview();
  }

  Word_2k::RangePtr __fastcall GoTo(TVariant* What/*[in,opt]*/, TVariant* Which/*[in,opt]*/, 
                                    TVariant* Count/*[in,opt]*/, TVariant* Name/*[in,opt]*/)
  {
    return GetDefaultInterface()->GoTo(What/*[in,opt]*/, Which/*[in,opt]*/, Count/*[in,opt]*/, 
                                       Name/*[in,opt]*/);
  }

  TOLEBOOL __fastcall Undo(TVariant* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Undo(Times/*[in,opt]*/);
  }

  TOLEBOOL __fastcall Redo(TVariant* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Redo(Times/*[in,opt]*/);
  }

  long __fastcall ComputeStatistics(Word_2k::WdStatistic Statistic/*[in]*/, 
                                    TVariant* IncludeFootnotesAndEndnotes/*[in,opt]*/)
  {
    return GetDefaultInterface()->ComputeStatistics(Statistic/*[in]*/, 
                                                    IncludeFootnotesAndEndnotes/*[in,opt]*/);
  }

  void __fastcall MakeCompatibilityDefault(void)
  {
    GetDefaultInterface()->MakeCompatibilityDefault();
  }

  void __fastcall Protect(Word_2k::WdProtectionType Type/*[in]*/, 
                          TVariant* NoReset/*[in,opt]*/= TNoParam(), 
                          TVariant* Password/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Protect(Type/*[in]*/, NoReset/*[in,opt]*/, Password/*[in,opt]*/);
  }

  void __fastcall Unprotect(TVariant* Password/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/);
  }

  void __fastcall EditionOptions(Word_2k::WdEditionType Type/*[in]*/, 
                                 Word_2k::WdEditionOption Option/*[in]*/, BSTR Name/*[in]*/, 
                                 TVariant* Format/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->EditionOptions(Type/*[in]*/, Option/*[in]*/, Name/*[in]*/, 
                                          Format/*[in,opt]*/);
  }

  void __fastcall RunLetterWizard(TVariant* LetterContent/*[in,opt]*/= TNoParam(), 
                                  TVariant* WizardMode/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RunLetterWizard(LetterContent/*[in,opt]*/, WizardMode/*[in,opt]*/);
  }

  Word_2k::WordLetterContentPtr __fastcall GetLetterContent(void)
  {
    return GetDefaultInterface()->GetLetterContent();
  }

  void __fastcall SetLetterContent(TVariant* LetterContent/*[in]*/)
  {
    GetDefaultInterface()->SetLetterContent(LetterContent/*[in]*/);
  }

  void __fastcall CopyStylesFromTemplate(BSTR Template/*[in]*/)
  {
    GetDefaultInterface()->CopyStylesFromTemplate(Template/*[in]*/);
  }

  void __fastcall UpdateStyles(void)
  {
    GetDefaultInterface()->UpdateStyles();
  }

  void __fastcall CheckGrammar(void)
  {
    GetDefaultInterface()->CheckGrammar();
  }

  void __fastcall CheckSpelling(TVariant* CustomDictionary/*[in,opt]*/= TNoParam(), 
                                TVariant* IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                TVariant* AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary2/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary3/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary4/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary5/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary6/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary7/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary8/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary9/*[in,opt]*/= TNoParam(), 
                                TVariant* CustomDictionary10/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                         AlwaysSuggest/*[in,opt]*/, CustomDictionary2/*[in,opt]*/, 
                                         CustomDictionary3/*[in,opt]*/, 
                                         CustomDictionary4/*[in,opt]*/, 
                                         CustomDictionary5/*[in,opt]*/, 
                                         CustomDictionary6/*[in,opt]*/, 
                                         CustomDictionary7/*[in,opt]*/, 
                                         CustomDictionary8/*[in,opt]*/, 
                                         CustomDictionary9/*[in,opt]*/, 
                                         CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall FollowHyperlink(TVariant* Address/*[in,opt]*/= TNoParam(), 
                                  TVariant* SubAddress/*[in,opt]*/= TNoParam(), 
                                  TVariant* NewWindow/*[in,opt]*/= TNoParam(), 
                                  TVariant* AddHistory/*[in,opt]*/= TNoParam(), 
                                  TVariant* ExtraInfo/*[in,opt]*/= TNoParam(), 
                                  TVariant* Method/*[in,opt]*/= TNoParam(), 
                                  TVariant* HeaderInfo/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->FollowHyperlink(Address/*[in,opt]*/, SubAddress/*[in,opt]*/, 
                                           NewWindow/*[in,opt]*/, AddHistory/*[in,opt]*/, 
                                           ExtraInfo/*[in,opt]*/, Method/*[in,opt]*/, 
                                           HeaderInfo/*[in,opt]*/);
  }

  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall Reload(void)
  {
    GetDefaultInterface()->Reload();
  }

  Word_2k::RangePtr __fastcall AutoSummarize(TVariant* Length/*[in,opt]*/, 
                                             TVariant* Mode/*[in,opt]*/, 
                                             TVariant* UpdateProperties/*[in,opt]*/)
  {
    return GetDefaultInterface()->AutoSummarize(Length/*[in,opt]*/, Mode/*[in,opt]*/, 
                                                UpdateProperties/*[in,opt]*/);
  }

  void __fastcall RemoveNumbers(TVariant* NumberType/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RemoveNumbers(NumberType/*[in,opt]*/);
  }

  void __fastcall ConvertNumbersToText(TVariant* NumberType/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ConvertNumbersToText(NumberType/*[in,opt]*/);
  }

  long __fastcall CountNumberedItems(TVariant* NumberType/*[in,opt]*/, TVariant* Level/*[in,opt]*/)
  {
    return GetDefaultInterface()->CountNumberedItems(NumberType/*[in,opt]*/, Level/*[in,opt]*/);
  }

  void __fastcall Post(void)
  {
    GetDefaultInterface()->Post();
  }

  void __fastcall ToggleFormsDesign(void)
  {
    GetDefaultInterface()->ToggleFormsDesign();
  }

  void __fastcall Compare(BSTR Name/*[in]*/)
  {
    GetDefaultInterface()->Compare(Name/*[in]*/);
  }

  void __fastcall UpdateSummaryProperties(void)
  {
    GetDefaultInterface()->UpdateSummaryProperties();
  }

  TVariant __fastcall GetCrossReferenceItems(TVariant* ReferenceType/*[in]*/)
  {
    return GetDefaultInterface()->GetCrossReferenceItems(ReferenceType/*[in]*/);
  }

  void __fastcall AutoFormat(void)
  {
    GetDefaultInterface()->AutoFormat();
  }

  void __fastcall ViewCode(void)
  {
    GetDefaultInterface()->ViewCode();
  }

  void __fastcall ViewPropertyBrowser(void)
  {
    GetDefaultInterface()->ViewPropertyBrowser();
  }

  void __fastcall ForwardMailer(void)
  {
    GetDefaultInterface()->ForwardMailer();
  }

  void __fastcall Reply(void)
  {
    GetDefaultInterface()->Reply();
  }

  void __fastcall ReplyAll(void)
  {
    GetDefaultInterface()->ReplyAll();
  }

  void __fastcall SendMailer(TVariant* FileFormat/*[in,opt]*/= TNoParam(), 
                             TVariant* Priority/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SendMailer(FileFormat/*[in,opt]*/, Priority/*[in,opt]*/);
  }

  void __fastcall UndoClear(void)
  {
    GetDefaultInterface()->UndoClear();
  }

  void __fastcall PresentIt(void)
  {
    GetDefaultInterface()->PresentIt();
  }

  void __fastcall SendFax(BSTR Address/*[in]*/, TVariant* Subject/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SendFax(Address/*[in]*/, Subject/*[in,opt]*/);
  }

  void __fastcall Merge(BSTR FileName/*[in]*/)
  {
    GetDefaultInterface()->Merge(FileName/*[in]*/);
  }

  void __fastcall ClosePrintPreview(void)
  {
    GetDefaultInterface()->ClosePrintPreview();
  }

  void __fastcall CheckConsistency(void)
  {
    GetDefaultInterface()->CheckConsistency();
  }

  Word_2k::WordLetterContentPtr __fastcall CreateLetterContent(BSTR DateFormat/*[in]*/, 
                                                               TOLEBOOL IncludeHeaderFooter/*[in]*/, 
                                                               BSTR PageDesign/*[in]*/, 
                                                               Word_2k::WdLetterStyle LetterStyle/*[in]*/, 
                                                               TOLEBOOL Letterhead/*[in]*/, 
                                                               Word_2k::WdLetterheadLocation LetterheadLocation/*[in]*/, 
                                                               float LetterheadSize/*[in]*/, 
                                                               BSTR RecipientName/*[in]*/, 
                                                               BSTR RecipientAddress/*[in]*/, 
                                                               BSTR Salutation/*[in]*/, 
                                                               Word_2k::WdSalutationType SalutationType/*[in]*/, 
                                                               BSTR RecipientReference/*[in]*/, 
                                                               BSTR MailingInstructions/*[in]*/, 
                                                               BSTR AttentionLine/*[in]*/, 
                                                               BSTR Subject/*[in]*/, 
                                                               BSTR CCList/*[in]*/, 
                                                               BSTR ReturnAddress/*[in]*/, 
                                                               BSTR SenderName/*[in]*/, 
                                                               BSTR Closing/*[in]*/, 
                                                               BSTR SenderCompany/*[in]*/, 
                                                               BSTR SenderJobTitle/*[in]*/, 
                                                               BSTR SenderInitials/*[in]*/, 
                                                               long EnclosureNumber/*[in]*/, 
                                                               TVariant* InfoBlock/*[in,opt]*/, 
                                                               TVariant* RecipientCode/*[in,opt]*/, 
                                                               TVariant* RecipientGender/*[in,opt]*/, 
                                                               TVariant* ReturnAddressShortForm/*[in,opt]*/, 
                                                               TVariant* SenderCity/*[in,opt]*/, 
                                                               TVariant* SenderCode/*[in,opt]*/, 
                                                               TVariant* SenderGender/*[in,opt]*/, 
                                                               TVariant* SenderReference/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateLetterContent(DateFormat/*[in]*/, 
                                                      IncludeHeaderFooter/*[in]*/, 
                                                      PageDesign/*[in]*/, LetterStyle/*[in]*/, 
                                                      Letterhead/*[in]*/, LetterheadLocation/*[in]*/, 
                                                      LetterheadSize/*[in]*/, RecipientName/*[in]*/, 
                                                      RecipientAddress/*[in]*/, Salutation/*[in]*/, 
                                                      SalutationType/*[in]*/, 
                                                      RecipientReference/*[in]*/, 
                                                      MailingInstructions/*[in]*/, 
                                                      AttentionLine/*[in]*/, Subject/*[in]*/, 
                                                      CCList/*[in]*/, ReturnAddress/*[in]*/, 
                                                      SenderName/*[in]*/, Closing/*[in]*/, 
                                                      SenderCompany/*[in]*/, SenderJobTitle/*[in]*/, 
                                                      SenderInitials/*[in]*/, 
                                                      EnclosureNumber/*[in]*/, InfoBlock/*[in,opt]*/, 
                                                      RecipientCode/*[in,opt]*/, 
                                                      RecipientGender/*[in,opt]*/, 
                                                      ReturnAddressShortForm/*[in,opt]*/, 
                                                      SenderCity/*[in,opt]*/, SenderCode/*[in,opt]*/, 
                                                      SenderGender/*[in,opt]*/, 
                                                      SenderReference/*[in,opt]*/);
  }

  void __fastcall AcceptAllRevisions(void)
  {
    GetDefaultInterface()->AcceptAllRevisions();
  }

  void __fastcall RejectAllRevisions(void)
  {
    GetDefaultInterface()->RejectAllRevisions();
  }

  void __fastcall DetectLanguage(void)
  {
    GetDefaultInterface()->DetectLanguage();
  }

  void __fastcall ApplyTheme(BSTR Name/*[in]*/)
  {
    GetDefaultInterface()->ApplyTheme(Name/*[in]*/);
  }

  void __fastcall RemoveTheme(void)
  {
    GetDefaultInterface()->RemoveTheme();
  }

  void __fastcall WebPagePreview(void)
  {
    GetDefaultInterface()->WebPagePreview();
  }

  void __fastcall ReloadAs(Office_2k::MsoEncoding Encoding/*[in]*/)
  {
    GetDefaultInterface()->ReloadAs(Encoding/*[in]*/);
  }

  void __fastcall PrintOut(TVariant* Background/*[in,opt]*/= TNoParam(), 
                           TVariant* Append/*[in,opt]*/= TNoParam(), 
                           TVariant* Range/*[in,opt]*/= TNoParam(), 
                           TVariant* OutputFileName/*[in,opt]*/= TNoParam(), 
                           TVariant* From/*[in,opt]*/= TNoParam(), 
                           TVariant* To/*[in,opt]*/= TNoParam(), 
                           TVariant* Item/*[in,opt]*/= TNoParam(), 
                           TVariant* Copies/*[in,opt]*/= TNoParam(), 
                           TVariant* Pages/*[in,opt]*/= TNoParam(), 
                           TVariant* PageType/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintToFile/*[in,opt]*/= TNoParam(), 
                           TVariant* Collate/*[in,opt]*/= TNoParam(), 
                           TVariant* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                           TVariant* ManualDuplexPrint/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomColumn/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomRow/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomPaperWidth/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomPaperHeight/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOut(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                    OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                    Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                    PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                    Collate/*[in,opt]*/, ActivePrinterMacGX/*[in,opt]*/, 
                                    ManualDuplexPrint/*[in,opt]*/, PrintZoomColumn/*[in,opt]*/, 
                                    PrintZoomRow/*[in,opt]*/, PrintZoomPaperWidth/*[in,opt]*/, 
                                    PrintZoomPaperHeight/*[in,opt]*/);
  }

  void __fastcall sblt(BSTR s/*[in]*/)
  {
    GetDefaultInterface()->sblt(s/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property BSTR Name={ read=Get_Name }; // 0, No
  __property Word_2k::WordApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property long Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property LPDISPATCH BuiltInDocumentProperties={ read=Get_BuiltInDocumentProperties }; // 0, No
  __property LPDISPATCH CustomDocumentProperties={ read=Get_CustomDocumentProperties }; // 0, No
  __property BSTR Path={ read=Get_Path }; // 0, No
  __property Word_2k::BookmarksPtr Bookmarks={ read=Get_Bookmarks }; // 0, Yes
  __property Word_2k::TablesPtr Tables={ read=Get_Tables }; // 0, Yes
  __property Word_2k::FootnotesPtr Footnotes={ read=Get_Footnotes }; // 0, Yes
  __property Word_2k::EndnotesPtr Endnotes={ read=Get_Endnotes }; // 0, Yes
  __property Word_2k::CommentsPtr Comments={ read=Get_Comments }; // 0, Yes
  __property Word_2k::WdDocumentType Type={ read=Get_Type }; // 0, No
  __property Word_2k::SectionsPtr Sections={ read=Get_Sections }; // 0, Yes
  __property Word_2k::ParagraphsPtr Paragraphs={ read=Get_Paragraphs }; // 0, Yes
  __property Word_2k::WordsPtr Words={ read=Get_Words }; // 0, Yes
  __property Word_2k::SentencesPtr Sentences={ read=Get_Sentences }; // 0, Yes
  __property Word_2k::CharactersPtr Characters={ read=Get_Characters }; // 0, Yes
  __property Word_2k::FieldsPtr Fields={ read=Get_Fields }; // 0, Yes
  __property Word_2k::FormFieldsPtr FormFields={ read=Get_FormFields }; // 0, Yes
  __property Word_2k::StylesPtr Styles={ read=Get_Styles }; // 0, Yes
  __property Word_2k::FramesPtr Frames={ read=Get_Frames }; // 0, Yes
  __property Word_2k::TablesOfFiguresPtr TablesOfFigures={ read=Get_TablesOfFigures }; // 0, Yes
  __property Word_2k::VariablesPtr Variables={ read=Get_Variables }; // 0, Yes
  __property Word_2k::MailMergePtr MailMerge={ read=Get_MailMerge }; // 0, Yes
  __property Word_2k::EnvelopePtr Envelope={ read=Get_Envelope }; // 0, Yes
  __property BSTR FullName={ read=Get_FullName }; // 0, No
  __property Word_2k::RevisionsPtr Revisions={ read=Get_Revisions }; // 0, Yes
  __property Word_2k::TablesOfContentsPtr TablesOfContents={ read=Get_TablesOfContents }; // 0, Yes
  __property Word_2k::TablesOfAuthoritiesPtr TablesOfAuthorities={ read=Get_TablesOfAuthorities }; // 0, Yes
  __property Word_2k::WindozPtr Windoz={ read=Get_Windoz }; // 0, Yes
  __property Word_2k::RoutingSlipPtr RoutingSlip={ read=Get_RoutingSlip }; // 0, Yes
  __property TOLEBOOL Routed={ read=Get_Routed }; // 0, No
  __property Word_2k::TablesOfAuthoritiesCategoriesPtr TablesOfAuthoritiesCategories={ read=Get_TablesOfAuthoritiesCategories }; // 0, Yes
  __property Word_2k::IndexesPtr Indexes={ read=Get_Indexes }; // 0, Yes
  __property Word_2k::RangePtr Content={ read=Get_Content }; // 0, Yes
  __property Word_2k::WINDOWPtr ActiveWindow={ read=Get_ActiveWindow }; // 0, Yes
  __property TOLEBOOL ReadOnly={ read=Get_ReadOnly }; // 0, No
  __property Word_2k::SubdocumentsPtr Subdocuments={ read=Get_Subdocuments }; // 0, Yes
  __property TOLEBOOL IsMasterDocument={ read=Get_IsMasterDocument }; // 0, No
  __property TOLEBOOL Compatibility[Word_2k::WdCompatibility Type]={ read=Get_Compatibility, write=Set_Compatibility }; // 0, No
  __property Word_2k::StoryRangesPtr StoryRanges={ read=Get_StoryRanges }; // 0, Yes
  __property Office_2k::CommandBarsPtr CommandBars={ read=Get_CommandBars }; // 0, Yes
  __property TOLEBOOL IsSubdocument={ read=Get_IsSubdocument }; // 0, No
  __property long SaveFormat={ read=Get_SaveFormat }; // 0, No
  __property Word_2k::WdProtectionType ProtectionType={ read=Get_ProtectionType }; // 0, No
  __property Word_2k::HyperlinksPtr Hyperlinks={ read=Get_Hyperlinks }; // 0, Yes
  __property Word_2k::ShapesPtr Shapes={ read=Get_Shapes }; // 0, Yes
  __property Word_2k::ListTemplatesPtr ListTemplates={ read=Get_ListTemplates }; // 0, Yes
  __property Word_2k::ListsPtr Lists={ read=Get_Lists }; // 0, Yes
  __property Word_2k::InlineShapesPtr InlineShapes={ read=Get_InlineShapes }; // 0, Yes
  __property Word_2k::VersionsPtr Versions={ read=Get_Versions }; // 0, Yes
  __property LPDISPATCH Container={ read=Get_Container }; // 0, No
  __property Word_2k::ListParagraphsPtr ListParagraphs={ read=Get_ListParagraphs }; // 0, Yes
  __property BSTR Password={ write=Set_Password }; // 0, No
  __property BSTR WritePassword={ write=Set_WritePassword }; // 0, No
  __property TOLEBOOL HasPassword={ read=Get_HasPassword }; // 0, No
  __property TOLEBOOL WriteReserved={ read=Get_WriteReserved }; // 0, No
  __property BSTR ActiveWritingStyle[TVariant* LanguageID]={ read=Get_ActiveWritingStyle, write=Set_ActiveWritingStyle }; // 0, No
  __property Word_2k::MailerPtr Mailer={ read=Get_Mailer }; // 0, Yes
  __property Word_2k::ReadabilityStatisticsPtr ReadabilityStatistics={ read=Get_ReadabilityStatistics }; // 0, Yes
  __property Word_2k::ProofreadingErrorsPtr GrammaticalErrors={ read=Get_GrammaticalErrors }; // 0, Yes
  __property Word_2k::ProofreadingErrorsPtr SpellingErrors={ read=Get_SpellingErrors }; // 0, Yes
  __property Vbide_2k::VBProjectPtr VBProject={ read=Get_VBProject }; // 0, Yes
  __property TOLEBOOL FormsDesign={ read=Get_FormsDesign }; // 0, No
  __property BSTR CodeName={ read=Get_CodeName }; // 0, No
  __property BSTR ActiveTheme={ read=Get_ActiveTheme }; // 0, No
  __property BSTR ActiveThemeDisplayName={ read=Get_ActiveThemeDisplayName }; // 0, No
  __property Word_2k::EmailPtr Email={ read=Get_Email }; // 0, Yes
  __property Office_2k::ScriptsPtr Scripts={ read=Get_Scripts }; // 0, Yes
  __property Word_2k::FramesetPtr Frameset={ read=Get_Frameset }; // 0, Yes
  __property Office_2k::HTMLProjectPtr HTMLProject={ read=Get_HTMLProject }; // 0, Yes
  __property Word_2k::WebOptionsPtr WebOptions={ read=Get_WebOptions }; // 0, Yes
  __property Office_2k::MsoEncoding OpenEncoding={ read=Get_OpenEncoding }; // 0, No
  __property TOLEBOOL VBASigned={ read=Get_VBASigned }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL AutoHyphenation={ read=Get_AutoHyphenation, write=Set_AutoHyphenation, stored=false }; // 0, No
  __property TOLEBOOL HyphenateCaps={ read=Get_HyphenateCaps, write=Set_HyphenateCaps, stored=false }; // 0, No
  __property long HyphenationZone={ read=Get_HyphenationZone, write=Set_HyphenationZone, stored=false }; // 0, No
  __property long ConsecutiveHyphensLimit={ read=Get_ConsecutiveHyphensLimit, write=Set_ConsecutiveHyphensLimit, stored=false }; // 0, No
  __property Word_2k::PageSetupPtr PageSetup={ read=Get_PageSetup, write=Set_PageSetup, stored=false }; // 0, Yes
  __property TOLEBOOL HasRoutingSlip={ read=Get_HasRoutingSlip, write=Set_HasRoutingSlip, stored=false }; // 0, No
  __property TOLEBOOL Saved={ read=Get_Saved, write=Set_Saved, stored=false }; // 0, No
  __property Word_2k::WdDocumentKind Kind={ read=Get_Kind, write=Set_Kind, stored=false }; // 0, No
  __property float DefaultTabStop={ read=Get_DefaultTabStop, write=Set_DefaultTabStop, stored=false }; // 0, No
  __property TOLEBOOL EmbedTrueTypeFonts={ read=Get_EmbedTrueTypeFonts, write=Set_EmbedTrueTypeFonts, stored=false }; // 0, No
  __property TOLEBOOL SaveFormsData={ read=Get_SaveFormsData, write=Set_SaveFormsData, stored=false }; // 0, No
  __property TOLEBOOL ReadOnlyRecommended={ read=Get_ReadOnlyRecommended, write=Set_ReadOnlyRecommended, stored=false }; // 0, No
  __property TOLEBOOL SaveSubsetFonts={ read=Get_SaveSubsetFonts, write=Set_SaveSubsetFonts, stored=false }; // 0, No
  __property TOLEBOOL UpdateStylesOnOpen={ read=Get_UpdateStylesOnOpen, write=Set_UpdateStylesOnOpen, stored=false }; // 0, No
  __property Word_2k::ShapePtr Background={ read=Get_Background, write=Set_Background, stored=false }; // 0, Yes
  __property TOLEBOOL GrammarChecked={ read=Get_GrammarChecked, write=Set_GrammarChecked, stored=false }; // 0, No
  __property TOLEBOOL SpellingChecked={ read=Get_SpellingChecked, write=Set_SpellingChecked, stored=false }; // 0, No
  __property TOLEBOOL ShowGrammaticalErrors={ read=Get_ShowGrammaticalErrors, write=Set_ShowGrammaticalErrors, stored=false }; // 0, No
  __property TOLEBOOL ShowSpellingErrors={ read=Get_ShowSpellingErrors, write=Set_ShowSpellingErrors, stored=false }; // 0, No
  __property TOLEBOOL ShowSummary={ read=Get_ShowSummary, write=Set_ShowSummary, stored=false }; // 0, No
  __property Word_2k::WdSummaryMode SummaryViewMode={ read=Get_SummaryViewMode, write=Set_SummaryViewMode, stored=false }; // 0, No
  __property long SummaryLength={ read=Get_SummaryLength, write=Set_SummaryLength, stored=false }; // 0, No
  __property TOLEBOOL PrintFractionalWidths={ read=Get_PrintFractionalWidths, write=Set_PrintFractionalWidths, stored=false }; // 0, No
  __property TOLEBOOL PrintPostScriptOverText={ read=Get_PrintPostScriptOverText, write=Set_PrintPostScriptOverText, stored=false }; // 0, No
  __property TOLEBOOL PrintFormsData={ read=Get_PrintFormsData, write=Set_PrintFormsData, stored=false }; // 0, No
  __property TOLEBOOL UserControl={ read=Get_UserControl, write=Set_UserControl, stored=false }; // 0, No
  __property TOLEBOOL HasMailer={ read=Get_HasMailer, write=Set_HasMailer, stored=false }; // 0, No
  __property BSTR _CodeName={ read=Get__CodeName, write=Set__CodeName, stored=false }; // 0, No
  __property TOLEBOOL SnapToGrid={ read=Get_SnapToGrid, write=Set_SnapToGrid, stored=false }; // 0, No
  __property TOLEBOOL SnapToShapes={ read=Get_SnapToShapes, write=Set_SnapToShapes, stored=false }; // 0, No
  __property float GridDistanceHorizontal={ read=Get_GridDistanceHorizontal, write=Set_GridDistanceHorizontal, stored=false }; // 0, No
  __property float GridDistanceVertical={ read=Get_GridDistanceVertical, write=Set_GridDistanceVertical, stored=false }; // 0, No
  __property float GridOriginHorizontal={ read=Get_GridOriginHorizontal, write=Set_GridOriginHorizontal, stored=false }; // 0, No
  __property float GridOriginVertical={ read=Get_GridOriginVertical, write=Set_GridOriginVertical, stored=false }; // 0, No
  __property long GridSpaceBetweenHorizontalLines={ read=Get_GridSpaceBetweenHorizontalLines, write=Set_GridSpaceBetweenHorizontalLines, stored=false }; // 0, No
  __property long GridSpaceBetweenVerticalLines={ read=Get_GridSpaceBetweenVerticalLines, write=Set_GridSpaceBetweenVerticalLines, stored=false }; // 0, No
  __property TOLEBOOL GridOriginFromMargin={ read=Get_GridOriginFromMargin, write=Set_GridOriginFromMargin, stored=false }; // 0, No
  __property TOLEBOOL KerningByAlgorithm={ read=Get_KerningByAlgorithm, write=Set_KerningByAlgorithm, stored=false }; // 0, No
  __property Word_2k::WdJustificationMode JustificationMode={ read=Get_JustificationMode, write=Set_JustificationMode, stored=false }; // 0, No
  __property Word_2k::WdFarEastLineBreakLevel FarEastLineBreakLevel={ read=Get_FarEastLineBreakLevel, write=Set_FarEastLineBreakLevel, stored=false }; // 0, No
  __property BSTR NoLineBreakBefore={ read=Get_NoLineBreakBefore, write=Set_NoLineBreakBefore, stored=false }; // 0, No
  __property BSTR NoLineBreakAfter={ read=Get_NoLineBreakAfter, write=Set_NoLineBreakAfter, stored=false }; // 0, No
  __property TOLEBOOL TrackRevisions={ read=Get_TrackRevisions, write=Set_TrackRevisions, stored=false }; // 0, No
  __property TOLEBOOL PrintRevisions={ read=Get_PrintRevisions, write=Set_PrintRevisions, stored=false }; // 0, No
  __property TOLEBOOL ShowRevisions={ read=Get_ShowRevisions, write=Set_ShowRevisions, stored=false }; // 0, No
  __property TOLEBOOL LanguageDetected={ read=Get_LanguageDetected, write=Set_LanguageDetected, stored=false }; // 0, No
  __property Word_2k::WdFarEastLineBreakLanguageID FarEastLineBreakLanguage={ read=Get_FarEastLineBreakLanguage, write=Set_FarEastLineBreakLanguage, stored=false }; // 0, No
  __property Office_2k::MsoEncoding SaveEncoding={ read=Get_SaveEncoding, write=Set_SaveEncoding, stored=false }; // 0, No
  __property TOLEBOOL OptimizeForWord97={ read=Get_OptimizeForWord97, write=Set_OptimizeForWord97, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnNew;
  TNotifyEvent                   FOnOpen;
  TNotifyEvent                   FOnClose;
__published:
  __property TNotifyEvent OnNew={ read=FOnNew, write=FOnNew };
  __property TNotifyEvent OnOpen={ read=FOnOpen, write=FOnOpen };
  __property TNotifyEvent OnClose={ read=FOnClose, write=FOnClose };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordFont
// Help String      : 
// Default Interface: _Font
// Def. Intf. Object: _FontPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordFont : public Oleserver::TOleServer
{
  _FontPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordFont(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _FontPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_FontPtr intf);


  /*CoClassWriteArrayPropMethods*/
  Word_2k::WordApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  long __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  Word_2k::WordFontPtr __fastcall Get_Duplicate(void)
  {
    return GetDefaultInterface()->get_Duplicate();
  }

  long __fastcall Get_Bold(void)
  {
    return GetDefaultInterface()->get_Bold();
  }

  void __fastcall Set_Bold(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Bold(prop/*[in]*/);
  }

  long __fastcall Get_Italic(void)
  {
    return GetDefaultInterface()->get_Italic();
  }

  void __fastcall Set_Italic(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Italic(prop/*[in]*/);
  }

  long __fastcall Get_Hidden(void)
  {
    return GetDefaultInterface()->get_Hidden();
  }

  void __fastcall Set_Hidden(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Hidden(prop/*[in]*/);
  }

  long __fastcall Get_SmallCaps(void)
  {
    return GetDefaultInterface()->get_SmallCaps();
  }

  void __fastcall Set_SmallCaps(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SmallCaps(prop/*[in]*/);
  }

  long __fastcall Get_AllCaps(void)
  {
    return GetDefaultInterface()->get_AllCaps();
  }

  void __fastcall Set_AllCaps(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AllCaps(prop/*[in]*/);
  }

  long __fastcall Get_StrikeThrough(void)
  {
    return GetDefaultInterface()->get_StrikeThrough();
  }

  void __fastcall Set_StrikeThrough(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_StrikeThrough(prop/*[in]*/);
  }

  long __fastcall Get_DoubleStrikeThrough(void)
  {
    return GetDefaultInterface()->get_DoubleStrikeThrough();
  }

  void __fastcall Set_DoubleStrikeThrough(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_DoubleStrikeThrough(prop/*[in]*/);
  }

  Word_2k::WdColorIndex __fastcall Get_ColorIndex(void)
  {
    return GetDefaultInterface()->get_ColorIndex();
  }

  void __fastcall Set_ColorIndex(Word_2k::WdColorIndex prop/*[in]*/)
  {
    GetDefaultInterface()->set_ColorIndex(prop/*[in]*/);
  }

  long __fastcall Get_Subscript(void)
  {
    return GetDefaultInterface()->get_Subscript();
  }

  void __fastcall Set_Subscript(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Subscript(prop/*[in]*/);
  }

  long __fastcall Get_Superscript(void)
  {
    return GetDefaultInterface()->get_Superscript();
  }

  void __fastcall Set_Superscript(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Superscript(prop/*[in]*/);
  }

  Word_2k::WdUnderline __fastcall Get_Underline(void)
  {
    return GetDefaultInterface()->get_Underline();
  }

  void __fastcall Set_Underline(Word_2k::WdUnderline prop/*[in]*/)
  {
    GetDefaultInterface()->set_Underline(prop/*[in]*/);
  }

  float __fastcall Get_Size(void)
  {
    return GetDefaultInterface()->get_Size();
  }

  void __fastcall Set_Size(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_Size(prop/*[in]*/);
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  void __fastcall Set_Name(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Name(prop/*[in]*/);
  }

  long __fastcall Get_Position(void)
  {
    return GetDefaultInterface()->get_Position();
  }

  void __fastcall Set_Position(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Position(prop/*[in]*/);
  }

  float __fastcall Get_Spacing(void)
  {
    return GetDefaultInterface()->get_Spacing();
  }

  void __fastcall Set_Spacing(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_Spacing(prop/*[in]*/);
  }

  long __fastcall Get_Scaling(void)
  {
    return GetDefaultInterface()->get_Scaling();
  }

  void __fastcall Set_Scaling(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Scaling(prop/*[in]*/);
  }

  long __fastcall Get_Shadow(void)
  {
    return GetDefaultInterface()->get_Shadow();
  }

  void __fastcall Set_Shadow(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Shadow(prop/*[in]*/);
  }

  long __fastcall Get_Outline(void)
  {
    return GetDefaultInterface()->get_Outline();
  }

  void __fastcall Set_Outline(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Outline(prop/*[in]*/);
  }

  long __fastcall Get_Emboss(void)
  {
    return GetDefaultInterface()->get_Emboss();
  }

  void __fastcall Set_Emboss(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Emboss(prop/*[in]*/);
  }

  float __fastcall Get_Kerning(void)
  {
    return GetDefaultInterface()->get_Kerning();
  }

  void __fastcall Set_Kerning(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_Kerning(prop/*[in]*/);
  }

  long __fastcall Get_Engrave(void)
  {
    return GetDefaultInterface()->get_Engrave();
  }

  void __fastcall Set_Engrave(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Engrave(prop/*[in]*/);
  }

  Word_2k::WdAnimation __fastcall Get_Animation(void)
  {
    return GetDefaultInterface()->get_Animation();
  }

  void __fastcall Set_Animation(Word_2k::WdAnimation prop/*[in]*/)
  {
    GetDefaultInterface()->set_Animation(prop/*[in]*/);
  }

  Word_2k::BordersPtr __fastcall Get_Borders(void)
  {
    return GetDefaultInterface()->get_Borders();
  }

  void __fastcall Set_Borders(Word_2k::BordersPtr prop/*[in]*/)
  {
    GetDefaultInterface()->set_Borders(prop/*[in]*/);
  }

  Word_2k::ShadingPtr __fastcall Get_Shading(void)
  {
    return GetDefaultInterface()->get_Shading();
  }

  Word_2k::WdEmphasisMark __fastcall Get_EmphasisMark(void)
  {
    return GetDefaultInterface()->get_EmphasisMark();
  }

  void __fastcall Set_EmphasisMark(Word_2k::WdEmphasisMark prop/*[in]*/)
  {
    GetDefaultInterface()->set_EmphasisMark(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisableCharacterSpaceGrid(void)
  {
    return GetDefaultInterface()->get_DisableCharacterSpaceGrid();
  }

  void __fastcall Set_DisableCharacterSpaceGrid(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisableCharacterSpaceGrid(prop/*[in]*/);
  }

  BSTR __fastcall Get_NameFarEast(void)
  {
    return GetDefaultInterface()->get_NameFarEast();
  }

  void __fastcall Set_NameFarEast(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameFarEast(prop/*[in]*/);
  }

  BSTR __fastcall Get_NameAscii(void)
  {
    return GetDefaultInterface()->get_NameAscii();
  }

  void __fastcall Set_NameAscii(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameAscii(prop/*[in]*/);
  }

  BSTR __fastcall Get_NameOther(void)
  {
    return GetDefaultInterface()->get_NameOther();
  }

  void __fastcall Set_NameOther(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameOther(prop/*[in]*/);
  }

  Word_2k::WdColor __fastcall Get_Color(void)
  {
    return GetDefaultInterface()->get_Color();
  }

  void __fastcall Set_Color(Word_2k::WdColor prop/*[in]*/)
  {
    GetDefaultInterface()->set_Color(prop/*[in]*/);
  }

  long __fastcall Get_BoldBi(void)
  {
    return GetDefaultInterface()->get_BoldBi();
  }

  void __fastcall Set_BoldBi(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_BoldBi(prop/*[in]*/);
  }

  long __fastcall Get_ItalicBi(void)
  {
    return GetDefaultInterface()->get_ItalicBi();
  }

  void __fastcall Set_ItalicBi(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_ItalicBi(prop/*[in]*/);
  }

  float __fastcall Get_SizeBi(void)
  {
    return GetDefaultInterface()->get_SizeBi();
  }

  void __fastcall Set_SizeBi(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_SizeBi(prop/*[in]*/);
  }

  BSTR __fastcall Get_NameBi(void)
  {
    return GetDefaultInterface()->get_NameBi();
  }

  void __fastcall Set_NameBi(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameBi(prop/*[in]*/);
  }

  Word_2k::WdColorIndex __fastcall Get_ColorIndexBi(void)
  {
    return GetDefaultInterface()->get_ColorIndexBi();
  }

  void __fastcall Set_ColorIndexBi(Word_2k::WdColorIndex prop/*[in]*/)
  {
    GetDefaultInterface()->set_ColorIndexBi(prop/*[in]*/);
  }

  Word_2k::WdColor __fastcall Get_DiacriticColor(void)
  {
    return GetDefaultInterface()->get_DiacriticColor();
  }

  void __fastcall Set_DiacriticColor(Word_2k::WdColor prop/*[in]*/)
  {
    GetDefaultInterface()->set_DiacriticColor(prop/*[in]*/);
  }

  Word_2k::WdColor __fastcall Get_UnderlineColor(void)
  {
    return GetDefaultInterface()->get_UnderlineColor();
  }

  void __fastcall Set_UnderlineColor(Word_2k::WdColor prop/*[in]*/)
  {
    GetDefaultInterface()->set_UnderlineColor(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Grow(void)
  {
    GetDefaultInterface()->Grow();
  }

  void __fastcall Shrink(void)
  {
    GetDefaultInterface()->Shrink();
  }

  void __fastcall Reset(void)
  {
    GetDefaultInterface()->Reset();
  }

  void __fastcall SetAsTemplateDefault(void)
  {
    GetDefaultInterface()->SetAsTemplateDefault();
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property long Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property Word_2k::WordFontPtr Duplicate={ read=Get_Duplicate }; // 0, Yes
  __property Word_2k::ShadingPtr Shading={ read=Get_Shading }; // 0, Yes
  /*CoClassWriteProperties*/
  __property long Bold={ read=Get_Bold, write=Set_Bold, stored=false }; // 0, No
  __property long Italic={ read=Get_Italic, write=Set_Italic, stored=false }; // 0, No
  __property long Hidden={ read=Get_Hidden, write=Set_Hidden, stored=false }; // 0, No
  __property long SmallCaps={ read=Get_SmallCaps, write=Set_SmallCaps, stored=false }; // 0, No
  __property long AllCaps={ read=Get_AllCaps, write=Set_AllCaps, stored=false }; // 0, No
  __property long StrikeThrough={ read=Get_StrikeThrough, write=Set_StrikeThrough, stored=false }; // 0, No
  __property long DoubleStrikeThrough={ read=Get_DoubleStrikeThrough, write=Set_DoubleStrikeThrough, stored=false }; // 0, No
  __property Word_2k::WdColorIndex ColorIndex={ read=Get_ColorIndex, write=Set_ColorIndex, stored=false }; // 0, No
  __property long Subscript={ read=Get_Subscript, write=Set_Subscript, stored=false }; // 0, No
  __property long Superscript={ read=Get_Superscript, write=Set_Superscript, stored=false }; // 0, No
  __property Word_2k::WdUnderline Underline={ read=Get_Underline, write=Set_Underline, stored=false }; // 0, No
  __property float Size={ read=Get_Size, write=Set_Size, stored=false }; // 0, No
  __property BSTR Name={ read=Get_Name, write=Set_Name, stored=false }; // 0, No
  __property long Position={ read=Get_Position, write=Set_Position, stored=false }; // 0, No
  __property float Spacing={ read=Get_Spacing, write=Set_Spacing, stored=false }; // 0, No
  __property long Scaling={ read=Get_Scaling, write=Set_Scaling, stored=false }; // 0, No
  __property long Shadow={ read=Get_Shadow, write=Set_Shadow, stored=false }; // 0, No
  __property long Outline={ read=Get_Outline, write=Set_Outline, stored=false }; // 0, No
  __property long Emboss={ read=Get_Emboss, write=Set_Emboss, stored=false }; // 0, No
  __property float Kerning={ read=Get_Kerning, write=Set_Kerning, stored=false }; // 0, No
  __property long Engrave={ read=Get_Engrave, write=Set_Engrave, stored=false }; // 0, No
  __property Word_2k::WdAnimation Animation={ read=Get_Animation, write=Set_Animation, stored=false }; // 0, No
  __property Word_2k::BordersPtr Borders={ read=Get_Borders, write=Set_Borders, stored=false }; // 0, Yes
  __property Word_2k::WdEmphasisMark EmphasisMark={ read=Get_EmphasisMark, write=Set_EmphasisMark, stored=false }; // 0, No
  __property TOLEBOOL DisableCharacterSpaceGrid={ read=Get_DisableCharacterSpaceGrid, write=Set_DisableCharacterSpaceGrid, stored=false }; // 0, No
  __property BSTR NameFarEast={ read=Get_NameFarEast, write=Set_NameFarEast, stored=false }; // 0, No
  __property BSTR NameAscii={ read=Get_NameAscii, write=Set_NameAscii, stored=false }; // 0, No
  __property BSTR NameOther={ read=Get_NameOther, write=Set_NameOther, stored=false }; // 0, No
  __property Word_2k::WdColor Color={ read=Get_Color, write=Set_Color, stored=false }; // 0, No
  __property long BoldBi={ read=Get_BoldBi, write=Set_BoldBi, stored=false }; // 0, No
  __property long ItalicBi={ read=Get_ItalicBi, write=Set_ItalicBi, stored=false }; // 0, No
  __property float SizeBi={ read=Get_SizeBi, write=Set_SizeBi, stored=false }; // 0, No
  __property BSTR NameBi={ read=Get_NameBi, write=Set_NameBi, stored=false }; // 0, No
  __property Word_2k::WdColorIndex ColorIndexBi={ read=Get_ColorIndexBi, write=Set_ColorIndexBi, stored=false }; // 0, No
  __property Word_2k::WdColor DiacriticColor={ read=Get_DiacriticColor, write=Set_DiacriticColor, stored=false }; // 0, No
  __property Word_2k::WdColor UnderlineColor={ read=Get_UnderlineColor, write=Set_UnderlineColor, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordParagraphFormat
// Help String      : 
// Default Interface: _ParagraphFormat
// Def. Intf. Object: _ParagraphFormatPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordParagraphFormat : public Oleserver::TOleServer
{
  _ParagraphFormatPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordParagraphFormat(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ParagraphFormatPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ParagraphFormatPtr intf);


  /*CoClassWriteArrayPropMethods*/
  Word_2k::WordApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  long __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  Word_2k::WordParagraphFormatPtr __fastcall Get_Duplicate(void)
  {
    return GetDefaultInterface()->get_Duplicate();
  }

  TVariant __fastcall Get_Style(void)
  {
    return GetDefaultInterface()->get_Style();
  }

  void __fastcall Set_Style(TVariant* prop/*[in]*/)
  {
    GetDefaultInterface()->set_Style(prop/*[in]*/);
  }

  Word_2k::WdParagraphAlignment __fastcall Get_Alignment(void)
  {
    return GetDefaultInterface()->get_Alignment();
  }

  void __fastcall Set_Alignment(Word_2k::WdParagraphAlignment prop/*[in]*/)
  {
    GetDefaultInterface()->set_Alignment(prop/*[in]*/);
  }

  long __fastcall Get_KeepTogether(void)
  {
    return GetDefaultInterface()->get_KeepTogether();
  }

  void __fastcall Set_KeepTogether(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_KeepTogether(prop/*[in]*/);
  }

  long __fastcall Get_KeepWithNext(void)
  {
    return GetDefaultInterface()->get_KeepWithNext();
  }

  void __fastcall Set_KeepWithNext(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_KeepWithNext(prop/*[in]*/);
  }

  long __fastcall Get_PageBreakBefore(void)
  {
    return GetDefaultInterface()->get_PageBreakBefore();
  }

  void __fastcall Set_PageBreakBefore(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_PageBreakBefore(prop/*[in]*/);
  }

  long __fastcall Get_NoLineNumber(void)
  {
    return GetDefaultInterface()->get_NoLineNumber();
  }

  void __fastcall Set_NoLineNumber(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_NoLineNumber(prop/*[in]*/);
  }

  float __fastcall Get_RightIndent(void)
  {
    return GetDefaultInterface()->get_RightIndent();
  }

  void __fastcall Set_RightIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_RightIndent(prop/*[in]*/);
  }

  float __fastcall Get_LeftIndent(void)
  {
    return GetDefaultInterface()->get_LeftIndent();
  }

  void __fastcall Set_LeftIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LeftIndent(prop/*[in]*/);
  }

  float __fastcall Get_FirstLineIndent(void)
  {
    return GetDefaultInterface()->get_FirstLineIndent();
  }

  void __fastcall Set_FirstLineIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_FirstLineIndent(prop/*[in]*/);
  }

  float __fastcall Get_LineSpacing(void)
  {
    return GetDefaultInterface()->get_LineSpacing();
  }

  void __fastcall Set_LineSpacing(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineSpacing(prop/*[in]*/);
  }

  Word_2k::WdLineSpacing __fastcall Get_LineSpacingRule(void)
  {
    return GetDefaultInterface()->get_LineSpacingRule();
  }

  void __fastcall Set_LineSpacingRule(Word_2k::WdLineSpacing prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineSpacingRule(prop/*[in]*/);
  }

  float __fastcall Get_SpaceBefore(void)
  {
    return GetDefaultInterface()->get_SpaceBefore();
  }

  void __fastcall Set_SpaceBefore(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceBefore(prop/*[in]*/);
  }

  float __fastcall Get_SpaceAfter(void)
  {
    return GetDefaultInterface()->get_SpaceAfter();
  }

  void __fastcall Set_SpaceAfter(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceAfter(prop/*[in]*/);
  }

  long __fastcall Get_Hyphenation(void)
  {
    return GetDefaultInterface()->get_Hyphenation();
  }

  void __fastcall Set_Hyphenation(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Hyphenation(prop/*[in]*/);
  }

  long __fastcall Get_WidowControl(void)
  {
    return GetDefaultInterface()->get_WidowControl();
  }

  void __fastcall Set_WidowControl(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_WidowControl(prop/*[in]*/);
  }

  long __fastcall Get_FarEastLineBreakControl(void)
  {
    return GetDefaultInterface()->get_FarEastLineBreakControl();
  }

  void __fastcall Set_FarEastLineBreakControl(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_FarEastLineBreakControl(prop/*[in]*/);
  }

  long __fastcall Get_WordWrap(void)
  {
    return GetDefaultInterface()->get_WordWrap();
  }

  void __fastcall Set_WordWrap(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_WordWrap(prop/*[in]*/);
  }

  long __fastcall Get_HangingPunctuation(void)
  {
    return GetDefaultInterface()->get_HangingPunctuation();
  }

  void __fastcall Set_HangingPunctuation(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_HangingPunctuation(prop/*[in]*/);
  }

  long __fastcall Get_HalfWidthPunctuationOnTopOfLine(void)
  {
    return GetDefaultInterface()->get_HalfWidthPunctuationOnTopOfLine();
  }

  void __fastcall Set_HalfWidthPunctuationOnTopOfLine(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_HalfWidthPunctuationOnTopOfLine(prop/*[in]*/);
  }

  long __fastcall Get_AddSpaceBetweenFarEastAndAlpha(void)
  {
    return GetDefaultInterface()->get_AddSpaceBetweenFarEastAndAlpha();
  }

  void __fastcall Set_AddSpaceBetweenFarEastAndAlpha(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AddSpaceBetweenFarEastAndAlpha(prop/*[in]*/);
  }

  long __fastcall Get_AddSpaceBetweenFarEastAndDigit(void)
  {
    return GetDefaultInterface()->get_AddSpaceBetweenFarEastAndDigit();
  }

  void __fastcall Set_AddSpaceBetweenFarEastAndDigit(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AddSpaceBetweenFarEastAndDigit(prop/*[in]*/);
  }

  Word_2k::WdBaselineAlignment __fastcall Get_BaseLineAlignment(void)
  {
    return GetDefaultInterface()->get_BaseLineAlignment();
  }

  void __fastcall Set_BaseLineAlignment(Word_2k::WdBaselineAlignment prop/*[in]*/)
  {
    GetDefaultInterface()->set_BaseLineAlignment(prop/*[in]*/);
  }

  long __fastcall Get_AutoAdjustRightIndent(void)
  {
    return GetDefaultInterface()->get_AutoAdjustRightIndent();
  }

  void __fastcall Set_AutoAdjustRightIndent(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AutoAdjustRightIndent(prop/*[in]*/);
  }

  long __fastcall Get_DisableLineHeightGrid(void)
  {
    return GetDefaultInterface()->get_DisableLineHeightGrid();
  }

  void __fastcall Set_DisableLineHeightGrid(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisableLineHeightGrid(prop/*[in]*/);
  }

  Word_2k::TabStopsPtr __fastcall Get_TabStops(void)
  {
    return GetDefaultInterface()->get_TabStops();
  }

  void __fastcall Set_TabStops(Word_2k::TabStopsPtr prop/*[in]*/)
  {
    GetDefaultInterface()->set_TabStops(prop/*[in]*/);
  }

  Word_2k::BordersPtr __fastcall Get_Borders(void)
  {
    return GetDefaultInterface()->get_Borders();
  }

  void __fastcall Set_Borders(Word_2k::BordersPtr prop/*[in]*/)
  {
    GetDefaultInterface()->set_Borders(prop/*[in]*/);
  }

  Word_2k::ShadingPtr __fastcall Get_Shading(void)
  {
    return GetDefaultInterface()->get_Shading();
  }

  Word_2k::WdOutlineLevel __fastcall Get_OutlineLevel(void)
  {
    return GetDefaultInterface()->get_OutlineLevel();
  }

  void __fastcall Set_OutlineLevel(Word_2k::WdOutlineLevel prop/*[in]*/)
  {
    GetDefaultInterface()->set_OutlineLevel(prop/*[in]*/);
  }

  float __fastcall Get_CharacterUnitRightIndent(void)
  {
    return GetDefaultInterface()->get_CharacterUnitRightIndent();
  }

  void __fastcall Set_CharacterUnitRightIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_CharacterUnitRightIndent(prop/*[in]*/);
  }

  float __fastcall Get_CharacterUnitLeftIndent(void)
  {
    return GetDefaultInterface()->get_CharacterUnitLeftIndent();
  }

  void __fastcall Set_CharacterUnitLeftIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_CharacterUnitLeftIndent(prop/*[in]*/);
  }

  float __fastcall Get_CharacterUnitFirstLineIndent(void)
  {
    return GetDefaultInterface()->get_CharacterUnitFirstLineIndent();
  }

  void __fastcall Set_CharacterUnitFirstLineIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_CharacterUnitFirstLineIndent(prop/*[in]*/);
  }

  float __fastcall Get_LineUnitBefore(void)
  {
    return GetDefaultInterface()->get_LineUnitBefore();
  }

  void __fastcall Set_LineUnitBefore(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineUnitBefore(prop/*[in]*/);
  }

  float __fastcall Get_LineUnitAfter(void)
  {
    return GetDefaultInterface()->get_LineUnitAfter();
  }

  void __fastcall Set_LineUnitAfter(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineUnitAfter(prop/*[in]*/);
  }

  Word_2k::WdReadingOrder __fastcall Get_ReadingOrder(void)
  {
    return GetDefaultInterface()->get_ReadingOrder();
  }

  void __fastcall Set_ReadingOrder(Word_2k::WdReadingOrder prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReadingOrder(prop/*[in]*/);
  }

  long __fastcall Get_SpaceBeforeAuto(void)
  {
    return GetDefaultInterface()->get_SpaceBeforeAuto();
  }

  void __fastcall Set_SpaceBeforeAuto(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceBeforeAuto(prop/*[in]*/);
  }

  long __fastcall Get_SpaceAfterAuto(void)
  {
    return GetDefaultInterface()->get_SpaceAfterAuto();
  }

  void __fastcall Set_SpaceAfterAuto(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceAfterAuto(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall CloseUp(void)
  {
    GetDefaultInterface()->CloseUp();
  }

  void __fastcall OpenUp(void)
  {
    GetDefaultInterface()->OpenUp();
  }

  void __fastcall OpenOrCloseUp(void)
  {
    GetDefaultInterface()->OpenOrCloseUp();
  }

  void __fastcall TabHangingIndent(short Count/*[in]*/)
  {
    GetDefaultInterface()->TabHangingIndent(Count/*[in]*/);
  }

  void __fastcall TabIndent(short Count/*[in]*/)
  {
    GetDefaultInterface()->TabIndent(Count/*[in]*/);
  }

  void __fastcall Reset(void)
  {
    GetDefaultInterface()->Reset();
  }

  void __fastcall Space1(void)
  {
    GetDefaultInterface()->Space1();
  }

  void __fastcall Space15(void)
  {
    GetDefaultInterface()->Space15();
  }

  void __fastcall Space2(void)
  {
    GetDefaultInterface()->Space2();
  }

  void __fastcall IndentCharWidth(short Count/*[in]*/)
  {
    GetDefaultInterface()->IndentCharWidth(Count/*[in]*/);
  }

  void __fastcall IndentFirstLineCharWidth(short Count/*[in]*/)
  {
    GetDefaultInterface()->IndentFirstLineCharWidth(Count/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property long Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property Word_2k::WordParagraphFormatPtr Duplicate={ read=Get_Duplicate }; // 0, Yes
  __property Word_2k::ShadingPtr Shading={ read=Get_Shading }; // 0, Yes
  /*CoClassWriteProperties*/
  __property Word_2k::WdParagraphAlignment Alignment={ read=Get_Alignment, write=Set_Alignment, stored=false }; // 0, No
  __property long KeepTogether={ read=Get_KeepTogether, write=Set_KeepTogether, stored=false }; // 0, No
  __property long KeepWithNext={ read=Get_KeepWithNext, write=Set_KeepWithNext, stored=false }; // 0, No
  __property long PageBreakBefore={ read=Get_PageBreakBefore, write=Set_PageBreakBefore, stored=false }; // 0, No
  __property long NoLineNumber={ read=Get_NoLineNumber, write=Set_NoLineNumber, stored=false }; // 0, No
  __property float RightIndent={ read=Get_RightIndent, write=Set_RightIndent, stored=false }; // 0, No
  __property float LeftIndent={ read=Get_LeftIndent, write=Set_LeftIndent, stored=false }; // 0, No
  __property float FirstLineIndent={ read=Get_FirstLineIndent, write=Set_FirstLineIndent, stored=false }; // 0, No
  __property float LineSpacing={ read=Get_LineSpacing, write=Set_LineSpacing, stored=false }; // 0, No
  __property Word_2k::WdLineSpacing LineSpacingRule={ read=Get_LineSpacingRule, write=Set_LineSpacingRule, stored=false }; // 0, No
  __property float SpaceBefore={ read=Get_SpaceBefore, write=Set_SpaceBefore, stored=false }; // 0, No
  __property float SpaceAfter={ read=Get_SpaceAfter, write=Set_SpaceAfter, stored=false }; // 0, No
  __property long Hyphenation={ read=Get_Hyphenation, write=Set_Hyphenation, stored=false }; // 0, No
  __property long WidowControl={ read=Get_WidowControl, write=Set_WidowControl, stored=false }; // 0, No
  __property long FarEastLineBreakControl={ read=Get_FarEastLineBreakControl, write=Set_FarEastLineBreakControl, stored=false }; // 0, No
  __property long WordWrap={ read=Get_WordWrap, write=Set_WordWrap, stored=false }; // 0, No
  __property long HangingPunctuation={ read=Get_HangingPunctuation, write=Set_HangingPunctuation, stored=false }; // 0, No
  __property long HalfWidthPunctuationOnTopOfLine={ read=Get_HalfWidthPunctuationOnTopOfLine, write=Set_HalfWidthPunctuationOnTopOfLine, stored=false }; // 0, No
  __property long AddSpaceBetweenFarEastAndAlpha={ read=Get_AddSpaceBetweenFarEastAndAlpha, write=Set_AddSpaceBetweenFarEastAndAlpha, stored=false }; // 0, No
  __property long AddSpaceBetweenFarEastAndDigit={ read=Get_AddSpaceBetweenFarEastAndDigit, write=Set_AddSpaceBetweenFarEastAndDigit, stored=false }; // 0, No
  __property Word_2k::WdBaselineAlignment BaseLineAlignment={ read=Get_BaseLineAlignment, write=Set_BaseLineAlignment, stored=false }; // 0, No
  __property long AutoAdjustRightIndent={ read=Get_AutoAdjustRightIndent, write=Set_AutoAdjustRightIndent, stored=false }; // 0, No
  __property long DisableLineHeightGrid={ read=Get_DisableLineHeightGrid, write=Set_DisableLineHeightGrid, stored=false }; // 0, No
  __property Word_2k::TabStopsPtr TabStops={ read=Get_TabStops, write=Set_TabStops, stored=false }; // 0, Yes
  __property Word_2k::BordersPtr Borders={ read=Get_Borders, write=Set_Borders, stored=false }; // 0, Yes
  __property Word_2k::WdOutlineLevel OutlineLevel={ read=Get_OutlineLevel, write=Set_OutlineLevel, stored=false }; // 0, No
  __property float CharacterUnitRightIndent={ read=Get_CharacterUnitRightIndent, write=Set_CharacterUnitRightIndent, stored=false }; // 0, No
  __property float CharacterUnitLeftIndent={ read=Get_CharacterUnitLeftIndent, write=Set_CharacterUnitLeftIndent, stored=false }; // 0, No
  __property float CharacterUnitFirstLineIndent={ read=Get_CharacterUnitFirstLineIndent, write=Set_CharacterUnitFirstLineIndent, stored=false }; // 0, No
  __property float LineUnitBefore={ read=Get_LineUnitBefore, write=Set_LineUnitBefore, stored=false }; // 0, No
  __property float LineUnitAfter={ read=Get_LineUnitAfter, write=Set_LineUnitAfter, stored=false }; // 0, No
  __property Word_2k::WdReadingOrder ReadingOrder={ read=Get_ReadingOrder, write=Set_ReadingOrder, stored=false }; // 0, No
  __property long SpaceBeforeAuto={ read=Get_SpaceBeforeAuto, write=Set_SpaceBeforeAuto, stored=false }; // 0, No
  __property long SpaceAfterAuto={ read=Get_SpaceAfterAuto, write=Set_SpaceAfterAuto, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordLetterContent
// Help String      : 
// Default Interface: _LetterContent
// Def. Intf. Object: _LetterContentPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordLetterContent : public Oleserver::TOleServer
{
  _LetterContentPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordLetterContent(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _LetterContentPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_LetterContentPtr intf);


  /*CoClassWriteArrayPropMethods*/
  Word_2k::WordApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  long __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  Word_2k::WordLetterContentPtr __fastcall Get_Duplicate(void)
  {
    return GetDefaultInterface()->get_Duplicate();
  }

  BSTR __fastcall Get_DateFormat(void)
  {
    return GetDefaultInterface()->get_DateFormat();
  }

  void __fastcall Set_DateFormat(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_DateFormat(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_IncludeHeaderFooter(void)
  {
    return GetDefaultInterface()->get_IncludeHeaderFooter();
  }

  void __fastcall Set_IncludeHeaderFooter(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_IncludeHeaderFooter(prop/*[in]*/);
  }

  BSTR __fastcall Get_PageDesign(void)
  {
    return GetDefaultInterface()->get_PageDesign();
  }

  void __fastcall Set_PageDesign(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_PageDesign(prop/*[in]*/);
  }

  Word_2k::WdLetterStyle __fastcall Get_LetterStyle(void)
  {
    return GetDefaultInterface()->get_LetterStyle();
  }

  void __fastcall Set_LetterStyle(Word_2k::WdLetterStyle prop/*[in]*/)
  {
    GetDefaultInterface()->set_LetterStyle(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_Letterhead(void)
  {
    return GetDefaultInterface()->get_Letterhead();
  }

  void __fastcall Set_Letterhead(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Letterhead(prop/*[in]*/);
  }

  Word_2k::WdLetterheadLocation __fastcall Get_LetterheadLocation(void)
  {
    return GetDefaultInterface()->get_LetterheadLocation();
  }

  void __fastcall Set_LetterheadLocation(Word_2k::WdLetterheadLocation prop/*[in]*/)
  {
    GetDefaultInterface()->set_LetterheadLocation(prop/*[in]*/);
  }

  float __fastcall Get_LetterheadSize(void)
  {
    return GetDefaultInterface()->get_LetterheadSize();
  }

  void __fastcall Set_LetterheadSize(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LetterheadSize(prop/*[in]*/);
  }

  BSTR __fastcall Get_RecipientName(void)
  {
    return GetDefaultInterface()->get_RecipientName();
  }

  void __fastcall Set_RecipientName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientName(prop/*[in]*/);
  }

  BSTR __fastcall Get_RecipientAddress(void)
  {
    return GetDefaultInterface()->get_RecipientAddress();
  }

  void __fastcall Set_RecipientAddress(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientAddress(prop/*[in]*/);
  }

  BSTR __fastcall Get_Salutation(void)
  {
    return GetDefaultInterface()->get_Salutation();
  }

  void __fastcall Set_Salutation(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Salutation(prop/*[in]*/);
  }

  Word_2k::WdSalutationType __fastcall Get_SalutationType(void)
  {
    return GetDefaultInterface()->get_SalutationType();
  }

  void __fastcall Set_SalutationType(Word_2k::WdSalutationType prop/*[in]*/)
  {
    GetDefaultInterface()->set_SalutationType(prop/*[in]*/);
  }

  BSTR __fastcall Get_RecipientReference(void)
  {
    return GetDefaultInterface()->get_RecipientReference();
  }

  void __fastcall Set_RecipientReference(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientReference(prop/*[in]*/);
  }

  BSTR __fastcall Get_MailingInstructions(void)
  {
    return GetDefaultInterface()->get_MailingInstructions();
  }

  void __fastcall Set_MailingInstructions(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_MailingInstructions(prop/*[in]*/);
  }

  BSTR __fastcall Get_AttentionLine(void)
  {
    return GetDefaultInterface()->get_AttentionLine();
  }

  void __fastcall Set_AttentionLine(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_AttentionLine(prop/*[in]*/);
  }

  BSTR __fastcall Get_Subject(void)
  {
    return GetDefaultInterface()->get_Subject();
  }

  void __fastcall Set_Subject(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Subject(prop/*[in]*/);
  }

  long __fastcall Get_EnclosureNumber(void)
  {
    return GetDefaultInterface()->get_EnclosureNumber();
  }

  void __fastcall Set_EnclosureNumber(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_EnclosureNumber(prop/*[in]*/);
  }

  BSTR __fastcall Get_CCList(void)
  {
    return GetDefaultInterface()->get_CCList();
  }

  void __fastcall Set_CCList(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_CCList(prop/*[in]*/);
  }

  BSTR __fastcall Get_ReturnAddress(void)
  {
    return GetDefaultInterface()->get_ReturnAddress();
  }

  void __fastcall Set_ReturnAddress(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReturnAddress(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderName(void)
  {
    return GetDefaultInterface()->get_SenderName();
  }

  void __fastcall Set_SenderName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderName(prop/*[in]*/);
  }

  BSTR __fastcall Get_Closing(void)
  {
    return GetDefaultInterface()->get_Closing();
  }

  void __fastcall Set_Closing(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Closing(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderCompany(void)
  {
    return GetDefaultInterface()->get_SenderCompany();
  }

  void __fastcall Set_SenderCompany(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderCompany(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderJobTitle(void)
  {
    return GetDefaultInterface()->get_SenderJobTitle();
  }

  void __fastcall Set_SenderJobTitle(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderJobTitle(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderInitials(void)
  {
    return GetDefaultInterface()->get_SenderInitials();
  }

  void __fastcall Set_SenderInitials(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderInitials(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_InfoBlock(void)
  {
    return GetDefaultInterface()->get_InfoBlock();
  }

  void __fastcall Set_InfoBlock(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_InfoBlock(prop/*[in]*/);
  }

  BSTR __fastcall Get_RecipientCode(void)
  {
    return GetDefaultInterface()->get_RecipientCode();
  }

  void __fastcall Set_RecipientCode(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientCode(prop/*[in]*/);
  }

  Word_2k::WdSalutationGender __fastcall Get_RecipientGender(void)
  {
    return GetDefaultInterface()->get_RecipientGender();
  }

  void __fastcall Set_RecipientGender(Word_2k::WdSalutationGender prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientGender(prop/*[in]*/);
  }

  BSTR __fastcall Get_ReturnAddressShortForm(void)
  {
    return GetDefaultInterface()->get_ReturnAddressShortForm();
  }

  void __fastcall Set_ReturnAddressShortForm(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReturnAddressShortForm(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderCity(void)
  {
    return GetDefaultInterface()->get_SenderCity();
  }

  void __fastcall Set_SenderCity(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderCity(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderCode(void)
  {
    return GetDefaultInterface()->get_SenderCode();
  }

  void __fastcall Set_SenderCode(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderCode(prop/*[in]*/);
  }

  Word_2k::WdSalutationGender __fastcall Get_SenderGender(void)
  {
    return GetDefaultInterface()->get_SenderGender();
  }

  void __fastcall Set_SenderGender(Word_2k::WdSalutationGender prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderGender(prop/*[in]*/);
  }

  BSTR __fastcall Get_SenderReference(void)
  {
    return GetDefaultInterface()->get_SenderReference();
  }

  void __fastcall Set_SenderReference(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderReference(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property long Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property Word_2k::WordLetterContentPtr Duplicate={ read=Get_Duplicate }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR DateFormat={ read=Get_DateFormat, write=Set_DateFormat, stored=false }; // 0, No
  __property TOLEBOOL IncludeHeaderFooter={ read=Get_IncludeHeaderFooter, write=Set_IncludeHeaderFooter, stored=false }; // 0, No
  __property BSTR PageDesign={ read=Get_PageDesign, write=Set_PageDesign, stored=false }; // 0, No
  __property Word_2k::WdLetterStyle LetterStyle={ read=Get_LetterStyle, write=Set_LetterStyle, stored=false }; // 0, No
  __property TOLEBOOL Letterhead={ read=Get_Letterhead, write=Set_Letterhead, stored=false }; // 0, No
  __property Word_2k::WdLetterheadLocation LetterheadLocation={ read=Get_LetterheadLocation, write=Set_LetterheadLocation, stored=false }; // 0, No
  __property float LetterheadSize={ read=Get_LetterheadSize, write=Set_LetterheadSize, stored=false }; // 0, No
  __property BSTR RecipientName={ read=Get_RecipientName, write=Set_RecipientName, stored=false }; // 0, No
  __property BSTR RecipientAddress={ read=Get_RecipientAddress, write=Set_RecipientAddress, stored=false }; // 0, No
  __property BSTR Salutation={ read=Get_Salutation, write=Set_Salutation, stored=false }; // 0, No
  __property Word_2k::WdSalutationType SalutationType={ read=Get_SalutationType, write=Set_SalutationType, stored=false }; // 0, No
  __property BSTR RecipientReference={ read=Get_RecipientReference, write=Set_RecipientReference, stored=false }; // 0, No
  __property BSTR MailingInstructions={ read=Get_MailingInstructions, write=Set_MailingInstructions, stored=false }; // 0, No
  __property BSTR AttentionLine={ read=Get_AttentionLine, write=Set_AttentionLine, stored=false }; // 0, No
  __property BSTR Subject={ read=Get_Subject, write=Set_Subject, stored=false }; // 0, No
  __property long EnclosureNumber={ read=Get_EnclosureNumber, write=Set_EnclosureNumber, stored=false }; // 0, No
  __property BSTR CCList={ read=Get_CCList, write=Set_CCList, stored=false }; // 0, No
  __property BSTR ReturnAddress={ read=Get_ReturnAddress, write=Set_ReturnAddress, stored=false }; // 0, No
  __property BSTR SenderName={ read=Get_SenderName, write=Set_SenderName, stored=false }; // 0, No
  __property BSTR Closing={ read=Get_Closing, write=Set_Closing, stored=false }; // 0, No
  __property BSTR SenderCompany={ read=Get_SenderCompany, write=Set_SenderCompany, stored=false }; // 0, No
  __property BSTR SenderJobTitle={ read=Get_SenderJobTitle, write=Set_SenderJobTitle, stored=false }; // 0, No
  __property BSTR SenderInitials={ read=Get_SenderInitials, write=Set_SenderInitials, stored=false }; // 0, No
  __property TOLEBOOL InfoBlock={ read=Get_InfoBlock, write=Set_InfoBlock, stored=false }; // 0, No
  __property BSTR RecipientCode={ read=Get_RecipientCode, write=Set_RecipientCode, stored=false }; // 0, No
  __property Word_2k::WdSalutationGender RecipientGender={ read=Get_RecipientGender, write=Set_RecipientGender, stored=false }; // 0, No
  __property BSTR ReturnAddressShortForm={ read=Get_ReturnAddressShortForm, write=Set_ReturnAddressShortForm, stored=false }; // 0, No
  __property BSTR SenderCity={ read=Get_SenderCity, write=Set_SenderCity, stored=false }; // 0, No
  __property BSTR SenderCode={ read=Get_SenderCode, write=Set_SenderCode, stored=false }; // 0, No
  __property Word_2k::WdSalutationGender SenderGender={ read=Get_SenderGender, write=Set_SenderGender, stored=false }; // 0, No
  __property BSTR SenderReference={ read=Get_SenderReference, write=Set_SenderReference, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. Object: _ApplicationPtr
// Def. Intf. DISP? : No
// Event   Interface: ApplicationEvents2
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TWordApplicationDocumentOpen)(System::TObject * Sender, 
                                                                   Word_2k::WordDocumentPtr Doc/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationDocumentBeforeClose)(System::TObject * Sender, 
                                                                          Word_2k::WordDocumentPtr Doc/*[in]*/, 
                                                                          TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationDocumentBeforePrint)(System::TObject * Sender, 
                                                                          Word_2k::WordDocumentPtr Doc/*[in]*/, 
                                                                          TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationDocumentBeforeSave)(System::TObject * Sender, 
                                                                         Word_2k::WordDocumentPtr Doc/*[in]*/, 
                                                                         TOLEBOOL* SaveAsUI/*[in]*/, 
                                                                         TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationNewDocument)(System::TObject * Sender, 
                                                                  Word_2k::WordDocumentPtr Doc/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowActivate)(System::TObject * Sender, 
                                                                     Word_2k::WordDocumentPtr Doc/*[in]*/, 
                                                                     Word_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowDeactivate)(System::TObject * Sender, 
                                                                       Word_2k::WordDocumentPtr Doc/*[in]*/, 
                                                                       Word_2k::WINDOWPtr Wn/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowSelectionChange)(System::TObject * Sender, 
                                                                            Word_2k::SelectionPtr Sel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowBeforeRightClick)(System::TObject * Sender, 
                                                                             Word_2k::SelectionPtr Sel/*[in]*/, 
                                                                             TOLEBOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowBeforeDoubleClick)(System::TObject * Sender, 
                                                                              Word_2k::SelectionPtr Sel/*[in]*/, 
                                                                              TOLEBOOL* Cancel/*[in]*/);

class PACKAGE TWordApplication : public Oleserver::TOleServer
{
  _ApplicationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordApplication(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ApplicationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ApplicationPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
  Word_2k::WordApplicationPtr __fastcall Get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

  long __fastcall Get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

  LPDISPATCH __fastcall Get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

  BSTR __fastcall Get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

  Word_2k::DocumentsPtr __fastcall Get_Documents(void)
  {
    return GetDefaultInterface()->get_Documents();
  }

  Word_2k::WindozPtr __fastcall Get_Windoz(void)
  {
    return GetDefaultInterface()->get_Windoz();
  }

  Word_2k::WordDocumentPtr __fastcall Get_ActiveDocument(void)
  {
    return GetDefaultInterface()->get_ActiveDocument();
  }

  Word_2k::WINDOWPtr __fastcall Get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

  Word_2k::SelectionPtr __fastcall Get_Selection(void)
  {
    return GetDefaultInterface()->get_Selection();
  }

  LPDISPATCH __fastcall Get_WordBasic(void)
  {
    return GetDefaultInterface()->get_WordBasic();
  }

  Word_2k::RecentFilesPtr __fastcall Get_RecentFiles(void)
  {
    return GetDefaultInterface()->get_RecentFiles();
  }

  Word_2k::TemplatePtr __fastcall Get_NormalTemplate(void)
  {
    return GetDefaultInterface()->get_NormalTemplate();
  }

  Word_2k::SYSTEMPtr __fastcall Get_System(void)
  {
    return GetDefaultInterface()->get_System();
  }

  Word_2k::AutoCorrectPtr __fastcall Get_AutoCorrect(void)
  {
    return GetDefaultInterface()->get_AutoCorrect();
  }

  Word_2k::FontNamesPtr __fastcall Get_FontNames(void)
  {
    return GetDefaultInterface()->get_FontNames();
  }

  Word_2k::FontNamesPtr __fastcall Get_LandscapeFontNames(void)
  {
    return GetDefaultInterface()->get_LandscapeFontNames();
  }

  Word_2k::FontNamesPtr __fastcall Get_PortraitFontNames(void)
  {
    return GetDefaultInterface()->get_PortraitFontNames();
  }

  Word_2k::LanguagesPtr __fastcall Get_Languages(void)
  {
    return GetDefaultInterface()->get_Languages();
  }

  Office_2k::AssistantPtr __fastcall Get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

  Word_2k::BrowserPtr __fastcall Get_Browser(void)
  {
    return GetDefaultInterface()->get_Browser();
  }

  Word_2k::FileConvertersPtr __fastcall Get_FileConverters(void)
  {
    return GetDefaultInterface()->get_FileConverters();
  }

  Word_2k::MailingLabelPtr __fastcall Get_MailingLabel(void)
  {
    return GetDefaultInterface()->get_MailingLabel();
  }

  Word_2k::DialogsPtr __fastcall Get_Dialogs(void)
  {
    return GetDefaultInterface()->get_Dialogs();
  }

  Word_2k::CaptionLabelsPtr __fastcall Get_CaptionLabels(void)
  {
    return GetDefaultInterface()->get_CaptionLabels();
  }

  Word_2k::AutoCaptionsPtr __fastcall Get_AutoCaptions(void)
  {
    return GetDefaultInterface()->get_AutoCaptions();
  }

  Word_2k::AddInsPtr __fastcall Get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

  TOLEBOOL __fastcall Get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

  void __fastcall Set_Visible(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(prop/*[in]*/);
  }

  BSTR __fastcall Get_Version(void)
  {
    return GetDefaultInterface()->get_Version();
  }

  TOLEBOOL __fastcall Get_ScreenUpdating(void)
  {
    return GetDefaultInterface()->get_ScreenUpdating();
  }

  void __fastcall Set_ScreenUpdating(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ScreenUpdating(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_PrintPreview(void)
  {
    return GetDefaultInterface()->get_PrintPreview();
  }

  void __fastcall Set_PrintPreview(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintPreview(prop/*[in]*/);
  }

  Word_2k::TasksPtr __fastcall Get_Tasks(void)
  {
    return GetDefaultInterface()->get_Tasks();
  }

  TOLEBOOL __fastcall Get_DisplayStatusBar(void)
  {
    return GetDefaultInterface()->get_DisplayStatusBar();
  }

  void __fastcall Set_DisplayStatusBar(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayStatusBar(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_SpecialMode(void)
  {
    return GetDefaultInterface()->get_SpecialMode();
  }

  long __fastcall Get_UsableWidth(void)
  {
    return GetDefaultInterface()->get_UsableWidth();
  }

  long __fastcall Get_UsableHeight(void)
  {
    return GetDefaultInterface()->get_UsableHeight();
  }

  TOLEBOOL __fastcall Get_MathCoprocessorAvailable(void)
  {
    return GetDefaultInterface()->get_MathCoprocessorAvailable();
  }

  TOLEBOOL __fastcall Get_MouseAvailable(void)
  {
    return GetDefaultInterface()->get_MouseAvailable();
  }

  TVariant __fastcall Get_International(Word_2k::WdInternationalIndex Index/*[in]*/)
  {
    return GetDefaultInterface()->get_International(Index/*[in]*/);
  }

  BSTR __fastcall Get_Build(void)
  {
    return GetDefaultInterface()->get_Build();
  }

  TOLEBOOL __fastcall Get_CapsLock(void)
  {
    return GetDefaultInterface()->get_CapsLock();
  }

  TOLEBOOL __fastcall Get_NumLock(void)
  {
    return GetDefaultInterface()->get_NumLock();
  }

  BSTR __fastcall Get_UserName(void)
  {
    return GetDefaultInterface()->get_UserName();
  }

  void __fastcall Set_UserName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserName(prop/*[in]*/);
  }

  BSTR __fastcall Get_UserInitials(void)
  {
    return GetDefaultInterface()->get_UserInitials();
  }

  void __fastcall Set_UserInitials(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserInitials(prop/*[in]*/);
  }

  BSTR __fastcall Get_UserAddress(void)
  {
    return GetDefaultInterface()->get_UserAddress();
  }

  void __fastcall Set_UserAddress(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserAddress(prop/*[in]*/);
  }

  LPDISPATCH __fastcall Get_MacroContainer(void)
  {
    return GetDefaultInterface()->get_MacroContainer();
  }

  TOLEBOOL __fastcall Get_DisplayRecentFiles(void)
  {
    return GetDefaultInterface()->get_DisplayRecentFiles();
  }

  void __fastcall Set_DisplayRecentFiles(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayRecentFiles(prop/*[in]*/);
  }

  Office_2k::CommandBarsPtr __fastcall Get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

  Word_2k::SynonymInfoPtr __fastcall Get_SynonymInfo(BSTR Word/*[in]*/, 
                                                     TVariant* LanguageID/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_SynonymInfo(Word/*[in]*/, LanguageID/*[in,opt]*/);
  }

  Vbide_2k::VBEPtr __fastcall Get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

  BSTR __fastcall Get_DefaultSaveFormat(void)
  {
    return GetDefaultInterface()->get_DefaultSaveFormat();
  }

  void __fastcall Set_DefaultSaveFormat(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSaveFormat(prop/*[in]*/);
  }

  Word_2k::ListGalleriesPtr __fastcall Get_ListGalleries(void)
  {
    return GetDefaultInterface()->get_ListGalleries();
  }

  BSTR __fastcall Get_ActivePrinter(void)
  {
    return GetDefaultInterface()->get_ActivePrinter();
  }

  void __fastcall Set_ActivePrinter(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(prop/*[in]*/);
  }

  Word_2k::TemplatesPtr __fastcall Get_Templates(void)
  {
    return GetDefaultInterface()->get_Templates();
  }

  LPDISPATCH __fastcall Get_CustomizationContext(void)
  {
    return GetDefaultInterface()->get_CustomizationContext();
  }

  void __fastcall Set_CustomizationContext(LPDISPATCH prop/*[in]*/)
  {
    GetDefaultInterface()->set_CustomizationContext(prop/*[in]*/);
  }

  Word_2k::KeyBindingsPtr __fastcall Get_KeyBindings(void)
  {
    return GetDefaultInterface()->get_KeyBindings();
  }

  Word_2k::KeysBoundToPtr __fastcall Get_KeysBoundTo(Word_2k::WdKeyCategory KeyCategory/*[in]*/, 
                                                     BSTR Command/*[in]*/, 
                                                     TVariant* CommandParameter/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_KeysBoundTo(KeyCategory/*[in]*/, Command/*[in]*/, 
                                                  CommandParameter/*[in,opt]*/);
  }

  Word_2k::KeyBindingPtr __fastcall Get_FindKey(long KeyCode/*[in]*/, TVariant* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_FindKey(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

  BSTR __fastcall Get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

  void __fastcall Set_Caption(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(prop/*[in]*/);
  }

  BSTR __fastcall Get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

  TOLEBOOL __fastcall Get_DisplayScrollBars(void)
  {
    return GetDefaultInterface()->get_DisplayScrollBars();
  }

  void __fastcall Set_DisplayScrollBars(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayScrollBars(prop/*[in]*/);
  }

  BSTR __fastcall Get_StartupPath(void)
  {
    return GetDefaultInterface()->get_StartupPath();
  }

  void __fastcall Set_StartupPath(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_StartupPath(prop/*[in]*/);
  }

  long __fastcall Get_BackgroundSavingStatus(void)
  {
    return GetDefaultInterface()->get_BackgroundSavingStatus();
  }

  long __fastcall Get_BackgroundPrintingStatus(void)
  {
    return GetDefaultInterface()->get_BackgroundPrintingStatus();
  }

  long __fastcall Get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

  void __fastcall Set_Left(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Left(prop/*[in]*/);
  }

  long __fastcall Get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

  void __fastcall Set_Top(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Top(prop/*[in]*/);
  }

  long __fastcall Get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

  void __fastcall Set_Width(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Width(prop/*[in]*/);
  }

  long __fastcall Get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

  void __fastcall Set_Height(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Height(prop/*[in]*/);
  }

  Word_2k::WdWindowState __fastcall Get_WindowState(void)
  {
    return GetDefaultInterface()->get_WindowState();
  }

  void __fastcall Set_WindowState(Word_2k::WdWindowState prop/*[in]*/)
  {
    GetDefaultInterface()->set_WindowState(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_DisplayAutoCompleteTips(void)
  {
    return GetDefaultInterface()->get_DisplayAutoCompleteTips();
  }

  void __fastcall Set_DisplayAutoCompleteTips(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAutoCompleteTips(prop/*[in]*/);
  }

  Word_2k::OptionsPtr __fastcall Get_Options(void)
  {
    return GetDefaultInterface()->get_Options();
  }

  Word_2k::WdAlertLevel __fastcall Get_DisplayAlerts(void)
  {
    return GetDefaultInterface()->get_DisplayAlerts();
  }

  void __fastcall Set_DisplayAlerts(Word_2k::WdAlertLevel prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAlerts(prop/*[in]*/);
  }

  Word_2k::DictionariesPtr __fastcall Get_CustomDictionaries(void)
  {
    return GetDefaultInterface()->get_CustomDictionaries();
  }

  BSTR __fastcall Get_PathSeparator(void)
  {
    return GetDefaultInterface()->get_PathSeparator();
  }

  void __fastcall Set_StatusBar(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(Param1/*[in]*/);
  }

  TOLEBOOL __fastcall Get_MAPIAvailable(void)
  {
    return GetDefaultInterface()->get_MAPIAvailable();
  }

  TOLEBOOL __fastcall Get_DisplayScreenTips(void)
  {
    return GetDefaultInterface()->get_DisplayScreenTips();
  }

  void __fastcall Set_DisplayScreenTips(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayScreenTips(prop/*[in]*/);
  }

  Word_2k::WdEnableCancelKey __fastcall Get_EnableCancelKey(void)
  {
    return GetDefaultInterface()->get_EnableCancelKey();
  }

  void __fastcall Set_EnableCancelKey(Word_2k::WdEnableCancelKey prop/*[in]*/)
  {
    GetDefaultInterface()->set_EnableCancelKey(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

  Office_2k::FileSearchPtr __fastcall Get_FileSearch(void)
  {
    return GetDefaultInterface()->get_FileSearch();
  }

  Word_2k::WdMailSystem __fastcall Get_MailSystem(void)
  {
    return GetDefaultInterface()->get_MailSystem();
  }

  BSTR __fastcall Get_DefaultTableSeparator(void)
  {
    return GetDefaultInterface()->get_DefaultTableSeparator();
  }

  void __fastcall Set_DefaultTableSeparator(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultTableSeparator(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_ShowVisualBasicEditor(void)
  {
    return GetDefaultInterface()->get_ShowVisualBasicEditor();
  }

  void __fastcall Set_ShowVisualBasicEditor(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowVisualBasicEditor(prop/*[in]*/);
  }

  BSTR __fastcall Get_BrowseExtraFileTypes(void)
  {
    return GetDefaultInterface()->get_BrowseExtraFileTypes();
  }

  void __fastcall Set_BrowseExtraFileTypes(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_BrowseExtraFileTypes(prop/*[in]*/);
  }

  TOLEBOOL __fastcall Get_IsObjectValid(LPDISPATCH Object/*[in]*/)
  {
    return GetDefaultInterface()->get_IsObjectValid(Object/*[in]*/);
  }

  Word_2k::HangulHanjaConversionDictionariesPtr __fastcall Get_HangulHanjaDictionaries(void)
  {
    return GetDefaultInterface()->get_HangulHanjaDictionaries();
  }

  Word_2k::MailMessagePtr __fastcall Get_MailMessage(void)
  {
    return GetDefaultInterface()->get_MailMessage();
  }

  TOLEBOOL __fastcall Get_FocusInMailHeader(void)
  {
    return GetDefaultInterface()->get_FocusInMailHeader();
  }

  Word_2k::EmailOptionsPtr __fastcall Get_EmailOptions(void)
  {
    return GetDefaultInterface()->get_EmailOptions();
  }

  Office_2k::MsoLanguageID __fastcall Get_Language(void)
  {
    return GetDefaultInterface()->get_Language();
  }

  Office_2k::COMAddInsPtr __fastcall Get_COMAddIns(void)
  {
    return GetDefaultInterface()->get_COMAddIns();
  }

  TOLEBOOL __fastcall Get_CheckLanguage(void)
  {
    return GetDefaultInterface()->get_CheckLanguage();
  }

  void __fastcall Set_CheckLanguage(TOLEBOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_CheckLanguage(prop/*[in]*/);
  }

  Office_2k::LanguageSettingsPtr __fastcall Get_LanguageSettings(void)
  {
    return GetDefaultInterface()->get_LanguageSettings();
  }

  TOLEBOOL __fastcall Get_Dummy1(void)
  {
    return GetDefaultInterface()->get_Dummy1();
  }

  Office_2k::AnswerWizardPtr __fastcall Get_AnswerWizard(void)
  {
    return GetDefaultInterface()->get_AnswerWizard();
  }

  Office_2k::MsoFeatureInstall __fastcall Get_FeatureInstall(void)
  {
    return GetDefaultInterface()->get_FeatureInstall();
  }

  void __fastcall Set_FeatureInstall(Office_2k::MsoFeatureInstall prop/*[in]*/)
  {
    GetDefaultInterface()->set_FeatureInstall(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Quit(TVariant* SaveChanges/*[in,opt]*/= TNoParam(), 
                       TVariant* OriginalFormat/*[in,opt]*/= TNoParam(), 
                       TVariant* RouteDocument/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Quit(SaveChanges/*[in,opt]*/, OriginalFormat/*[in,opt]*/, 
                                RouteDocument/*[in,opt]*/);
  }

  void __fastcall ScreenRefresh(void)
  {
    GetDefaultInterface()->ScreenRefresh();
  }

  void __fastcall PrintOutOld(TVariant* Background/*[in,opt]*/= TNoParam(), 
                              TVariant* Append/*[in,opt]*/= TNoParam(), 
                              TVariant* Range/*[in,opt]*/= TNoParam(), 
                              TVariant* OutputFileName/*[in,opt]*/= TNoParam(), 
                              TVariant* From/*[in,opt]*/= TNoParam(), 
                              TVariant* To/*[in,opt]*/= TNoParam(), 
                              TVariant* Item/*[in,opt]*/= TNoParam(), 
                              TVariant* Copies/*[in,opt]*/= TNoParam(), 
                              TVariant* Pages/*[in,opt]*/= TNoParam(), 
                              TVariant* PageType/*[in,opt]*/= TNoParam(), 
                              TVariant* PrintToFile/*[in,opt]*/= TNoParam(), 
                              TVariant* Collate/*[in,opt]*/= TNoParam(), 
                              TVariant* FileName/*[in,opt]*/= TNoParam(), 
                              TVariant* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                              TVariant* ManualDuplexPrint/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOutOld(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                       OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                       Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                       PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                       Collate/*[in,opt]*/, FileName/*[in,opt]*/, 
                                       ActivePrinterMacGX/*[in,opt]*/, ManualDuplexPrint/*[in,opt]*/);
  }

  void __fastcall LookupNameProperties(BSTR Name/*[in]*/)
  {
    GetDefaultInterface()->LookupNameProperties(Name/*[in]*/);
  }

  void __fastcall SubstituteFont(BSTR UnavailableFont/*[in]*/, BSTR SubstituteFont/*[in]*/)
  {
    GetDefaultInterface()->SubstituteFont(UnavailableFont/*[in]*/, SubstituteFont/*[in]*/);
  }

  TOLEBOOL __fastcall Repeat(TVariant* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Repeat(Times/*[in,opt]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR Command/*[in]*/)
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, Command/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, BSTR Item/*[in]*/, BSTR Data/*[in]*/)
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/);
  }

  BSTR __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/)
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/);
  }

  void __fastcall DDETerminateAll(void)
  {
    GetDefaultInterface()->DDETerminateAll();
  }

  long __fastcall BuildKeyCode(Word_2k::WdKey Arg1/*[in]*/, TVariant* Arg2/*[in,opt]*/, 
                               TVariant* Arg3/*[in,opt]*/, TVariant* Arg4/*[in,opt]*/)
  {
    return GetDefaultInterface()->BuildKeyCode(Arg1/*[in]*/, Arg2/*[in,opt]*/, Arg3/*[in,opt]*/, 
                                               Arg4/*[in,opt]*/);
  }

  BSTR __fastcall KeyString(long KeyCode/*[in]*/, TVariant* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->KeyString(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

  void __fastcall OrganizerCopy(BSTR Source/*[in]*/, BSTR Destination/*[in]*/, BSTR Name/*[in]*/, 
                                Word_2k::WdOrganizerObject Object/*[in]*/)
  {
    GetDefaultInterface()->OrganizerCopy(Source/*[in]*/, Destination/*[in]*/, Name/*[in]*/, 
                                         Object/*[in]*/);
  }

  void __fastcall OrganizerDelete(BSTR Source/*[in]*/, BSTR Name/*[in]*/, 
                                  Word_2k::WdOrganizerObject Object/*[in]*/)
  {
    GetDefaultInterface()->OrganizerDelete(Source/*[in]*/, Name/*[in]*/, Object/*[in]*/);
  }

  void __fastcall OrganizerRename(BSTR Source/*[in]*/, BSTR Name/*[in]*/, BSTR NewName/*[in]*/, 
                                  Word_2k::WdOrganizerObject Object/*[in]*/)
  {
    GetDefaultInterface()->OrganizerRename(Source/*[in]*/, Name/*[in]*/, NewName/*[in]*/, 
                                           Object/*[in]*/);
  }

  void __fastcall AddAddress(LPSAFEARRAY* TagID/*[in]*/, LPSAFEARRAY* Value/*[in]*/)
  {
    GetDefaultInterface()->AddAddress(TagID/*[in]*/, Value/*[in]*/);
  }

  BSTR __fastcall GetAddress(TVariant* Name/*[in,opt]*/, TVariant* AddressProperties/*[in,opt]*/, 
                             TVariant* UseAutoText/*[in,opt]*/, 
                             TVariant* DisplaySelectDialog/*[in,opt]*/, 
                             TVariant* SelectDialog/*[in,opt]*/, 
                             TVariant* CheckNamesDialog/*[in,opt]*/, 
                             TVariant* RecentAddressesChoice/*[in,opt]*/, 
                             TVariant* UpdateRecentAddresses/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetAddress(Name/*[in,opt]*/, AddressProperties/*[in,opt]*/, 
                                             UseAutoText/*[in,opt]*/, 
                                             DisplaySelectDialog/*[in,opt]*/, 
                                             SelectDialog/*[in,opt]*/, CheckNamesDialog/*[in,opt]*/, 
                                             RecentAddressesChoice/*[in,opt]*/, 
                                             UpdateRecentAddresses/*[in,opt]*/);
  }

  TOLEBOOL __fastcall CheckGrammar(BSTR String/*[in]*/)
  {
    return GetDefaultInterface()->CheckGrammar(String/*[in]*/);
  }

  TOLEBOOL __fastcall CheckSpelling(BSTR Word/*[in]*/, TVariant* CustomDictionary/*[in,opt]*/, 
                                    TVariant* IgnoreUppercase/*[in,opt]*/, 
                                    TVariant* MainDictionary/*[in,opt]*/, 
                                    TVariant* CustomDictionary2/*[in,opt]*/, 
                                    TVariant* CustomDictionary3/*[in,opt]*/, 
                                    TVariant* CustomDictionary4/*[in,opt]*/, 
                                    TVariant* CustomDictionary5/*[in,opt]*/, 
                                    TVariant* CustomDictionary6/*[in,opt]*/, 
                                    TVariant* CustomDictionary7/*[in,opt]*/, 
                                    TVariant* CustomDictionary8/*[in,opt]*/, 
                                    TVariant* CustomDictionary9/*[in,opt]*/, 
                                    TVariant* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->CheckSpelling(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                IgnoreUppercase/*[in,opt]*/, 
                                                MainDictionary/*[in,opt]*/, 
                                                CustomDictionary2/*[in,opt]*/, 
                                                CustomDictionary3/*[in,opt]*/, 
                                                CustomDictionary4/*[in,opt]*/, 
                                                CustomDictionary5/*[in,opt]*/, 
                                                CustomDictionary6/*[in,opt]*/, 
                                                CustomDictionary7/*[in,opt]*/, 
                                                CustomDictionary8/*[in,opt]*/, 
                                                CustomDictionary9/*[in,opt]*/, 
                                                CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall ResetIgnoreAll(void)
  {
    GetDefaultInterface()->ResetIgnoreAll();
  }

  Word_2k::SpellingSuggestionsPtr __fastcall GetSpellingSuggestions(BSTR Word/*[in]*/, 
                                                                    TVariant* CustomDictionary/*[in,opt]*/, 
                                                                    TVariant* IgnoreUppercase/*[in,opt]*/, 
                                                                    TVariant* MainDictionary/*[in,opt]*/, 
                                                                    TVariant* SuggestionMode/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary2/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary3/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary4/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary5/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary6/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary7/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary8/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary9/*[in,opt]*/, 
                                                                    TVariant* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetSpellingSuggestions(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                         IgnoreUppercase/*[in,opt]*/, 
                                                         MainDictionary/*[in,opt]*/, 
                                                         SuggestionMode/*[in,opt]*/, 
                                                         CustomDictionary2/*[in,opt]*/, 
                                                         CustomDictionary3/*[in,opt]*/, 
                                                         CustomDictionary4/*[in,opt]*/, 
                                                         CustomDictionary5/*[in,opt]*/, 
                                                         CustomDictionary6/*[in,opt]*/, 
                                                         CustomDictionary7/*[in,opt]*/, 
                                                         CustomDictionary8/*[in,opt]*/, 
                                                         CustomDictionary9/*[in,opt]*/, 
                                                         CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall GoBack(void)
  {
    GetDefaultInterface()->GoBack();
  }

  void __fastcall Help(TVariant* HelpType/*[in]*/)
  {
    GetDefaultInterface()->Help(HelpType/*[in]*/);
  }

  void __fastcall AutomaticChange(void)
  {
    GetDefaultInterface()->AutomaticChange();
  }

  void __fastcall ShowMe(void)
  {
    GetDefaultInterface()->ShowMe();
  }

  void __fastcall HelpTool(void)
  {
    GetDefaultInterface()->HelpTool();
  }

  Word_2k::WINDOWPtr __fastcall NewWindow(void)
  {
    return GetDefaultInterface()->NewWindow();
  }

  void __fastcall ListCommands(TOLEBOOL ListAllCommands/*[in]*/)
  {
    GetDefaultInterface()->ListCommands(ListAllCommands/*[in]*/);
  }

  void __fastcall ShowClipboard(void)
  {
    GetDefaultInterface()->ShowClipboard();
  }

  void __fastcall OnTime(TVariant* When/*[in]*/, BSTR Name/*[in]*/, 
                         TVariant* Tolerance/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OnTime(When/*[in]*/, Name/*[in]*/, Tolerance/*[in,opt]*/);
  }

  void __fastcall NextLetter(void)
  {
    GetDefaultInterface()->NextLetter();
  }

  short __fastcall MountVolume(BSTR Zone/*[in]*/, BSTR Server/*[in]*/, BSTR Volume/*[in]*/, 
                               TVariant* User/*[in,opt]*/, TVariant* UserPassword/*[in,opt]*/, 
                               TVariant* VolumePassword/*[in,opt]*/)
  {
    return GetDefaultInterface()->MountVolume(Zone/*[in]*/, Server/*[in]*/, Volume/*[in]*/, 
                                              User/*[in,opt]*/, UserPassword/*[in,opt]*/, 
                                              VolumePassword/*[in,opt]*/);
  }

  BSTR __fastcall CleanString(BSTR String/*[in]*/)
  {
    return GetDefaultInterface()->CleanString(String/*[in]*/);
  }

  void __fastcall SendFax(void)
  {
    GetDefaultInterface()->SendFax();
  }

  void __fastcall ChangeFileOpenDirectory(BSTR Path/*[in]*/)
  {
    GetDefaultInterface()->ChangeFileOpenDirectory(Path/*[in]*/);
  }

  void __fastcall RunOld(BSTR MacroName/*[in]*/)
  {
    GetDefaultInterface()->RunOld(MacroName/*[in]*/);
  }

  void __fastcall GoForward(void)
  {
    GetDefaultInterface()->GoForward();
  }

  void __fastcall Move(long Left/*[in]*/, long Top/*[in]*/)
  {
    GetDefaultInterface()->Move(Left/*[in]*/, Top/*[in]*/);
  }

  void __fastcall Resize(long Width/*[in]*/, long Height/*[in]*/)
  {
    GetDefaultInterface()->Resize(Width/*[in]*/, Height/*[in]*/);
  }

  float __fastcall InchesToPoints(float Inches/*[in]*/)
  {
    return GetDefaultInterface()->InchesToPoints(Inches/*[in]*/);
  }

  float __fastcall CentimetersToPoints(float Centimeters/*[in]*/)
  {
    return GetDefaultInterface()->CentimetersToPoints(Centimeters/*[in]*/);
  }

  float __fastcall MillimetersToPoints(float Millimeters/*[in]*/)
  {
    return GetDefaultInterface()->MillimetersToPoints(Millimeters/*[in]*/);
  }

  float __fastcall PicasToPoints(float Picas/*[in]*/)
  {
    return GetDefaultInterface()->PicasToPoints(Picas/*[in]*/);
  }

  float __fastcall LinesToPoints(float Lines/*[in]*/)
  {
    return GetDefaultInterface()->LinesToPoints(Lines/*[in]*/);
  }

  float __fastcall PointsToInches(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToInches(Points/*[in]*/);
  }

  float __fastcall PointsToCentimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToCentimeters(Points/*[in]*/);
  }

  float __fastcall PointsToMillimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToMillimeters(Points/*[in]*/);
  }

  float __fastcall PointsToPicas(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToPicas(Points/*[in]*/);
  }

  float __fastcall PointsToLines(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToLines(Points/*[in]*/);
  }

  void __fastcall Activate(void)
  {
    GetDefaultInterface()->Activate();
  }

  float __fastcall PointsToPixels(float Points/*[in]*/, TVariant* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PointsToPixels(Points/*[in]*/, fVertical/*[in,opt]*/);
  }

  float __fastcall PixelsToPoints(float Pixels/*[in]*/, TVariant* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PixelsToPoints(Pixels/*[in]*/, fVertical/*[in,opt]*/);
  }

  void __fastcall KeyboardLatin(void)
  {
    GetDefaultInterface()->KeyboardLatin();
  }

  void __fastcall KeyboardBidi(void)
  {
    GetDefaultInterface()->KeyboardBidi();
  }

  void __fastcall ToggleKeyboard(void)
  {
    GetDefaultInterface()->ToggleKeyboard();
  }

  long __fastcall Keyboard(long LangId/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->Keyboard(LangId/*[in,def,opt]*/);
  }

  BSTR __fastcall ProductCode(void)
  {
    return GetDefaultInterface()->ProductCode();
  }

  Word_2k::DefaultWebOptionsPtr __fastcall DefaultWebOptions(void)
  {
    return GetDefaultInterface()->DefaultWebOptions();
  }

  void __fastcall DiscussionSupport(TVariant* Range/*[in]*/, TVariant* cid/*[in]*/, 
                                    TVariant* piCSE/*[in]*/)
  {
    GetDefaultInterface()->DiscussionSupport(Range/*[in]*/, cid/*[in]*/, piCSE/*[in]*/);
  }

  void __fastcall SetDefaultTheme(BSTR Name/*[in]*/, Word_2k::WdDocumentMedium DocumentType/*[in]*/)
  {
    GetDefaultInterface()->SetDefaultTheme(Name/*[in]*/, DocumentType/*[in]*/);
  }

  BSTR __fastcall GetDefaultTheme(Word_2k::WdDocumentMedium DocumentType/*[in]*/)
  {
    return GetDefaultInterface()->GetDefaultTheme(DocumentType/*[in]*/);
  }

  void __fastcall PrintOut(TVariant* Background/*[in,opt]*/= TNoParam(), 
                           TVariant* Append/*[in,opt]*/= TNoParam(), 
                           TVariant* Range/*[in,opt]*/= TNoParam(), 
                           TVariant* OutputFileName/*[in,opt]*/= TNoParam(), 
                           TVariant* From/*[in,opt]*/= TNoParam(), 
                           TVariant* To/*[in,opt]*/= TNoParam(), 
                           TVariant* Item/*[in,opt]*/= TNoParam(), 
                           TVariant* Copies/*[in,opt]*/= TNoParam(), 
                           TVariant* Pages/*[in,opt]*/= TNoParam(), 
                           TVariant* PageType/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintToFile/*[in,opt]*/= TNoParam(), 
                           TVariant* Collate/*[in,opt]*/= TNoParam(), 
                           TVariant* FileName/*[in,opt]*/= TNoParam(), 
                           TVariant* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                           TVariant* ManualDuplexPrint/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomColumn/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomRow/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomPaperWidth/*[in,opt]*/= TNoParam(), 
                           TVariant* PrintZoomPaperHeight/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOut(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                    OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                    Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                    PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                    Collate/*[in,opt]*/, FileName/*[in,opt]*/, 
                                    ActivePrinterMacGX/*[in,opt]*/, ManualDuplexPrint/*[in,opt]*/, 
                                    PrintZoomColumn/*[in,opt]*/, PrintZoomRow/*[in,opt]*/, 
                                    PrintZoomPaperWidth/*[in,opt]*/, 
                                    PrintZoomPaperHeight/*[in,opt]*/);
  }

  TVariant __fastcall Run(BSTR MacroName/*[in]*/, TVariant* varg1/*[in,opt]*/, 
                          TVariant* varg2/*[in,opt]*/, TVariant* varg3/*[in,opt]*/, 
                          TVariant* varg4/*[in,opt]*/, TVariant* varg5/*[in,opt]*/, 
                          TVariant* varg6/*[in,opt]*/, TVariant* varg7/*[in,opt]*/, 
                          TVariant* varg8/*[in,opt]*/, TVariant* varg9/*[in,opt]*/, 
                          TVariant* varg10/*[in,opt]*/, TVariant* varg11/*[in,opt]*/, 
                          TVariant* varg12/*[in,opt]*/, TVariant* varg13/*[in,opt]*/, 
                          TVariant* varg14/*[in,opt]*/, TVariant* varg15/*[in,opt]*/, 
                          TVariant* varg16/*[in,opt]*/, TVariant* varg17/*[in,opt]*/, 
                          TVariant* varg18/*[in,opt]*/, TVariant* varg19/*[in,opt]*/, 
                          TVariant* varg20/*[in,opt]*/, TVariant* varg21/*[in,opt]*/, 
                          TVariant* varg22/*[in,opt]*/, TVariant* varg23/*[in,opt]*/, 
                          TVariant* varg24/*[in,opt]*/, TVariant* varg25/*[in,opt]*/, 
                          TVariant* varg26/*[in,opt]*/, TVariant* varg27/*[in,opt]*/, 
                          TVariant* varg28/*[in,opt]*/, TVariant* varg29/*[in,opt]*/, 
                          TVariant* varg30/*[in,opt]*/)
  {
    return GetDefaultInterface()->Run(MacroName/*[in]*/, varg1/*[in,opt]*/, varg2/*[in,opt]*/, 
                                      varg3/*[in,opt]*/, varg4/*[in,opt]*/, varg5/*[in,opt]*/, 
                                      varg6/*[in,opt]*/, varg7/*[in,opt]*/, varg8/*[in,opt]*/, 
                                      varg9/*[in,opt]*/, varg10/*[in,opt]*/, varg11/*[in,opt]*/, 
                                      varg12/*[in,opt]*/, varg13/*[in,opt]*/, varg14/*[in,opt]*/, 
                                      varg15/*[in,opt]*/, varg16/*[in,opt]*/, varg17/*[in,opt]*/, 
                                      varg18/*[in,opt]*/, varg19/*[in,opt]*/, varg20/*[in,opt]*/, 
                                      varg21/*[in,opt]*/, varg22/*[in,opt]*/, varg23/*[in,opt]*/, 
                                      varg24/*[in,opt]*/, varg25/*[in,opt]*/, varg26/*[in,opt]*/, 
                                      varg27/*[in,opt]*/, varg28/*[in,opt]*/, varg29/*[in,opt]*/, 
                                      varg30/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=Get_Application }; // 0, Yes
  __property long Creator={ read=Get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=Get_Parent }; // 0, No
  __property BSTR Name={ read=Get_Name }; // 0, No
  __property Word_2k::DocumentsPtr Documents={ read=Get_Documents }; // 0, Yes
  __property Word_2k::WindozPtr Windoz={ read=Get_Windoz }; // 0, Yes
  __property Word_2k::WordDocumentPtr ActiveDocument={ read=Get_ActiveDocument }; // 0, Yes
  __property Word_2k::WINDOWPtr ActiveWindow={ read=Get_ActiveWindow }; // 0, Yes
  __property Word_2k::SelectionPtr Selection={ read=Get_Selection }; // 0, Yes
  __property LPDISPATCH WordBasic={ read=Get_WordBasic }; // 0, No
  __property Word_2k::RecentFilesPtr RecentFiles={ read=Get_RecentFiles }; // 0, Yes
  __property Word_2k::TemplatePtr NormalTemplate={ read=Get_NormalTemplate }; // 0, Yes
  __property Word_2k::SYSTEMPtr System={ read=Get_System }; // 0, Yes
  __property Word_2k::AutoCorrectPtr AutoCorrect={ read=Get_AutoCorrect }; // 0, Yes
  __property Word_2k::FontNamesPtr FontNames={ read=Get_FontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr LandscapeFontNames={ read=Get_LandscapeFontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr PortraitFontNames={ read=Get_PortraitFontNames }; // 0, Yes
  __property Word_2k::LanguagesPtr Languages={ read=Get_Languages }; // 0, Yes
  __property Office_2k::AssistantPtr Assistant={ read=Get_Assistant }; // 0, Yes
  __property Word_2k::BrowserPtr Browser={ read=Get_Browser }; // 0, Yes
  __property Word_2k::FileConvertersPtr FileConverters={ read=Get_FileConverters }; // 0, Yes
  __property Word_2k::MailingLabelPtr MailingLabel={ read=Get_MailingLabel }; // 0, Yes
  __property Word_2k::DialogsPtr Dialogs={ read=Get_Dialogs }; // 0, Yes
  __property Word_2k::CaptionLabelsPtr CaptionLabels={ read=Get_CaptionLabels }; // 0, Yes
  __property Word_2k::AutoCaptionsPtr AutoCaptions={ read=Get_AutoCaptions }; // 0, Yes
  __property Word_2k::AddInsPtr AddIns={ read=Get_AddIns }; // 0, Yes
  __property BSTR Version={ read=Get_Version }; // 0, No
  __property Word_2k::TasksPtr Tasks={ read=Get_Tasks }; // 0, Yes
  __property TOLEBOOL SpecialMode={ read=Get_SpecialMode }; // 0, No
  __property long UsableWidth={ read=Get_UsableWidth }; // 0, No
  __property long UsableHeight={ read=Get_UsableHeight }; // 0, No
  __property TOLEBOOL MathCoprocessorAvailable={ read=Get_MathCoprocessorAvailable }; // 0, No
  __property TOLEBOOL MouseAvailable={ read=Get_MouseAvailable }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant International[Word_2k::WdInternationalIndex Index]={ read=Get_International }; // 0, No
  */
  __property BSTR Build={ read=Get_Build }; // 0, No
  __property TOLEBOOL CapsLock={ read=Get_CapsLock }; // 0, No
  __property TOLEBOOL NumLock={ read=Get_NumLock }; // 0, No
  __property LPDISPATCH MacroContainer={ read=Get_MacroContainer }; // 0, No
  __property Office_2k::CommandBarsPtr CommandBars={ read=Get_CommandBars }; // 0, Yes
  __property Word_2k::SynonymInfoPtr SynonymInfo[BSTR Word][TVariant* LanguageID]={ read=Get_SynonymInfo }; // 0, Yes
  __property Vbide_2k::VBEPtr VBE={ read=Get_VBE }; // 0, Yes
  __property Word_2k::ListGalleriesPtr ListGalleries={ read=Get_ListGalleries }; // 0, Yes
  __property Word_2k::TemplatesPtr Templates={ read=Get_Templates }; // 0, Yes
  __property LPDISPATCH CustomizationContext={ read=Get_CustomizationContext, write=Set_CustomizationContext }; // 0, No
  __property Word_2k::KeyBindingsPtr KeyBindings={ read=Get_KeyBindings }; // 0, Yes
  __property Word_2k::KeysBoundToPtr KeysBoundTo[Word_2k::WdKeyCategory KeyCategory][BSTR Command][TVariant* CommandParameter]={ read=Get_KeysBoundTo }; // 0, Yes
  __property Word_2k::KeyBindingPtr FindKey[long KeyCode][TVariant* KeyCode2]={ read=Get_FindKey }; // 0, Yes
  __property BSTR Path={ read=Get_Path }; // 0, No
  __property long BackgroundSavingStatus={ read=Get_BackgroundSavingStatus }; // 0, No
  __property long BackgroundPrintingStatus={ read=Get_BackgroundPrintingStatus }; // 0, No
  __property Word_2k::OptionsPtr Options={ read=Get_Options }; // 0, Yes
  __property Word_2k::DictionariesPtr CustomDictionaries={ read=Get_CustomDictionaries }; // 0, Yes
  __property BSTR PathSeparator={ read=Get_PathSeparator }; // 0, No
  __property BSTR StatusBar={ write=Set_StatusBar }; // 0, No
  __property TOLEBOOL MAPIAvailable={ read=Get_MAPIAvailable }; // 0, No
  __property TOLEBOOL UserControl={ read=Get_UserControl }; // 0, No
  __property Office_2k::FileSearchPtr FileSearch={ read=Get_FileSearch }; // 0, Yes
  __property Word_2k::WdMailSystem MailSystem={ read=Get_MailSystem }; // 0, No
  __property TOLEBOOL IsObjectValid[LPDISPATCH Object]={ read=Get_IsObjectValid }; // 0, No
  __property Word_2k::HangulHanjaConversionDictionariesPtr HangulHanjaDictionaries={ read=Get_HangulHanjaDictionaries }; // 0, Yes
  __property Word_2k::MailMessagePtr MailMessage={ read=Get_MailMessage }; // 0, Yes
  __property TOLEBOOL FocusInMailHeader={ read=Get_FocusInMailHeader }; // 0, No
  __property Word_2k::EmailOptionsPtr EmailOptions={ read=Get_EmailOptions }; // 0, Yes
  __property Office_2k::MsoLanguageID Language={ read=Get_Language }; // 0, No
  __property Office_2k::COMAddInsPtr COMAddIns={ read=Get_COMAddIns }; // 0, Yes
  __property Office_2k::LanguageSettingsPtr LanguageSettings={ read=Get_LanguageSettings }; // 0, Yes
  __property TOLEBOOL Dummy1={ read=Get_Dummy1 }; // 0, No
  __property Office_2k::AnswerWizardPtr AnswerWizard={ read=Get_AnswerWizard }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL Visible={ read=Get_Visible, write=Set_Visible, stored=false }; // 0, No
  __property TOLEBOOL ScreenUpdating={ read=Get_ScreenUpdating, write=Set_ScreenUpdating, stored=false }; // 0, No
  __property TOLEBOOL PrintPreview={ read=Get_PrintPreview, write=Set_PrintPreview, stored=false }; // 0, No
  __property TOLEBOOL DisplayStatusBar={ read=Get_DisplayStatusBar, write=Set_DisplayStatusBar, stored=false }; // 0, No
  __property BSTR UserName={ read=Get_UserName, write=Set_UserName, stored=false }; // 0, No
  __property BSTR UserInitials={ read=Get_UserInitials, write=Set_UserInitials, stored=false }; // 0, No
  __property BSTR UserAddress={ read=Get_UserAddress, write=Set_UserAddress, stored=false }; // 0, No
  __property TOLEBOOL DisplayRecentFiles={ read=Get_DisplayRecentFiles, write=Set_DisplayRecentFiles, stored=false }; // 0, No
  __property BSTR DefaultSaveFormat={ read=Get_DefaultSaveFormat, write=Set_DefaultSaveFormat, stored=false }; // 0, No
  __property BSTR ActivePrinter={ read=Get_ActivePrinter, write=Set_ActivePrinter, stored=false }; // 0, No
  __property BSTR Caption={ read=Get_Caption, write=Set_Caption, stored=false }; // 0, No
  __property TOLEBOOL DisplayScrollBars={ read=Get_DisplayScrollBars, write=Set_DisplayScrollBars, stored=false }; // 0, No
  __property BSTR StartupPath={ read=Get_StartupPath, write=Set_StartupPath, stored=false }; // 0, No
  __property long Left={ read=Get_Left, write=Set_Left, stored=false }; // 0, No
  __property long Top={ read=Get_Top, write=Set_Top, stored=false }; // 0, No
  __property long Width={ read=Get_Width, write=Set_Width, stored=false }; // 0, No
  __property long Height={ read=Get_Height, write=Set_Height, stored=false }; // 0, No
  __property Word_2k::WdWindowState WindowState={ read=Get_WindowState, write=Set_WindowState, stored=false }; // 0, No
  __property TOLEBOOL DisplayAutoCompleteTips={ read=Get_DisplayAutoCompleteTips, write=Set_DisplayAutoCompleteTips, stored=false }; // 0, No
  __property Word_2k::WdAlertLevel DisplayAlerts={ read=Get_DisplayAlerts, write=Set_DisplayAlerts, stored=false }; // 0, No
  __property TOLEBOOL DisplayScreenTips={ read=Get_DisplayScreenTips, write=Set_DisplayScreenTips, stored=false }; // 0, No
  __property Word_2k::WdEnableCancelKey EnableCancelKey={ read=Get_EnableCancelKey, write=Set_EnableCancelKey, stored=false }; // 0, No
  __property BSTR DefaultTableSeparator={ read=Get_DefaultTableSeparator, write=Set_DefaultTableSeparator, stored=false }; // 0, No
  __property TOLEBOOL ShowVisualBasicEditor={ read=Get_ShowVisualBasicEditor, write=Set_ShowVisualBasicEditor, stored=false }; // 0, No
  __property BSTR BrowseExtraFileTypes={ read=Get_BrowseExtraFileTypes, write=Set_BrowseExtraFileTypes, stored=false }; // 0, No
  __property TOLEBOOL CheckLanguage={ read=Get_CheckLanguage, write=Set_CheckLanguage, stored=false }; // 0, No
  __property Office_2k::MsoFeatureInstall FeatureInstall={ read=Get_FeatureInstall, write=Set_FeatureInstall, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnStartup;
  TNotifyEvent                   FOnQuit;
  TNotifyEvent                   FOnDocumentChange;
  TWordApplicationDocumentOpen   FOnDocumentOpen;
  TWordApplicationDocumentBeforeClose FOnDocumentBeforeClose;
  TWordApplicationDocumentBeforePrint FOnDocumentBeforePrint;
  TWordApplicationDocumentBeforeSave FOnDocumentBeforeSave;
  TWordApplicationNewDocument    FOnNewDocument;
  TWordApplicationWindowActivate FOnWindowActivate;
  TWordApplicationWindowDeactivate FOnWindowDeactivate;
  TWordApplicationWindowSelectionChange FOnWindowSelectionChange;
  TWordApplicationWindowBeforeRightClick FOnWindowBeforeRightClick;
  TWordApplicationWindowBeforeDoubleClick FOnWindowBeforeDoubleClick;
__published:
  __property TNotifyEvent OnStartup={ read=FOnStartup, write=FOnStartup };
  __property TNotifyEvent OnQuit={ read=FOnQuit, write=FOnQuit };
  __property TNotifyEvent OnDocumentChange={ read=FOnDocumentChange, write=FOnDocumentChange };
  __property TWordApplicationDocumentOpen OnDocumentOpen={ read=FOnDocumentOpen, write=FOnDocumentOpen };
  __property TWordApplicationDocumentBeforeClose OnDocumentBeforeClose={ read=FOnDocumentBeforeClose, write=FOnDocumentBeforeClose };
  __property TWordApplicationDocumentBeforePrint OnDocumentBeforePrint={ read=FOnDocumentBeforePrint, write=FOnDocumentBeforePrint };
  __property TWordApplicationDocumentBeforeSave OnDocumentBeforeSave={ read=FOnDocumentBeforeSave, write=FOnDocumentBeforeSave };
  __property TWordApplicationNewDocument OnNewDocument={ read=FOnNewDocument, write=FOnNewDocument };
  __property TWordApplicationWindowActivate OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TWordApplicationWindowDeactivate OnWindowDeactivate={ read=FOnWindowDeactivate, write=FOnWindowDeactivate };
  __property TWordApplicationWindowSelectionChange OnWindowSelectionChange={ read=FOnWindowSelectionChange, write=FOnWindowSelectionChange };
  __property TWordApplicationWindowBeforeRightClick OnWindowBeforeRightClick={ read=FOnWindowBeforeRightClick, write=FOnWindowBeforeRightClick };
  __property TWordApplicationWindowBeforeDoubleClick OnWindowBeforeDoubleClick={ read=FOnWindowBeforeDoubleClick, write=FOnWindowBeforeDoubleClick };
private:
  bool     FAutoQuit;
__published:
  __property bool AutoQuit = {read=FAutoQuit, write=FAutoQuit};
};

};     // namespace Word_2k

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Word_2k;
#endif

#pragma option pop

#endif // __Word_2K_SRVR_h__

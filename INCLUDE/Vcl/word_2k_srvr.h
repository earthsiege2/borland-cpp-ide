// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.151.1.0.1.21  $
// File generated on 1/28/2002 8:27:42 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\program files\microsoft office\office\msword9.olb (1)
// LIBID: {00020905-0000-0000-C000-000000000046}
// LCID: 0
// Helpfile: c:\program files\microsoft office\office\VBAWRD9.CHM
// HelpString: Microsoft Word 9.0 Object Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINNT\System32\stdole2.tlb)
//   (2) v2.1 Office, (C:\Program Files\Microsoft Office\Office\MSO9.DLL)
//   (3) v5.3 VBIDE, (C:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
// ************************************************************************ //
#ifndef   Word_2k_srvrH
#define   Word_2k_srvrH

#pragma option push -b -w-inl

#include <oleserver.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "Office_2k.h"
#include "VBIDE_2k.h"

#include "Word_2k.h"
namespace Word_2k
{

// *********************************************************************//
// HelpString: Microsoft Word 9.0 Object Library
// Version:    8.1
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordGlobal
// Help String      : 
// Default Interface: _Global
// Def. Intf. Object: _GlobalPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (11) AppObject CanCreate Predeclid
// *********************************************************************//
class PACKAGE TWordGlobal : public Oleserver::TOleServer
{
  _GlobalPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordGlobal(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _GlobalPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_GlobalPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Word_2k::WordApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:Integer
  long __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:
  Word_2k::DocumentsPtr __fastcall get_Documents(void)
  {
    return GetDefaultInterface()->get_Documents();
  }

// StdProp:
  Word_2k::WindowsPtr __fastcall get_Windows(void)
  {
    return GetDefaultInterface()->get_Windows();
  }

// StdProp:
  Word_2k::WordDocumentPtr __fastcall get_ActiveDocument(void)
  {
    return GetDefaultInterface()->get_ActiveDocument();
  }

// StdProp:
  Word_2k::WINDOWPtr __fastcall get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

// StdProp:
  Word_2k::SelectionPtr __fastcall get_Selection(void)
  {
    return GetDefaultInterface()->get_Selection();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_WordBasic(void)
  {
    return GetDefaultInterface()->get_WordBasic();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintPreview(void)
  {
    return GetDefaultInterface()->get_PrintPreview();
  }

// StdProp:WordBool
  void __fastcall set_PrintPreview(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintPreview(prop/*[in]*/);
  }

// StdProp:
  Word_2k::RecentFilesPtr __fastcall get_RecentFiles(void)
  {
    return GetDefaultInterface()->get_RecentFiles();
  }

// StdProp:
  Word_2k::TemplatePtr __fastcall get_NormalTemplate(void)
  {
    return GetDefaultInterface()->get_NormalTemplate();
  }

// StdProp:
  Word_2k::SYSTEMPtr __fastcall get_System(void)
  {
    return GetDefaultInterface()->get_System();
  }

// StdProp:
  Word_2k::AutoCorrectPtr __fastcall get_AutoCorrect(void)
  {
    return GetDefaultInterface()->get_AutoCorrect();
  }

// StdProp:
  Word_2k::FontNamesPtr __fastcall get_FontNames(void)
  {
    return GetDefaultInterface()->get_FontNames();
  }

// StdProp:
  Word_2k::FontNamesPtr __fastcall get_LandscapeFontNames(void)
  {
    return GetDefaultInterface()->get_LandscapeFontNames();
  }

// StdProp:
  Word_2k::FontNamesPtr __fastcall get_PortraitFontNames(void)
  {
    return GetDefaultInterface()->get_PortraitFontNames();
  }

// StdProp:
  Word_2k::LanguagesPtr __fastcall get_Languages(void)
  {
    return GetDefaultInterface()->get_Languages();
  }

// StdProp:
  Office_2k::AssistantPtr __fastcall get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

// StdProp:
  Word_2k::FileConvertersPtr __fastcall get_FileConverters(void)
  {
    return GetDefaultInterface()->get_FileConverters();
  }

// StdProp:
  Word_2k::DialogsPtr __fastcall get_Dialogs(void)
  {
    return GetDefaultInterface()->get_Dialogs();
  }

// StdProp:
  Word_2k::CaptionLabelsPtr __fastcall get_CaptionLabels(void)
  {
    return GetDefaultInterface()->get_CaptionLabels();
  }

// StdProp:
  Word_2k::AutoCaptionsPtr __fastcall get_AutoCaptions(void)
  {
    return GetDefaultInterface()->get_AutoCaptions();
  }

// StdProp:
  Word_2k::AddInsPtr __fastcall get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

// StdProp:
  Word_2k::TasksPtr __fastcall get_Tasks(void)
  {
    return GetDefaultInterface()->get_Tasks();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_MacroContainer(void)
  {
    return GetDefaultInterface()->get_MacroContainer();
  }

// StdProp:
  Office_2k::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:
  Word_2k::SynonymInfoPtr __fastcall get_SynonymInfo(BSTR Word/*[in]*/, 
                                                     VARIANT* LanguageID/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_SynonymInfo(Word/*[in]*/, LanguageID/*[in,opt]*/);
  }

// StdProp:
  Vbide_2k::VBEPtr __fastcall get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

// StdProp:
  Word_2k::ListGalleriesPtr __fastcall get_ListGalleries(void)
  {
    return GetDefaultInterface()->get_ListGalleries();
  }

// StdProp:WideString
  BSTR __fastcall get_ActivePrinter(void)
  {
    return GetDefaultInterface()->get_ActivePrinter();
  }

// StdProp:WideString
  void __fastcall set_ActivePrinter(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(prop/*[in]*/);
  }

// StdProp:
  Word_2k::TemplatesPtr __fastcall get_Templates(void)
  {
    return GetDefaultInterface()->get_Templates();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CustomizationContext(void)
  {
    return GetDefaultInterface()->get_CustomizationContext();
  }

// StdProp:IDispatch
  void __fastcall set_CustomizationContext(LPDISPATCH prop/*[in]*/)
  {
    GetDefaultInterface()->set_CustomizationContext(prop/*[in]*/);
  }

// StdProp:
  Word_2k::KeyBindingsPtr __fastcall get_KeyBindings(void)
  {
    return GetDefaultInterface()->get_KeyBindings();
  }

// StdProp:
  Word_2k::KeysBoundToPtr __fastcall get_KeysBoundTo(Word_2k::WdKeyCategory KeyCategory/*[in]*/, 
                                                     BSTR Command/*[in]*/, 
                                                     VARIANT* CommandParameter/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_KeysBoundTo(KeyCategory/*[in]*/, Command/*[in]*/, 
                                                  CommandParameter/*[in,opt]*/);
  }

// StdProp:
  Word_2k::KeyBindingPtr __fastcall get_FindKey(long KeyCode/*[in]*/, VARIANT* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_FindKey(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

// StdProp:
  Word_2k::OptionsPtr __fastcall get_Options(void)
  {
    return GetDefaultInterface()->get_Options();
  }

// StdProp:
  Word_2k::DictionariesPtr __fastcall get_CustomDictionaries(void)
  {
    return GetDefaultInterface()->get_CustomDictionaries();
  }

// StdProp:WideString
  void __fastcall set_StatusBar(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(Param1/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowVisualBasicEditor(void)
  {
    return GetDefaultInterface()->get_ShowVisualBasicEditor();
  }

// StdProp:WordBool
  void __fastcall set_ShowVisualBasicEditor(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowVisualBasicEditor(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsObjectValid(LPDISPATCH Object/*[in]*/)
  {
    return GetDefaultInterface()->get_IsObjectValid(Object/*[in]*/);
  }

// StdProp:
  Word_2k::HangulHanjaConversionDictionariesPtr __fastcall get_HangulHanjaDictionaries(void)
  {
    return GetDefaultInterface()->get_HangulHanjaDictionaries();
  }

// StdProp:
  Office_2k::LanguageSettingsPtr __fastcall get_LanguageSettings(void)
  {
    return GetDefaultInterface()->get_LanguageSettings();
  }

// StdProp:
  Office_2k::AnswerWizardPtr __fastcall get_AnswerWizard(void)
  {
    return GetDefaultInterface()->get_AnswerWizard();
  }

  /*CoClassWriteMethods*/
  TOLEBOOL __fastcall Repeat(VARIANT* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Repeat(Times/*[in,opt]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR Command/*[in]*/)
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, Command/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, BSTR Item/*[in]*/, BSTR Data/*[in]*/)
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/);
  }

  BSTR __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/)
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/);
  }

  void __fastcall DDETerminateAll(void)
  {
    GetDefaultInterface()->DDETerminateAll();
  }

  long __fastcall BuildKeyCode(Word_2k::WdKey Arg1/*[in]*/, VARIANT* Arg2/*[in,opt]*/, 
                               VARIANT* Arg3/*[in,opt]*/, VARIANT* Arg4/*[in,opt]*/)
  {
    return GetDefaultInterface()->BuildKeyCode(Arg1/*[in]*/, Arg2/*[in,opt]*/, Arg3/*[in,opt]*/, 
                                               Arg4/*[in,opt]*/);
  }

  BSTR __fastcall KeyString(long KeyCode/*[in]*/, VARIANT* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->KeyString(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

  TOLEBOOL __fastcall CheckSpelling(BSTR Word/*[in]*/, VARIANT* CustomDictionary/*[in,opt]*/, 
                                    VARIANT* IgnoreUppercase/*[in,opt]*/, 
                                    VARIANT* MainDictionary/*[in,opt]*/, 
                                    VARIANT* CustomDictionary2/*[in,opt]*/, 
                                    VARIANT* CustomDictionary3/*[in,opt]*/, 
                                    VARIANT* CustomDictionary4/*[in,opt]*/, 
                                    VARIANT* CustomDictionary5/*[in,opt]*/, 
                                    VARIANT* CustomDictionary6/*[in,opt]*/, 
                                    VARIANT* CustomDictionary7/*[in,opt]*/, 
                                    VARIANT* CustomDictionary8/*[in,opt]*/, 
                                    VARIANT* CustomDictionary9/*[in,opt]*/, 
                                    VARIANT* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->CheckSpelling(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                IgnoreUppercase/*[in,opt]*/, 
                                                MainDictionary/*[in,opt]*/, 
                                                CustomDictionary2/*[in,opt]*/, 
                                                CustomDictionary3/*[in,opt]*/, 
                                                CustomDictionary4/*[in,opt]*/, 
                                                CustomDictionary5/*[in,opt]*/, 
                                                CustomDictionary6/*[in,opt]*/, 
                                                CustomDictionary7/*[in,opt]*/, 
                                                CustomDictionary8/*[in,opt]*/, 
                                                CustomDictionary9/*[in,opt]*/, 
                                                CustomDictionary10/*[in,opt]*/);
  }

  Word_2k::SpellingSuggestionsPtr __fastcall GetSpellingSuggestions(BSTR Word/*[in]*/, 
                                                                    VARIANT* CustomDictionary/*[in,opt]*/, 
                                                                    VARIANT* IgnoreUppercase/*[in,opt]*/, 
                                                                    VARIANT* MainDictionary/*[in,opt]*/, 
                                                                    VARIANT* SuggestionMode/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary2/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary3/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary4/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary5/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary6/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary7/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary8/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary9/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetSpellingSuggestions(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                         IgnoreUppercase/*[in,opt]*/, 
                                                         MainDictionary/*[in,opt]*/, 
                                                         SuggestionMode/*[in,opt]*/, 
                                                         CustomDictionary2/*[in,opt]*/, 
                                                         CustomDictionary3/*[in,opt]*/, 
                                                         CustomDictionary4/*[in,opt]*/, 
                                                         CustomDictionary5/*[in,opt]*/, 
                                                         CustomDictionary6/*[in,opt]*/, 
                                                         CustomDictionary7/*[in,opt]*/, 
                                                         CustomDictionary8/*[in,opt]*/, 
                                                         CustomDictionary9/*[in,opt]*/, 
                                                         CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall Help(VARIANT* HelpType/*[in]*/)
  {
    GetDefaultInterface()->Help(HelpType/*[in]*/);
  }

  Word_2k::WINDOWPtr __fastcall NewWindow(void)
  {
    return GetDefaultInterface()->NewWindow();
  }

  BSTR __fastcall CleanString(BSTR String/*[in]*/)
  {
    return GetDefaultInterface()->CleanString(String/*[in]*/);
  }

  void __fastcall ChangeFileOpenDirectory(BSTR Path/*[in]*/)
  {
    GetDefaultInterface()->ChangeFileOpenDirectory(Path/*[in]*/);
  }

  float __fastcall InchesToPoints(float Inches/*[in]*/)
  {
    return GetDefaultInterface()->InchesToPoints(Inches/*[in]*/);
  }

  float __fastcall CentimetersToPoints(float Centimeters/*[in]*/)
  {
    return GetDefaultInterface()->CentimetersToPoints(Centimeters/*[in]*/);
  }

  float __fastcall MillimetersToPoints(float Millimeters/*[in]*/)
  {
    return GetDefaultInterface()->MillimetersToPoints(Millimeters/*[in]*/);
  }

  float __fastcall PicasToPoints(float Picas/*[in]*/)
  {
    return GetDefaultInterface()->PicasToPoints(Picas/*[in]*/);
  }

  float __fastcall LinesToPoints(float Lines/*[in]*/)
  {
    return GetDefaultInterface()->LinesToPoints(Lines/*[in]*/);
  }

  float __fastcall PointsToInches(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToInches(Points/*[in]*/);
  }

  float __fastcall PointsToCentimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToCentimeters(Points/*[in]*/);
  }

  float __fastcall PointsToMillimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToMillimeters(Points/*[in]*/);
  }

  float __fastcall PointsToPicas(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToPicas(Points/*[in]*/);
  }

  float __fastcall PointsToLines(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToLines(Points/*[in]*/);
  }

  float __fastcall PointsToPixels(float Points/*[in]*/, VARIANT* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PointsToPixels(Points/*[in]*/, fVertical/*[in,opt]*/);
  }

  float __fastcall PixelsToPoints(float Pixels/*[in]*/, VARIANT* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PixelsToPoints(Pixels/*[in]*/, fVertical/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property long Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property BSTR Name={ read=get_Name }; // 0, No
  __property Word_2k::DocumentsPtr Documents={ read=get_Documents }; // 0, Yes
  __property Word_2k::WindowsPtr Windows={ read=get_Windows }; // 0, Yes
  __property Word_2k::WordDocumentPtr ActiveDocument={ read=get_ActiveDocument }; // 0, Yes
  __property Word_2k::WINDOWPtr ActiveWindow={ read=get_ActiveWindow }; // 0, Yes
  __property Word_2k::SelectionPtr Selection={ read=get_Selection }; // 0, Yes
  __property LPDISPATCH WordBasic={ read=get_WordBasic }; // 0, No
  __property Word_2k::RecentFilesPtr RecentFiles={ read=get_RecentFiles }; // 0, Yes
  __property Word_2k::TemplatePtr NormalTemplate={ read=get_NormalTemplate }; // 0, Yes
  __property Word_2k::SYSTEMPtr System={ read=get_System }; // 0, Yes
  __property Word_2k::AutoCorrectPtr AutoCorrect={ read=get_AutoCorrect }; // 0, Yes
  __property Word_2k::FontNamesPtr FontNames={ read=get_FontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr LandscapeFontNames={ read=get_LandscapeFontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr PortraitFontNames={ read=get_PortraitFontNames }; // 0, Yes
  __property Word_2k::LanguagesPtr Languages={ read=get_Languages }; // 0, Yes
  __property Office_2k::AssistantPtr Assistant={ read=get_Assistant }; // 0, Yes
  __property Word_2k::FileConvertersPtr FileConverters={ read=get_FileConverters }; // 0, Yes
  __property Word_2k::DialogsPtr Dialogs={ read=get_Dialogs }; // 0, Yes
  __property Word_2k::CaptionLabelsPtr CaptionLabels={ read=get_CaptionLabels }; // 0, Yes
  __property Word_2k::AutoCaptionsPtr AutoCaptions={ read=get_AutoCaptions }; // 0, Yes
  __property Word_2k::AddInsPtr AddIns={ read=get_AddIns }; // 0, Yes
  __property Word_2k::TasksPtr Tasks={ read=get_Tasks }; // 0, Yes
  __property LPDISPATCH MacroContainer={ read=get_MacroContainer }; // 0, No
  __property Office_2k::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property Word_2k::SynonymInfoPtr SynonymInfo[BSTR Word][VARIANT* LanguageID]={ read=get_SynonymInfo }; // 0, Yes
  __property Vbide_2k::VBEPtr VBE={ read=get_VBE }; // 0, Yes
  __property Word_2k::ListGalleriesPtr ListGalleries={ read=get_ListGalleries }; // 0, Yes
  __property Word_2k::TemplatesPtr Templates={ read=get_Templates }; // 0, Yes
  __property LPDISPATCH CustomizationContext={ read=get_CustomizationContext }; // 0, No
  __property Word_2k::KeyBindingsPtr KeyBindings={ read=get_KeyBindings }; // 0, Yes
  __property Word_2k::KeysBoundToPtr KeysBoundTo[Word_2k::WdKeyCategory KeyCategory][BSTR Command][VARIANT* CommandParameter]={ read=get_KeysBoundTo }; // 0, Yes
  __property Word_2k::KeyBindingPtr FindKey[long KeyCode][VARIANT* KeyCode2]={ read=get_FindKey }; // 0, Yes
  __property Word_2k::OptionsPtr Options={ read=get_Options }; // 0, Yes
  __property Word_2k::DictionariesPtr CustomDictionaries={ read=get_CustomDictionaries }; // 0, Yes
  __property BSTR StatusBar={ }; // 0, No
  __property TOLEBOOL IsObjectValid[LPDISPATCH Object]={ read=get_IsObjectValid }; // 0, No
  __property Word_2k::HangulHanjaConversionDictionariesPtr HangulHanjaDictionaries={ read=get_HangulHanjaDictionaries }; // 0, Yes
  __property Office_2k::LanguageSettingsPtr LanguageSettings={ read=get_LanguageSettings }; // 0, Yes
  __property Office_2k::AnswerWizardPtr AnswerWizard={ read=get_AnswerWizard }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL PrintPreview={ read=get_PrintPreview, stored=false }; // 0, No
  __property BSTR ActivePrinter={ read=get_ActivePrinter, stored=false }; // 0, No
  __property TOLEBOOL ShowVisualBasicEditor={ read=get_ShowVisualBasicEditor, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordDocument
// Help String      : 
// Default Interface: _Document
// Def. Intf. Object: _DocumentPtr
// Def. Intf. DISP? : No
// Event   Interface: DocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordDocument : public Oleserver::TOleServer
{
  _DocumentPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordDocument(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _DocumentPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_DocumentPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:
  Word_2k::WordApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:Integer
  long __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_BuiltInDocumentProperties(void)
  {
    return GetDefaultInterface()->get_BuiltInDocumentProperties();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CustomDocumentProperties(void)
  {
    return GetDefaultInterface()->get_CustomDocumentProperties();
  }

// StdProp:WideString
  BSTR __fastcall get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

// StdProp:
  Word_2k::BookmarksPtr __fastcall get_Bookmarks(void)
  {
    return GetDefaultInterface()->get_Bookmarks();
  }

// StdProp:
  Word_2k::TablesPtr __fastcall get_Tables(void)
  {
    return GetDefaultInterface()->get_Tables();
  }

// StdProp:
  Word_2k::FootnotesPtr __fastcall get_Footnotes(void)
  {
    return GetDefaultInterface()->get_Footnotes();
  }

// StdProp:
  Word_2k::EndnotesPtr __fastcall get_Endnotes(void)
  {
    return GetDefaultInterface()->get_Endnotes();
  }

// StdProp:
  Word_2k::CommentsPtr __fastcall get_Comments(void)
  {
    return GetDefaultInterface()->get_Comments();
  }

// StdProp:TOleEnum
  Word_2k::WdDocumentType __fastcall get_Type(void)
  {
    return GetDefaultInterface()->get_Type();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoHyphenation(void)
  {
    return GetDefaultInterface()->get_AutoHyphenation();
  }

// StdProp:WordBool
  void __fastcall set_AutoHyphenation(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_AutoHyphenation(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HyphenateCaps(void)
  {
    return GetDefaultInterface()->get_HyphenateCaps();
  }

// StdProp:WordBool
  void __fastcall set_HyphenateCaps(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_HyphenateCaps(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HyphenationZone(void)
  {
    return GetDefaultInterface()->get_HyphenationZone();
  }

// StdProp:Integer
  void __fastcall set_HyphenationZone(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_HyphenationZone(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ConsecutiveHyphensLimit(void)
  {
    return GetDefaultInterface()->get_ConsecutiveHyphensLimit();
  }

// StdProp:Integer
  void __fastcall set_ConsecutiveHyphensLimit(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_ConsecutiveHyphensLimit(prop/*[in]*/);
  }

// StdProp:
  Word_2k::SectionsPtr __fastcall get_Sections(void)
  {
    return GetDefaultInterface()->get_Sections();
  }

// StdProp:
  Word_2k::ParagraphsPtr __fastcall get_Paragraphs(void)
  {
    return GetDefaultInterface()->get_Paragraphs();
  }

// StdProp:
  Word_2k::WordsPtr __fastcall get_Words(void)
  {
    return GetDefaultInterface()->get_Words();
  }

// StdProp:
  Word_2k::SentencesPtr __fastcall get_Sentences(void)
  {
    return GetDefaultInterface()->get_Sentences();
  }

// StdProp:
  Word_2k::CharactersPtr __fastcall get_Characters(void)
  {
    return GetDefaultInterface()->get_Characters();
  }

// StdProp:
  Word_2k::FieldsPtr __fastcall get_Fields(void)
  {
    return GetDefaultInterface()->get_Fields();
  }

// StdProp:
  Word_2k::FormFieldsPtr __fastcall get_FormFields(void)
  {
    return GetDefaultInterface()->get_FormFields();
  }

// StdProp:
  Word_2k::StylesPtr __fastcall get_Styles(void)
  {
    return GetDefaultInterface()->get_Styles();
  }

// StdProp:
  Word_2k::FramesPtr __fastcall get_Frames(void)
  {
    return GetDefaultInterface()->get_Frames();
  }

// StdProp:
  Word_2k::TablesOfFiguresPtr __fastcall get_TablesOfFigures(void)
  {
    return GetDefaultInterface()->get_TablesOfFigures();
  }

// StdProp:
  Word_2k::VariablesPtr __fastcall get_Variables(void)
  {
    return GetDefaultInterface()->get_Variables();
  }

// StdProp:
  Word_2k::MailMergePtr __fastcall get_MailMerge(void)
  {
    return GetDefaultInterface()->get_MailMerge();
  }

// StdProp:
  Word_2k::EnvelopePtr __fastcall get_Envelope(void)
  {
    return GetDefaultInterface()->get_Envelope();
  }

// StdProp:WideString
  BSTR __fastcall get_FullName(void)
  {
    return GetDefaultInterface()->get_FullName();
  }

// StdProp:
  Word_2k::RevisionsPtr __fastcall get_Revisions(void)
  {
    return GetDefaultInterface()->get_Revisions();
  }

// StdProp:
  Word_2k::TablesOfContentsPtr __fastcall get_TablesOfContents(void)
  {
    return GetDefaultInterface()->get_TablesOfContents();
  }

// StdProp:
  Word_2k::TablesOfAuthoritiesPtr __fastcall get_TablesOfAuthorities(void)
  {
    return GetDefaultInterface()->get_TablesOfAuthorities();
  }

// StdProp:
  Word_2k::PageSetupPtr __fastcall get_PageSetup(void)
  {
    return GetDefaultInterface()->get_PageSetup();
  }

// StdProp:
  void __fastcall set_PageSetup(Word_2k::PageSetup* prop/*[in]*/)
  {
    GetDefaultInterface()->set_PageSetup(prop/*[in]*/);
  }

// StdProp:
  Word_2k::WindowsPtr __fastcall get_Windows(void)
  {
    return GetDefaultInterface()->get_Windows();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasRoutingSlip(void)
  {
    return GetDefaultInterface()->get_HasRoutingSlip();
  }

// StdProp:WordBool
  void __fastcall set_HasRoutingSlip(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_HasRoutingSlip(prop/*[in]*/);
  }

// StdProp:
  Word_2k::RoutingSlipPtr __fastcall get_RoutingSlip(void)
  {
    return GetDefaultInterface()->get_RoutingSlip();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Routed(void)
  {
    return GetDefaultInterface()->get_Routed();
  }

// StdProp:
  Word_2k::TablesOfAuthoritiesCategoriesPtr __fastcall get_TablesOfAuthoritiesCategories(void)
  {
    return GetDefaultInterface()->get_TablesOfAuthoritiesCategories();
  }

// StdProp:
  Word_2k::IndexesPtr __fastcall get_Indexes(void)
  {
    return GetDefaultInterface()->get_Indexes();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Saved(void)
  {
    return GetDefaultInterface()->get_Saved();
  }

// StdProp:WordBool
  void __fastcall set_Saved(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Saved(prop/*[in]*/);
  }

// StdProp:
  Word_2k::RangePtr __fastcall get_Content(void)
  {
    return GetDefaultInterface()->get_Content();
  }

// StdProp:
  Word_2k::WINDOWPtr __fastcall get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

// StdProp:TOleEnum
  Word_2k::WdDocumentKind __fastcall get_Kind(void)
  {
    return GetDefaultInterface()->get_Kind();
  }

// StdProp:TOleEnum
  void __fastcall set_Kind(Word_2k::WdDocumentKind prop/*[in]*/)
  {
    GetDefaultInterface()->set_Kind(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ReadOnly(void)
  {
    return GetDefaultInterface()->get_ReadOnly();
  }

// StdProp:
  Word_2k::SubdocumentsPtr __fastcall get_Subdocuments(void)
  {
    return GetDefaultInterface()->get_Subdocuments();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsMasterDocument(void)
  {
    return GetDefaultInterface()->get_IsMasterDocument();
  }

// StdProp:Single
  float __fastcall get_DefaultTabStop(void)
  {
    return GetDefaultInterface()->get_DefaultTabStop();
  }

// StdProp:Single
  void __fastcall set_DefaultTabStop(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultTabStop(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EmbedTrueTypeFonts(void)
  {
    return GetDefaultInterface()->get_EmbedTrueTypeFonts();
  }

// StdProp:WordBool
  void __fastcall set_EmbedTrueTypeFonts(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_EmbedTrueTypeFonts(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SaveFormsData(void)
  {
    return GetDefaultInterface()->get_SaveFormsData();
  }

// StdProp:WordBool
  void __fastcall set_SaveFormsData(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SaveFormsData(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ReadOnlyRecommended(void)
  {
    return GetDefaultInterface()->get_ReadOnlyRecommended();
  }

// StdProp:WordBool
  void __fastcall set_ReadOnlyRecommended(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReadOnlyRecommended(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SaveSubsetFonts(void)
  {
    return GetDefaultInterface()->get_SaveSubsetFonts();
  }

// StdProp:WordBool
  void __fastcall set_SaveSubsetFonts(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SaveSubsetFonts(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Compatibility(Word_2k::WdCompatibility Type/*[in]*/)
  {
    return GetDefaultInterface()->get_Compatibility(Type/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_Compatibility(Word_2k::WdCompatibility Type/*[in]*/, VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Compatibility(Type/*[in]*/, prop/*[in]*/);
  }

// StdProp:
  Word_2k::StoryRangesPtr __fastcall get_StoryRanges(void)
  {
    return GetDefaultInterface()->get_StoryRanges();
  }

// StdProp:
  Office_2k::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsSubdocument(void)
  {
    return GetDefaultInterface()->get_IsSubdocument();
  }

// StdProp:Integer
  long __fastcall get_SaveFormat(void)
  {
    return GetDefaultInterface()->get_SaveFormat();
  }

// StdProp:TOleEnum
  Word_2k::WdProtectionType __fastcall get_ProtectionType(void)
  {
    return GetDefaultInterface()->get_ProtectionType();
  }

// StdProp:
  Word_2k::HyperlinksPtr __fastcall get_Hyperlinks(void)
  {
    return GetDefaultInterface()->get_Hyperlinks();
  }

// StdProp:
  Word_2k::ShapesPtr __fastcall get_Shapes(void)
  {
    return GetDefaultInterface()->get_Shapes();
  }

// StdProp:
  Word_2k::ListTemplatesPtr __fastcall get_ListTemplates(void)
  {
    return GetDefaultInterface()->get_ListTemplates();
  }

// StdProp:
  Word_2k::ListsPtr __fastcall get_Lists(void)
  {
    return GetDefaultInterface()->get_Lists();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UpdateStylesOnOpen(void)
  {
    return GetDefaultInterface()->get_UpdateStylesOnOpen();
  }

// StdProp:WordBool
  void __fastcall set_UpdateStylesOnOpen(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_UpdateStylesOnOpen(prop/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_AttachedTemplate(void)
  {
    return GetDefaultInterface()->get_AttachedTemplate();
  }

// StdProp:OleVariant
  void __fastcall set_AttachedTemplate(VARIANT* prop/*[in]*/)
  {
    GetDefaultInterface()->set_AttachedTemplate(prop/*[in]*/);
  }

// StdProp:
  Word_2k::InlineShapesPtr __fastcall get_InlineShapes(void)
  {
    return GetDefaultInterface()->get_InlineShapes();
  }

// StdProp:
  Word_2k::ShapePtr __fastcall get_Background(void)
  {
    return GetDefaultInterface()->get_Background();
  }

// StdProp:
  void __fastcall set_Background(Word_2k::Shape* prop/*[in]*/)
  {
    GetDefaultInterface()->set_Background(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_GrammarChecked(void)
  {
    return GetDefaultInterface()->get_GrammarChecked();
  }

// StdProp:WordBool
  void __fastcall set_GrammarChecked(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_GrammarChecked(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SpellingChecked(void)
  {
    return GetDefaultInterface()->get_SpellingChecked();
  }

// StdProp:WordBool
  void __fastcall set_SpellingChecked(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpellingChecked(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowGrammaticalErrors(void)
  {
    return GetDefaultInterface()->get_ShowGrammaticalErrors();
  }

// StdProp:WordBool
  void __fastcall set_ShowGrammaticalErrors(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowGrammaticalErrors(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowSpellingErrors(void)
  {
    return GetDefaultInterface()->get_ShowSpellingErrors();
  }

// StdProp:WordBool
  void __fastcall set_ShowSpellingErrors(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowSpellingErrors(prop/*[in]*/);
  }

// StdProp:
  Word_2k::VersionsPtr __fastcall get_Versions(void)
  {
    return GetDefaultInterface()->get_Versions();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowSummary(void)
  {
    return GetDefaultInterface()->get_ShowSummary();
  }

// StdProp:WordBool
  void __fastcall set_ShowSummary(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowSummary(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdSummaryMode __fastcall get_SummaryViewMode(void)
  {
    return GetDefaultInterface()->get_SummaryViewMode();
  }

// StdProp:TOleEnum
  void __fastcall set_SummaryViewMode(Word_2k::WdSummaryMode prop/*[in]*/)
  {
    GetDefaultInterface()->set_SummaryViewMode(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SummaryLength(void)
  {
    return GetDefaultInterface()->get_SummaryLength();
  }

// StdProp:Integer
  void __fastcall set_SummaryLength(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SummaryLength(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintFractionalWidths(void)
  {
    return GetDefaultInterface()->get_PrintFractionalWidths();
  }

// StdProp:WordBool
  void __fastcall set_PrintFractionalWidths(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintFractionalWidths(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintPostScriptOverText(void)
  {
    return GetDefaultInterface()->get_PrintPostScriptOverText();
  }

// StdProp:WordBool
  void __fastcall set_PrintPostScriptOverText(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintPostScriptOverText(prop/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Container(void)
  {
    return GetDefaultInterface()->get_Container();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintFormsData(void)
  {
    return GetDefaultInterface()->get_PrintFormsData();
  }

// StdProp:WordBool
  void __fastcall set_PrintFormsData(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintFormsData(prop/*[in]*/);
  }

// StdProp:
  Word_2k::ListParagraphsPtr __fastcall get_ListParagraphs(void)
  {
    return GetDefaultInterface()->get_ListParagraphs();
  }

// StdProp:WideString
  void __fastcall set_Password(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Password(Param1/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_WritePassword(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_WritePassword(Param1/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasPassword(void)
  {
    return GetDefaultInterface()->get_HasPassword();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_WriteReserved(void)
  {
    return GetDefaultInterface()->get_WriteReserved();
  }

// StdProp:WideString
  BSTR __fastcall get_ActiveWritingStyle(VARIANT* LanguageID/*[in]*/)
  {
    return GetDefaultInterface()->get_ActiveWritingStyle(LanguageID/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_ActiveWritingStyle(VARIANT* LanguageID/*[in]*/, BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ActiveWritingStyle(LanguageID/*[in]*/, prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

// StdProp:WordBool
  void __fastcall set_UserControl(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasMailer(void)
  {
    return GetDefaultInterface()->get_HasMailer();
  }

// StdProp:WordBool
  void __fastcall set_HasMailer(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_HasMailer(prop/*[in]*/);
  }

// StdProp:
  Word_2k::MailerPtr __fastcall get_Mailer(void)
  {
    return GetDefaultInterface()->get_Mailer();
  }

// StdProp:
  Word_2k::ReadabilityStatisticsPtr __fastcall get_ReadabilityStatistics(void)
  {
    return GetDefaultInterface()->get_ReadabilityStatistics();
  }

// StdProp:
  Word_2k::ProofreadingErrorsPtr __fastcall get_GrammaticalErrors(void)
  {
    return GetDefaultInterface()->get_GrammaticalErrors();
  }

// StdProp:
  Word_2k::ProofreadingErrorsPtr __fastcall get_SpellingErrors(void)
  {
    return GetDefaultInterface()->get_SpellingErrors();
  }

// StdProp:
  Vbide_2k::VBProjectPtr __fastcall get_VBProject(void)
  {
    return GetDefaultInterface()->get_VBProject();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FormsDesign(void)
  {
    return GetDefaultInterface()->get_FormsDesign();
  }

// StdProp:WideString
  BSTR __fastcall get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

// StdProp:WideString
  void __fastcall set__CodeName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SnapToGrid(void)
  {
    return GetDefaultInterface()->get_SnapToGrid();
  }

// StdProp:WordBool
  void __fastcall set_SnapToGrid(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SnapToGrid(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SnapToShapes(void)
  {
    return GetDefaultInterface()->get_SnapToShapes();
  }

// StdProp:WordBool
  void __fastcall set_SnapToShapes(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_SnapToShapes(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_GridDistanceHorizontal(void)
  {
    return GetDefaultInterface()->get_GridDistanceHorizontal();
  }

// StdProp:Single
  void __fastcall set_GridDistanceHorizontal(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridDistanceHorizontal(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_GridDistanceVertical(void)
  {
    return GetDefaultInterface()->get_GridDistanceVertical();
  }

// StdProp:Single
  void __fastcall set_GridDistanceVertical(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridDistanceVertical(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_GridOriginHorizontal(void)
  {
    return GetDefaultInterface()->get_GridOriginHorizontal();
  }

// StdProp:Single
  void __fastcall set_GridOriginHorizontal(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridOriginHorizontal(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_GridOriginVertical(void)
  {
    return GetDefaultInterface()->get_GridOriginVertical();
  }

// StdProp:Single
  void __fastcall set_GridOriginVertical(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridOriginVertical(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_GridSpaceBetweenHorizontalLines(void)
  {
    return GetDefaultInterface()->get_GridSpaceBetweenHorizontalLines();
  }

// StdProp:Integer
  void __fastcall set_GridSpaceBetweenHorizontalLines(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridSpaceBetweenHorizontalLines(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_GridSpaceBetweenVerticalLines(void)
  {
    return GetDefaultInterface()->get_GridSpaceBetweenVerticalLines();
  }

// StdProp:Integer
  void __fastcall set_GridSpaceBetweenVerticalLines(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridSpaceBetweenVerticalLines(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_GridOriginFromMargin(void)
  {
    return GetDefaultInterface()->get_GridOriginFromMargin();
  }

// StdProp:WordBool
  void __fastcall set_GridOriginFromMargin(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_GridOriginFromMargin(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_KerningByAlgorithm(void)
  {
    return GetDefaultInterface()->get_KerningByAlgorithm();
  }

// StdProp:WordBool
  void __fastcall set_KerningByAlgorithm(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_KerningByAlgorithm(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdJustificationMode __fastcall get_JustificationMode(void)
  {
    return GetDefaultInterface()->get_JustificationMode();
  }

// StdProp:TOleEnum
  void __fastcall set_JustificationMode(Word_2k::WdJustificationMode prop/*[in]*/)
  {
    GetDefaultInterface()->set_JustificationMode(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdFarEastLineBreakLevel __fastcall get_FarEastLineBreakLevel(void)
  {
    return GetDefaultInterface()->get_FarEastLineBreakLevel();
  }

// StdProp:TOleEnum
  void __fastcall set_FarEastLineBreakLevel(Word_2k::WdFarEastLineBreakLevel prop/*[in]*/)
  {
    GetDefaultInterface()->set_FarEastLineBreakLevel(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_NoLineBreakBefore(void)
  {
    return GetDefaultInterface()->get_NoLineBreakBefore();
  }

// StdProp:WideString
  void __fastcall set_NoLineBreakBefore(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NoLineBreakBefore(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_NoLineBreakAfter(void)
  {
    return GetDefaultInterface()->get_NoLineBreakAfter();
  }

// StdProp:WideString
  void __fastcall set_NoLineBreakAfter(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NoLineBreakAfter(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_TrackRevisions(void)
  {
    return GetDefaultInterface()->get_TrackRevisions();
  }

// StdProp:WordBool
  void __fastcall set_TrackRevisions(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_TrackRevisions(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintRevisions(void)
  {
    return GetDefaultInterface()->get_PrintRevisions();
  }

// StdProp:WordBool
  void __fastcall set_PrintRevisions(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintRevisions(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowRevisions(void)
  {
    return GetDefaultInterface()->get_ShowRevisions();
  }

// StdProp:WordBool
  void __fastcall set_ShowRevisions(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowRevisions(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ActiveTheme(void)
  {
    return GetDefaultInterface()->get_ActiveTheme();
  }

// StdProp:WideString
  BSTR __fastcall get_ActiveThemeDisplayName(void)
  {
    return GetDefaultInterface()->get_ActiveThemeDisplayName();
  }

// StdProp:
  Word_2k::EmailPtr __fastcall get_Email(void)
  {
    return GetDefaultInterface()->get_Email();
  }

// StdProp:
  Office_2k::ScriptsPtr __fastcall get_Scripts(void)
  {
    return GetDefaultInterface()->get_Scripts();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_LanguageDetected(void)
  {
    return GetDefaultInterface()->get_LanguageDetected();
  }

// StdProp:WordBool
  void __fastcall set_LanguageDetected(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_LanguageDetected(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdFarEastLineBreakLanguageID __fastcall get_FarEastLineBreakLanguage(void)
  {
    return GetDefaultInterface()->get_FarEastLineBreakLanguage();
  }

// StdProp:TOleEnum
  void __fastcall set_FarEastLineBreakLanguage(Word_2k::WdFarEastLineBreakLanguageID prop/*[in]*/)
  {
    GetDefaultInterface()->set_FarEastLineBreakLanguage(prop/*[in]*/);
  }

// StdProp:
  Word_2k::FramesetPtr __fastcall get_Frameset(void)
  {
    return GetDefaultInterface()->get_Frameset();
  }

// StdProp:OleVariant
  TVariant __fastcall get_ClickAndTypeParagraphStyle(void)
  {
    return GetDefaultInterface()->get_ClickAndTypeParagraphStyle();
  }

// StdProp:OleVariant
  void __fastcall set_ClickAndTypeParagraphStyle(VARIANT* prop/*[in]*/)
  {
    GetDefaultInterface()->set_ClickAndTypeParagraphStyle(prop/*[in]*/);
  }

// StdProp:
  Office_2k::HTMLProjectPtr __fastcall get_HTMLProject(void)
  {
    return GetDefaultInterface()->get_HTMLProject();
  }

// StdProp:
  Word_2k::WebOptionsPtr __fastcall get_WebOptions(void)
  {
    return GetDefaultInterface()->get_WebOptions();
  }

// StdProp:TOleEnum
  Office_2k::MsoEncoding __fastcall get_OpenEncoding(void)
  {
    return GetDefaultInterface()->get_OpenEncoding();
  }

// StdProp:TOleEnum
  Office_2k::MsoEncoding __fastcall get_SaveEncoding(void)
  {
    return GetDefaultInterface()->get_SaveEncoding();
  }

// StdProp:TOleEnum
  void __fastcall set_SaveEncoding(Office_2k::MsoEncoding prop/*[in]*/)
  {
    GetDefaultInterface()->set_SaveEncoding(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_OptimizeForWord97(void)
  {
    return GetDefaultInterface()->get_OptimizeForWord97();
  }

// StdProp:WordBool
  void __fastcall set_OptimizeForWord97(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_OptimizeForWord97(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_VBASigned(void)
  {
    return GetDefaultInterface()->get_VBASigned();
  }

  /*CoClassWriteMethods*/
  void __fastcall Close(VARIANT* SaveChanges/*[in,opt]*/= TNoParam(), 
                        VARIANT* OriginalFormat/*[in,opt]*/= TNoParam(), 
                        VARIANT* RouteDocument/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Close(SaveChanges/*[in,opt]*/, OriginalFormat/*[in,opt]*/, 
                                 RouteDocument/*[in,opt]*/);
  }

  void __fastcall SaveAs(VARIANT* FileName/*[in,opt]*/= TNoParam(), 
                         VARIANT* FileFormat/*[in,opt]*/= TNoParam(), 
                         VARIANT* LockComments/*[in,opt]*/= TNoParam(), 
                         VARIANT* Password/*[in,opt]*/= TNoParam(), 
                         VARIANT* AddToRecentFiles/*[in,opt]*/= TNoParam(), 
                         VARIANT* WritePassword/*[in,opt]*/= TNoParam(), 
                         VARIANT* ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                         VARIANT* EmbedTrueTypeFonts/*[in,opt]*/= TNoParam(), 
                         VARIANT* SaveNativePictureFormat/*[in,opt]*/= TNoParam(), 
                         VARIANT* SaveFormsData/*[in,opt]*/= TNoParam(), 
                         VARIANT* SaveAsAOCELetter/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SaveAs(FileName/*[in,opt]*/, FileFormat/*[in,opt]*/, 
                                  LockComments/*[in,opt]*/, Password/*[in,opt]*/, 
                                  AddToRecentFiles/*[in,opt]*/, WritePassword/*[in,opt]*/, 
                                  ReadOnlyRecommended/*[in,opt]*/, EmbedTrueTypeFonts/*[in,opt]*/, 
                                  SaveNativePictureFormat/*[in,opt]*/, SaveFormsData/*[in,opt]*/, 
                                  SaveAsAOCELetter/*[in,opt]*/);
  }

  void __fastcall Repaginate(void)
  {
    GetDefaultInterface()->Repaginate();
  }

  void __fastcall FitToPages(void)
  {
    GetDefaultInterface()->FitToPages();
  }

  void __fastcall ManualHyphenation(void)
  {
    GetDefaultInterface()->ManualHyphenation();
  }

  void __fastcall Select(void)
  {
    GetDefaultInterface()->Select();
  }

  void __fastcall DataForm(void)
  {
    GetDefaultInterface()->DataForm();
  }

  void __fastcall Route(void)
  {
    GetDefaultInterface()->Route();
  }

  void __fastcall Save(void)
  {
    GetDefaultInterface()->Save();
  }

  void __fastcall PrintOutOld(VARIANT* Background/*[in,opt]*/= TNoParam(), 
                              VARIANT* Append/*[in,opt]*/= TNoParam(), 
                              VARIANT* Range/*[in,opt]*/= TNoParam(), 
                              VARIANT* OutputFileName/*[in,opt]*/= TNoParam(), 
                              VARIANT* From/*[in,opt]*/= TNoParam(), 
                              VARIANT* To/*[in,opt]*/= TNoParam(), 
                              VARIANT* Item/*[in,opt]*/= TNoParam(), 
                              VARIANT* Copies/*[in,opt]*/= TNoParam(), 
                              VARIANT* Pages/*[in,opt]*/= TNoParam(), 
                              VARIANT* PageType/*[in,opt]*/= TNoParam(), 
                              VARIANT* PrintToFile/*[in,opt]*/= TNoParam(), 
                              VARIANT* Collate/*[in,opt]*/= TNoParam(), 
                              VARIANT* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                              VARIANT* ManualDuplexPrint/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOutOld(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                       OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                       Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                       PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                       Collate/*[in,opt]*/, ActivePrinterMacGX/*[in,opt]*/, 
                                       ManualDuplexPrint/*[in,opt]*/);
  }

  void __fastcall SendMail(void)
  {
    GetDefaultInterface()->SendMail();
  }

  Word_2k::RangePtr __fastcall Range(VARIANT* Start/*[in,opt]*/, VARIANT* End/*[in,opt]*/)
  {
    return GetDefaultInterface()->Range(Start/*[in,opt]*/, End/*[in,opt]*/);
  }

  void __fastcall RunAutoMacro(Word_2k::WdAutoMacros Which/*[in]*/)
  {
    GetDefaultInterface()->RunAutoMacro(Which/*[in]*/);
  }

  void __fastcall Activate(void)
  {
    GetDefaultInterface()->Activate();
  }

  void __fastcall PrintPreview(void)
  {
    GetDefaultInterface()->PrintPreview();
  }

  Word_2k::RangePtr __fastcall GoTo(VARIANT* What/*[in,opt]*/, VARIANT* Which/*[in,opt]*/, 
                                    VARIANT* Count/*[in,opt]*/, VARIANT* Name/*[in,opt]*/)
  {
    return GetDefaultInterface()->GoTo(What/*[in,opt]*/, Which/*[in,opt]*/, Count/*[in,opt]*/, 
                                       Name/*[in,opt]*/);
  }

  TOLEBOOL __fastcall Undo(VARIANT* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Undo(Times/*[in,opt]*/);
  }

  TOLEBOOL __fastcall Redo(VARIANT* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Redo(Times/*[in,opt]*/);
  }

  long __fastcall ComputeStatistics(Word_2k::WdStatistic Statistic/*[in]*/, 
                                    VARIANT* IncludeFootnotesAndEndnotes/*[in,opt]*/)
  {
    return GetDefaultInterface()->ComputeStatistics(Statistic/*[in]*/, 
                                                    IncludeFootnotesAndEndnotes/*[in,opt]*/);
  }

  void __fastcall MakeCompatibilityDefault(void)
  {
    GetDefaultInterface()->MakeCompatibilityDefault();
  }

  void __fastcall Protect(Word_2k::WdProtectionType Type/*[in]*/, 
                          VARIANT* NoReset/*[in,opt]*/= TNoParam(), 
                          VARIANT* Password/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Protect(Type/*[in]*/, NoReset/*[in,opt]*/, Password/*[in,opt]*/);
  }

  void __fastcall Unprotect(VARIANT* Password/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/);
  }

  void __fastcall EditionOptions(Word_2k::WdEditionType Type/*[in]*/, 
                                 Word_2k::WdEditionOption Option/*[in]*/, BSTR Name/*[in]*/, 
                                 VARIANT* Format/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->EditionOptions(Type/*[in]*/, Option/*[in]*/, Name/*[in]*/, 
                                          Format/*[in,opt]*/);
  }

  void __fastcall RunLetterWizard(VARIANT* LetterContent/*[in,opt]*/= TNoParam(), 
                                  VARIANT* WizardMode/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RunLetterWizard(LetterContent/*[in,opt]*/, WizardMode/*[in,opt]*/);
  }

  Word_2k::WordLetterContentPtr __fastcall GetLetterContent(void)
  {
    return GetDefaultInterface()->GetLetterContent();
  }

  void __fastcall SetLetterContent(VARIANT* LetterContent/*[in]*/)
  {
    GetDefaultInterface()->SetLetterContent(LetterContent/*[in]*/);
  }

  void __fastcall CopyStylesFromTemplate(BSTR Template/*[in]*/)
  {
    GetDefaultInterface()->CopyStylesFromTemplate(Template/*[in]*/);
  }

  void __fastcall UpdateStyles(void)
  {
    GetDefaultInterface()->UpdateStyles();
  }

  void __fastcall CheckGrammar(void)
  {
    GetDefaultInterface()->CheckGrammar();
  }

  void __fastcall CheckSpelling(VARIANT* CustomDictionary/*[in,opt]*/= TNoParam(), 
                                VARIANT* IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                VARIANT* AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary2/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary3/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary4/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary5/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary6/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary7/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary8/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary9/*[in,opt]*/= TNoParam(), 
                                VARIANT* CustomDictionary10/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                         AlwaysSuggest/*[in,opt]*/, CustomDictionary2/*[in,opt]*/, 
                                         CustomDictionary3/*[in,opt]*/, 
                                         CustomDictionary4/*[in,opt]*/, 
                                         CustomDictionary5/*[in,opt]*/, 
                                         CustomDictionary6/*[in,opt]*/, 
                                         CustomDictionary7/*[in,opt]*/, 
                                         CustomDictionary8/*[in,opt]*/, 
                                         CustomDictionary9/*[in,opt]*/, 
                                         CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall FollowHyperlink(VARIANT* Address/*[in,opt]*/= TNoParam(), 
                                  VARIANT* SubAddress/*[in,opt]*/= TNoParam(), 
                                  VARIANT* NewWindow/*[in,opt]*/= TNoParam(), 
                                  VARIANT* AddHistory/*[in,opt]*/= TNoParam(), 
                                  VARIANT* ExtraInfo/*[in,opt]*/= TNoParam(), 
                                  VARIANT* Method/*[in,opt]*/= TNoParam(), 
                                  VARIANT* HeaderInfo/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->FollowHyperlink(Address/*[in,opt]*/, SubAddress/*[in,opt]*/, 
                                           NewWindow/*[in,opt]*/, AddHistory/*[in,opt]*/, 
                                           ExtraInfo/*[in,opt]*/, Method/*[in,opt]*/, 
                                           HeaderInfo/*[in,opt]*/);
  }

  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  void __fastcall Reload(void)
  {
    GetDefaultInterface()->Reload();
  }

  Word_2k::RangePtr __fastcall AutoSummarize(VARIANT* Length/*[in,opt]*/, VARIANT* Mode/*[in,opt]*/, 
                                             VARIANT* UpdateProperties/*[in,opt]*/)
  {
    return GetDefaultInterface()->AutoSummarize(Length/*[in,opt]*/, Mode/*[in,opt]*/, 
                                                UpdateProperties/*[in,opt]*/);
  }

  void __fastcall RemoveNumbers(VARIANT* NumberType/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RemoveNumbers(NumberType/*[in,opt]*/);
  }

  void __fastcall ConvertNumbersToText(VARIANT* NumberType/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ConvertNumbersToText(NumberType/*[in,opt]*/);
  }

  long __fastcall CountNumberedItems(VARIANT* NumberType/*[in,opt]*/, VARIANT* Level/*[in,opt]*/)
  {
    return GetDefaultInterface()->CountNumberedItems(NumberType/*[in,opt]*/, Level/*[in,opt]*/);
  }

  void __fastcall Post(void)
  {
    GetDefaultInterface()->Post();
  }

  void __fastcall ToggleFormsDesign(void)
  {
    GetDefaultInterface()->ToggleFormsDesign();
  }

  void __fastcall Compare(BSTR Name/*[in]*/)
  {
    GetDefaultInterface()->Compare(Name/*[in]*/);
  }

  void __fastcall UpdateSummaryProperties(void)
  {
    GetDefaultInterface()->UpdateSummaryProperties();
  }

  TVariant __fastcall GetCrossReferenceItems(VARIANT* ReferenceType/*[in]*/)
  {
    return GetDefaultInterface()->GetCrossReferenceItems(ReferenceType/*[in]*/);
  }

  void __fastcall AutoFormat(void)
  {
    GetDefaultInterface()->AutoFormat();
  }

  void __fastcall ViewCode(void)
  {
    GetDefaultInterface()->ViewCode();
  }

  void __fastcall ViewPropertyBrowser(void)
  {
    GetDefaultInterface()->ViewPropertyBrowser();
  }

  void __fastcall ForwardMailer(void)
  {
    GetDefaultInterface()->ForwardMailer();
  }

  void __fastcall Reply(void)
  {
    GetDefaultInterface()->Reply();
  }

  void __fastcall ReplyAll(void)
  {
    GetDefaultInterface()->ReplyAll();
  }

  void __fastcall SendMailer(VARIANT* FileFormat/*[in,opt]*/= TNoParam(), 
                             VARIANT* Priority/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SendMailer(FileFormat/*[in,opt]*/, Priority/*[in,opt]*/);
  }

  void __fastcall UndoClear(void)
  {
    GetDefaultInterface()->UndoClear();
  }

  void __fastcall PresentIt(void)
  {
    GetDefaultInterface()->PresentIt();
  }

  void __fastcall SendFax(BSTR Address/*[in]*/, VARIANT* Subject/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SendFax(Address/*[in]*/, Subject/*[in,opt]*/);
  }

  void __fastcall Merge(BSTR FileName/*[in]*/)
  {
    GetDefaultInterface()->Merge(FileName/*[in]*/);
  }

  void __fastcall ClosePrintPreview(void)
  {
    GetDefaultInterface()->ClosePrintPreview();
  }

  void __fastcall CheckConsistency(void)
  {
    GetDefaultInterface()->CheckConsistency();
  }

  Word_2k::WordLetterContentPtr __fastcall CreateLetterContent(BSTR DateFormat/*[in]*/, 
                                                               VARIANT_BOOL IncludeHeaderFooter/*[in]*/, 
                                                               BSTR PageDesign/*[in]*/, 
                                                               Word_2k::WdLetterStyle LetterStyle/*[in]*/, 
                                                               VARIANT_BOOL Letterhead/*[in]*/, 
                                                               Word_2k::WdLetterheadLocation LetterheadLocation/*[in]*/, 
                                                               float LetterheadSize/*[in]*/, 
                                                               BSTR RecipientName/*[in]*/, 
                                                               BSTR RecipientAddress/*[in]*/, 
                                                               BSTR Salutation/*[in]*/, 
                                                               Word_2k::WdSalutationType SalutationType/*[in]*/, 
                                                               BSTR RecipientReference/*[in]*/, 
                                                               BSTR MailingInstructions/*[in]*/, 
                                                               BSTR AttentionLine/*[in]*/, 
                                                               BSTR Subject/*[in]*/, 
                                                               BSTR CCList/*[in]*/, 
                                                               BSTR ReturnAddress/*[in]*/, 
                                                               BSTR SenderName/*[in]*/, 
                                                               BSTR Closing/*[in]*/, 
                                                               BSTR SenderCompany/*[in]*/, 
                                                               BSTR SenderJobTitle/*[in]*/, 
                                                               BSTR SenderInitials/*[in]*/, 
                                                               long EnclosureNumber/*[in]*/, 
                                                               VARIANT* InfoBlock/*[in,opt]*/, 
                                                               VARIANT* RecipientCode/*[in,opt]*/, 
                                                               VARIANT* RecipientGender/*[in,opt]*/, 
                                                               VARIANT* ReturnAddressShortForm/*[in,opt]*/, 
                                                               VARIANT* SenderCity/*[in,opt]*/, 
                                                               VARIANT* SenderCode/*[in,opt]*/, 
                                                               VARIANT* SenderGender/*[in,opt]*/, 
                                                               VARIANT* SenderReference/*[in,opt]*/)
  {
    return GetDefaultInterface()->CreateLetterContent(DateFormat/*[in]*/, 
                                                      IncludeHeaderFooter/*[in]*/, 
                                                      PageDesign/*[in]*/, LetterStyle/*[in]*/, 
                                                      Letterhead/*[in]*/, LetterheadLocation/*[in]*/, 
                                                      LetterheadSize/*[in]*/, RecipientName/*[in]*/, 
                                                      RecipientAddress/*[in]*/, Salutation/*[in]*/, 
                                                      SalutationType/*[in]*/, 
                                                      RecipientReference/*[in]*/, 
                                                      MailingInstructions/*[in]*/, 
                                                      AttentionLine/*[in]*/, Subject/*[in]*/, 
                                                      CCList/*[in]*/, ReturnAddress/*[in]*/, 
                                                      SenderName/*[in]*/, Closing/*[in]*/, 
                                                      SenderCompany/*[in]*/, SenderJobTitle/*[in]*/, 
                                                      SenderInitials/*[in]*/, 
                                                      EnclosureNumber/*[in]*/, InfoBlock/*[in,opt]*/, 
                                                      RecipientCode/*[in,opt]*/, 
                                                      RecipientGender/*[in,opt]*/, 
                                                      ReturnAddressShortForm/*[in,opt]*/, 
                                                      SenderCity/*[in,opt]*/, SenderCode/*[in,opt]*/, 
                                                      SenderGender/*[in,opt]*/, 
                                                      SenderReference/*[in,opt]*/);
  }

  void __fastcall AcceptAllRevisions(void)
  {
    GetDefaultInterface()->AcceptAllRevisions();
  }

  void __fastcall RejectAllRevisions(void)
  {
    GetDefaultInterface()->RejectAllRevisions();
  }

  void __fastcall DetectLanguage(void)
  {
    GetDefaultInterface()->DetectLanguage();
  }

  void __fastcall ApplyTheme(BSTR Name/*[in]*/)
  {
    GetDefaultInterface()->ApplyTheme(Name/*[in]*/);
  }

  void __fastcall RemoveTheme(void)
  {
    GetDefaultInterface()->RemoveTheme();
  }

  void __fastcall WebPagePreview(void)
  {
    GetDefaultInterface()->WebPagePreview();
  }

  void __fastcall ReloadAs(Office_2k::MsoEncoding Encoding/*[in]*/)
  {
    GetDefaultInterface()->ReloadAs(Encoding/*[in]*/);
  }

  void __fastcall PrintOut(VARIANT* Background/*[in,opt]*/= TNoParam(), 
                           VARIANT* Append/*[in,opt]*/= TNoParam(), 
                           VARIANT* Range/*[in,opt]*/= TNoParam(), 
                           VARIANT* OutputFileName/*[in,opt]*/= TNoParam(), 
                           VARIANT* From/*[in,opt]*/= TNoParam(), 
                           VARIANT* To/*[in,opt]*/= TNoParam(), 
                           VARIANT* Item/*[in,opt]*/= TNoParam(), 
                           VARIANT* Copies/*[in,opt]*/= TNoParam(), 
                           VARIANT* Pages/*[in,opt]*/= TNoParam(), 
                           VARIANT* PageType/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintToFile/*[in,opt]*/= TNoParam(), 
                           VARIANT* Collate/*[in,opt]*/= TNoParam(), 
                           VARIANT* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                           VARIANT* ManualDuplexPrint/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomColumn/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomRow/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomPaperWidth/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomPaperHeight/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOut(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                    OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                    Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                    PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                    Collate/*[in,opt]*/, ActivePrinterMacGX/*[in,opt]*/, 
                                    ManualDuplexPrint/*[in,opt]*/, PrintZoomColumn/*[in,opt]*/, 
                                    PrintZoomRow/*[in,opt]*/, PrintZoomPaperWidth/*[in,opt]*/, 
                                    PrintZoomPaperHeight/*[in,opt]*/);
  }

  void __fastcall sblt(BSTR s/*[in]*/)
  {
    GetDefaultInterface()->sblt(s/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property BSTR Name={ read=get_Name }; // 0, No
  __property Word_2k::WordApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property long Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property LPDISPATCH BuiltInDocumentProperties={ read=get_BuiltInDocumentProperties }; // 0, No
  __property LPDISPATCH CustomDocumentProperties={ read=get_CustomDocumentProperties }; // 0, No
  __property BSTR Path={ read=get_Path }; // 0, No
  __property Word_2k::BookmarksPtr Bookmarks={ read=get_Bookmarks }; // 0, Yes
  __property Word_2k::TablesPtr Tables={ read=get_Tables }; // 0, Yes
  __property Word_2k::FootnotesPtr Footnotes={ read=get_Footnotes }; // 0, Yes
  __property Word_2k::EndnotesPtr Endnotes={ read=get_Endnotes }; // 0, Yes
  __property Word_2k::CommentsPtr Comments={ read=get_Comments }; // 0, Yes
  __property Word_2k::WdDocumentType Type={ read=get_Type }; // 0, No
  __property Word_2k::SectionsPtr Sections={ read=get_Sections }; // 0, Yes
  __property Word_2k::ParagraphsPtr Paragraphs={ read=get_Paragraphs }; // 0, Yes
  __property Word_2k::WordsPtr Words={ read=get_Words }; // 0, Yes
  __property Word_2k::SentencesPtr Sentences={ read=get_Sentences }; // 0, Yes
  __property Word_2k::CharactersPtr Characters={ read=get_Characters }; // 0, Yes
  __property Word_2k::FieldsPtr Fields={ read=get_Fields }; // 0, Yes
  __property Word_2k::FormFieldsPtr FormFields={ read=get_FormFields }; // 0, Yes
  __property Word_2k::StylesPtr Styles={ read=get_Styles }; // 0, Yes
  __property Word_2k::FramesPtr Frames={ read=get_Frames }; // 0, Yes
  __property Word_2k::TablesOfFiguresPtr TablesOfFigures={ read=get_TablesOfFigures }; // 0, Yes
  __property Word_2k::VariablesPtr Variables={ read=get_Variables }; // 0, Yes
  __property Word_2k::MailMergePtr MailMerge={ read=get_MailMerge }; // 0, Yes
  __property Word_2k::EnvelopePtr Envelope={ read=get_Envelope }; // 0, Yes
  __property BSTR FullName={ read=get_FullName }; // 0, No
  __property Word_2k::RevisionsPtr Revisions={ read=get_Revisions }; // 0, Yes
  __property Word_2k::TablesOfContentsPtr TablesOfContents={ read=get_TablesOfContents }; // 0, Yes
  __property Word_2k::TablesOfAuthoritiesPtr TablesOfAuthorities={ read=get_TablesOfAuthorities }; // 0, Yes
  __property Word_2k::WindowsPtr Windows={ read=get_Windows }; // 0, Yes
  __property Word_2k::RoutingSlipPtr RoutingSlip={ read=get_RoutingSlip }; // 0, Yes
  __property TOLEBOOL Routed={ read=get_Routed }; // 0, No
  __property Word_2k::TablesOfAuthoritiesCategoriesPtr TablesOfAuthoritiesCategories={ read=get_TablesOfAuthoritiesCategories }; // 0, Yes
  __property Word_2k::IndexesPtr Indexes={ read=get_Indexes }; // 0, Yes
  __property Word_2k::RangePtr Content={ read=get_Content }; // 0, Yes
  __property Word_2k::WINDOWPtr ActiveWindow={ read=get_ActiveWindow }; // 0, Yes
  __property TOLEBOOL ReadOnly={ read=get_ReadOnly }; // 0, No
  __property Word_2k::SubdocumentsPtr Subdocuments={ read=get_Subdocuments }; // 0, Yes
  __property TOLEBOOL IsMasterDocument={ read=get_IsMasterDocument }; // 0, No
  __property TOLEBOOL Compatibility[Word_2k::WdCompatibility Type]={ read=get_Compatibility }; // 0, No
  __property Word_2k::StoryRangesPtr StoryRanges={ read=get_StoryRanges }; // 0, Yes
  __property Office_2k::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property TOLEBOOL IsSubdocument={ read=get_IsSubdocument }; // 0, No
  __property long SaveFormat={ read=get_SaveFormat }; // 0, No
  __property Word_2k::WdProtectionType ProtectionType={ read=get_ProtectionType }; // 0, No
  __property Word_2k::HyperlinksPtr Hyperlinks={ read=get_Hyperlinks }; // 0, Yes
  __property Word_2k::ShapesPtr Shapes={ read=get_Shapes }; // 0, Yes
  __property Word_2k::ListTemplatesPtr ListTemplates={ read=get_ListTemplates }; // 0, Yes
  __property Word_2k::ListsPtr Lists={ read=get_Lists }; // 0, Yes
  __property Word_2k::InlineShapesPtr InlineShapes={ read=get_InlineShapes }; // 0, Yes
  __property Word_2k::VersionsPtr Versions={ read=get_Versions }; // 0, Yes
  __property LPDISPATCH Container={ read=get_Container }; // 0, No
  __property Word_2k::ListParagraphsPtr ListParagraphs={ read=get_ListParagraphs }; // 0, Yes
  __property BSTR Password={ }; // 0, No
  __property BSTR WritePassword={ }; // 0, No
  __property TOLEBOOL HasPassword={ read=get_HasPassword }; // 0, No
  __property TOLEBOOL WriteReserved={ read=get_WriteReserved }; // 0, No
  __property BSTR ActiveWritingStyle[VARIANT* LanguageID]={ read=get_ActiveWritingStyle }; // 0, No
  __property Word_2k::MailerPtr Mailer={ read=get_Mailer }; // 0, Yes
  __property Word_2k::ReadabilityStatisticsPtr ReadabilityStatistics={ read=get_ReadabilityStatistics }; // 0, Yes
  __property Word_2k::ProofreadingErrorsPtr GrammaticalErrors={ read=get_GrammaticalErrors }; // 0, Yes
  __property Word_2k::ProofreadingErrorsPtr SpellingErrors={ read=get_SpellingErrors }; // 0, Yes
  __property Vbide_2k::VBProjectPtr VBProject={ read=get_VBProject }; // 0, Yes
  __property TOLEBOOL FormsDesign={ read=get_FormsDesign }; // 0, No
  __property BSTR CodeName={ read=get_CodeName }; // 0, No
  __property BSTR ActiveTheme={ read=get_ActiveTheme }; // 0, No
  __property BSTR ActiveThemeDisplayName={ read=get_ActiveThemeDisplayName }; // 0, No
  __property Word_2k::EmailPtr Email={ read=get_Email }; // 0, Yes
  __property Office_2k::ScriptsPtr Scripts={ read=get_Scripts }; // 0, Yes
  __property Word_2k::FramesetPtr Frameset={ read=get_Frameset }; // 0, Yes
  __property Office_2k::HTMLProjectPtr HTMLProject={ read=get_HTMLProject }; // 0, Yes
  __property Word_2k::WebOptionsPtr WebOptions={ read=get_WebOptions }; // 0, Yes
  __property Office_2k::MsoEncoding OpenEncoding={ read=get_OpenEncoding }; // 0, No
  __property TOLEBOOL VBASigned={ read=get_VBASigned }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL AutoHyphenation={ read=get_AutoHyphenation, stored=false }; // 0, No
  __property TOLEBOOL HyphenateCaps={ read=get_HyphenateCaps, stored=false }; // 0, No
  __property long HyphenationZone={ read=get_HyphenationZone, stored=false }; // 0, No
  __property long ConsecutiveHyphensLimit={ read=get_ConsecutiveHyphensLimit, stored=false }; // 0, No
  __property Word_2k::PageSetupPtr PageSetup={ read=get_PageSetup, stored=false }; // 0, Yes
  __property TOLEBOOL HasRoutingSlip={ read=get_HasRoutingSlip, stored=false }; // 0, No
  __property TOLEBOOL Saved={ read=get_Saved, stored=false }; // 0, No
  __property Word_2k::WdDocumentKind Kind={ read=get_Kind, stored=false }; // 0, No
  __property float DefaultTabStop={ read=get_DefaultTabStop, stored=false }; // 0, No
  __property TOLEBOOL EmbedTrueTypeFonts={ read=get_EmbedTrueTypeFonts, stored=false }; // 0, No
  __property TOLEBOOL SaveFormsData={ read=get_SaveFormsData, stored=false }; // 0, No
  __property TOLEBOOL ReadOnlyRecommended={ read=get_ReadOnlyRecommended, stored=false }; // 0, No
  __property TOLEBOOL SaveSubsetFonts={ read=get_SaveSubsetFonts, stored=false }; // 0, No
  __property TOLEBOOL UpdateStylesOnOpen={ read=get_UpdateStylesOnOpen, stored=false }; // 0, No
  __property Word_2k::ShapePtr Background={ read=get_Background, stored=false }; // 0, Yes
  __property TOLEBOOL GrammarChecked={ read=get_GrammarChecked, stored=false }; // 0, No
  __property TOLEBOOL SpellingChecked={ read=get_SpellingChecked, stored=false }; // 0, No
  __property TOLEBOOL ShowGrammaticalErrors={ read=get_ShowGrammaticalErrors, stored=false }; // 0, No
  __property TOLEBOOL ShowSpellingErrors={ read=get_ShowSpellingErrors, stored=false }; // 0, No
  __property TOLEBOOL ShowSummary={ read=get_ShowSummary, stored=false }; // 0, No
  __property Word_2k::WdSummaryMode SummaryViewMode={ read=get_SummaryViewMode, stored=false }; // 0, No
  __property long SummaryLength={ read=get_SummaryLength, stored=false }; // 0, No
  __property TOLEBOOL PrintFractionalWidths={ read=get_PrintFractionalWidths, stored=false }; // 0, No
  __property TOLEBOOL PrintPostScriptOverText={ read=get_PrintPostScriptOverText, stored=false }; // 0, No
  __property TOLEBOOL PrintFormsData={ read=get_PrintFormsData, stored=false }; // 0, No
  __property TOLEBOOL UserControl={ read=get_UserControl, stored=false }; // 0, No
  __property TOLEBOOL HasMailer={ read=get_HasMailer, stored=false }; // 0, No
  __property BSTR _CodeName={ read=get__CodeName, stored=false }; // 0, No
  __property TOLEBOOL SnapToGrid={ read=get_SnapToGrid, stored=false }; // 0, No
  __property TOLEBOOL SnapToShapes={ read=get_SnapToShapes, stored=false }; // 0, No
  __property float GridDistanceHorizontal={ read=get_GridDistanceHorizontal, stored=false }; // 0, No
  __property float GridDistanceVertical={ read=get_GridDistanceVertical, stored=false }; // 0, No
  __property float GridOriginHorizontal={ read=get_GridOriginHorizontal, stored=false }; // 0, No
  __property float GridOriginVertical={ read=get_GridOriginVertical, stored=false }; // 0, No
  __property long GridSpaceBetweenHorizontalLines={ read=get_GridSpaceBetweenHorizontalLines, stored=false }; // 0, No
  __property long GridSpaceBetweenVerticalLines={ read=get_GridSpaceBetweenVerticalLines, stored=false }; // 0, No
  __property TOLEBOOL GridOriginFromMargin={ read=get_GridOriginFromMargin, stored=false }; // 0, No
  __property TOLEBOOL KerningByAlgorithm={ read=get_KerningByAlgorithm, stored=false }; // 0, No
  __property Word_2k::WdJustificationMode JustificationMode={ read=get_JustificationMode, stored=false }; // 0, No
  __property Word_2k::WdFarEastLineBreakLevel FarEastLineBreakLevel={ read=get_FarEastLineBreakLevel, stored=false }; // 0, No
  __property BSTR NoLineBreakBefore={ read=get_NoLineBreakBefore, stored=false }; // 0, No
  __property BSTR NoLineBreakAfter={ read=get_NoLineBreakAfter, stored=false }; // 0, No
  __property TOLEBOOL TrackRevisions={ read=get_TrackRevisions, stored=false }; // 0, No
  __property TOLEBOOL PrintRevisions={ read=get_PrintRevisions, stored=false }; // 0, No
  __property TOLEBOOL ShowRevisions={ read=get_ShowRevisions, stored=false }; // 0, No
  __property TOLEBOOL LanguageDetected={ read=get_LanguageDetected, stored=false }; // 0, No
  __property Word_2k::WdFarEastLineBreakLanguageID FarEastLineBreakLanguage={ read=get_FarEastLineBreakLanguage, stored=false }; // 0, No
  __property Office_2k::MsoEncoding SaveEncoding={ read=get_SaveEncoding, stored=false }; // 0, No
  __property TOLEBOOL OptimizeForWord97={ read=get_OptimizeForWord97, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnNew;
  TNotifyEvent                   FOnOpen;
  TNotifyEvent                   FOnClose;
__published:
  __property TNotifyEvent OnNew={ read=FOnNew, write=FOnNew };
  __property TNotifyEvent OnOpen={ read=FOnOpen, write=FOnOpen };
  __property TNotifyEvent OnClose={ read=FOnClose, write=FOnClose };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordFont
// Help String      : 
// Default Interface: _Font
// Def. Intf. Object: _FontPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordFont : public Oleserver::TOleServer
{
  _FontPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordFont(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _FontPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_FontPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Word_2k::WordApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:Integer
  long __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Word_2k::WordFontPtr __fastcall get_Duplicate(void)
  {
    return GetDefaultInterface()->get_Duplicate();
  }

// StdProp:Integer
  long __fastcall get_Bold(void)
  {
    return GetDefaultInterface()->get_Bold();
  }

// StdProp:Integer
  void __fastcall set_Bold(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Bold(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Italic(void)
  {
    return GetDefaultInterface()->get_Italic();
  }

// StdProp:Integer
  void __fastcall set_Italic(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Italic(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Hidden(void)
  {
    return GetDefaultInterface()->get_Hidden();
  }

// StdProp:Integer
  void __fastcall set_Hidden(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Hidden(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SmallCaps(void)
  {
    return GetDefaultInterface()->get_SmallCaps();
  }

// StdProp:Integer
  void __fastcall set_SmallCaps(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SmallCaps(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_AllCaps(void)
  {
    return GetDefaultInterface()->get_AllCaps();
  }

// StdProp:Integer
  void __fastcall set_AllCaps(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AllCaps(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_StrikeThrough(void)
  {
    return GetDefaultInterface()->get_StrikeThrough();
  }

// StdProp:Integer
  void __fastcall set_StrikeThrough(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_StrikeThrough(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DoubleStrikeThrough(void)
  {
    return GetDefaultInterface()->get_DoubleStrikeThrough();
  }

// StdProp:Integer
  void __fastcall set_DoubleStrikeThrough(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_DoubleStrikeThrough(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdColorIndex __fastcall get_ColorIndex(void)
  {
    return GetDefaultInterface()->get_ColorIndex();
  }

// StdProp:TOleEnum
  void __fastcall set_ColorIndex(Word_2k::WdColorIndex prop/*[in]*/)
  {
    GetDefaultInterface()->set_ColorIndex(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Subscript(void)
  {
    return GetDefaultInterface()->get_Subscript();
  }

// StdProp:Integer
  void __fastcall set_Subscript(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Subscript(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Superscript(void)
  {
    return GetDefaultInterface()->get_Superscript();
  }

// StdProp:Integer
  void __fastcall set_Superscript(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Superscript(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdUnderline __fastcall get_Underline(void)
  {
    return GetDefaultInterface()->get_Underline();
  }

// StdProp:TOleEnum
  void __fastcall set_Underline(Word_2k::WdUnderline prop/*[in]*/)
  {
    GetDefaultInterface()->set_Underline(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_Size(void)
  {
    return GetDefaultInterface()->get_Size();
  }

// StdProp:Single
  void __fastcall set_Size(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_Size(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Name(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Position(void)
  {
    return GetDefaultInterface()->get_Position();
  }

// StdProp:Integer
  void __fastcall set_Position(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Position(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_Spacing(void)
  {
    return GetDefaultInterface()->get_Spacing();
  }

// StdProp:Single
  void __fastcall set_Spacing(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_Spacing(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Scaling(void)
  {
    return GetDefaultInterface()->get_Scaling();
  }

// StdProp:Integer
  void __fastcall set_Scaling(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Scaling(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Shadow(void)
  {
    return GetDefaultInterface()->get_Shadow();
  }

// StdProp:Integer
  void __fastcall set_Shadow(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Shadow(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Outline(void)
  {
    return GetDefaultInterface()->get_Outline();
  }

// StdProp:Integer
  void __fastcall set_Outline(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Outline(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Emboss(void)
  {
    return GetDefaultInterface()->get_Emboss();
  }

// StdProp:Integer
  void __fastcall set_Emboss(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Emboss(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_Kerning(void)
  {
    return GetDefaultInterface()->get_Kerning();
  }

// StdProp:Single
  void __fastcall set_Kerning(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_Kerning(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Engrave(void)
  {
    return GetDefaultInterface()->get_Engrave();
  }

// StdProp:Integer
  void __fastcall set_Engrave(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Engrave(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdAnimation __fastcall get_Animation(void)
  {
    return GetDefaultInterface()->get_Animation();
  }

// StdProp:TOleEnum
  void __fastcall set_Animation(Word_2k::WdAnimation prop/*[in]*/)
  {
    GetDefaultInterface()->set_Animation(prop/*[in]*/);
  }

// StdProp:
  Word_2k::BordersPtr __fastcall get_Borders(void)
  {
    return GetDefaultInterface()->get_Borders();
  }

// StdProp:
  void __fastcall set_Borders(Word_2k::Borders* prop/*[in]*/)
  {
    GetDefaultInterface()->set_Borders(prop/*[in]*/);
  }

// StdProp:
  Word_2k::ShadingPtr __fastcall get_Shading(void)
  {
    return GetDefaultInterface()->get_Shading();
  }

// StdProp:TOleEnum
  Word_2k::WdEmphasisMark __fastcall get_EmphasisMark(void)
  {
    return GetDefaultInterface()->get_EmphasisMark();
  }

// StdProp:TOleEnum
  void __fastcall set_EmphasisMark(Word_2k::WdEmphasisMark prop/*[in]*/)
  {
    GetDefaultInterface()->set_EmphasisMark(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisableCharacterSpaceGrid(void)
  {
    return GetDefaultInterface()->get_DisableCharacterSpaceGrid();
  }

// StdProp:WordBool
  void __fastcall set_DisableCharacterSpaceGrid(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisableCharacterSpaceGrid(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_NameFarEast(void)
  {
    return GetDefaultInterface()->get_NameFarEast();
  }

// StdProp:WideString
  void __fastcall set_NameFarEast(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameFarEast(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_NameAscii(void)
  {
    return GetDefaultInterface()->get_NameAscii();
  }

// StdProp:WideString
  void __fastcall set_NameAscii(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameAscii(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_NameOther(void)
  {
    return GetDefaultInterface()->get_NameOther();
  }

// StdProp:WideString
  void __fastcall set_NameOther(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameOther(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdColor __fastcall get_Color(void)
  {
    return GetDefaultInterface()->get_Color();
  }

// StdProp:TOleEnum
  void __fastcall set_Color(Word_2k::WdColor prop/*[in]*/)
  {
    GetDefaultInterface()->set_Color(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_BoldBi(void)
  {
    return GetDefaultInterface()->get_BoldBi();
  }

// StdProp:Integer
  void __fastcall set_BoldBi(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_BoldBi(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ItalicBi(void)
  {
    return GetDefaultInterface()->get_ItalicBi();
  }

// StdProp:Integer
  void __fastcall set_ItalicBi(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_ItalicBi(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_SizeBi(void)
  {
    return GetDefaultInterface()->get_SizeBi();
  }

// StdProp:Single
  void __fastcall set_SizeBi(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_SizeBi(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_NameBi(void)
  {
    return GetDefaultInterface()->get_NameBi();
  }

// StdProp:WideString
  void __fastcall set_NameBi(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_NameBi(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdColorIndex __fastcall get_ColorIndexBi(void)
  {
    return GetDefaultInterface()->get_ColorIndexBi();
  }

// StdProp:TOleEnum
  void __fastcall set_ColorIndexBi(Word_2k::WdColorIndex prop/*[in]*/)
  {
    GetDefaultInterface()->set_ColorIndexBi(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdColor __fastcall get_DiacriticColor(void)
  {
    return GetDefaultInterface()->get_DiacriticColor();
  }

// StdProp:TOleEnum
  void __fastcall set_DiacriticColor(Word_2k::WdColor prop/*[in]*/)
  {
    GetDefaultInterface()->set_DiacriticColor(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdColor __fastcall get_UnderlineColor(void)
  {
    return GetDefaultInterface()->get_UnderlineColor();
  }

// StdProp:TOleEnum
  void __fastcall set_UnderlineColor(Word_2k::WdColor prop/*[in]*/)
  {
    GetDefaultInterface()->set_UnderlineColor(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Grow(void)
  {
    GetDefaultInterface()->Grow();
  }

  void __fastcall Shrink(void)
  {
    GetDefaultInterface()->Shrink();
  }

  void __fastcall Reset(void)
  {
    GetDefaultInterface()->Reset();
  }

  void __fastcall SetAsTemplateDefault(void)
  {
    GetDefaultInterface()->SetAsTemplateDefault();
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property long Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Word_2k::WordFontPtr Duplicate={ read=get_Duplicate }; // 0, Yes
  __property Word_2k::ShadingPtr Shading={ read=get_Shading }; // 0, Yes
  /*CoClassWriteProperties*/
  __property long Bold={ read=get_Bold, stored=false }; // 0, No
  __property long Italic={ read=get_Italic, stored=false }; // 0, No
  __property long Hidden={ read=get_Hidden, stored=false }; // 0, No
  __property long SmallCaps={ read=get_SmallCaps, stored=false }; // 0, No
  __property long AllCaps={ read=get_AllCaps, stored=false }; // 0, No
  __property long StrikeThrough={ read=get_StrikeThrough, stored=false }; // 0, No
  __property long DoubleStrikeThrough={ read=get_DoubleStrikeThrough, stored=false }; // 0, No
  __property Word_2k::WdColorIndex ColorIndex={ read=get_ColorIndex, stored=false }; // 0, No
  __property long Subscript={ read=get_Subscript, stored=false }; // 0, No
  __property long Superscript={ read=get_Superscript, stored=false }; // 0, No
  __property Word_2k::WdUnderline Underline={ read=get_Underline, stored=false }; // 0, No
  __property float Size={ read=get_Size, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property long Position={ read=get_Position, stored=false }; // 0, No
  __property float Spacing={ read=get_Spacing, stored=false }; // 0, No
  __property long Scaling={ read=get_Scaling, stored=false }; // 0, No
  __property long Shadow={ read=get_Shadow, stored=false }; // 0, No
  __property long Outline={ read=get_Outline, stored=false }; // 0, No
  __property long Emboss={ read=get_Emboss, stored=false }; // 0, No
  __property float Kerning={ read=get_Kerning, stored=false }; // 0, No
  __property long Engrave={ read=get_Engrave, stored=false }; // 0, No
  __property Word_2k::WdAnimation Animation={ read=get_Animation, stored=false }; // 0, No
  __property Word_2k::BordersPtr Borders={ read=get_Borders, stored=false }; // 0, Yes
  __property Word_2k::WdEmphasisMark EmphasisMark={ read=get_EmphasisMark, stored=false }; // 0, No
  __property TOLEBOOL DisableCharacterSpaceGrid={ read=get_DisableCharacterSpaceGrid, stored=false }; // 0, No
  __property BSTR NameFarEast={ read=get_NameFarEast, stored=false }; // 0, No
  __property BSTR NameAscii={ read=get_NameAscii, stored=false }; // 0, No
  __property BSTR NameOther={ read=get_NameOther, stored=false }; // 0, No
  __property Word_2k::WdColor Color={ read=get_Color, stored=false }; // 0, No
  __property long BoldBi={ read=get_BoldBi, stored=false }; // 0, No
  __property long ItalicBi={ read=get_ItalicBi, stored=false }; // 0, No
  __property float SizeBi={ read=get_SizeBi, stored=false }; // 0, No
  __property BSTR NameBi={ read=get_NameBi, stored=false }; // 0, No
  __property Word_2k::WdColorIndex ColorIndexBi={ read=get_ColorIndexBi, stored=false }; // 0, No
  __property Word_2k::WdColor DiacriticColor={ read=get_DiacriticColor, stored=false }; // 0, No
  __property Word_2k::WdColor UnderlineColor={ read=get_UnderlineColor, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordParagraphFormat
// Help String      : 
// Default Interface: _ParagraphFormat
// Def. Intf. Object: _ParagraphFormatPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordParagraphFormat : public Oleserver::TOleServer
{
  _ParagraphFormatPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordParagraphFormat(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ParagraphFormatPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ParagraphFormatPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Word_2k::WordApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:Integer
  long __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Word_2k::WordParagraphFormatPtr __fastcall get_Duplicate(void)
  {
    return GetDefaultInterface()->get_Duplicate();
  }

// StdProp:OleVariant
  TVariant __fastcall get_Style(void)
  {
    return GetDefaultInterface()->get_Style();
  }

// StdProp:OleVariant
  void __fastcall set_Style(VARIANT* prop/*[in]*/)
  {
    GetDefaultInterface()->set_Style(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdParagraphAlignment __fastcall get_Alignment(void)
  {
    return GetDefaultInterface()->get_Alignment();
  }

// StdProp:TOleEnum
  void __fastcall set_Alignment(Word_2k::WdParagraphAlignment prop/*[in]*/)
  {
    GetDefaultInterface()->set_Alignment(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_KeepTogether(void)
  {
    return GetDefaultInterface()->get_KeepTogether();
  }

// StdProp:Integer
  void __fastcall set_KeepTogether(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_KeepTogether(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_KeepWithNext(void)
  {
    return GetDefaultInterface()->get_KeepWithNext();
  }

// StdProp:Integer
  void __fastcall set_KeepWithNext(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_KeepWithNext(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_PageBreakBefore(void)
  {
    return GetDefaultInterface()->get_PageBreakBefore();
  }

// StdProp:Integer
  void __fastcall set_PageBreakBefore(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_PageBreakBefore(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_NoLineNumber(void)
  {
    return GetDefaultInterface()->get_NoLineNumber();
  }

// StdProp:Integer
  void __fastcall set_NoLineNumber(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_NoLineNumber(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_RightIndent(void)
  {
    return GetDefaultInterface()->get_RightIndent();
  }

// StdProp:Single
  void __fastcall set_RightIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_RightIndent(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_LeftIndent(void)
  {
    return GetDefaultInterface()->get_LeftIndent();
  }

// StdProp:Single
  void __fastcall set_LeftIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LeftIndent(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_FirstLineIndent(void)
  {
    return GetDefaultInterface()->get_FirstLineIndent();
  }

// StdProp:Single
  void __fastcall set_FirstLineIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_FirstLineIndent(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_LineSpacing(void)
  {
    return GetDefaultInterface()->get_LineSpacing();
  }

// StdProp:Single
  void __fastcall set_LineSpacing(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineSpacing(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdLineSpacing __fastcall get_LineSpacingRule(void)
  {
    return GetDefaultInterface()->get_LineSpacingRule();
  }

// StdProp:TOleEnum
  void __fastcall set_LineSpacingRule(Word_2k::WdLineSpacing prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineSpacingRule(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_SpaceBefore(void)
  {
    return GetDefaultInterface()->get_SpaceBefore();
  }

// StdProp:Single
  void __fastcall set_SpaceBefore(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceBefore(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_SpaceAfter(void)
  {
    return GetDefaultInterface()->get_SpaceAfter();
  }

// StdProp:Single
  void __fastcall set_SpaceAfter(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceAfter(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Hyphenation(void)
  {
    return GetDefaultInterface()->get_Hyphenation();
  }

// StdProp:Integer
  void __fastcall set_Hyphenation(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Hyphenation(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_WidowControl(void)
  {
    return GetDefaultInterface()->get_WidowControl();
  }

// StdProp:Integer
  void __fastcall set_WidowControl(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_WidowControl(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_FarEastLineBreakControl(void)
  {
    return GetDefaultInterface()->get_FarEastLineBreakControl();
  }

// StdProp:Integer
  void __fastcall set_FarEastLineBreakControl(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_FarEastLineBreakControl(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_WordWrap(void)
  {
    return GetDefaultInterface()->get_WordWrap();
  }

// StdProp:Integer
  void __fastcall set_WordWrap(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_WordWrap(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HangingPunctuation(void)
  {
    return GetDefaultInterface()->get_HangingPunctuation();
  }

// StdProp:Integer
  void __fastcall set_HangingPunctuation(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_HangingPunctuation(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HalfWidthPunctuationOnTopOfLine(void)
  {
    return GetDefaultInterface()->get_HalfWidthPunctuationOnTopOfLine();
  }

// StdProp:Integer
  void __fastcall set_HalfWidthPunctuationOnTopOfLine(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_HalfWidthPunctuationOnTopOfLine(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_AddSpaceBetweenFarEastAndAlpha(void)
  {
    return GetDefaultInterface()->get_AddSpaceBetweenFarEastAndAlpha();
  }

// StdProp:Integer
  void __fastcall set_AddSpaceBetweenFarEastAndAlpha(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AddSpaceBetweenFarEastAndAlpha(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_AddSpaceBetweenFarEastAndDigit(void)
  {
    return GetDefaultInterface()->get_AddSpaceBetweenFarEastAndDigit();
  }

// StdProp:Integer
  void __fastcall set_AddSpaceBetweenFarEastAndDigit(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AddSpaceBetweenFarEastAndDigit(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdBaselineAlignment __fastcall get_BaseLineAlignment(void)
  {
    return GetDefaultInterface()->get_BaseLineAlignment();
  }

// StdProp:TOleEnum
  void __fastcall set_BaseLineAlignment(Word_2k::WdBaselineAlignment prop/*[in]*/)
  {
    GetDefaultInterface()->set_BaseLineAlignment(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_AutoAdjustRightIndent(void)
  {
    return GetDefaultInterface()->get_AutoAdjustRightIndent();
  }

// StdProp:Integer
  void __fastcall set_AutoAdjustRightIndent(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_AutoAdjustRightIndent(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DisableLineHeightGrid(void)
  {
    return GetDefaultInterface()->get_DisableLineHeightGrid();
  }

// StdProp:Integer
  void __fastcall set_DisableLineHeightGrid(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisableLineHeightGrid(prop/*[in]*/);
  }

// StdProp:
  Word_2k::TabStopsPtr __fastcall get_TabStops(void)
  {
    return GetDefaultInterface()->get_TabStops();
  }

// StdProp:
  void __fastcall set_TabStops(Word_2k::TabStops* prop/*[in]*/)
  {
    GetDefaultInterface()->set_TabStops(prop/*[in]*/);
  }

// StdProp:
  Word_2k::BordersPtr __fastcall get_Borders(void)
  {
    return GetDefaultInterface()->get_Borders();
  }

// StdProp:
  void __fastcall set_Borders(Word_2k::Borders* prop/*[in]*/)
  {
    GetDefaultInterface()->set_Borders(prop/*[in]*/);
  }

// StdProp:
  Word_2k::ShadingPtr __fastcall get_Shading(void)
  {
    return GetDefaultInterface()->get_Shading();
  }

// StdProp:TOleEnum
  Word_2k::WdOutlineLevel __fastcall get_OutlineLevel(void)
  {
    return GetDefaultInterface()->get_OutlineLevel();
  }

// StdProp:TOleEnum
  void __fastcall set_OutlineLevel(Word_2k::WdOutlineLevel prop/*[in]*/)
  {
    GetDefaultInterface()->set_OutlineLevel(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CharacterUnitRightIndent(void)
  {
    return GetDefaultInterface()->get_CharacterUnitRightIndent();
  }

// StdProp:Single
  void __fastcall set_CharacterUnitRightIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_CharacterUnitRightIndent(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CharacterUnitLeftIndent(void)
  {
    return GetDefaultInterface()->get_CharacterUnitLeftIndent();
  }

// StdProp:Single
  void __fastcall set_CharacterUnitLeftIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_CharacterUnitLeftIndent(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_CharacterUnitFirstLineIndent(void)
  {
    return GetDefaultInterface()->get_CharacterUnitFirstLineIndent();
  }

// StdProp:Single
  void __fastcall set_CharacterUnitFirstLineIndent(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_CharacterUnitFirstLineIndent(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_LineUnitBefore(void)
  {
    return GetDefaultInterface()->get_LineUnitBefore();
  }

// StdProp:Single
  void __fastcall set_LineUnitBefore(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineUnitBefore(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_LineUnitAfter(void)
  {
    return GetDefaultInterface()->get_LineUnitAfter();
  }

// StdProp:Single
  void __fastcall set_LineUnitAfter(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LineUnitAfter(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdReadingOrder __fastcall get_ReadingOrder(void)
  {
    return GetDefaultInterface()->get_ReadingOrder();
  }

// StdProp:TOleEnum
  void __fastcall set_ReadingOrder(Word_2k::WdReadingOrder prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReadingOrder(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SpaceBeforeAuto(void)
  {
    return GetDefaultInterface()->get_SpaceBeforeAuto();
  }

// StdProp:Integer
  void __fastcall set_SpaceBeforeAuto(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceBeforeAuto(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SpaceAfterAuto(void)
  {
    return GetDefaultInterface()->get_SpaceAfterAuto();
  }

// StdProp:Integer
  void __fastcall set_SpaceAfterAuto(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_SpaceAfterAuto(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall CloseUp(void)
  {
    GetDefaultInterface()->CloseUp();
  }

  void __fastcall OpenUp(void)
  {
    GetDefaultInterface()->OpenUp();
  }

  void __fastcall OpenOrCloseUp(void)
  {
    GetDefaultInterface()->OpenOrCloseUp();
  }

  void __fastcall TabHangingIndent(short Count/*[in]*/)
  {
    GetDefaultInterface()->TabHangingIndent(Count/*[in]*/);
  }

  void __fastcall TabIndent(short Count/*[in]*/)
  {
    GetDefaultInterface()->TabIndent(Count/*[in]*/);
  }

  void __fastcall Reset(void)
  {
    GetDefaultInterface()->Reset();
  }

  void __fastcall Space1(void)
  {
    GetDefaultInterface()->Space1();
  }

  void __fastcall Space15(void)
  {
    GetDefaultInterface()->Space15();
  }

  void __fastcall Space2(void)
  {
    GetDefaultInterface()->Space2();
  }

  void __fastcall IndentCharWidth(short Count/*[in]*/)
  {
    GetDefaultInterface()->IndentCharWidth(Count/*[in]*/);
  }

  void __fastcall IndentFirstLineCharWidth(short Count/*[in]*/)
  {
    GetDefaultInterface()->IndentFirstLineCharWidth(Count/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property long Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Word_2k::WordParagraphFormatPtr Duplicate={ read=get_Duplicate }; // 0, Yes
  __property Word_2k::ShadingPtr Shading={ read=get_Shading }; // 0, Yes
  /*CoClassWriteProperties*/
  __property Word_2k::WdParagraphAlignment Alignment={ read=get_Alignment, stored=false }; // 0, No
  __property long KeepTogether={ read=get_KeepTogether, stored=false }; // 0, No
  __property long KeepWithNext={ read=get_KeepWithNext, stored=false }; // 0, No
  __property long PageBreakBefore={ read=get_PageBreakBefore, stored=false }; // 0, No
  __property long NoLineNumber={ read=get_NoLineNumber, stored=false }; // 0, No
  __property float RightIndent={ read=get_RightIndent, stored=false }; // 0, No
  __property float LeftIndent={ read=get_LeftIndent, stored=false }; // 0, No
  __property float FirstLineIndent={ read=get_FirstLineIndent, stored=false }; // 0, No
  __property float LineSpacing={ read=get_LineSpacing, stored=false }; // 0, No
  __property Word_2k::WdLineSpacing LineSpacingRule={ read=get_LineSpacingRule, stored=false }; // 0, No
  __property float SpaceBefore={ read=get_SpaceBefore, stored=false }; // 0, No
  __property float SpaceAfter={ read=get_SpaceAfter, stored=false }; // 0, No
  __property long Hyphenation={ read=get_Hyphenation, stored=false }; // 0, No
  __property long WidowControl={ read=get_WidowControl, stored=false }; // 0, No
  __property long FarEastLineBreakControl={ read=get_FarEastLineBreakControl, stored=false }; // 0, No
  __property long WordWrap={ read=get_WordWrap, stored=false }; // 0, No
  __property long HangingPunctuation={ read=get_HangingPunctuation, stored=false }; // 0, No
  __property long HalfWidthPunctuationOnTopOfLine={ read=get_HalfWidthPunctuationOnTopOfLine, stored=false }; // 0, No
  __property long AddSpaceBetweenFarEastAndAlpha={ read=get_AddSpaceBetweenFarEastAndAlpha, stored=false }; // 0, No
  __property long AddSpaceBetweenFarEastAndDigit={ read=get_AddSpaceBetweenFarEastAndDigit, stored=false }; // 0, No
  __property Word_2k::WdBaselineAlignment BaseLineAlignment={ read=get_BaseLineAlignment, stored=false }; // 0, No
  __property long AutoAdjustRightIndent={ read=get_AutoAdjustRightIndent, stored=false }; // 0, No
  __property long DisableLineHeightGrid={ read=get_DisableLineHeightGrid, stored=false }; // 0, No
  __property Word_2k::TabStopsPtr TabStops={ read=get_TabStops, stored=false }; // 0, Yes
  __property Word_2k::BordersPtr Borders={ read=get_Borders, stored=false }; // 0, Yes
  __property Word_2k::WdOutlineLevel OutlineLevel={ read=get_OutlineLevel, stored=false }; // 0, No
  __property float CharacterUnitRightIndent={ read=get_CharacterUnitRightIndent, stored=false }; // 0, No
  __property float CharacterUnitLeftIndent={ read=get_CharacterUnitLeftIndent, stored=false }; // 0, No
  __property float CharacterUnitFirstLineIndent={ read=get_CharacterUnitFirstLineIndent, stored=false }; // 0, No
  __property float LineUnitBefore={ read=get_LineUnitBefore, stored=false }; // 0, No
  __property float LineUnitAfter={ read=get_LineUnitAfter, stored=false }; // 0, No
  __property Word_2k::WdReadingOrder ReadingOrder={ read=get_ReadingOrder, stored=false }; // 0, No
  __property long SpaceBeforeAuto={ read=get_SpaceBeforeAuto, stored=false }; // 0, No
  __property long SpaceAfterAuto={ read=get_SpaceAfterAuto, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordLetterContent
// Help String      : 
// Default Interface: _LetterContent
// Def. Intf. Object: _LetterContentPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWordLetterContent : public Oleserver::TOleServer
{
  _LetterContentPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordLetterContent(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _LetterContentPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_LetterContentPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Word_2k::WordApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:Integer
  long __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Word_2k::WordLetterContentPtr __fastcall get_Duplicate(void)
  {
    return GetDefaultInterface()->get_Duplicate();
  }

// StdProp:WideString
  BSTR __fastcall get_DateFormat(void)
  {
    return GetDefaultInterface()->get_DateFormat();
  }

// StdProp:WideString
  void __fastcall set_DateFormat(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_DateFormat(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IncludeHeaderFooter(void)
  {
    return GetDefaultInterface()->get_IncludeHeaderFooter();
  }

// StdProp:WordBool
  void __fastcall set_IncludeHeaderFooter(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_IncludeHeaderFooter(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PageDesign(void)
  {
    return GetDefaultInterface()->get_PageDesign();
  }

// StdProp:WideString
  void __fastcall set_PageDesign(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_PageDesign(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdLetterStyle __fastcall get_LetterStyle(void)
  {
    return GetDefaultInterface()->get_LetterStyle();
  }

// StdProp:TOleEnum
  void __fastcall set_LetterStyle(Word_2k::WdLetterStyle prop/*[in]*/)
  {
    GetDefaultInterface()->set_LetterStyle(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Letterhead(void)
  {
    return GetDefaultInterface()->get_Letterhead();
  }

// StdProp:WordBool
  void __fastcall set_Letterhead(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Letterhead(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdLetterheadLocation __fastcall get_LetterheadLocation(void)
  {
    return GetDefaultInterface()->get_LetterheadLocation();
  }

// StdProp:TOleEnum
  void __fastcall set_LetterheadLocation(Word_2k::WdLetterheadLocation prop/*[in]*/)
  {
    GetDefaultInterface()->set_LetterheadLocation(prop/*[in]*/);
  }

// StdProp:Single
  float __fastcall get_LetterheadSize(void)
  {
    return GetDefaultInterface()->get_LetterheadSize();
  }

// StdProp:Single
  void __fastcall set_LetterheadSize(float prop/*[in]*/)
  {
    GetDefaultInterface()->set_LetterheadSize(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecipientName(void)
  {
    return GetDefaultInterface()->get_RecipientName();
  }

// StdProp:WideString
  void __fastcall set_RecipientName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientName(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecipientAddress(void)
  {
    return GetDefaultInterface()->get_RecipientAddress();
  }

// StdProp:WideString
  void __fastcall set_RecipientAddress(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientAddress(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Salutation(void)
  {
    return GetDefaultInterface()->get_Salutation();
  }

// StdProp:WideString
  void __fastcall set_Salutation(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Salutation(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdSalutationType __fastcall get_SalutationType(void)
  {
    return GetDefaultInterface()->get_SalutationType();
  }

// StdProp:TOleEnum
  void __fastcall set_SalutationType(Word_2k::WdSalutationType prop/*[in]*/)
  {
    GetDefaultInterface()->set_SalutationType(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecipientReference(void)
  {
    return GetDefaultInterface()->get_RecipientReference();
  }

// StdProp:WideString
  void __fastcall set_RecipientReference(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientReference(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_MailingInstructions(void)
  {
    return GetDefaultInterface()->get_MailingInstructions();
  }

// StdProp:WideString
  void __fastcall set_MailingInstructions(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_MailingInstructions(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AttentionLine(void)
  {
    return GetDefaultInterface()->get_AttentionLine();
  }

// StdProp:WideString
  void __fastcall set_AttentionLine(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_AttentionLine(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Subject(void)
  {
    return GetDefaultInterface()->get_Subject();
  }

// StdProp:WideString
  void __fastcall set_Subject(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Subject(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_EnclosureNumber(void)
  {
    return GetDefaultInterface()->get_EnclosureNumber();
  }

// StdProp:Integer
  void __fastcall set_EnclosureNumber(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_EnclosureNumber(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_CCList(void)
  {
    return GetDefaultInterface()->get_CCList();
  }

// StdProp:WideString
  void __fastcall set_CCList(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_CCList(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ReturnAddress(void)
  {
    return GetDefaultInterface()->get_ReturnAddress();
  }

// StdProp:WideString
  void __fastcall set_ReturnAddress(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReturnAddress(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderName(void)
  {
    return GetDefaultInterface()->get_SenderName();
  }

// StdProp:WideString
  void __fastcall set_SenderName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderName(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Closing(void)
  {
    return GetDefaultInterface()->get_Closing();
  }

// StdProp:WideString
  void __fastcall set_Closing(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Closing(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderCompany(void)
  {
    return GetDefaultInterface()->get_SenderCompany();
  }

// StdProp:WideString
  void __fastcall set_SenderCompany(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderCompany(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderJobTitle(void)
  {
    return GetDefaultInterface()->get_SenderJobTitle();
  }

// StdProp:WideString
  void __fastcall set_SenderJobTitle(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderJobTitle(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderInitials(void)
  {
    return GetDefaultInterface()->get_SenderInitials();
  }

// StdProp:WideString
  void __fastcall set_SenderInitials(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderInitials(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_InfoBlock(void)
  {
    return GetDefaultInterface()->get_InfoBlock();
  }

// StdProp:WordBool
  void __fastcall set_InfoBlock(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_InfoBlock(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_RecipientCode(void)
  {
    return GetDefaultInterface()->get_RecipientCode();
  }

// StdProp:WideString
  void __fastcall set_RecipientCode(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientCode(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdSalutationGender __fastcall get_RecipientGender(void)
  {
    return GetDefaultInterface()->get_RecipientGender();
  }

// StdProp:TOleEnum
  void __fastcall set_RecipientGender(Word_2k::WdSalutationGender prop/*[in]*/)
  {
    GetDefaultInterface()->set_RecipientGender(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ReturnAddressShortForm(void)
  {
    return GetDefaultInterface()->get_ReturnAddressShortForm();
  }

// StdProp:WideString
  void __fastcall set_ReturnAddressShortForm(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ReturnAddressShortForm(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderCity(void)
  {
    return GetDefaultInterface()->get_SenderCity();
  }

// StdProp:WideString
  void __fastcall set_SenderCity(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderCity(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderCode(void)
  {
    return GetDefaultInterface()->get_SenderCode();
  }

// StdProp:WideString
  void __fastcall set_SenderCode(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderCode(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdSalutationGender __fastcall get_SenderGender(void)
  {
    return GetDefaultInterface()->get_SenderGender();
  }

// StdProp:TOleEnum
  void __fastcall set_SenderGender(Word_2k::WdSalutationGender prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderGender(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_SenderReference(void)
  {
    return GetDefaultInterface()->get_SenderReference();
  }

// StdProp:WideString
  void __fastcall set_SenderReference(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_SenderReference(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property long Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Word_2k::WordLetterContentPtr Duplicate={ read=get_Duplicate }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR DateFormat={ read=get_DateFormat, stored=false }; // 0, No
  __property TOLEBOOL IncludeHeaderFooter={ read=get_IncludeHeaderFooter, stored=false }; // 0, No
  __property BSTR PageDesign={ read=get_PageDesign, stored=false }; // 0, No
  __property Word_2k::WdLetterStyle LetterStyle={ read=get_LetterStyle, stored=false }; // 0, No
  __property TOLEBOOL Letterhead={ read=get_Letterhead, stored=false }; // 0, No
  __property Word_2k::WdLetterheadLocation LetterheadLocation={ read=get_LetterheadLocation, stored=false }; // 0, No
  __property float LetterheadSize={ read=get_LetterheadSize, stored=false }; // 0, No
  __property BSTR RecipientName={ read=get_RecipientName, stored=false }; // 0, No
  __property BSTR RecipientAddress={ read=get_RecipientAddress, stored=false }; // 0, No
  __property BSTR Salutation={ read=get_Salutation, stored=false }; // 0, No
  __property Word_2k::WdSalutationType SalutationType={ read=get_SalutationType, stored=false }; // 0, No
  __property BSTR RecipientReference={ read=get_RecipientReference, stored=false }; // 0, No
  __property BSTR MailingInstructions={ read=get_MailingInstructions, stored=false }; // 0, No
  __property BSTR AttentionLine={ read=get_AttentionLine, stored=false }; // 0, No
  __property BSTR Subject={ read=get_Subject, stored=false }; // 0, No
  __property long EnclosureNumber={ read=get_EnclosureNumber, stored=false }; // 0, No
  __property BSTR CCList={ read=get_CCList, stored=false }; // 0, No
  __property BSTR ReturnAddress={ read=get_ReturnAddress, stored=false }; // 0, No
  __property BSTR SenderName={ read=get_SenderName, stored=false }; // 0, No
  __property BSTR Closing={ read=get_Closing, stored=false }; // 0, No
  __property BSTR SenderCompany={ read=get_SenderCompany, stored=false }; // 0, No
  __property BSTR SenderJobTitle={ read=get_SenderJobTitle, stored=false }; // 0, No
  __property BSTR SenderInitials={ read=get_SenderInitials, stored=false }; // 0, No
  __property TOLEBOOL InfoBlock={ read=get_InfoBlock, stored=false }; // 0, No
  __property BSTR RecipientCode={ read=get_RecipientCode, stored=false }; // 0, No
  __property Word_2k::WdSalutationGender RecipientGender={ read=get_RecipientGender, stored=false }; // 0, No
  __property BSTR ReturnAddressShortForm={ read=get_ReturnAddressShortForm, stored=false }; // 0, No
  __property BSTR SenderCity={ read=get_SenderCity, stored=false }; // 0, No
  __property BSTR SenderCode={ read=get_SenderCode, stored=false }; // 0, No
  __property Word_2k::WdSalutationGender SenderGender={ read=get_SenderGender, stored=false }; // 0, No
  __property BSTR SenderReference={ read=get_SenderReference, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWordApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. Object: _ApplicationPtr
// Def. Intf. DISP? : No
// Event   Interface: ApplicationEvents2
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TWordApplicationDocumentOpen)(System::TObject * Sender, 
                                                                   Word_2k::WordDocument* Doc/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationDocumentBeforeClose)(System::TObject * Sender, 
                                                                          Word_2k::WordDocument* Doc/*[in]*/, 
                                                                          VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationDocumentBeforePrint)(System::TObject * Sender, 
                                                                          Word_2k::WordDocument* Doc/*[in]*/, 
                                                                          VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationDocumentBeforeSave)(System::TObject * Sender, 
                                                                         Word_2k::WordDocument* Doc/*[in]*/, 
                                                                         VARIANT_BOOL* SaveAsUI/*[in]*/, 
                                                                         VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationNewDocument)(System::TObject * Sender, 
                                                                  Word_2k::WordDocument* Doc/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowActivate)(System::TObject * Sender, 
                                                                     Word_2k::WordDocument* Doc/*[in]*/, 
                                                                     Word_2k::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowDeactivate)(System::TObject * Sender, 
                                                                       Word_2k::WordDocument* Doc/*[in]*/, 
                                                                       Word_2k::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowSelectionChange)(System::TObject * Sender, 
                                                                            Word_2k::Selection* Sel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowBeforeRightClick)(System::TObject * Sender, 
                                                                             Word_2k::Selection* Sel/*[in]*/, 
                                                                             VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TWordApplicationWindowBeforeDoubleClick)(System::TObject * Sender, 
                                                                              Word_2k::Selection* Sel/*[in]*/, 
                                                                              VARIANT_BOOL* Cancel/*[in]*/);

class PACKAGE TWordApplication : public Oleserver::TOleServer
{
  _ApplicationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWordApplication(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ApplicationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ApplicationPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Word_2k::WordApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:Integer
  long __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:
  Word_2k::DocumentsPtr __fastcall get_Documents(void)
  {
    return GetDefaultInterface()->get_Documents();
  }

// StdProp:
  Word_2k::WindowsPtr __fastcall get_Windows(void)
  {
    return GetDefaultInterface()->get_Windows();
  }

// StdProp:
  Word_2k::WordDocumentPtr __fastcall get_ActiveDocument(void)
  {
    return GetDefaultInterface()->get_ActiveDocument();
  }

// StdProp:
  Word_2k::WINDOWPtr __fastcall get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

// StdProp:
  Word_2k::SelectionPtr __fastcall get_Selection(void)
  {
    return GetDefaultInterface()->get_Selection();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_WordBasic(void)
  {
    return GetDefaultInterface()->get_WordBasic();
  }

// StdProp:
  Word_2k::RecentFilesPtr __fastcall get_RecentFiles(void)
  {
    return GetDefaultInterface()->get_RecentFiles();
  }

// StdProp:
  Word_2k::TemplatePtr __fastcall get_NormalTemplate(void)
  {
    return GetDefaultInterface()->get_NormalTemplate();
  }

// StdProp:
  Word_2k::SYSTEMPtr __fastcall get_System(void)
  {
    return GetDefaultInterface()->get_System();
  }

// StdProp:
  Word_2k::AutoCorrectPtr __fastcall get_AutoCorrect(void)
  {
    return GetDefaultInterface()->get_AutoCorrect();
  }

// StdProp:
  Word_2k::FontNamesPtr __fastcall get_FontNames(void)
  {
    return GetDefaultInterface()->get_FontNames();
  }

// StdProp:
  Word_2k::FontNamesPtr __fastcall get_LandscapeFontNames(void)
  {
    return GetDefaultInterface()->get_LandscapeFontNames();
  }

// StdProp:
  Word_2k::FontNamesPtr __fastcall get_PortraitFontNames(void)
  {
    return GetDefaultInterface()->get_PortraitFontNames();
  }

// StdProp:
  Word_2k::LanguagesPtr __fastcall get_Languages(void)
  {
    return GetDefaultInterface()->get_Languages();
  }

// StdProp:
  Office_2k::AssistantPtr __fastcall get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

// StdProp:
  Word_2k::BrowserPtr __fastcall get_Browser(void)
  {
    return GetDefaultInterface()->get_Browser();
  }

// StdProp:
  Word_2k::FileConvertersPtr __fastcall get_FileConverters(void)
  {
    return GetDefaultInterface()->get_FileConverters();
  }

// StdProp:
  Word_2k::MailingLabelPtr __fastcall get_MailingLabel(void)
  {
    return GetDefaultInterface()->get_MailingLabel();
  }

// StdProp:
  Word_2k::DialogsPtr __fastcall get_Dialogs(void)
  {
    return GetDefaultInterface()->get_Dialogs();
  }

// StdProp:
  Word_2k::CaptionLabelsPtr __fastcall get_CaptionLabels(void)
  {
    return GetDefaultInterface()->get_CaptionLabels();
  }

// StdProp:
  Word_2k::AutoCaptionsPtr __fastcall get_AutoCaptions(void)
  {
    return GetDefaultInterface()->get_AutoCaptions();
  }

// StdProp:
  Word_2k::AddInsPtr __fastcall get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Version(void)
  {
    return GetDefaultInterface()->get_Version();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ScreenUpdating(void)
  {
    return GetDefaultInterface()->get_ScreenUpdating();
  }

// StdProp:WordBool
  void __fastcall set_ScreenUpdating(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ScreenUpdating(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrintPreview(void)
  {
    return GetDefaultInterface()->get_PrintPreview();
  }

// StdProp:WordBool
  void __fastcall set_PrintPreview(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_PrintPreview(prop/*[in]*/);
  }

// StdProp:
  Word_2k::TasksPtr __fastcall get_Tasks(void)
  {
    return GetDefaultInterface()->get_Tasks();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayStatusBar(void)
  {
    return GetDefaultInterface()->get_DisplayStatusBar();
  }

// StdProp:WordBool
  void __fastcall set_DisplayStatusBar(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayStatusBar(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SpecialMode(void)
  {
    return GetDefaultInterface()->get_SpecialMode();
  }

// StdProp:Integer
  long __fastcall get_UsableWidth(void)
  {
    return GetDefaultInterface()->get_UsableWidth();
  }

// StdProp:Integer
  long __fastcall get_UsableHeight(void)
  {
    return GetDefaultInterface()->get_UsableHeight();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MathCoprocessorAvailable(void)
  {
    return GetDefaultInterface()->get_MathCoprocessorAvailable();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MouseAvailable(void)
  {
    return GetDefaultInterface()->get_MouseAvailable();
  }

// StdProp:OleVariant
  TVariant __fastcall get_International(Word_2k::WdInternationalIndex Index/*[in]*/)
  {
    return GetDefaultInterface()->get_International(Index/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Build(void)
  {
    return GetDefaultInterface()->get_Build();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CapsLock(void)
  {
    return GetDefaultInterface()->get_CapsLock();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_NumLock(void)
  {
    return GetDefaultInterface()->get_NumLock();
  }

// StdProp:WideString
  BSTR __fastcall get_UserName(void)
  {
    return GetDefaultInterface()->get_UserName();
  }

// StdProp:WideString
  void __fastcall set_UserName(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserName(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_UserInitials(void)
  {
    return GetDefaultInterface()->get_UserInitials();
  }

// StdProp:WideString
  void __fastcall set_UserInitials(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserInitials(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_UserAddress(void)
  {
    return GetDefaultInterface()->get_UserAddress();
  }

// StdProp:WideString
  void __fastcall set_UserAddress(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_UserAddress(prop/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_MacroContainer(void)
  {
    return GetDefaultInterface()->get_MacroContainer();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayRecentFiles(void)
  {
    return GetDefaultInterface()->get_DisplayRecentFiles();
  }

// StdProp:WordBool
  void __fastcall set_DisplayRecentFiles(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayRecentFiles(prop/*[in]*/);
  }

// StdProp:
  Office_2k::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:
  Word_2k::SynonymInfoPtr __fastcall get_SynonymInfo(BSTR Word/*[in]*/, 
                                                     VARIANT* LanguageID/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_SynonymInfo(Word/*[in]*/, LanguageID/*[in,opt]*/);
  }

// StdProp:
  Vbide_2k::VBEPtr __fastcall get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

// StdProp:WideString
  BSTR __fastcall get_DefaultSaveFormat(void)
  {
    return GetDefaultInterface()->get_DefaultSaveFormat();
  }

// StdProp:WideString
  void __fastcall set_DefaultSaveFormat(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSaveFormat(prop/*[in]*/);
  }

// StdProp:
  Word_2k::ListGalleriesPtr __fastcall get_ListGalleries(void)
  {
    return GetDefaultInterface()->get_ListGalleries();
  }

// StdProp:WideString
  BSTR __fastcall get_ActivePrinter(void)
  {
    return GetDefaultInterface()->get_ActivePrinter();
  }

// StdProp:WideString
  void __fastcall set_ActivePrinter(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(prop/*[in]*/);
  }

// StdProp:
  Word_2k::TemplatesPtr __fastcall get_Templates(void)
  {
    return GetDefaultInterface()->get_Templates();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CustomizationContext(void)
  {
    return GetDefaultInterface()->get_CustomizationContext();
  }

// StdProp:IDispatch
  void __fastcall set_CustomizationContext(LPDISPATCH prop/*[in]*/)
  {
    GetDefaultInterface()->set_CustomizationContext(prop/*[in]*/);
  }

// StdProp:
  Word_2k::KeyBindingsPtr __fastcall get_KeyBindings(void)
  {
    return GetDefaultInterface()->get_KeyBindings();
  }

// StdProp:
  Word_2k::KeysBoundToPtr __fastcall get_KeysBoundTo(Word_2k::WdKeyCategory KeyCategory/*[in]*/, 
                                                     BSTR Command/*[in]*/, 
                                                     VARIANT* CommandParameter/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_KeysBoundTo(KeyCategory/*[in]*/, Command/*[in]*/, 
                                                  CommandParameter/*[in,opt]*/);
  }

// StdProp:
  Word_2k::KeyBindingPtr __fastcall get_FindKey(long KeyCode/*[in]*/, VARIANT* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_FindKey(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

// StdProp:WideString
  void __fastcall set_Caption(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Path(void)
  {
    return GetDefaultInterface()->get_Path();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayScrollBars(void)
  {
    return GetDefaultInterface()->get_DisplayScrollBars();
  }

// StdProp:WordBool
  void __fastcall set_DisplayScrollBars(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayScrollBars(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_StartupPath(void)
  {
    return GetDefaultInterface()->get_StartupPath();
  }

// StdProp:WideString
  void __fastcall set_StartupPath(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_StartupPath(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_BackgroundSavingStatus(void)
  {
    return GetDefaultInterface()->get_BackgroundSavingStatus();
  }

// StdProp:Integer
  long __fastcall get_BackgroundPrintingStatus(void)
  {
    return GetDefaultInterface()->get_BackgroundPrintingStatus();
  }

// StdProp:Integer
  long __fastcall get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

// StdProp:Integer
  void __fastcall set_Left(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Left(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

// StdProp:Integer
  void __fastcall set_Top(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Top(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

// StdProp:Integer
  void __fastcall set_Width(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Width(prop/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

// StdProp:Integer
  void __fastcall set_Height(long prop/*[in]*/)
  {
    GetDefaultInterface()->set_Height(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdWindowState __fastcall get_WindowState(void)
  {
    return GetDefaultInterface()->get_WindowState();
  }

// StdProp:TOleEnum
  void __fastcall set_WindowState(Word_2k::WdWindowState prop/*[in]*/)
  {
    GetDefaultInterface()->set_WindowState(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayAutoCompleteTips(void)
  {
    return GetDefaultInterface()->get_DisplayAutoCompleteTips();
  }

// StdProp:WordBool
  void __fastcall set_DisplayAutoCompleteTips(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAutoCompleteTips(prop/*[in]*/);
  }

// StdProp:
  Word_2k::OptionsPtr __fastcall get_Options(void)
  {
    return GetDefaultInterface()->get_Options();
  }

// StdProp:TOleEnum
  Word_2k::WdAlertLevel __fastcall get_DisplayAlerts(void)
  {
    return GetDefaultInterface()->get_DisplayAlerts();
  }

// StdProp:TOleEnum
  void __fastcall set_DisplayAlerts(Word_2k::WdAlertLevel prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAlerts(prop/*[in]*/);
  }

// StdProp:
  Word_2k::DictionariesPtr __fastcall get_CustomDictionaries(void)
  {
    return GetDefaultInterface()->get_CustomDictionaries();
  }

// StdProp:WideString
  BSTR __fastcall get_PathSeparator(void)
  {
    return GetDefaultInterface()->get_PathSeparator();
  }

// StdProp:WideString
  void __fastcall set_StatusBar(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(Param1/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MAPIAvailable(void)
  {
    return GetDefaultInterface()->get_MAPIAvailable();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayScreenTips(void)
  {
    return GetDefaultInterface()->get_DisplayScreenTips();
  }

// StdProp:WordBool
  void __fastcall set_DisplayScreenTips(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayScreenTips(prop/*[in]*/);
  }

// StdProp:TOleEnum
  Word_2k::WdEnableCancelKey __fastcall get_EnableCancelKey(void)
  {
    return GetDefaultInterface()->get_EnableCancelKey();
  }

// StdProp:TOleEnum
  void __fastcall set_EnableCancelKey(Word_2k::WdEnableCancelKey prop/*[in]*/)
  {
    GetDefaultInterface()->set_EnableCancelKey(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

// StdProp:
  Office_2k::FileSearchPtr __fastcall get_FileSearch(void)
  {
    return GetDefaultInterface()->get_FileSearch();
  }

// StdProp:TOleEnum
  Word_2k::WdMailSystem __fastcall get_MailSystem(void)
  {
    return GetDefaultInterface()->get_MailSystem();
  }

// StdProp:WideString
  BSTR __fastcall get_DefaultTableSeparator(void)
  {
    return GetDefaultInterface()->get_DefaultTableSeparator();
  }

// StdProp:WideString
  void __fastcall set_DefaultTableSeparator(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultTableSeparator(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowVisualBasicEditor(void)
  {
    return GetDefaultInterface()->get_ShowVisualBasicEditor();
  }

// StdProp:WordBool
  void __fastcall set_ShowVisualBasicEditor(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_ShowVisualBasicEditor(prop/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_BrowseExtraFileTypes(void)
  {
    return GetDefaultInterface()->get_BrowseExtraFileTypes();
  }

// StdProp:WideString
  void __fastcall set_BrowseExtraFileTypes(BSTR prop/*[in]*/)
  {
    GetDefaultInterface()->set_BrowseExtraFileTypes(prop/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsObjectValid(LPDISPATCH Object/*[in]*/)
  {
    return GetDefaultInterface()->get_IsObjectValid(Object/*[in]*/);
  }

// StdProp:
  Word_2k::HangulHanjaConversionDictionariesPtr __fastcall get_HangulHanjaDictionaries(void)
  {
    return GetDefaultInterface()->get_HangulHanjaDictionaries();
  }

// StdProp:
  Word_2k::MailMessagePtr __fastcall get_MailMessage(void)
  {
    return GetDefaultInterface()->get_MailMessage();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FocusInMailHeader(void)
  {
    return GetDefaultInterface()->get_FocusInMailHeader();
  }

// StdProp:
  Word_2k::EmailOptionsPtr __fastcall get_EmailOptions(void)
  {
    return GetDefaultInterface()->get_EmailOptions();
  }

// StdProp:TOleEnum
  Office_2k::MsoLanguageID __fastcall get_Language(void)
  {
    return GetDefaultInterface()->get_Language();
  }

// StdProp:
  Office_2k::COMAddInsPtr __fastcall get_COMAddIns(void)
  {
    return GetDefaultInterface()->get_COMAddIns();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CheckLanguage(void)
  {
    return GetDefaultInterface()->get_CheckLanguage();
  }

// StdProp:WordBool
  void __fastcall set_CheckLanguage(VARIANT_BOOL prop/*[in]*/)
  {
    GetDefaultInterface()->set_CheckLanguage(prop/*[in]*/);
  }

// StdProp:
  Office_2k::LanguageSettingsPtr __fastcall get_LanguageSettings(void)
  {
    return GetDefaultInterface()->get_LanguageSettings();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Dummy1(void)
  {
    return GetDefaultInterface()->get_Dummy1();
  }

// StdProp:
  Office_2k::AnswerWizardPtr __fastcall get_AnswerWizard(void)
  {
    return GetDefaultInterface()->get_AnswerWizard();
  }

// StdProp:TOleEnum
  Office_2k::MsoFeatureInstall __fastcall get_FeatureInstall(void)
  {
    return GetDefaultInterface()->get_FeatureInstall();
  }

// StdProp:TOleEnum
  void __fastcall set_FeatureInstall(Office_2k::MsoFeatureInstall prop/*[in]*/)
  {
    GetDefaultInterface()->set_FeatureInstall(prop/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Quit(VARIANT* SaveChanges/*[in,opt]*/= TNoParam(), 
                       VARIANT* OriginalFormat/*[in,opt]*/= TNoParam(), 
                       VARIANT* RouteDocument/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Quit(SaveChanges/*[in,opt]*/, OriginalFormat/*[in,opt]*/, 
                                RouteDocument/*[in,opt]*/);
  }

  void __fastcall ScreenRefresh(void)
  {
    GetDefaultInterface()->ScreenRefresh();
  }

  void __fastcall PrintOutOld(VARIANT* Background/*[in,opt]*/= TNoParam(), 
                              VARIANT* Append/*[in,opt]*/= TNoParam(), 
                              VARIANT* Range/*[in,opt]*/= TNoParam(), 
                              VARIANT* OutputFileName/*[in,opt]*/= TNoParam(), 
                              VARIANT* From/*[in,opt]*/= TNoParam(), 
                              VARIANT* To/*[in,opt]*/= TNoParam(), 
                              VARIANT* Item/*[in,opt]*/= TNoParam(), 
                              VARIANT* Copies/*[in,opt]*/= TNoParam(), 
                              VARIANT* Pages/*[in,opt]*/= TNoParam(), 
                              VARIANT* PageType/*[in,opt]*/= TNoParam(), 
                              VARIANT* PrintToFile/*[in,opt]*/= TNoParam(), 
                              VARIANT* Collate/*[in,opt]*/= TNoParam(), 
                              VARIANT* FileName/*[in,opt]*/= TNoParam(), 
                              VARIANT* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                              VARIANT* ManualDuplexPrint/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOutOld(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                       OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                       Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                       PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                       Collate/*[in,opt]*/, FileName/*[in,opt]*/, 
                                       ActivePrinterMacGX/*[in,opt]*/, ManualDuplexPrint/*[in,opt]*/);
  }

  void __fastcall LookupNameProperties(BSTR Name/*[in]*/)
  {
    GetDefaultInterface()->LookupNameProperties(Name/*[in]*/);
  }

  void __fastcall SubstituteFont(BSTR UnavailableFont/*[in]*/, BSTR SubstituteFont/*[in]*/)
  {
    GetDefaultInterface()->SubstituteFont(UnavailableFont/*[in]*/, SubstituteFont/*[in]*/);
  }

  TOLEBOOL __fastcall Repeat(VARIANT* Times/*[in,opt]*/)
  {
    return GetDefaultInterface()->Repeat(Times/*[in,opt]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR Command/*[in]*/)
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, Command/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, BSTR Item/*[in]*/, BSTR Data/*[in]*/)
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/);
  }

  BSTR __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/)
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/);
  }

  void __fastcall DDETerminateAll(void)
  {
    GetDefaultInterface()->DDETerminateAll();
  }

  long __fastcall BuildKeyCode(Word_2k::WdKey Arg1/*[in]*/, VARIANT* Arg2/*[in,opt]*/, 
                               VARIANT* Arg3/*[in,opt]*/, VARIANT* Arg4/*[in,opt]*/)
  {
    return GetDefaultInterface()->BuildKeyCode(Arg1/*[in]*/, Arg2/*[in,opt]*/, Arg3/*[in,opt]*/, 
                                               Arg4/*[in,opt]*/);
  }

  BSTR __fastcall KeyString(long KeyCode/*[in]*/, VARIANT* KeyCode2/*[in,opt]*/)
  {
    return GetDefaultInterface()->KeyString(KeyCode/*[in]*/, KeyCode2/*[in,opt]*/);
  }

  void __fastcall OrganizerCopy(BSTR Source/*[in]*/, BSTR Destination/*[in]*/, BSTR Name/*[in]*/, 
                                Word_2k::WdOrganizerObject Object/*[in]*/)
  {
    GetDefaultInterface()->OrganizerCopy(Source/*[in]*/, Destination/*[in]*/, Name/*[in]*/, 
                                         Object/*[in]*/);
  }

  void __fastcall OrganizerDelete(BSTR Source/*[in]*/, BSTR Name/*[in]*/, 
                                  Word_2k::WdOrganizerObject Object/*[in]*/)
  {
    GetDefaultInterface()->OrganizerDelete(Source/*[in]*/, Name/*[in]*/, Object/*[in]*/);
  }

  void __fastcall OrganizerRename(BSTR Source/*[in]*/, BSTR Name/*[in]*/, BSTR NewName/*[in]*/, 
                                  Word_2k::WdOrganizerObject Object/*[in]*/)
  {
    GetDefaultInterface()->OrganizerRename(Source/*[in]*/, Name/*[in]*/, NewName/*[in]*/, 
                                           Object/*[in]*/);
  }

  void __fastcall AddAddress(LPSAFEARRAY* TagID/*[in]*/, LPSAFEARRAY* Value/*[in]*/)
  {
    GetDefaultInterface()->AddAddress(TagID/*[in]*/, Value/*[in]*/);
  }

  BSTR __fastcall GetAddress(VARIANT* Name/*[in,opt]*/, VARIANT* AddressProperties/*[in,opt]*/, 
                             VARIANT* UseAutoText/*[in,opt]*/, 
                             VARIANT* DisplaySelectDialog/*[in,opt]*/, 
                             VARIANT* SelectDialog/*[in,opt]*/, 
                             VARIANT* CheckNamesDialog/*[in,opt]*/, 
                             VARIANT* RecentAddressesChoice/*[in,opt]*/, 
                             VARIANT* UpdateRecentAddresses/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetAddress(Name/*[in,opt]*/, AddressProperties/*[in,opt]*/, 
                                             UseAutoText/*[in,opt]*/, 
                                             DisplaySelectDialog/*[in,opt]*/, 
                                             SelectDialog/*[in,opt]*/, CheckNamesDialog/*[in,opt]*/, 
                                             RecentAddressesChoice/*[in,opt]*/, 
                                             UpdateRecentAddresses/*[in,opt]*/);
  }

  TOLEBOOL __fastcall CheckGrammar(BSTR String/*[in]*/)
  {
    return GetDefaultInterface()->CheckGrammar(String/*[in]*/);
  }

  TOLEBOOL __fastcall CheckSpelling(BSTR Word/*[in]*/, VARIANT* CustomDictionary/*[in,opt]*/, 
                                    VARIANT* IgnoreUppercase/*[in,opt]*/, 
                                    VARIANT* MainDictionary/*[in,opt]*/, 
                                    VARIANT* CustomDictionary2/*[in,opt]*/, 
                                    VARIANT* CustomDictionary3/*[in,opt]*/, 
                                    VARIANT* CustomDictionary4/*[in,opt]*/, 
                                    VARIANT* CustomDictionary5/*[in,opt]*/, 
                                    VARIANT* CustomDictionary6/*[in,opt]*/, 
                                    VARIANT* CustomDictionary7/*[in,opt]*/, 
                                    VARIANT* CustomDictionary8/*[in,opt]*/, 
                                    VARIANT* CustomDictionary9/*[in,opt]*/, 
                                    VARIANT* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->CheckSpelling(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                IgnoreUppercase/*[in,opt]*/, 
                                                MainDictionary/*[in,opt]*/, 
                                                CustomDictionary2/*[in,opt]*/, 
                                                CustomDictionary3/*[in,opt]*/, 
                                                CustomDictionary4/*[in,opt]*/, 
                                                CustomDictionary5/*[in,opt]*/, 
                                                CustomDictionary6/*[in,opt]*/, 
                                                CustomDictionary7/*[in,opt]*/, 
                                                CustomDictionary8/*[in,opt]*/, 
                                                CustomDictionary9/*[in,opt]*/, 
                                                CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall ResetIgnoreAll(void)
  {
    GetDefaultInterface()->ResetIgnoreAll();
  }

  Word_2k::SpellingSuggestionsPtr __fastcall GetSpellingSuggestions(BSTR Word/*[in]*/, 
                                                                    VARIANT* CustomDictionary/*[in,opt]*/, 
                                                                    VARIANT* IgnoreUppercase/*[in,opt]*/, 
                                                                    VARIANT* MainDictionary/*[in,opt]*/, 
                                                                    VARIANT* SuggestionMode/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary2/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary3/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary4/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary5/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary6/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary7/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary8/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary9/*[in,opt]*/, 
                                                                    VARIANT* CustomDictionary10/*[in,opt]*/)
  {
    return GetDefaultInterface()->GetSpellingSuggestions(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                         IgnoreUppercase/*[in,opt]*/, 
                                                         MainDictionary/*[in,opt]*/, 
                                                         SuggestionMode/*[in,opt]*/, 
                                                         CustomDictionary2/*[in,opt]*/, 
                                                         CustomDictionary3/*[in,opt]*/, 
                                                         CustomDictionary4/*[in,opt]*/, 
                                                         CustomDictionary5/*[in,opt]*/, 
                                                         CustomDictionary6/*[in,opt]*/, 
                                                         CustomDictionary7/*[in,opt]*/, 
                                                         CustomDictionary8/*[in,opt]*/, 
                                                         CustomDictionary9/*[in,opt]*/, 
                                                         CustomDictionary10/*[in,opt]*/);
  }

  void __fastcall GoBack(void)
  {
    GetDefaultInterface()->GoBack();
  }

  void __fastcall Help(VARIANT* HelpType/*[in]*/)
  {
    GetDefaultInterface()->Help(HelpType/*[in]*/);
  }

  void __fastcall AutomaticChange(void)
  {
    GetDefaultInterface()->AutomaticChange();
  }

  void __fastcall ShowMe(void)
  {
    GetDefaultInterface()->ShowMe();
  }

  void __fastcall HelpTool(void)
  {
    GetDefaultInterface()->HelpTool();
  }

  Word_2k::WINDOWPtr __fastcall NewWindow(void)
  {
    return GetDefaultInterface()->NewWindow();
  }

  void __fastcall ListCommands(VARIANT_BOOL ListAllCommands/*[in]*/)
  {
    GetDefaultInterface()->ListCommands(ListAllCommands/*[in]*/);
  }

  void __fastcall ShowClipboard(void)
  {
    GetDefaultInterface()->ShowClipboard();
  }

  void __fastcall OnTime(VARIANT* When/*[in]*/, BSTR Name/*[in]*/, 
                         VARIANT* Tolerance/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->OnTime(When/*[in]*/, Name/*[in]*/, Tolerance/*[in,opt]*/);
  }

  void __fastcall NextLetter(void)
  {
    GetDefaultInterface()->NextLetter();
  }

  short __fastcall MountVolume(BSTR Zone/*[in]*/, BSTR Server/*[in]*/, BSTR Volume/*[in]*/, 
                               VARIANT* User/*[in,opt]*/, VARIANT* UserPassword/*[in,opt]*/, 
                               VARIANT* VolumePassword/*[in,opt]*/)
  {
    return GetDefaultInterface()->MountVolume(Zone/*[in]*/, Server/*[in]*/, Volume/*[in]*/, 
                                              User/*[in,opt]*/, UserPassword/*[in,opt]*/, 
                                              VolumePassword/*[in,opt]*/);
  }

  BSTR __fastcall CleanString(BSTR String/*[in]*/)
  {
    return GetDefaultInterface()->CleanString(String/*[in]*/);
  }

  void __fastcall SendFax(void)
  {
    GetDefaultInterface()->SendFax();
  }

  void __fastcall ChangeFileOpenDirectory(BSTR Path/*[in]*/)
  {
    GetDefaultInterface()->ChangeFileOpenDirectory(Path/*[in]*/);
  }

  void __fastcall RunOld(BSTR MacroName/*[in]*/)
  {
    GetDefaultInterface()->RunOld(MacroName/*[in]*/);
  }

  void __fastcall GoForward(void)
  {
    GetDefaultInterface()->GoForward();
  }

  void __fastcall Move(long Left/*[in]*/, long Top/*[in]*/)
  {
    GetDefaultInterface()->Move(Left/*[in]*/, Top/*[in]*/);
  }

  void __fastcall Resize(long Width/*[in]*/, long Height/*[in]*/)
  {
    GetDefaultInterface()->Resize(Width/*[in]*/, Height/*[in]*/);
  }

  float __fastcall InchesToPoints(float Inches/*[in]*/)
  {
    return GetDefaultInterface()->InchesToPoints(Inches/*[in]*/);
  }

  float __fastcall CentimetersToPoints(float Centimeters/*[in]*/)
  {
    return GetDefaultInterface()->CentimetersToPoints(Centimeters/*[in]*/);
  }

  float __fastcall MillimetersToPoints(float Millimeters/*[in]*/)
  {
    return GetDefaultInterface()->MillimetersToPoints(Millimeters/*[in]*/);
  }

  float __fastcall PicasToPoints(float Picas/*[in]*/)
  {
    return GetDefaultInterface()->PicasToPoints(Picas/*[in]*/);
  }

  float __fastcall LinesToPoints(float Lines/*[in]*/)
  {
    return GetDefaultInterface()->LinesToPoints(Lines/*[in]*/);
  }

  float __fastcall PointsToInches(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToInches(Points/*[in]*/);
  }

  float __fastcall PointsToCentimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToCentimeters(Points/*[in]*/);
  }

  float __fastcall PointsToMillimeters(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToMillimeters(Points/*[in]*/);
  }

  float __fastcall PointsToPicas(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToPicas(Points/*[in]*/);
  }

  float __fastcall PointsToLines(float Points/*[in]*/)
  {
    return GetDefaultInterface()->PointsToLines(Points/*[in]*/);
  }

  void __fastcall Activate(void)
  {
    GetDefaultInterface()->Activate();
  }

  float __fastcall PointsToPixels(float Points/*[in]*/, VARIANT* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PointsToPixels(Points/*[in]*/, fVertical/*[in,opt]*/);
  }

  float __fastcall PixelsToPoints(float Pixels/*[in]*/, VARIANT* fVertical/*[in,opt]*/)
  {
    return GetDefaultInterface()->PixelsToPoints(Pixels/*[in]*/, fVertical/*[in,opt]*/);
  }

  void __fastcall KeyboardLatin(void)
  {
    GetDefaultInterface()->KeyboardLatin();
  }

  void __fastcall KeyboardBidi(void)
  {
    GetDefaultInterface()->KeyboardBidi();
  }

  void __fastcall ToggleKeyboard(void)
  {
    GetDefaultInterface()->ToggleKeyboard();
  }

  long __fastcall Keyboard(long LangId/*[in,def,opt]*/)
  {
    return GetDefaultInterface()->Keyboard(LangId/*[in,def,opt]*/);
  }

  BSTR __fastcall ProductCode(void)
  {
    return GetDefaultInterface()->ProductCode();
  }

  Word_2k::DefaultWebOptionsPtr __fastcall DefaultWebOptions(void)
  {
    return GetDefaultInterface()->DefaultWebOptions();
  }

  void __fastcall DiscussionSupport(VARIANT* Range/*[in]*/, VARIANT* cid/*[in]*/, 
                                    VARIANT* piCSE/*[in]*/)
  {
    GetDefaultInterface()->DiscussionSupport(Range/*[in]*/, cid/*[in]*/, piCSE/*[in]*/);
  }

  void __fastcall SetDefaultTheme(BSTR Name/*[in]*/, Word_2k::WdDocumentMedium DocumentType/*[in]*/)
  {
    GetDefaultInterface()->SetDefaultTheme(Name/*[in]*/, DocumentType/*[in]*/);
  }

  BSTR __fastcall GetDefaultTheme(Word_2k::WdDocumentMedium DocumentType/*[in]*/)
  {
    return GetDefaultInterface()->GetDefaultTheme(DocumentType/*[in]*/);
  }

  void __fastcall PrintOut(VARIANT* Background/*[in,opt]*/= TNoParam(), 
                           VARIANT* Append/*[in,opt]*/= TNoParam(), 
                           VARIANT* Range/*[in,opt]*/= TNoParam(), 
                           VARIANT* OutputFileName/*[in,opt]*/= TNoParam(), 
                           VARIANT* From/*[in,opt]*/= TNoParam(), 
                           VARIANT* To/*[in,opt]*/= TNoParam(), 
                           VARIANT* Item/*[in,opt]*/= TNoParam(), 
                           VARIANT* Copies/*[in,opt]*/= TNoParam(), 
                           VARIANT* Pages/*[in,opt]*/= TNoParam(), 
                           VARIANT* PageType/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintToFile/*[in,opt]*/= TNoParam(), 
                           VARIANT* Collate/*[in,opt]*/= TNoParam(), 
                           VARIANT* FileName/*[in,opt]*/= TNoParam(), 
                           VARIANT* ActivePrinterMacGX/*[in,opt]*/= TNoParam(), 
                           VARIANT* ManualDuplexPrint/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomColumn/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomRow/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomPaperWidth/*[in,opt]*/= TNoParam(), 
                           VARIANT* PrintZoomPaperHeight/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PrintOut(Background/*[in,opt]*/, Append/*[in,opt]*/, Range/*[in,opt]*/, 
                                    OutputFileName/*[in,opt]*/, From/*[in,opt]*/, To/*[in,opt]*/, 
                                    Item/*[in,opt]*/, Copies/*[in,opt]*/, Pages/*[in,opt]*/, 
                                    PageType/*[in,opt]*/, PrintToFile/*[in,opt]*/, 
                                    Collate/*[in,opt]*/, FileName/*[in,opt]*/, 
                                    ActivePrinterMacGX/*[in,opt]*/, ManualDuplexPrint/*[in,opt]*/, 
                                    PrintZoomColumn/*[in,opt]*/, PrintZoomRow/*[in,opt]*/, 
                                    PrintZoomPaperWidth/*[in,opt]*/, 
                                    PrintZoomPaperHeight/*[in,opt]*/);
  }

  TVariant __fastcall Run(BSTR MacroName/*[in]*/, VARIANT* varg1/*[in,opt]*/, 
                          VARIANT* varg2/*[in,opt]*/, VARIANT* varg3/*[in,opt]*/, 
                          VARIANT* varg4/*[in,opt]*/, VARIANT* varg5/*[in,opt]*/, 
                          VARIANT* varg6/*[in,opt]*/, VARIANT* varg7/*[in,opt]*/, 
                          VARIANT* varg8/*[in,opt]*/, VARIANT* varg9/*[in,opt]*/, 
                          VARIANT* varg10/*[in,opt]*/, VARIANT* varg11/*[in,opt]*/, 
                          VARIANT* varg12/*[in,opt]*/, VARIANT* varg13/*[in,opt]*/, 
                          VARIANT* varg14/*[in,opt]*/, VARIANT* varg15/*[in,opt]*/, 
                          VARIANT* varg16/*[in,opt]*/, VARIANT* varg17/*[in,opt]*/, 
                          VARIANT* varg18/*[in,opt]*/, VARIANT* varg19/*[in,opt]*/, 
                          VARIANT* varg20/*[in,opt]*/, VARIANT* varg21/*[in,opt]*/, 
                          VARIANT* varg22/*[in,opt]*/, VARIANT* varg23/*[in,opt]*/, 
                          VARIANT* varg24/*[in,opt]*/, VARIANT* varg25/*[in,opt]*/, 
                          VARIANT* varg26/*[in,opt]*/, VARIANT* varg27/*[in,opt]*/, 
                          VARIANT* varg28/*[in,opt]*/, VARIANT* varg29/*[in,opt]*/, 
                          VARIANT* varg30/*[in,opt]*/)
  {
    return GetDefaultInterface()->Run(MacroName/*[in]*/, varg1/*[in,opt]*/, varg2/*[in,opt]*/, 
                                      varg3/*[in,opt]*/, varg4/*[in,opt]*/, varg5/*[in,opt]*/, 
                                      varg6/*[in,opt]*/, varg7/*[in,opt]*/, varg8/*[in,opt]*/, 
                                      varg9/*[in,opt]*/, varg10/*[in,opt]*/, varg11/*[in,opt]*/, 
                                      varg12/*[in,opt]*/, varg13/*[in,opt]*/, varg14/*[in,opt]*/, 
                                      varg15/*[in,opt]*/, varg16/*[in,opt]*/, varg17/*[in,opt]*/, 
                                      varg18/*[in,opt]*/, varg19/*[in,opt]*/, varg20/*[in,opt]*/, 
                                      varg21/*[in,opt]*/, varg22/*[in,opt]*/, varg23/*[in,opt]*/, 
                                      varg24/*[in,opt]*/, varg25/*[in,opt]*/, varg26/*[in,opt]*/, 
                                      varg27/*[in,opt]*/, varg28/*[in,opt]*/, varg29/*[in,opt]*/, 
                                      varg30/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Word_2k::WordApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property long Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property BSTR Name={ read=get_Name }; // 0, No
  __property Word_2k::DocumentsPtr Documents={ read=get_Documents }; // 0, Yes
  __property Word_2k::WindowsPtr Windows={ read=get_Windows }; // 0, Yes
  __property Word_2k::WordDocumentPtr ActiveDocument={ read=get_ActiveDocument }; // 0, Yes
  __property Word_2k::WINDOWPtr ActiveWindow={ read=get_ActiveWindow }; // 0, Yes
  __property Word_2k::SelectionPtr Selection={ read=get_Selection }; // 0, Yes
  __property LPDISPATCH WordBasic={ read=get_WordBasic }; // 0, No
  __property Word_2k::RecentFilesPtr RecentFiles={ read=get_RecentFiles }; // 0, Yes
  __property Word_2k::TemplatePtr NormalTemplate={ read=get_NormalTemplate }; // 0, Yes
  __property Word_2k::SYSTEMPtr System={ read=get_System }; // 0, Yes
  __property Word_2k::AutoCorrectPtr AutoCorrect={ read=get_AutoCorrect }; // 0, Yes
  __property Word_2k::FontNamesPtr FontNames={ read=get_FontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr LandscapeFontNames={ read=get_LandscapeFontNames }; // 0, Yes
  __property Word_2k::FontNamesPtr PortraitFontNames={ read=get_PortraitFontNames }; // 0, Yes
  __property Word_2k::LanguagesPtr Languages={ read=get_Languages }; // 0, Yes
  __property Office_2k::AssistantPtr Assistant={ read=get_Assistant }; // 0, Yes
  __property Word_2k::BrowserPtr Browser={ read=get_Browser }; // 0, Yes
  __property Word_2k::FileConvertersPtr FileConverters={ read=get_FileConverters }; // 0, Yes
  __property Word_2k::MailingLabelPtr MailingLabel={ read=get_MailingLabel }; // 0, Yes
  __property Word_2k::DialogsPtr Dialogs={ read=get_Dialogs }; // 0, Yes
  __property Word_2k::CaptionLabelsPtr CaptionLabels={ read=get_CaptionLabels }; // 0, Yes
  __property Word_2k::AutoCaptionsPtr AutoCaptions={ read=get_AutoCaptions }; // 0, Yes
  __property Word_2k::AddInsPtr AddIns={ read=get_AddIns }; // 0, Yes
  __property BSTR Version={ read=get_Version }; // 0, No
  __property Word_2k::TasksPtr Tasks={ read=get_Tasks }; // 0, Yes
  __property TOLEBOOL SpecialMode={ read=get_SpecialMode }; // 0, No
  __property long UsableWidth={ read=get_UsableWidth }; // 0, No
  __property long UsableHeight={ read=get_UsableHeight }; // 0, No
  __property TOLEBOOL MathCoprocessorAvailable={ read=get_MathCoprocessorAvailable }; // 0, No
  __property TOLEBOOL MouseAvailable={ read=get_MouseAvailable }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant International[Word_2k::WdInternationalIndex Index]={ read=get_International }; // 0, No
  */
  __property BSTR Build={ read=get_Build }; // 0, No
  __property TOLEBOOL CapsLock={ read=get_CapsLock }; // 0, No
  __property TOLEBOOL NumLock={ read=get_NumLock }; // 0, No
  __property LPDISPATCH MacroContainer={ read=get_MacroContainer }; // 0, No
  __property Office_2k::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property Word_2k::SynonymInfoPtr SynonymInfo[BSTR Word][VARIANT* LanguageID]={ read=get_SynonymInfo }; // 0, Yes
  __property Vbide_2k::VBEPtr VBE={ read=get_VBE }; // 0, Yes
  __property Word_2k::ListGalleriesPtr ListGalleries={ read=get_ListGalleries }; // 0, Yes
  __property Word_2k::TemplatesPtr Templates={ read=get_Templates }; // 0, Yes
  __property LPDISPATCH CustomizationContext={ read=get_CustomizationContext }; // 0, No
  __property Word_2k::KeyBindingsPtr KeyBindings={ read=get_KeyBindings }; // 0, Yes
  __property Word_2k::KeysBoundToPtr KeysBoundTo[Word_2k::WdKeyCategory KeyCategory][BSTR Command][VARIANT* CommandParameter]={ read=get_KeysBoundTo }; // 0, Yes
  __property Word_2k::KeyBindingPtr FindKey[long KeyCode][VARIANT* KeyCode2]={ read=get_FindKey }; // 0, Yes
  __property BSTR Path={ read=get_Path }; // 0, No
  __property long BackgroundSavingStatus={ read=get_BackgroundSavingStatus }; // 0, No
  __property long BackgroundPrintingStatus={ read=get_BackgroundPrintingStatus }; // 0, No
  __property Word_2k::OptionsPtr Options={ read=get_Options }; // 0, Yes
  __property Word_2k::DictionariesPtr CustomDictionaries={ read=get_CustomDictionaries }; // 0, Yes
  __property BSTR PathSeparator={ read=get_PathSeparator }; // 0, No
  __property BSTR StatusBar={ }; // 0, No
  __property TOLEBOOL MAPIAvailable={ read=get_MAPIAvailable }; // 0, No
  __property TOLEBOOL UserControl={ read=get_UserControl }; // 0, No
  __property Office_2k::FileSearchPtr FileSearch={ read=get_FileSearch }; // 0, Yes
  __property Word_2k::WdMailSystem MailSystem={ read=get_MailSystem }; // 0, No
  __property TOLEBOOL IsObjectValid[LPDISPATCH Object]={ read=get_IsObjectValid }; // 0, No
  __property Word_2k::HangulHanjaConversionDictionariesPtr HangulHanjaDictionaries={ read=get_HangulHanjaDictionaries }; // 0, Yes
  __property Word_2k::MailMessagePtr MailMessage={ read=get_MailMessage }; // 0, Yes
  __property TOLEBOOL FocusInMailHeader={ read=get_FocusInMailHeader }; // 0, No
  __property Word_2k::EmailOptionsPtr EmailOptions={ read=get_EmailOptions }; // 0, Yes
  __property Office_2k::MsoLanguageID Language={ read=get_Language }; // 0, No
  __property Office_2k::COMAddInsPtr COMAddIns={ read=get_COMAddIns }; // 0, Yes
  __property Office_2k::LanguageSettingsPtr LanguageSettings={ read=get_LanguageSettings }; // 0, Yes
  __property TOLEBOOL Dummy1={ read=get_Dummy1 }; // 0, No
  __property Office_2k::AnswerWizardPtr AnswerWizard={ read=get_AnswerWizard }; // 0, Yes
  /*CoClassWriteProperties*/
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property TOLEBOOL ScreenUpdating={ read=get_ScreenUpdating, stored=false }; // 0, No
  __property TOLEBOOL PrintPreview={ read=get_PrintPreview, stored=false }; // 0, No
  __property TOLEBOOL DisplayStatusBar={ read=get_DisplayStatusBar, stored=false }; // 0, No
  __property BSTR UserName={ read=get_UserName, stored=false }; // 0, No
  __property BSTR UserInitials={ read=get_UserInitials, stored=false }; // 0, No
  __property BSTR UserAddress={ read=get_UserAddress, stored=false }; // 0, No
  __property TOLEBOOL DisplayRecentFiles={ read=get_DisplayRecentFiles, stored=false }; // 0, No
  __property BSTR DefaultSaveFormat={ read=get_DefaultSaveFormat, stored=false }; // 0, No
  __property BSTR ActivePrinter={ read=get_ActivePrinter, stored=false }; // 0, No
  __property BSTR Caption={ read=get_Caption, stored=false }; // 0, No
  __property TOLEBOOL DisplayScrollBars={ read=get_DisplayScrollBars, stored=false }; // 0, No
  __property BSTR StartupPath={ read=get_StartupPath, stored=false }; // 0, No
  __property long Left={ read=get_Left, stored=false }; // 0, No
  __property long Top={ read=get_Top, stored=false }; // 0, No
  __property long Width={ read=get_Width, stored=false }; // 0, No
  __property long Height={ read=get_Height, stored=false }; // 0, No
  __property Word_2k::WdWindowState WindowState={ read=get_WindowState, stored=false }; // 0, No
  __property TOLEBOOL DisplayAutoCompleteTips={ read=get_DisplayAutoCompleteTips, stored=false }; // 0, No
  __property Word_2k::WdAlertLevel DisplayAlerts={ read=get_DisplayAlerts, stored=false }; // 0, No
  __property TOLEBOOL DisplayScreenTips={ read=get_DisplayScreenTips, stored=false }; // 0, No
  __property Word_2k::WdEnableCancelKey EnableCancelKey={ read=get_EnableCancelKey, stored=false }; // 0, No
  __property BSTR DefaultTableSeparator={ read=get_DefaultTableSeparator, stored=false }; // 0, No
  __property TOLEBOOL ShowVisualBasicEditor={ read=get_ShowVisualBasicEditor, stored=false }; // 0, No
  __property BSTR BrowseExtraFileTypes={ read=get_BrowseExtraFileTypes, stored=false }; // 0, No
  __property TOLEBOOL CheckLanguage={ read=get_CheckLanguage, stored=false }; // 0, No
  __property Office_2k::MsoFeatureInstall FeatureInstall={ read=get_FeatureInstall, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnStartup;
  TNotifyEvent                   FOnQuit;
  TNotifyEvent                   FOnDocumentChange;
  TWordApplicationDocumentOpen   FOnDocumentOpen;
  TWordApplicationDocumentBeforeClose FOnDocumentBeforeClose;
  TWordApplicationDocumentBeforePrint FOnDocumentBeforePrint;
  TWordApplicationDocumentBeforeSave FOnDocumentBeforeSave;
  TWordApplicationNewDocument    FOnNewDocument;
  TWordApplicationWindowActivate FOnWindowActivate;
  TWordApplicationWindowDeactivate FOnWindowDeactivate;
  TWordApplicationWindowSelectionChange FOnWindowSelectionChange;
  TWordApplicationWindowBeforeRightClick FOnWindowBeforeRightClick;
  TWordApplicationWindowBeforeDoubleClick FOnWindowBeforeDoubleClick;
__published:
  __property TNotifyEvent OnStartup={ read=FOnStartup, write=FOnStartup };
  __property TNotifyEvent OnQuit={ read=FOnQuit, write=FOnQuit };
  __property TNotifyEvent OnDocumentChange={ read=FOnDocumentChange, write=FOnDocumentChange };
  __property TWordApplicationDocumentOpen OnDocumentOpen={ read=FOnDocumentOpen, write=FOnDocumentOpen };
  __property TWordApplicationDocumentBeforeClose OnDocumentBeforeClose={ read=FOnDocumentBeforeClose, write=FOnDocumentBeforeClose };
  __property TWordApplicationDocumentBeforePrint OnDocumentBeforePrint={ read=FOnDocumentBeforePrint, write=FOnDocumentBeforePrint };
  __property TWordApplicationDocumentBeforeSave OnDocumentBeforeSave={ read=FOnDocumentBeforeSave, write=FOnDocumentBeforeSave };
  __property TWordApplicationNewDocument OnNewDocument={ read=FOnNewDocument, write=FOnNewDocument };
  __property TWordApplicationWindowActivate OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TWordApplicationWindowDeactivate OnWindowDeactivate={ read=FOnWindowDeactivate, write=FOnWindowDeactivate };
  __property TWordApplicationWindowSelectionChange OnWindowSelectionChange={ read=FOnWindowSelectionChange, write=FOnWindowSelectionChange };
  __property TWordApplicationWindowBeforeRightClick OnWindowBeforeRightClick={ read=FOnWindowBeforeRightClick, write=FOnWindowBeforeRightClick };
  __property TWordApplicationWindowBeforeDoubleClick OnWindowBeforeDoubleClick={ read=FOnWindowBeforeDoubleClick, write=FOnWindowBeforeDoubleClick };
private:
  bool     FAutoQuit;
__published:
  __property bool AutoQuit = {read=FAutoQuit, write=FAutoQuit};
};

};     // namespace Word_2k

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Word_2k;
#endif

#pragma option pop

#endif // Word_2k_srvrH

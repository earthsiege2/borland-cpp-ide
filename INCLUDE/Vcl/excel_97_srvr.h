// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.151.1.0.1.21  $
// File generated on 1/28/2002 7:56:29 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\program files\microsoft office\office\excel8.olb (1)
// LIBID: {00020813-0000-0000-C000-000000000046}
// LCID: 0
// Helpfile: c:\program files\microsoft office\office\VBAXL8.HLP
// HelpString: Microsoft Excel 8.0 Object Library
// DepndLst: 
//   (1) v2.0 Office, (C:\Program Files\Microsoft Office\office97\Office\MSO97.DLL)
//   (2) v2.0 stdole, (C:\WINNT\System32\stdole2.tlb)
//   (3) v5.0 VBIDE, (C:\Program Files\Common Files\Microsoft Shared\VBA\VBEEXT1.OLB)
// ************************************************************************ //
#ifndef   Excel_97_SRVRH
#define   Excel_97_SRVRH

#pragma option push -b -w-inl

#include <oleserver.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0600)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>
#include "Office_97.h"
#include "VBIDE_97.h"

#include "Excel_97.h"
namespace Excel_97
{

// *********************************************************************//
// HelpString: Microsoft Excel 8.0 Object Library
// Version:    1.2
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelQueryTable
// Help String      : 
// Default Interface: _QueryTable
// Def. Intf. Object: _QueryTablePtr
// Def. Intf. DISP? : Yes
// Event   Interface: RefreshEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelQueryTableBeforeRefresh)(System::TObject * Sender, 
                                                                    VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelQueryTableAfterRefresh)(System::TObject * Sender, 
                                                                   VARIANT_BOOL Success/*[in]*/);

class PACKAGE TExcelQueryTable : public Oleserver::TOleServer
{
  _QueryTablePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelQueryTable(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _QueryTablePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_QueryTablePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Excel_97::ExcelApplication* __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:TOleEnum
  Excel_97::XlCreator __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Name(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_FieldNames(void)
  {
    return GetDefaultInterface()->get_FieldNames();
  }

// StdProp:WordBool
  void __fastcall set_FieldNames(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_FieldNames(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_RowNumbers(void)
  {
    return GetDefaultInterface()->get_RowNumbers();
  }

// StdProp:WordBool
  void __fastcall set_RowNumbers(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RowNumbers(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_FillAdjacentFormulas(void)
  {
    return GetDefaultInterface()->get_FillAdjacentFormulas();
  }

// StdProp:WordBool
  void __fastcall set_FillAdjacentFormulas(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_FillAdjacentFormulas(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_HasAutoFormat(void)
  {
    return GetDefaultInterface()->get_HasAutoFormat();
  }

// StdProp:WordBool
  void __fastcall set_HasAutoFormat(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_HasAutoFormat(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_RefreshOnFileOpen(void)
  {
    return GetDefaultInterface()->get_RefreshOnFileOpen();
  }

// StdProp:WordBool
  void __fastcall set_RefreshOnFileOpen(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RefreshOnFileOpen(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_Refreshing(void)
  {
    return GetDefaultInterface()->get_Refreshing();
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_FetchedRowOverflow(void)
  {
    return GetDefaultInterface()->get_FetchedRowOverflow();
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_BackgroundQuery(void)
  {
    return GetDefaultInterface()->get_BackgroundQuery();
  }

// StdProp:WordBool
  void __fastcall set_BackgroundQuery(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_BackgroundQuery(Param1/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlCellInsertionMode __fastcall get_RefreshStyle(void)
  {
    return GetDefaultInterface()->get_RefreshStyle();
  }

// StdProp:TOleEnum
  void __fastcall set_RefreshStyle(Excel_97::XlCellInsertionMode Param1/*[in]*/)
  {
    GetDefaultInterface()->set_RefreshStyle(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_EnableRefresh(void)
  {
    return GetDefaultInterface()->get_EnableRefresh();
  }

// StdProp:WordBool
  void __fastcall set_EnableRefresh(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_EnableRefresh(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_SavePassword(void)
  {
    return GetDefaultInterface()->get_SavePassword();
  }

// StdProp:WordBool
  void __fastcall set_SavePassword(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_SavePassword(Param1/*[in]*/);
  }

// StdProp:
  Excel_97::Range* __fastcall get_Destination(void)
  {
    return GetDefaultInterface()->get_Destination();
  }

// StdProp:OleVariant
  VARIANT __fastcall get_Connection(void)
  {
    return GetDefaultInterface()->get_Connection();
  }

// StdProp:OleVariant
  void __fastcall set_Connection(VARIANT Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Connection(Param1/*[in]*/);
  }

// StdProp:OleVariant
  VARIANT __fastcall get_Sql(void)
  {
    return GetDefaultInterface()->get_Sql();
  }

// StdProp:OleVariant
  void __fastcall set_Sql(VARIANT Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Sql(Param1/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PostText(void)
  {
    return GetDefaultInterface()->get_PostText();
  }

// StdProp:WideString
  void __fastcall set_PostText(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_PostText(Param1/*[in]*/);
  }

// StdProp:
  Excel_97::Range* __fastcall get_ResultRange(void)
  {
    return GetDefaultInterface()->get_ResultRange();
  }

// StdProp:
  Excel_97::Parameters* __fastcall get_Parameters(void)
  {
    return GetDefaultInterface()->get_Parameters();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Recordset(void)
  {
    return GetDefaultInterface()->get_Recordset();
  }

// StdProp:IDispatch
  void __fastcall _set_Recordset(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->_set_Recordset(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_SaveData(void)
  {
    return GetDefaultInterface()->get_SaveData();
  }

// StdProp:WordBool
  void __fastcall set_SaveData(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_SaveData(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_TablesOnlyFromHTML(void)
  {
    return GetDefaultInterface()->get_TablesOnlyFromHTML();
  }

// StdProp:WordBool
  void __fastcall set_TablesOnlyFromHTML(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_TablesOnlyFromHTML(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_EnableEditing(void)
  {
    return GetDefaultInterface()->get_EnableEditing();
  }

// StdProp:WordBool
  void __fastcall set_EnableEditing(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_EnableEditing(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall CancelRefresh(void)
  {
    GetDefaultInterface()->CancelRefresh();
  }

  void __fastcall Delete(void)
  {
    GetDefaultInterface()->Delete();
  }

  VARIANT_BOOL __fastcall Refresh(VARIANT BackgroundQuery/*[in,opt]*/= TNoParam())
  {
    return GetDefaultInterface()->Refresh(BackgroundQuery/*[in,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_97::ExcelApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property Excel_97::XlCreator Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property TOLEBOOL Refreshing={ read=get_Refreshing }; // 0, No
  __property TOLEBOOL FetchedRowOverflow={ read=get_FetchedRowOverflow }; // 0, No
  __property Excel_97::RangePtr Destination={ read=get_Destination }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Connection={ read=get_Connection }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Sql={ read=get_Sql }; // 0, No
  */
  __property Excel_97::RangePtr ResultRange={ read=get_ResultRange }; // 0, Yes
  __property Excel_97::ParametersPtr Parameters={ read=get_Parameters }; // 0, Yes
  __property LPDISPATCH Recordset={ read=get_Recordset }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property TOLEBOOL FieldNames={ read=get_FieldNames, stored=false }; // 0, No
  __property TOLEBOOL RowNumbers={ read=get_RowNumbers, stored=false }; // 0, No
  __property TOLEBOOL FillAdjacentFormulas={ read=get_FillAdjacentFormulas, stored=false }; // 0, No
  __property TOLEBOOL HasAutoFormat={ read=get_HasAutoFormat, stored=false }; // 0, No
  __property TOLEBOOL RefreshOnFileOpen={ read=get_RefreshOnFileOpen, stored=false }; // 0, No
  __property TOLEBOOL BackgroundQuery={ read=get_BackgroundQuery, stored=false }; // 0, No
  __property Excel_97::XlCellInsertionMode RefreshStyle={ read=get_RefreshStyle, stored=false }; // 0, No
  __property TOLEBOOL EnableRefresh={ read=get_EnableRefresh, stored=false }; // 0, No
  __property TOLEBOOL SavePassword={ read=get_SavePassword, stored=false }; // 0, No
  __property BSTR PostText={ read=get_PostText, stored=false }; // 0, No
  __property TOLEBOOL SaveData={ read=get_SaveData, stored=false }; // 0, No
  __property TOLEBOOL TablesOnlyFromHTML={ read=get_TablesOnlyFromHTML, stored=false }; // 0, No
  __property TOLEBOOL EnableEditing={ read=get_EnableEditing, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TExcelQueryTableBeforeRefresh  FOnBeforeRefresh;
  TExcelQueryTableAfterRefresh   FOnAfterRefresh;
__published:
  __property TExcelQueryTableBeforeRefresh OnBeforeRefresh={ read=FOnBeforeRefresh, write=FOnBeforeRefresh };
  __property TExcelQueryTableAfterRefresh OnAfterRefresh={ read=FOnAfterRefresh, write=FOnAfterRefresh };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelApplication
// Help String      : 
// Default Interface: _Application
// Def. Intf. Object: _ApplicationPtr
// Def. Intf. DISP? : No
// Event   Interface: AppEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelApplicationNewWorkbook)(System::TObject * Sender, 
                                                                   Excel_97::ExcelWorkbook* Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetSelectionChange)(System::TObject * Sender, 
                                                                            LPDISPATCH Sh/*[in]*/, 
                                                                            Excel_97::Range* Target/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetBeforeDoubleClick)(System::TObject * Sender, 
                                                                              LPDISPATCH Sh/*[in]*/, 
                                                                              Excel_97::Range* Target/*[in]*/, 
                                                                              VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetBeforeRightClick)(System::TObject * Sender, 
                                                                             LPDISPATCH Sh/*[in]*/, 
                                                                             Excel_97::Range* Target/*[in]*/, 
                                                                             VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetActivate)(System::TObject * Sender, 
                                                                     LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetDeactivate)(System::TObject * Sender, 
                                                                       LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetCalculate)(System::TObject * Sender, 
                                                                      LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationSheetChange)(System::TObject * Sender, 
                                                                   LPDISPATCH Sh/*[in]*/, 
                                                                   Excel_97::Range* Target/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookOpen)(System::TObject * Sender, 
                                                                    Excel_97::ExcelWorkbook* Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookActivate)(System::TObject * Sender, 
                                                                        Excel_97::ExcelWorkbook* Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookDeactivate)(System::TObject * Sender, 
                                                                          Excel_97::ExcelWorkbook* Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookBeforeClose)(System::TObject * Sender, 
                                                                           Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                           VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookBeforeSave)(System::TObject * Sender, 
                                                                          Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                          VARIANT_BOOL SaveAsUI/*[in]*/, 
                                                                          VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookBeforePrint)(System::TObject * Sender, 
                                                                           Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                           VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookNewSheet)(System::TObject * Sender, 
                                                                        Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                        LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookAddinInstall)(System::TObject * Sender, 
                                                                            Excel_97::ExcelWorkbook* Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWorkbookAddinUninstall)(System::TObject * Sender, 
                                                                              Excel_97::ExcelWorkbook* Wb/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWindowResize)(System::TObject * Sender, 
                                                                    Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                    Excel_97::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWindowActivate)(System::TObject * Sender, 
                                                                      Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                      Excel_97::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelApplicationWindowDeactivate)(System::TObject * Sender, 
                                                                        Excel_97::ExcelWorkbook* Wb/*[in]*/, 
                                                                        Excel_97::WINDOW* Wn/*[in]*/);

class PACKAGE TExcelApplication : public Oleserver::TOleServer
{
  _ApplicationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelApplication(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ApplicationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ApplicationPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Excel_97::ExcelApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:TOleEnum
  Excel_97::XlCreator __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:
  Excel_97::ExcelApplicationPtr __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_ActiveCell(void)
  {
    return GetDefaultInterface()->get_ActiveCell();
  }

// StdProp:
  Excel_97::ExcelChartPtr __fastcall get_ActiveChart(void)
  {
    return GetDefaultInterface()->get_ActiveChart();
  }

// StdProp:
  Excel_97::DialogSheetPtr __fastcall get_ActiveDialog(void)
  {
    return GetDefaultInterface()->get_ActiveDialog();
  }

// StdProp:
  Excel_97::MenuBarPtr __fastcall get_ActiveMenuBar(void)
  {
    return GetDefaultInterface()->get_ActiveMenuBar();
  }

// StdProp:WideString
  BSTR __fastcall get_ActivePrinter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ActivePrinter(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_ActivePrinter(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ActivePrinter(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_ActiveSheet(void)
  {
    return GetDefaultInterface()->get_ActiveSheet();
  }

// StdProp:
  Excel_97::WINDOWPtr __fastcall get_ActiveWindow(void)
  {
    return GetDefaultInterface()->get_ActiveWindow();
  }

// StdProp:
  Excel_97::ExcelWorkbookPtr __fastcall get_ActiveWorkbook(void)
  {
    return GetDefaultInterface()->get_ActiveWorkbook();
  }

// StdProp:
  Excel_97::AddInsPtr __fastcall get_AddIns(void)
  {
    return GetDefaultInterface()->get_AddIns();
  }

// StdProp:
  Office_97::AssistantPtr __fastcall get_Assistant(void)
  {
    return GetDefaultInterface()->get_Assistant();
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Cells(void)
  {
    return GetDefaultInterface()->get_Cells();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Charts(void)
  {
    return GetDefaultInterface()->get_Charts();
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Columns(void)
  {
    return GetDefaultInterface()->get_Columns();
  }

// StdProp:
  Office_97::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:Integer
  long __fastcall get_DDEAppReturnCode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DDEAppReturnCode(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_DialogSheets(void)
  {
    return GetDefaultInterface()->get_DialogSheets();
  }

// StdProp:
  Excel_97::MenuBarsPtr __fastcall get_MenuBars(void)
  {
    return GetDefaultInterface()->get_MenuBars();
  }

// StdProp:
  Excel_97::ModulesPtr __fastcall get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

// StdProp:
  Excel_97::NamesPtr __fastcall get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Range(VARIANT Cell1/*[in]*/, VARIANT Cell2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_Range(Cell1/*[in]*/, Cell2/*[in,opt]*/);
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Rows(void)
  {
    return GetDefaultInterface()->get_Rows();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Selection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Selection(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Sheets(void)
  {
    return GetDefaultInterface()->get_Sheets();
  }

// StdProp:
  Excel_97::MenuPtr __fastcall get_ShortcutMenus(long Index/*[in]*/)
  {
    return GetDefaultInterface()->get_ShortcutMenus(Index/*[in]*/);
  }

// StdProp:
  Excel_97::ExcelWorkbookPtr __fastcall get_ThisWorkbook(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ThisWorkbook(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::ToolbarsPtr __fastcall get_Toolbars(void)
  {
    return GetDefaultInterface()->get_Toolbars();
  }

// StdProp:
  Excel_97::WindowsPtr __fastcall get_Windows(void)
  {
    return GetDefaultInterface()->get_Windows();
  }

// StdProp:
  Excel_97::WorkbooksPtr __fastcall get_Workbooks(void)
  {
    return GetDefaultInterface()->get_Workbooks();
  }

// StdProp:
  Excel_97::WorksheetFunctionPtr __fastcall get_WorksheetFunction(void)
  {
    return GetDefaultInterface()->get_WorksheetFunction();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Worksheets(void)
  {
    return GetDefaultInterface()->get_Worksheets();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Excel4IntlMacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4IntlMacroSheets();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Excel4MacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4MacroSheets();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AlertBeforeOverwriting(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AlertBeforeOverwriting(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_AlertBeforeOverwriting(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AlertBeforeOverwriting(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_AltStartupPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AltStartupPath(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_AltStartupPath(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AltStartupPath(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AskToUpdateLinks(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AskToUpdateLinks(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_AskToUpdateLinks(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AskToUpdateLinks(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableAnimations(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableAnimations(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_EnableAnimations(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableAnimations(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::AutoCorrectPtr __fastcall get_AutoCorrect(void)
  {
    return GetDefaultInterface()->get_AutoCorrect();
  }

// StdProp:Integer
  long __fastcall get_Build(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Build(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CalculateBeforeSave(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CalculateBeforeSave(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_CalculateBeforeSave(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CalculateBeforeSave(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlCalculation __fastcall get_Calculation(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Calculation(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_Calculation(long lcid/*[in]*/, Excel_97::XlCalculation RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Calculation(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_Caller(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Caller(Index/*[in,opt]*/, lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CanPlaySounds(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CanPlaySounds(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CanRecordSounds(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CanRecordSounds(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Caption(void)
  {
    return GetDefaultInterface()->get_Caption();
  }

// StdProp:WideString
  void __fastcall set_Caption(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Caption(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CellDragAndDrop(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CellDragAndDrop(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_CellDragAndDrop(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CellDragAndDrop(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_ClipboardFormats(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ClipboardFormats(Index/*[in,opt]*/, lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayClipboardWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayClipboardWindow(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayClipboardWindow(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayClipboardWindow(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ColorButtons(void)
  {
    return GetDefaultInterface()->get_ColorButtons();
  }

// StdProp:WordBool
  void __fastcall set_ColorButtons(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ColorButtons(RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlCommandUnderlines __fastcall get_CommandUnderlines(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CommandUnderlines(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_CommandUnderlines(long lcid/*[in]*/, Excel_97::XlCommandUnderlines RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CommandUnderlines(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ConstrainNumeric(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConstrainNumeric(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_ConstrainNumeric(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ConstrainNumeric(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CopyObjectsWithCells(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CopyObjectsWithCells(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_CopyObjectsWithCells(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CopyObjectsWithCells(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlMousePointer __fastcall get_Cursor(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Cursor(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_Cursor(long lcid/*[in]*/, Excel_97::XlMousePointer RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Cursor(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CustomListCount(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CustomListCount(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlCutCopyMode __fastcall get_CutCopyMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CutCopyMode(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_CutCopyMode(long lcid/*[in]*/, Excel_97::XlCutCopyMode RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CutCopyMode(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DataEntryMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DataEntryMode(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_DataEntryMode(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DataEntryMode(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get__Default(void)
  {
    return GetDefaultInterface()->get__Default();
  }

// StdProp:WideString
  BSTR __fastcall get_DefaultFilePath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultFilePath(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_DefaultFilePath(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultFilePath(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::DialogsPtr __fastcall get_Dialogs(void)
  {
    return GetDefaultInterface()->get_Dialogs();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayAlerts(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayAlerts(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayAlerts(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAlerts(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayFormulaBar(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayFormulaBar(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayFormulaBar(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayFormulaBar(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayFullScreen(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayFullScreen(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayFullScreen(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayFullScreen(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayNoteIndicator(void)
  {
    return GetDefaultInterface()->get_DisplayNoteIndicator();
  }

// StdProp:WordBool
  void __fastcall set_DisplayNoteIndicator(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayNoteIndicator(RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlCommentDisplayMode __fastcall get_DisplayCommentIndicator(void)
  {
    return GetDefaultInterface()->get_DisplayCommentIndicator();
  }

// StdProp:TOleEnum
  void __fastcall set_DisplayCommentIndicator(Excel_97::XlCommentDisplayMode RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayCommentIndicator(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayExcel4Menus(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayExcel4Menus(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayExcel4Menus(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayExcel4Menus(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayRecentFiles(void)
  {
    return GetDefaultInterface()->get_DisplayRecentFiles();
  }

// StdProp:WordBool
  void __fastcall set_DisplayRecentFiles(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayRecentFiles(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayScrollBars(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayScrollBars(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayScrollBars(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayScrollBars(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayStatusBar(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayStatusBar(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayStatusBar(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayStatusBar(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EditDirectlyInCell(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EditDirectlyInCell(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_EditDirectlyInCell(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EditDirectlyInCell(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableAutoComplete(void)
  {
    return GetDefaultInterface()->get_EnableAutoComplete();
  }

// StdProp:WordBool
  void __fastcall set_EnableAutoComplete(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableAutoComplete(RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlEnableCancelKey __fastcall get_EnableCancelKey(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableCancelKey(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_EnableCancelKey(long lcid/*[in]*/, Excel_97::XlEnableCancelKey RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableCancelKey(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableSound(void)
  {
    return GetDefaultInterface()->get_EnableSound();
  }

// StdProp:WordBool
  void __fastcall set_EnableSound(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableSound(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableTipWizard(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableTipWizard(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_EnableTipWizard(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableTipWizard(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_FileConverters(VARIANT Index1/*[in,opt]*/, VARIANT Index2/*[in,opt]*/, 
                                         long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FileConverters(Index1/*[in,opt]*/, Index2/*[in,opt]*/, 
                                                     lcid/*[in]*/);
  }

// StdProp:
  Office_97::FileSearchPtr __fastcall get_FileSearch(void)
  {
    return GetDefaultInterface()->get_FileSearch();
  }

// StdProp:
  Office_97::IFindPtr __fastcall get_FileFind(void)
  {
    return GetDefaultInterface()->get_FileFind();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FixedDecimal(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FixedDecimal(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_FixedDecimal(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_FixedDecimal(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_FixedDecimalPlaces(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FixedDecimalPlaces(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_FixedDecimalPlaces(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_FixedDecimalPlaces(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Height(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Height(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_Height(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Height(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IgnoreRemoteRequests(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_IgnoreRemoteRequests(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_IgnoreRemoteRequests(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_IgnoreRemoteRequests(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Interactive(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Interactive(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_Interactive(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Interactive(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_International(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_International(Index/*[in,opt]*/, lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Iteration(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Iteration(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_Iteration(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Iteration(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_LargeButtons(void)
  {
    return GetDefaultInterface()->get_LargeButtons();
  }

// StdProp:WordBool
  void __fastcall set_LargeButtons(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_LargeButtons(RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Left(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Left(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_Left(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Left(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_LibraryPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_LibraryPath(lcid/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_MailSession(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MailSession(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlMailSystem __fastcall get_MailSystem(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MailSystem(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MathCoprocessorAvailable(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MathCoprocessorAvailable(lcid/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_MaxChange(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MaxChange(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_MaxChange(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MaxChange(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_MaxIterations(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MaxIterations(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_MaxIterations(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MaxIterations(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_MemoryFree(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MemoryFree(lcid/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_MemoryTotal(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MemoryTotal(lcid/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_MemoryUsed(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MemoryUsed(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MouseAvailable(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MouseAvailable(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MoveAfterReturn(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MoveAfterReturn(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_MoveAfterReturn(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MoveAfterReturn(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlDirection __fastcall get_MoveAfterReturnDirection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MoveAfterReturnDirection(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_MoveAfterReturnDirection(long lcid/*[in]*/, Excel_97::XlDirection RHS/*[in]*/)
  {
    GetDefaultInterface()->set_MoveAfterReturnDirection(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::RecentFilesPtr __fastcall get_RecentFiles(void)
  {
    return GetDefaultInterface()->get_RecentFiles();
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  BSTR __fastcall get_NetworkTemplatesPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_NetworkTemplatesPath(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::ODBCErrorsPtr __fastcall get_ODBCErrors(void)
  {
    return GetDefaultInterface()->get_ODBCErrors();
  }

// StdProp:Integer
  long __fastcall get_ODBCTimeout(void)
  {
    return GetDefaultInterface()->get_ODBCTimeout();
  }

// StdProp:Integer
  void __fastcall set_ODBCTimeout(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ODBCTimeout(RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnCalculate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnCalculate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnCalculate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnCalculate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnData(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnData(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnData(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnData(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnDoubleClick(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnDoubleClick(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnDoubleClick(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnDoubleClick(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnEntry(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnEntry(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnEntry(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnEntry(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnWindow(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnWindow(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnWindow(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OperatingSystem(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OperatingSystem(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OrganizationName(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OrganizationName(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Path(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Path(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_PathSeparator(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PathSeparator(lcid/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_PreviousSelections(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PreviousSelections(Index/*[in,opt]*/, lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PivotTableSelection(void)
  {
    return GetDefaultInterface()->get_PivotTableSelection();
  }

// StdProp:WordBool
  void __fastcall set_PivotTableSelection(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PivotTableSelection(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PromptForSummaryInfo(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PromptForSummaryInfo(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_PromptForSummaryInfo(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PromptForSummaryInfo(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RecordRelative(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RecordRelative(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlReferenceStyle __fastcall get_ReferenceStyle(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ReferenceStyle(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_ReferenceStyle(long lcid/*[in]*/, Excel_97::XlReferenceStyle RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ReferenceStyle(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_RegisteredFunctions(VARIANT Index1/*[in,opt]*/, VARIANT Index2/*[in,opt]*/, 
                                              long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RegisteredFunctions(Index1/*[in,opt]*/, Index2/*[in,opt]*/, 
                                                          lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_RollZoom(void)
  {
    return GetDefaultInterface()->get_RollZoom();
  }

// StdProp:WordBool
  void __fastcall set_RollZoom(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_RollZoom(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ScreenUpdating(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ScreenUpdating(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_ScreenUpdating(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ScreenUpdating(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SheetsInNewWorkbook(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SheetsInNewWorkbook(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_SheetsInNewWorkbook(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SheetsInNewWorkbook(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowChartTipNames(void)
  {
    return GetDefaultInterface()->get_ShowChartTipNames();
  }

// StdProp:WordBool
  void __fastcall set_ShowChartTipNames(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowChartTipNames(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowChartTipValues(void)
  {
    return GetDefaultInterface()->get_ShowChartTipValues();
  }

// StdProp:WordBool
  void __fastcall set_ShowChartTipValues(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowChartTipValues(RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_StandardFont(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardFont(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_StandardFont(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StandardFont(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_StandardFontSize(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardFontSize(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_StandardFontSize(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StandardFontSize(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_StartupPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StartupPath(lcid/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_StatusBar(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StatusBar(lcid/*[in]*/);
  }

// StdProp:OleVariant
  void __fastcall set_StatusBar(long lcid/*[in]*/, VARIANT RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StatusBar(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_TemplatesPath(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TemplatesPath(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowToolTips(void)
  {
    return GetDefaultInterface()->get_ShowToolTips();
  }

// StdProp:WordBool
  void __fastcall set_ShowToolTips(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowToolTips(RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Top(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Top(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_Top(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Top(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlFileFormat __fastcall get_DefaultSaveFormat(void)
  {
    return GetDefaultInterface()->get_DefaultSaveFormat();
  }

// StdProp:TOleEnum
  void __fastcall set_DefaultSaveFormat(Excel_97::XlFileFormat RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSaveFormat(RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_TransitionMenuKey(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionMenuKey(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_TransitionMenuKey(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionMenuKey(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_TransitionMenuKeyAction(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionMenuKeyAction(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_TransitionMenuKeyAction(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionMenuKeyAction(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_TransitionNavigKeys(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionNavigKeys(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_TransitionNavigKeys(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionNavigKeys(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_UsableHeight(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UsableHeight(lcid/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_UsableWidth(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UsableWidth(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

// StdProp:WordBool
  void __fastcall set_UserControl(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_UserName(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UserName(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_UserName(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UserName(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Value(void)
  {
    return GetDefaultInterface()->get_Value();
  }

// StdProp:
  Vbide_97::VBEPtr __fastcall get_VBE(void)
  {
    return GetDefaultInterface()->get_VBE();
  }

// StdProp:WideString
  BSTR __fastcall get_Version(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Version(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Visible(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Visible(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_Visible(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Width(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Width(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_Width(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Width(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_WindowsForPens(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WindowsForPens(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlWindowState __fastcall get_WindowState(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WindowState(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_WindowState(long lcid/*[in]*/, Excel_97::XlWindowState RHS/*[in]*/)
  {
    GetDefaultInterface()->set_WindowState(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_UILanguage(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UILanguage(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_UILanguage(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UILanguage(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_DefaultSheetDirection(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DefaultSheetDirection(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_DefaultSheetDirection(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DefaultSheetDirection(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_CursorMovement(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CursorMovement(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_CursorMovement(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_CursorMovement(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ControlCharacters(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ControlCharacters(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_ControlCharacters(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ControlCharacters(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableEvents(void)
  {
    return GetDefaultInterface()->get_EnableEvents();
  }

// StdProp:WordBool
  void __fastcall set_EnableEvents(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableEvents(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayInfoWindow(void)
  {
    return GetDefaultInterface()->get_DisplayInfoWindow();
  }

// StdProp:WordBool
  void __fastcall set_DisplayInfoWindow(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayInfoWindow(RHS/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Calculate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Calculate(lcid/*[in]*/);
  }

  void __fastcall DDEExecute(long Channel/*[in]*/, BSTR String/*[in]*/, 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDEExecute(Channel/*[in]*/, String/*[in]*/, lcid/*[in]*/);
  }

  long __fastcall DDEInitiate(BSTR App/*[in]*/, BSTR Topic/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DDEInitiate(App/*[in]*/, Topic/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DDEPoke(long Channel/*[in]*/, VARIANT Item/*[in]*/, VARIANT Data/*[in]*/, 
                          long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDEPoke(Channel/*[in]*/, Item/*[in]*/, Data/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall DDERequest(long Channel/*[in]*/, BSTR Item/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DDERequest(Channel/*[in]*/, Item/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DDETerminate(long Channel/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DDETerminate(Channel/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(VARIANT Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(VARIANT Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall ExecuteExcel4Macro(BSTR String/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ExecuteExcel4Macro(String/*[in]*/, lcid/*[in]*/);
  }

  Excel_97::RangePtr __fastcall Intersect(Excel_97::Range* Arg1/*[in]*/, 
                                          Excel_97::Range* Arg2/*[in]*/, VARIANT Arg3/*[in,opt]*/, 
                                          VARIANT Arg4/*[in,opt]*/, VARIANT Arg5/*[in,opt]*/, 
                                          VARIANT Arg6/*[in,opt]*/, VARIANT Arg7/*[in,opt]*/, 
                                          VARIANT Arg8/*[in,opt]*/, VARIANT Arg9/*[in,opt]*/, 
                                          VARIANT Arg10/*[in,opt]*/, VARIANT Arg11/*[in,opt]*/, 
                                          VARIANT Arg12/*[in,opt]*/, VARIANT Arg13/*[in,opt]*/, 
                                          VARIANT Arg14/*[in,opt]*/, VARIANT Arg15/*[in,opt]*/, 
                                          VARIANT Arg16/*[in,opt]*/, VARIANT Arg17/*[in,opt]*/, 
                                          VARIANT Arg18/*[in,opt]*/, VARIANT Arg19/*[in,opt]*/, 
                                          VARIANT Arg20/*[in,opt]*/, VARIANT Arg21/*[in,opt]*/, 
                                          VARIANT Arg22/*[in,opt]*/, VARIANT Arg23/*[in,opt]*/, 
                                          VARIANT Arg24/*[in,opt]*/, VARIANT Arg25/*[in,opt]*/, 
                                          VARIANT Arg26/*[in,opt]*/, VARIANT Arg27/*[in,opt]*/, 
                                          VARIANT Arg28/*[in,opt]*/, VARIANT Arg29/*[in,opt]*/, 
                                          VARIANT Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Intersect(Arg1/*[in]*/, Arg2/*[in]*/, Arg3/*[in,opt]*/, 
                                            Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                            Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                            Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, Arg12/*[in,opt]*/, 
                                            Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                            Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, Arg18/*[in,opt]*/, 
                                            Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                            Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, Arg24/*[in,opt]*/, 
                                            Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                            Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, Arg30/*[in,opt]*/, 
                                            lcid/*[in]*/);
  }

  TVariant __fastcall Run(VARIANT Macro/*[in,opt]*/, VARIANT Arg1/*[in,opt]*/, 
                          VARIANT Arg2/*[in,opt]*/, VARIANT Arg3/*[in,opt]*/, 
                          VARIANT Arg4/*[in,opt]*/, VARIANT Arg5/*[in,opt]*/, 
                          VARIANT Arg6/*[in,opt]*/, VARIANT Arg7/*[in,opt]*/, 
                          VARIANT Arg8/*[in,opt]*/, VARIANT Arg9/*[in,opt]*/, 
                          VARIANT Arg10/*[in,opt]*/, VARIANT Arg11/*[in,opt]*/, 
                          VARIANT Arg12/*[in,opt]*/, VARIANT Arg13/*[in,opt]*/, 
                          VARIANT Arg14/*[in,opt]*/, VARIANT Arg15/*[in,opt]*/, 
                          VARIANT Arg16/*[in,opt]*/, VARIANT Arg17/*[in,opt]*/, 
                          VARIANT Arg18/*[in,opt]*/, VARIANT Arg19/*[in,opt]*/, 
                          VARIANT Arg20/*[in,opt]*/, VARIANT Arg21/*[in,opt]*/, 
                          VARIANT Arg22/*[in,opt]*/, VARIANT Arg23/*[in,opt]*/, 
                          VARIANT Arg24/*[in,opt]*/, VARIANT Arg25/*[in,opt]*/, 
                          VARIANT Arg26/*[in,opt]*/, VARIANT Arg27/*[in,opt]*/, 
                          VARIANT Arg28/*[in,opt]*/, VARIANT Arg29/*[in,opt]*/, 
                          VARIANT Arg30/*[in,opt]*/)
  {
    return GetDefaultInterface()->Run(Macro/*[in,opt]*/, Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, 
                                      Arg3/*[in,opt]*/, Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, 
                                      Arg6/*[in,opt]*/, Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, 
                                      Arg9/*[in,opt]*/, Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                      Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, 
                                      Arg15/*[in,opt]*/, Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                      Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, 
                                      Arg21/*[in,opt]*/, Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                      Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, 
                                      Arg27/*[in,opt]*/, Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                      Arg30/*[in,opt]*/);
  }

  TVariant __fastcall _Run2(VARIANT Macro/*[in,opt]*/, VARIANT Arg1/*[in,opt]*/, 
                            VARIANT Arg2/*[in,opt]*/, VARIANT Arg3/*[in,opt]*/, 
                            VARIANT Arg4/*[in,opt]*/, VARIANT Arg5/*[in,opt]*/, 
                            VARIANT Arg6/*[in,opt]*/, VARIANT Arg7/*[in,opt]*/, 
                            VARIANT Arg8/*[in,opt]*/, VARIANT Arg9/*[in,opt]*/, 
                            VARIANT Arg10/*[in,opt]*/, VARIANT Arg11/*[in,opt]*/, 
                            VARIANT Arg12/*[in,opt]*/, VARIANT Arg13/*[in,opt]*/, 
                            VARIANT Arg14/*[in,opt]*/, VARIANT Arg15/*[in,opt]*/, 
                            VARIANT Arg16/*[in,opt]*/, VARIANT Arg17/*[in,opt]*/, 
                            VARIANT Arg18/*[in,opt]*/, VARIANT Arg19/*[in,opt]*/, 
                            VARIANT Arg20/*[in,opt]*/, VARIANT Arg21/*[in,opt]*/, 
                            VARIANT Arg22/*[in,opt]*/, VARIANT Arg23/*[in,opt]*/, 
                            VARIANT Arg24/*[in,opt]*/, VARIANT Arg25/*[in,opt]*/, 
                            VARIANT Arg26/*[in,opt]*/, VARIANT Arg27/*[in,opt]*/, 
                            VARIANT Arg28/*[in,opt]*/, VARIANT Arg29/*[in,opt]*/, 
                            VARIANT Arg30/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Run2(Macro/*[in,opt]*/, Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, 
                                        Arg3/*[in,opt]*/, Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, 
                                        Arg6/*[in,opt]*/, Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, 
                                        Arg9/*[in,opt]*/, Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                        Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, 
                                        Arg15/*[in,opt]*/, Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                        Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, 
                                        Arg21/*[in,opt]*/, Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                        Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, 
                                        Arg27/*[in,opt]*/, Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                        Arg30/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendKeys(VARIANT Keys/*[in]*/, VARIANT Wait/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SendKeys(Keys/*[in]*/, Wait/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_97::RangePtr __fastcall Union(Excel_97::Range* Arg1/*[in]*/, Excel_97::Range* Arg2/*[in]*/, 
                                      VARIANT Arg3/*[in,opt]*/, VARIANT Arg4/*[in,opt]*/, 
                                      VARIANT Arg5/*[in,opt]*/, VARIANT Arg6/*[in,opt]*/, 
                                      VARIANT Arg7/*[in,opt]*/, VARIANT Arg8/*[in,opt]*/, 
                                      VARIANT Arg9/*[in,opt]*/, VARIANT Arg10/*[in,opt]*/, 
                                      VARIANT Arg11/*[in,opt]*/, VARIANT Arg12/*[in,opt]*/, 
                                      VARIANT Arg13/*[in,opt]*/, VARIANT Arg14/*[in,opt]*/, 
                                      VARIANT Arg15/*[in,opt]*/, VARIANT Arg16/*[in,opt]*/, 
                                      VARIANT Arg17/*[in,opt]*/, VARIANT Arg18/*[in,opt]*/, 
                                      VARIANT Arg19/*[in,opt]*/, VARIANT Arg20/*[in,opt]*/, 
                                      VARIANT Arg21/*[in,opt]*/, VARIANT Arg22/*[in,opt]*/, 
                                      VARIANT Arg23/*[in,opt]*/, VARIANT Arg24/*[in,opt]*/, 
                                      VARIANT Arg25/*[in,opt]*/, VARIANT Arg26/*[in,opt]*/, 
                                      VARIANT Arg27/*[in,opt]*/, VARIANT Arg28/*[in,opt]*/, 
                                      VARIANT Arg29/*[in,opt]*/, VARIANT Arg30/*[in,opt]*/, 
                                      long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Union(Arg1/*[in]*/, Arg2/*[in]*/, Arg3/*[in,opt]*/, 
                                        Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                        Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                        Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, Arg12/*[in,opt]*/, 
                                        Arg13/*[in,opt]*/, Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                        Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, Arg18/*[in,opt]*/, 
                                        Arg19/*[in,opt]*/, Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                        Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, Arg24/*[in,opt]*/, 
                                        Arg25/*[in,opt]*/, Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                        Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, Arg30/*[in,opt]*/, 
                                        lcid/*[in]*/);
  }

  void __fastcall ActivateMicrosoftApp(Excel_97::XlMSApplication Index/*[in]*/, 
                                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ActivateMicrosoftApp(Index/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall AddChartAutoFormat(VARIANT Chart/*[in]*/, BSTR Name/*[in]*/, 
                                     VARIANT Description/*[in,opt]*/= TNoParam(), 
                                     long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->AddChartAutoFormat(Chart/*[in]*/, Name/*[in]*/, Description/*[in,opt]*/, 
                                              lcid/*[in]*/);
  }

  void __fastcall AddCustomList(VARIANT ListArray/*[in]*/, VARIANT ByRow/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->AddCustomList(ListArray/*[in]*/, ByRow/*[in,opt]*/, lcid/*[in]*/);
  }

  double __fastcall CentimetersToPoints(double Centimeters/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CentimetersToPoints(Centimeters/*[in]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall CheckSpelling(BSTR Word/*[in]*/, VARIANT CustomDictionary/*[in,opt]*/, 
                                    VARIANT IgnoreUppercase/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CheckSpelling(Word/*[in]*/, CustomDictionary/*[in,opt]*/, 
                                                IgnoreUppercase/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall ConvertFormula(VARIANT Formula/*[in]*/, 
                                     Excel_97::XlReferenceStyle FromReferenceStyle/*[in]*/, 
                                     VARIANT ToReferenceStyle/*[in,opt]*/, 
                                     VARIANT ToAbsolute/*[in,opt]*/, VARIANT RelativeTo/*[in,opt]*/, 
                                     long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ConvertFormula(Formula/*[in]*/, FromReferenceStyle/*[in]*/, 
                                                 ToReferenceStyle/*[in,opt]*/, 
                                                 ToAbsolute/*[in,opt]*/, RelativeTo/*[in,opt]*/, 
                                                 lcid/*[in]*/);
  }

  void __fastcall Dummy1(void)
  {
    GetDefaultInterface()->Dummy1();
  }

  void __fastcall Dummy2(void)
  {
    GetDefaultInterface()->Dummy2();
  }

  void __fastcall Dummy3(void)
  {
    GetDefaultInterface()->Dummy3();
  }

  void __fastcall Dummy4(void)
  {
    GetDefaultInterface()->Dummy4();
  }

  void __fastcall Dummy5(void)
  {
    GetDefaultInterface()->Dummy5();
  }

  void __fastcall Dummy6(void)
  {
    GetDefaultInterface()->Dummy6();
  }

  void __fastcall Dummy7(void)
  {
    GetDefaultInterface()->Dummy7();
  }

  void __fastcall Dummy8(void)
  {
    GetDefaultInterface()->Dummy8();
  }

  void __fastcall Dummy9(void)
  {
    GetDefaultInterface()->Dummy9();
  }

  void __fastcall Dummy10(void)
  {
    GetDefaultInterface()->Dummy10();
  }

  void __fastcall Dummy11(void)
  {
    GetDefaultInterface()->Dummy11();
  }

  void __fastcall DeleteChartAutoFormat(BSTR Name/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DeleteChartAutoFormat(Name/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DeleteCustomList(long ListNum/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DeleteCustomList(ListNum/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall DoubleClick(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DoubleClick(lcid/*[in]*/);
  }

  void __fastcall FindFile(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->FindFile(lcid/*[in]*/);
  }

  TVariant __fastcall GetCustomListContents(long ListNum/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetCustomListContents(ListNum/*[in]*/, lcid/*[in]*/);
  }

  long __fastcall GetCustomListNum(VARIANT ListArray/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetCustomListNum(ListArray/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall GetOpenFilename(VARIANT FileFilter/*[in,opt]*/, 
                                      VARIANT FilterIndex/*[in,opt]*/, VARIANT Title/*[in,opt]*/, 
                                      VARIANT ButtonText/*[in,opt]*/, 
                                      VARIANT MultiSelect/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetOpenFilename(FileFilter/*[in,opt]*/, FilterIndex/*[in,opt]*/, 
                                                  Title/*[in,opt]*/, ButtonText/*[in,opt]*/, 
                                                  MultiSelect/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall GetSaveAsFilename(VARIANT InitialFilename/*[in,opt]*/, 
                                        VARIANT FileFilter/*[in,opt]*/, 
                                        VARIANT FilterIndex/*[in,opt]*/, VARIANT Title/*[in,opt]*/, 
                                        VARIANT ButtonText/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GetSaveAsFilename(InitialFilename/*[in,opt]*/, 
                                                    FileFilter/*[in,opt]*/, FilterIndex/*[in,opt]*/, 
                                                    Title/*[in,opt]*/, ButtonText/*[in,opt]*/, 
                                                    lcid/*[in]*/);
  }

  void __fastcall Goto(VARIANT Reference/*[in,opt]*/= TNoParam(), 
                       VARIANT Scroll/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Goto(Reference/*[in,opt]*/, Scroll/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Help(VARIANT HelpFile/*[in,opt]*/= TNoParam(), 
                       VARIANT HelpContextID/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Help(HelpFile/*[in,opt]*/, HelpContextID/*[in,opt]*/, lcid/*[in]*/);
  }

  double __fastcall InchesToPoints(double Inches/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->InchesToPoints(Inches/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall InputBox(BSTR Prompt/*[in]*/, VARIANT Title/*[in,opt]*/, 
                               VARIANT Default/*[in,opt]*/, VARIANT Left/*[in,opt]*/, 
                               VARIANT Top/*[in,opt]*/, VARIANT HelpFile/*[in,opt]*/, 
                               VARIANT HelpContextID/*[in,opt]*/, VARIANT Type/*[in,opt]*/, 
                               long lcid/*[in]*/)
  {
    return GetDefaultInterface()->InputBox(Prompt/*[in]*/, Title/*[in,opt]*/, Default/*[in,opt]*/, 
                                           Left/*[in,opt]*/, Top/*[in,opt]*/, HelpFile/*[in,opt]*/, 
                                           HelpContextID/*[in,opt]*/, Type/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall MacroOptions(VARIANT Macro/*[in,opt]*/= TNoParam(), 
                               VARIANT Description/*[in,opt]*/= TNoParam(), 
                               VARIANT HasMenu/*[in,opt]*/= TNoParam(), 
                               VARIANT MenuText/*[in,opt]*/= TNoParam(), 
                               VARIANT HasShortcutKey/*[in,opt]*/= TNoParam(), 
                               VARIANT ShortcutKey/*[in,opt]*/= TNoParam(), 
                               VARIANT Category/*[in,opt]*/= TNoParam(), 
                               VARIANT StatusBar/*[in,opt]*/= TNoParam(), 
                               VARIANT HelpContextID/*[in,opt]*/= TNoParam(), 
                               VARIANT HelpFile/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->MacroOptions(Macro/*[in,opt]*/, Description/*[in,opt]*/, 
                                        HasMenu/*[in,opt]*/, MenuText/*[in,opt]*/, 
                                        HasShortcutKey/*[in,opt]*/, ShortcutKey/*[in,opt]*/, 
                                        Category/*[in,opt]*/, StatusBar/*[in,opt]*/, 
                                        HelpContextID/*[in,opt]*/, HelpFile/*[in,opt]*/, 
                                        lcid/*[in]*/);
  }

  void __fastcall MailLogoff(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->MailLogoff(lcid/*[in]*/);
  }

  void __fastcall MailLogon(VARIANT Name/*[in,opt]*/= TNoParam(), 
                            VARIANT Password/*[in,opt]*/= TNoParam(), 
                            VARIANT DownloadNewMail/*[in,opt]*/= TNoParam(), 
                            long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->MailLogon(Name/*[in,opt]*/, Password/*[in,opt]*/, 
                                     DownloadNewMail/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_97::ExcelWorkbookPtr __fastcall NextLetter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->NextLetter(lcid/*[in]*/);
  }

  void __fastcall OnKey(BSTR Key/*[in]*/, VARIANT Procedure/*[in,opt]*/= TNoParam(), 
                        long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnKey(Key/*[in]*/, Procedure/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall OnRepeat(BSTR Text/*[in]*/, BSTR Procedure/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnRepeat(Text/*[in]*/, Procedure/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall OnTime(VARIANT EarliestTime/*[in]*/, BSTR Procedure/*[in]*/, 
                         VARIANT LatestTime/*[in,opt]*/= TNoParam(), 
                         VARIANT Schedule/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnTime(EarliestTime/*[in]*/, Procedure/*[in]*/, LatestTime/*[in,opt]*/, 
                                  Schedule/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall OnUndo(BSTR Text/*[in]*/, BSTR Procedure/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OnUndo(Text/*[in]*/, Procedure/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall Quit(void)
  {
    GetDefaultInterface()->Quit();
  }

  void __fastcall RecordMacro(VARIANT BasicCode/*[in,opt]*/= TNoParam(), 
                              VARIANT XlmCode/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->RecordMacro(BasicCode/*[in,opt]*/, XlmCode/*[in,opt]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall RegisterXLL(BSTR Filename/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->RegisterXLL(Filename/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall Repeat(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Repeat(lcid/*[in]*/);
  }

  void __fastcall ResetTipWizard(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ResetTipWizard(lcid/*[in]*/);
  }

  void __fastcall Save(VARIANT Filename/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Save(Filename/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SaveWorkspace(VARIANT Filename/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveWorkspace(Filename/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetDefaultChart(VARIANT FormatName/*[in,opt]*/= TNoParam(), 
                                  VARIANT Gallery/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SetDefaultChart(FormatName/*[in,opt]*/, Gallery/*[in,opt]*/);
  }

  void __fastcall Undo(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Undo(lcid/*[in]*/);
  }

  void __fastcall Volatile(VARIANT Volatile/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Volatile(Volatile/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Wait(VARIANT Time/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Wait(Time/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _WSFunction(VARIANT Arg1/*[in,opt]*/, VARIANT Arg2/*[in,opt]*/, 
                                  VARIANT Arg3/*[in,opt]*/, VARIANT Arg4/*[in,opt]*/, 
                                  VARIANT Arg5/*[in,opt]*/, VARIANT Arg6/*[in,opt]*/, 
                                  VARIANT Arg7/*[in,opt]*/, VARIANT Arg8/*[in,opt]*/, 
                                  VARIANT Arg9/*[in,opt]*/, VARIANT Arg10/*[in,opt]*/, 
                                  VARIANT Arg11/*[in,opt]*/, VARIANT Arg12/*[in,opt]*/, 
                                  VARIANT Arg13/*[in,opt]*/, VARIANT Arg14/*[in,opt]*/, 
                                  VARIANT Arg15/*[in,opt]*/, VARIANT Arg16/*[in,opt]*/, 
                                  VARIANT Arg17/*[in,opt]*/, VARIANT Arg18/*[in,opt]*/, 
                                  VARIANT Arg19/*[in,opt]*/, VARIANT Arg20/*[in,opt]*/, 
                                  VARIANT Arg21/*[in,opt]*/, VARIANT Arg22/*[in,opt]*/, 
                                  VARIANT Arg23/*[in,opt]*/, VARIANT Arg24/*[in,opt]*/, 
                                  VARIANT Arg25/*[in,opt]*/, VARIANT Arg26/*[in,opt]*/, 
                                  VARIANT Arg27/*[in,opt]*/, VARIANT Arg28/*[in,opt]*/, 
                                  VARIANT Arg29/*[in,opt]*/, VARIANT Arg30/*[in,opt]*/, 
                                  long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_WSFunction(Arg1/*[in,opt]*/, Arg2/*[in,opt]*/, Arg3/*[in,opt]*/, 
                                              Arg4/*[in,opt]*/, Arg5/*[in,opt]*/, Arg6/*[in,opt]*/, 
                                              Arg7/*[in,opt]*/, Arg8/*[in,opt]*/, Arg9/*[in,opt]*/, 
                                              Arg10/*[in,opt]*/, Arg11/*[in,opt]*/, 
                                              Arg12/*[in,opt]*/, Arg13/*[in,opt]*/, 
                                              Arg14/*[in,opt]*/, Arg15/*[in,opt]*/, 
                                              Arg16/*[in,opt]*/, Arg17/*[in,opt]*/, 
                                              Arg18/*[in,opt]*/, Arg19/*[in,opt]*/, 
                                              Arg20/*[in,opt]*/, Arg21/*[in,opt]*/, 
                                              Arg22/*[in,opt]*/, Arg23/*[in,opt]*/, 
                                              Arg24/*[in,opt]*/, Arg25/*[in,opt]*/, 
                                              Arg26/*[in,opt]*/, Arg27/*[in,opt]*/, 
                                              Arg28/*[in,opt]*/, Arg29/*[in,opt]*/, 
                                              Arg30/*[in,opt]*/, lcid/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_97::ExcelApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property Excel_97::XlCreator Creator={ read=get_Creator }; // 0, No
  __property Excel_97::ExcelApplicationPtr Parent={ read=get_Parent }; // 0, Yes
  __property Excel_97::RangePtr ActiveCell={ read=get_ActiveCell }; // 0, Yes
  __property Excel_97::ExcelChartPtr ActiveChart={ read=get_ActiveChart }; // 0, Yes
  __property Excel_97::DialogSheetPtr ActiveDialog={ read=get_ActiveDialog }; // 0, Yes
  __property Excel_97::MenuBarPtr ActiveMenuBar={ read=get_ActiveMenuBar }; // 0, Yes
  __property BSTR ActivePrinter[long lcid]={ read=get_ActivePrinter }; // 0, No
  __property LPDISPATCH ActiveSheet={ read=get_ActiveSheet }; // 0, No
  __property Excel_97::WINDOWPtr ActiveWindow={ read=get_ActiveWindow }; // 0, Yes
  __property Excel_97::ExcelWorkbookPtr ActiveWorkbook={ read=get_ActiveWorkbook }; // 0, Yes
  __property Excel_97::AddInsPtr AddIns={ read=get_AddIns }; // 0, Yes
  __property Office_97::AssistantPtr Assistant={ read=get_Assistant }; // 0, Yes
  __property Excel_97::RangePtr Cells={ read=get_Cells }; // 0, Yes
  __property Excel_97::SheetsPtr Charts={ read=get_Charts }; // 0, Yes
  __property Excel_97::RangePtr Columns={ read=get_Columns }; // 0, Yes
  __property Office_97::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property long DDEAppReturnCode[long lcid]={ read=get_DDEAppReturnCode }; // 0, No
  __property Excel_97::SheetsPtr DialogSheets={ read=get_DialogSheets }; // 0, Yes
  __property Excel_97::MenuBarsPtr MenuBars={ read=get_MenuBars }; // 0, Yes
  __property Excel_97::ModulesPtr Modules={ read=get_Modules }; // 0, Yes
  __property Excel_97::NamesPtr Names={ read=get_Names }; // 0, Yes
  __property Excel_97::RangePtr Range[VARIANT Cell1][VARIANT Cell2]={ read=get_Range }; // 0, Yes
  __property Excel_97::RangePtr Rows={ read=get_Rows }; // 0, Yes
  __property LPDISPATCH Selection[long lcid]={ read=get_Selection }; // 0, No
  __property Excel_97::SheetsPtr Sheets={ read=get_Sheets }; // 0, Yes
  __property Excel_97::MenuPtr ShortcutMenus[long Index]={ read=get_ShortcutMenus }; // 0, Yes
  __property Excel_97::ExcelWorkbookPtr ThisWorkbook[long lcid]={ read=get_ThisWorkbook }; // 0, Yes
  __property Excel_97::ToolbarsPtr Toolbars={ read=get_Toolbars }; // 0, Yes
  __property Excel_97::WindowsPtr Windows={ read=get_Windows }; // 0, Yes
  __property Excel_97::WorkbooksPtr Workbooks={ read=get_Workbooks }; // 0, Yes
  __property Excel_97::WorksheetFunctionPtr WorksheetFunction={ read=get_WorksheetFunction }; // 0, Yes
  __property Excel_97::SheetsPtr Worksheets={ read=get_Worksheets }; // 0, Yes
  __property Excel_97::SheetsPtr Excel4IntlMacroSheets={ read=get_Excel4IntlMacroSheets }; // 0, Yes
  __property Excel_97::SheetsPtr Excel4MacroSheets={ read=get_Excel4MacroSheets }; // 0, Yes
  __property TOLEBOOL AlertBeforeOverwriting[long lcid]={ read=get_AlertBeforeOverwriting }; // 0, No
  __property BSTR AltStartupPath[long lcid]={ read=get_AltStartupPath }; // 0, No
  __property TOLEBOOL AskToUpdateLinks[long lcid]={ read=get_AskToUpdateLinks }; // 0, No
  __property TOLEBOOL EnableAnimations[long lcid]={ read=get_EnableAnimations }; // 0, No
  __property Excel_97::AutoCorrectPtr AutoCorrect={ read=get_AutoCorrect }; // 0, Yes
  __property long Build[long lcid]={ read=get_Build }; // 0, No
  __property TOLEBOOL CalculateBeforeSave[long lcid]={ read=get_CalculateBeforeSave }; // 0, No
  __property Excel_97::XlCalculation Calculation[long lcid]={ read=get_Calculation }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Caller[VARIANT Index][long lcid]={ read=get_Caller }; // 0, No
  */
  __property TOLEBOOL CanPlaySounds[long lcid]={ read=get_CanPlaySounds }; // 0, No
  __property TOLEBOOL CanRecordSounds[long lcid]={ read=get_CanRecordSounds }; // 0, No
  __property TOLEBOOL CellDragAndDrop[long lcid]={ read=get_CellDragAndDrop }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant ClipboardFormats[VARIANT Index][long lcid]={ read=get_ClipboardFormats }; // 0, No
  */
  __property TOLEBOOL DisplayClipboardWindow[long lcid]={ read=get_DisplayClipboardWindow }; // 0, No
  __property TOLEBOOL ColorButtons={ read=get_ColorButtons }; // 0, No
  __property Excel_97::XlCommandUnderlines CommandUnderlines[long lcid]={ read=get_CommandUnderlines }; // 0, No
  __property TOLEBOOL ConstrainNumeric[long lcid]={ read=get_ConstrainNumeric }; // 0, No
  __property TOLEBOOL CopyObjectsWithCells[long lcid]={ read=get_CopyObjectsWithCells }; // 0, No
  __property Excel_97::XlMousePointer Cursor[long lcid]={ read=get_Cursor }; // 0, No
  __property long CustomListCount[long lcid]={ read=get_CustomListCount }; // 0, No
  __property Excel_97::XlCutCopyMode CutCopyMode[long lcid]={ read=get_CutCopyMode }; // 0, No
  __property long DataEntryMode[long lcid]={ read=get_DataEntryMode }; // 0, No
  __property BSTR _Default={ read=get__Default }; // 0, No
  __property BSTR DefaultFilePath[long lcid]={ read=get_DefaultFilePath }; // 0, No
  __property Excel_97::DialogsPtr Dialogs={ read=get_Dialogs }; // 0, Yes
  __property TOLEBOOL DisplayAlerts[long lcid]={ read=get_DisplayAlerts }; // 0, No
  __property TOLEBOOL DisplayFormulaBar[long lcid]={ read=get_DisplayFormulaBar }; // 0, No
  __property TOLEBOOL DisplayFullScreen[long lcid]={ read=get_DisplayFullScreen }; // 0, No
  __property TOLEBOOL DisplayExcel4Menus[long lcid]={ read=get_DisplayExcel4Menus }; // 0, No
  __property TOLEBOOL DisplayScrollBars[long lcid]={ read=get_DisplayScrollBars }; // 0, No
  __property TOLEBOOL DisplayStatusBar[long lcid]={ read=get_DisplayStatusBar }; // 0, No
  __property TOLEBOOL EditDirectlyInCell[long lcid]={ read=get_EditDirectlyInCell }; // 0, No
  __property Excel_97::XlEnableCancelKey EnableCancelKey[long lcid]={ read=get_EnableCancelKey }; // 0, No
  __property TOLEBOOL EnableTipWizard[long lcid]={ read=get_EnableTipWizard }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant FileConverters[VARIANT Index1][VARIANT Index2][long lcid]={ read=get_FileConverters }; // 0, No
  */
  __property Office_97::FileSearchPtr FileSearch={ read=get_FileSearch }; // 0, Yes
  __property Office_97::IFindPtr FileFind={ read=get_FileFind }; // 0, Yes
  __property TOLEBOOL FixedDecimal[long lcid]={ read=get_FixedDecimal }; // 0, No
  __property long FixedDecimalPlaces[long lcid]={ read=get_FixedDecimalPlaces }; // 0, No
  __property double Height[long lcid]={ read=get_Height }; // 0, No
  __property TOLEBOOL IgnoreRemoteRequests[long lcid]={ read=get_IgnoreRemoteRequests }; // 0, No
  __property TOLEBOOL Interactive[long lcid]={ read=get_Interactive }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant International[VARIANT Index][long lcid]={ read=get_International }; // 0, No
  */
  __property TOLEBOOL Iteration[long lcid]={ read=get_Iteration }; // 0, No
  __property TOLEBOOL LargeButtons={ read=get_LargeButtons }; // 0, No
  __property double Left[long lcid]={ read=get_Left }; // 0, No
  __property BSTR LibraryPath[long lcid]={ read=get_LibraryPath }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant MailSession[long lcid]={ read=get_MailSession }; // 0, No
  */
  __property Excel_97::XlMailSystem MailSystem[long lcid]={ read=get_MailSystem }; // 0, No
  __property TOLEBOOL MathCoprocessorAvailable[long lcid]={ read=get_MathCoprocessorAvailable }; // 0, No
  __property double MaxChange[long lcid]={ read=get_MaxChange }; // 0, No
  __property long MaxIterations[long lcid]={ read=get_MaxIterations }; // 0, No
  __property long MemoryFree[long lcid]={ read=get_MemoryFree }; // 0, No
  __property long MemoryTotal[long lcid]={ read=get_MemoryTotal }; // 0, No
  __property long MemoryUsed[long lcid]={ read=get_MemoryUsed }; // 0, No
  __property TOLEBOOL MouseAvailable[long lcid]={ read=get_MouseAvailable }; // 0, No
  __property TOLEBOOL MoveAfterReturn[long lcid]={ read=get_MoveAfterReturn }; // 0, No
  __property Excel_97::XlDirection MoveAfterReturnDirection[long lcid]={ read=get_MoveAfterReturnDirection }; // 0, No
  __property Excel_97::RecentFilesPtr RecentFiles={ read=get_RecentFiles }; // 0, Yes
  __property BSTR Name={ read=get_Name }; // 0, No
  __property BSTR NetworkTemplatesPath[long lcid]={ read=get_NetworkTemplatesPath }; // 0, No
  __property Excel_97::ODBCErrorsPtr ODBCErrors={ read=get_ODBCErrors }; // 0, Yes
  __property BSTR OnCalculate[long lcid]={ read=get_OnCalculate }; // 0, No
  __property BSTR OnData[long lcid]={ read=get_OnData }; // 0, No
  __property BSTR OnDoubleClick[long lcid]={ read=get_OnDoubleClick }; // 0, No
  __property BSTR OnEntry[long lcid]={ read=get_OnEntry }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=get_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=get_OnSheetDeactivate }; // 0, No
  __property BSTR OnWindow[long lcid]={ read=get_OnWindow }; // 0, No
  __property BSTR OperatingSystem[long lcid]={ read=get_OperatingSystem }; // 0, No
  __property BSTR OrganizationName[long lcid]={ read=get_OrganizationName }; // 0, No
  __property BSTR Path[long lcid]={ read=get_Path }; // 0, No
  __property BSTR PathSeparator[long lcid]={ read=get_PathSeparator }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant PreviousSelections[VARIANT Index][long lcid]={ read=get_PreviousSelections }; // 0, No
  */
  __property TOLEBOOL PromptForSummaryInfo[long lcid]={ read=get_PromptForSummaryInfo }; // 0, No
  __property TOLEBOOL RecordRelative[long lcid]={ read=get_RecordRelative }; // 0, No
  __property Excel_97::XlReferenceStyle ReferenceStyle[long lcid]={ read=get_ReferenceStyle }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant RegisteredFunctions[VARIANT Index1][VARIANT Index2][long lcid]={ read=get_RegisteredFunctions }; // 0, No
  */
  __property TOLEBOOL ScreenUpdating[long lcid]={ read=get_ScreenUpdating }; // 0, No
  __property long SheetsInNewWorkbook[long lcid]={ read=get_SheetsInNewWorkbook }; // 0, No
  __property BSTR StandardFont[long lcid]={ read=get_StandardFont }; // 0, No
  __property double StandardFontSize[long lcid]={ read=get_StandardFontSize }; // 0, No
  __property BSTR StartupPath[long lcid]={ read=get_StartupPath }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant StatusBar[long lcid]={ read=get_StatusBar }; // 0, No
  */
  __property BSTR TemplatesPath[long lcid]={ read=get_TemplatesPath }; // 0, No
  __property double Top[long lcid]={ read=get_Top }; // 0, No
  __property BSTR TransitionMenuKey[long lcid]={ read=get_TransitionMenuKey }; // 0, No
  __property long TransitionMenuKeyAction[long lcid]={ read=get_TransitionMenuKeyAction }; // 0, No
  __property TOLEBOOL TransitionNavigKeys[long lcid]={ read=get_TransitionNavigKeys }; // 0, No
  __property double UsableHeight[long lcid]={ read=get_UsableHeight }; // 0, No
  __property double UsableWidth[long lcid]={ read=get_UsableWidth }; // 0, No
  __property BSTR UserName[long lcid]={ read=get_UserName }; // 0, No
  __property BSTR Value={ read=get_Value }; // 0, No
  __property Vbide_97::VBEPtr VBE={ read=get_VBE }; // 0, Yes
  __property BSTR Version[long lcid]={ read=get_Version }; // 0, No
  __property TOLEBOOL Visible[long lcid]={ read=get_Visible }; // 0, No
  __property double Width[long lcid]={ read=get_Width }; // 0, No
  __property TOLEBOOL WindowsForPens[long lcid]={ read=get_WindowsForPens }; // 0, No
  __property Excel_97::XlWindowState WindowState[long lcid]={ read=get_WindowState }; // 0, No
  __property long UILanguage[long lcid]={ read=get_UILanguage }; // 0, No
  __property long DefaultSheetDirection[long lcid]={ read=get_DefaultSheetDirection }; // 0, No
  __property long CursorMovement[long lcid]={ read=get_CursorMovement }; // 0, No
  __property long ControlCharacters[long lcid]={ read=get_ControlCharacters }; // 0, No
  __property TOLEBOOL DisplayInfoWindow={ read=get_DisplayInfoWindow }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR Caption={ read=get_Caption, stored=false }; // 0, No
  __property TOLEBOOL DisplayNoteIndicator={ read=get_DisplayNoteIndicator, stored=false }; // 0, No
  __property Excel_97::XlCommentDisplayMode DisplayCommentIndicator={ read=get_DisplayCommentIndicator, stored=false }; // 0, No
  __property TOLEBOOL DisplayRecentFiles={ read=get_DisplayRecentFiles, stored=false }; // 0, No
  __property TOLEBOOL EnableAutoComplete={ read=get_EnableAutoComplete, stored=false }; // 0, No
  __property TOLEBOOL EnableSound={ read=get_EnableSound, stored=false }; // 0, No
  __property long ODBCTimeout={ read=get_ODBCTimeout, stored=false }; // 0, No
  __property TOLEBOOL PivotTableSelection={ read=get_PivotTableSelection, stored=false }; // 0, No
  __property TOLEBOOL RollZoom={ read=get_RollZoom, stored=false }; // 0, No
  __property TOLEBOOL ShowChartTipNames={ read=get_ShowChartTipNames, stored=false }; // 0, No
  __property TOLEBOOL ShowChartTipValues={ read=get_ShowChartTipValues, stored=false }; // 0, No
  __property TOLEBOOL ShowToolTips={ read=get_ShowToolTips, stored=false }; // 0, No
  __property Excel_97::XlFileFormat DefaultSaveFormat={ read=get_DefaultSaveFormat, stored=false }; // 0, No
  __property TOLEBOOL UserControl={ read=get_UserControl, stored=false }; // 0, No
  __property TOLEBOOL EnableEvents={ read=get_EnableEvents, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TExcelApplicationNewWorkbook   FOnNewWorkbook;
  TExcelApplicationSheetSelectionChange FOnSheetSelectionChange;
  TExcelApplicationSheetBeforeDoubleClick FOnSheetBeforeDoubleClick;
  TExcelApplicationSheetBeforeRightClick FOnSheetBeforeRightClick;
  TExcelApplicationSheetActivate FOnSheetActivate1;
  TExcelApplicationSheetDeactivate FOnSheetDeactivate1;
  TExcelApplicationSheetCalculate FOnSheetCalculate;
  TExcelApplicationSheetChange   FOnSheetChange;
  TExcelApplicationWorkbookOpen  FOnWorkbookOpen;
  TExcelApplicationWorkbookActivate FOnWorkbookActivate;
  TExcelApplicationWorkbookDeactivate FOnWorkbookDeactivate;
  TExcelApplicationWorkbookBeforeClose FOnWorkbookBeforeClose;
  TExcelApplicationWorkbookBeforeSave FOnWorkbookBeforeSave;
  TExcelApplicationWorkbookBeforePrint FOnWorkbookBeforePrint;
  TExcelApplicationWorkbookNewSheet FOnWorkbookNewSheet;
  TExcelApplicationWorkbookAddinInstall FOnWorkbookAddinInstall;
  TExcelApplicationWorkbookAddinUninstall FOnWorkbookAddinUninstall;
  TExcelApplicationWindowResize  FOnWindowResize;
  TExcelApplicationWindowActivate FOnWindowActivate;
  TExcelApplicationWindowDeactivate FOnWindowDeactivate;
__published:
  __property TExcelApplicationNewWorkbook OnNewWorkbook={ read=FOnNewWorkbook, write=FOnNewWorkbook };
  __property TExcelApplicationSheetSelectionChange OnSheetSelectionChange={ read=FOnSheetSelectionChange, write=FOnSheetSelectionChange };
  __property TExcelApplicationSheetBeforeDoubleClick OnSheetBeforeDoubleClick={ read=FOnSheetBeforeDoubleClick, write=FOnSheetBeforeDoubleClick };
  __property TExcelApplicationSheetBeforeRightClick OnSheetBeforeRightClick={ read=FOnSheetBeforeRightClick, write=FOnSheetBeforeRightClick };
  __property TExcelApplicationSheetActivate OnSheetActivate1={ read=FOnSheetActivate1, write=FOnSheetActivate1 };
  __property TExcelApplicationSheetDeactivate OnSheetDeactivate1={ read=FOnSheetDeactivate1, write=FOnSheetDeactivate1 };
  __property TExcelApplicationSheetCalculate OnSheetCalculate={ read=FOnSheetCalculate, write=FOnSheetCalculate };
  __property TExcelApplicationSheetChange OnSheetChange={ read=FOnSheetChange, write=FOnSheetChange };
  __property TExcelApplicationWorkbookOpen OnWorkbookOpen={ read=FOnWorkbookOpen, write=FOnWorkbookOpen };
  __property TExcelApplicationWorkbookActivate OnWorkbookActivate={ read=FOnWorkbookActivate, write=FOnWorkbookActivate };
  __property TExcelApplicationWorkbookDeactivate OnWorkbookDeactivate={ read=FOnWorkbookDeactivate, write=FOnWorkbookDeactivate };
  __property TExcelApplicationWorkbookBeforeClose OnWorkbookBeforeClose={ read=FOnWorkbookBeforeClose, write=FOnWorkbookBeforeClose };
  __property TExcelApplicationWorkbookBeforeSave OnWorkbookBeforeSave={ read=FOnWorkbookBeforeSave, write=FOnWorkbookBeforeSave };
  __property TExcelApplicationWorkbookBeforePrint OnWorkbookBeforePrint={ read=FOnWorkbookBeforePrint, write=FOnWorkbookBeforePrint };
  __property TExcelApplicationWorkbookNewSheet OnWorkbookNewSheet={ read=FOnWorkbookNewSheet, write=FOnWorkbookNewSheet };
  __property TExcelApplicationWorkbookAddinInstall OnWorkbookAddinInstall={ read=FOnWorkbookAddinInstall, write=FOnWorkbookAddinInstall };
  __property TExcelApplicationWorkbookAddinUninstall OnWorkbookAddinUninstall={ read=FOnWorkbookAddinUninstall, write=FOnWorkbookAddinUninstall };
  __property TExcelApplicationWindowResize OnWindowResize={ read=FOnWindowResize, write=FOnWindowResize };
  __property TExcelApplicationWindowActivate OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TExcelApplicationWindowDeactivate OnWindowDeactivate={ read=FOnWindowDeactivate, write=FOnWindowDeactivate };
private:
  bool     FAutoQuit;
__published:
  __property bool AutoQuit = {read=FAutoQuit, write=FAutoQuit};
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelChart
// Help String      : 
// Default Interface: _Chart
// Def. Intf. Object: _ChartPtr
// Def. Intf. DISP? : No
// Event   Interface: ChartEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelChartMouseDown)(System::TObject * Sender, 
                                                           Excel_97::XlMouseButton Button/*[in]*/, 
                                                           long Shift/*[in]*/, long X/*[in]*/, 
                                                           long Y/*[in]*/);
typedef void __fastcall (__closure * TExcelChartMouseUp)(System::TObject * Sender, 
                                                         Excel_97::XlMouseButton Button/*[in]*/, 
                                                         long Shift/*[in]*/, long X/*[in]*/, 
                                                         long Y/*[in]*/);
typedef void __fastcall (__closure * TExcelChartMouseMove)(System::TObject * Sender, 
                                                           Excel_97::XlMouseButton Button/*[in]*/, 
                                                           long Shift/*[in]*/, long X/*[in]*/, 
                                                           long Y/*[in]*/);
typedef void __fastcall (__closure * TExcelChartBeforeRightClick)(System::TObject * Sender, 
                                                                  VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelChartBeforeDoubleClick)(System::TObject * Sender, 
                                                                   Excel_97::XlChartItem ElementID/*[in]*/, 
                                                                   long Arg1/*[in]*/, 
                                                                   long Arg2/*[in]*/, 
                                                                   VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelChartSelect)(System::TObject * Sender, 
                                                        Excel_97::XlChartItem ElementID/*[in]*/, 
                                                        long Arg1/*[in]*/, long Arg2/*[in]*/);
typedef void __fastcall (__closure * TExcelChartSeriesChange)(System::TObject * Sender, 
                                                              long SeriesIndex/*[in]*/, 
                                                              long PointIndex/*[in]*/);

class PACKAGE TExcelChart : public Oleserver::TOleServer
{
  _ChartPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelChart(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _ChartPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_ChartPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Excel_97::ExcelApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:TOleEnum
  Excel_97::XlCreator __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WideString
  BSTR __fastcall get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

// StdProp:WideString
  BSTR __fastcall get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

// StdProp:WideString
  void __fastcall set__CodeName(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Index(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Index(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Name(RHS/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Next(void)
  {
    return GetDefaultInterface()->get_Next();
  }

// StdProp:WideString
  BSTR __fastcall get_OnDoubleClick(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnDoubleClick(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnDoubleClick(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnDoubleClick(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::PageSetupPtr __fastcall get_PageSetup(void)
  {
    return GetDefaultInterface()->get_PageSetup();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Previous(void)
  {
    return GetDefaultInterface()->get_Previous();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectContents(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectContents(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectDrawingObjects(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectDrawingObjects(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectionMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectionMode(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlSheetVisibility __fastcall get_Visible(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Visible(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_Visible(long lcid/*[in]*/, Excel_97::XlSheetVisibility RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::ShapesPtr __fastcall get_Shapes(void)
  {
    return GetDefaultInterface()->get_Shapes();
  }

// StdProp:
  Excel_97::ChartGroupPtr __fastcall get_Area3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Area3DGroup(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoScaling(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AutoScaling(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_AutoScaling(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoScaling(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::ChartGroupPtr __fastcall get_Bar3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Bar3DGroup(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::ChartAreaPtr __fastcall get_ChartArea(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ChartArea(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::ChartTitlePtr __fastcall get_ChartTitle(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ChartTitle(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::ChartGroupPtr __fastcall get_Column3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Column3DGroup(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::CornersPtr __fastcall get_Corners(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Corners(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::DataTablePtr __fastcall get_DataTable(void)
  {
    return GetDefaultInterface()->get_DataTable();
  }

// StdProp:Integer
  long __fastcall get_DepthPercent(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DepthPercent(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_DepthPercent(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DepthPercent(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlDisplayBlanksAs __fastcall get_DisplayBlanksAs(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayBlanksAs(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_DisplayBlanksAs(long lcid/*[in]*/, Excel_97::XlDisplayBlanksAs RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayBlanksAs(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Elevation(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Elevation(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_Elevation(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Elevation(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::FloorPtr __fastcall get_Floor(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Floor(lcid/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_GapDepth(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_GapDepth(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_GapDepth(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_GapDepth(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_HasAxis(VARIANT Index1/*[in,opt]*/, VARIANT Index2/*[in,opt]*/, 
                                  long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasAxis(Index1/*[in,opt]*/, Index2/*[in,opt]*/, lcid/*[in]*/);
  }

// StdProp:OleVariant
  void __fastcall set_HasAxis(VARIANT Index1/*[in,opt]*/, VARIANT Index2/*[in,opt]*/, 
                              long lcid/*[in]*/, VARIANT RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasAxis(Index1/*[in,opt]*/, Index2/*[in,opt]*/, lcid/*[in]*/, 
                                       RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasDataTable(void)
  {
    return GetDefaultInterface()->get_HasDataTable();
  }

// StdProp:WordBool
  void __fastcall set_HasDataTable(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasDataTable(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasLegend(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasLegend(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_HasLegend(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasLegend(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasTitle(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasTitle(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_HasTitle(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasTitle(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_HeightPercent(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HeightPercent(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_HeightPercent(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HeightPercent(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::HyperlinksPtr __fastcall get_Hyperlinks(void)
  {
    return GetDefaultInterface()->get_Hyperlinks();
  }

// StdProp:
  Excel_97::LegendPtr __fastcall get_Legend(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Legend(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::ChartGroupPtr __fastcall get_Line3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Line3DGroup(lcid/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Perspective(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Perspective(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_Perspective(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Perspective(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::ChartGroupPtr __fastcall get_Pie3DGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Pie3DGroup(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::PlotAreaPtr __fastcall get_PlotArea(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PlotArea(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PlotVisibleOnly(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PlotVisibleOnly(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_PlotVisibleOnly(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PlotVisibleOnly(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_RightAngleAxes(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RightAngleAxes(lcid/*[in]*/);
  }

// StdProp:OleVariant
  void __fastcall set_RightAngleAxes(long lcid/*[in]*/, VARIANT RHS/*[in]*/)
  {
    GetDefaultInterface()->set_RightAngleAxes(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_Rotation(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Rotation(lcid/*[in]*/);
  }

// StdProp:OleVariant
  void __fastcall set_Rotation(long lcid/*[in]*/, VARIANT RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Rotation(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SizeWithWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SizeWithWindow(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_SizeWithWindow(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SizeWithWindow(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowWindow(void)
  {
    return GetDefaultInterface()->get_ShowWindow();
  }

// StdProp:WordBool
  void __fastcall set_ShowWindow(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowWindow(RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_SubType(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SubType(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_SubType(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SubType(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::ChartGroupPtr __fastcall get_SurfaceGroup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SurfaceGroup(lcid/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Type(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Type(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_Type(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Type(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlChartType __fastcall get_ChartType(void)
  {
    return GetDefaultInterface()->get_ChartType();
  }

// StdProp:TOleEnum
  void __fastcall set_ChartType(Excel_97::XlChartType RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ChartType(RHS/*[in]*/);
  }

// StdProp:
  Excel_97::WallsPtr __fastcall get_Walls(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Walls(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_WallsAndGridlines2D(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WallsAndGridlines2D(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_WallsAndGridlines2D(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_WallsAndGridlines2D(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlBarShape __fastcall get_BarShape(void)
  {
    return GetDefaultInterface()->get_BarShape();
  }

// StdProp:TOleEnum
  void __fastcall set_BarShape(Excel_97::XlBarShape RHS/*[in]*/)
  {
    GetDefaultInterface()->set_BarShape(RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlRowCol __fastcall get_PlotBy(void)
  {
    return GetDefaultInterface()->get_PlotBy();
  }

// StdProp:TOleEnum
  void __fastcall set_PlotBy(Excel_97::XlRowCol RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PlotBy(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectFormatting(void)
  {
    return GetDefaultInterface()->get_ProtectFormatting();
  }

// StdProp:WordBool
  void __fastcall set_ProtectFormatting(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectFormatting(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectData(void)
  {
    return GetDefaultInterface()->get_ProtectData();
  }

// StdProp:WordBool
  void __fastcall set_ProtectData(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectData(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectGoalSeek(void)
  {
    return GetDefaultInterface()->get_ProtectGoalSeek();
  }

// StdProp:WordBool
  void __fastcall set_ProtectGoalSeek(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectGoalSeek(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectSelection(void)
  {
    return GetDefaultInterface()->get_ProtectSelection();
  }

// StdProp:WordBool
  void __fastcall set_ProtectSelection(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ProtectSelection(RHS/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall Activate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Activate(lcid/*[in]*/);
  }

  void __fastcall Copy(VARIANT Before/*[in,opt]*/= TNoParam(), VARIANT After/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Copy(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Delete(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Delete(lcid/*[in]*/);
  }

  void __fastcall Move(VARIANT Before/*[in,opt]*/= TNoParam(), VARIANT After/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Move(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintOut(VARIANT From/*[in,opt]*/= TNoParam(), VARIANT To/*[in,opt]*/= TNoParam(), 
                           VARIANT Copies/*[in,opt]*/= TNoParam(), 
                           VARIANT Preview/*[in,opt]*/= TNoParam(), 
                           VARIANT ActivePrinter/*[in,opt]*/= TNoParam(), 
                           VARIANT PrintToFile/*[in,opt]*/= TNoParam(), 
                           VARIANT Collate/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                    Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                    PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintPreview(VARIANT EnableChanges/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintPreview(EnableChanges/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Protect(VARIANT Password/*[in,opt]*/= TNoParam(), 
                          VARIANT DrawingObjects/*[in,opt]*/= TNoParam(), 
                          VARIANT Contents/*[in,opt]*/= TNoParam(), 
                          VARIANT Scenarios/*[in,opt]*/= TNoParam(), 
                          VARIANT UserInterfaceOnly/*[in,opt]*/= TNoParam(), 
                          long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Protect(Password/*[in,opt]*/, DrawingObjects/*[in,opt]*/, 
                                   Contents/*[in,opt]*/, Scenarios/*[in,opt]*/, 
                                   UserInterfaceOnly/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SaveAs(BSTR Filename/*[in]*/, VARIANT FileFormat/*[in,opt]*/= TNoParam(), 
                         VARIANT Password/*[in,opt]*/= TNoParam(), 
                         VARIANT WriteResPassword/*[in,opt]*/= TNoParam(), 
                         VARIANT ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                         VARIANT CreateBackup/*[in,opt]*/= TNoParam(), 
                         VARIANT AddToMru/*[in,opt]*/= TNoParam(), 
                         VARIANT TextCodepage/*[in,opt]*/= TNoParam(), 
                         VARIANT TextVisualLayout/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveAs(Filename/*[in]*/, FileFormat/*[in,opt]*/, Password/*[in,opt]*/, 
                                  WriteResPassword/*[in,opt]*/, ReadOnlyRecommended/*[in,opt]*/, 
                                  CreateBackup/*[in,opt]*/, AddToMru/*[in,opt]*/, 
                                  TextCodepage/*[in,opt]*/, TextVisualLayout/*[in,opt]*/, 
                                  lcid/*[in]*/);
  }

  void __fastcall Select(VARIANT Replace/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Select(Replace/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Unprotect(VARIANT Password/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ApplyDataLabels(Excel_97::XlDataLabelsType Type/*[in,def,opt]*/, 
                                  VARIANT LegendKey/*[in,opt]*/= TNoParam(), 
                                  VARIANT AutoText/*[in,opt]*/= TNoParam(), 
                                  VARIANT HasLeaderLines/*[in,opt]*/= TNoParam(), 
                                  long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ApplyDataLabels(Type/*[in,def,opt]*/, LegendKey/*[in,opt]*/, 
                                           AutoText/*[in,opt]*/, HasLeaderLines/*[in,opt]*/, 
                                           lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Arcs(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Arcs(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall AreaGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->AreaGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall AutoFormat(long Gallery/*[in]*/, VARIANT Format/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AutoFormat(Gallery/*[in]*/, Format/*[in,opt]*/);
  }

  LPDISPATCH __fastcall Axes(VARIANT Type/*[in,opt]*/, 
                             Excel_97::XlAxisGroup AxisGroup/*[in,def,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Axes(Type/*[in,opt]*/, AxisGroup/*[in,def,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetBackgroundPicture(BSTR Filename/*[in]*/)
  {
    GetDefaultInterface()->SetBackgroundPicture(Filename/*[in]*/);
  }

  LPDISPATCH __fastcall BarGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->BarGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Buttons(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Buttons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ChartGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ChartGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ChartObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ChartObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ChartWizard(VARIANT Source/*[in,opt]*/= TNoParam(), 
                              VARIANT Gallery/*[in,opt]*/= TNoParam(), 
                              VARIANT Format/*[in,opt]*/= TNoParam(), 
                              VARIANT PlotBy/*[in,opt]*/= TNoParam(), 
                              VARIANT CategoryLabels/*[in,opt]*/= TNoParam(), 
                              VARIANT SeriesLabels/*[in,opt]*/= TNoParam(), 
                              VARIANT HasLegend/*[in,opt]*/= TNoParam(), 
                              VARIANT Title/*[in,opt]*/= TNoParam(), 
                              VARIANT CategoryTitle/*[in,opt]*/= TNoParam(), 
                              VARIANT ValueTitle/*[in,opt]*/= TNoParam(), 
                              VARIANT ExtraTitle/*[in,opt]*/= TNoParam(), 
                              long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ChartWizard(Source/*[in,opt]*/, Gallery/*[in,opt]*/, Format/*[in,opt]*/, 
                                       PlotBy/*[in,opt]*/, CategoryLabels/*[in,opt]*/, 
                                       SeriesLabels/*[in,opt]*/, HasLegend/*[in,opt]*/, 
                                       Title/*[in,opt]*/, CategoryTitle/*[in,opt]*/, 
                                       ValueTitle/*[in,opt]*/, ExtraTitle/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall CheckBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CheckBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CheckSpelling(VARIANT CustomDictionary/*[in,opt]*/= TNoParam(), 
                                VARIANT IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                VARIANT AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                VARIANT IgnoreInitialAlefHamza/*[in,opt]*/= TNoParam(), 
                                VARIANT IgnoreFinalYaa/*[in,opt]*/= TNoParam(), 
                                VARIANT SpellScript/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                         AlwaysSuggest/*[in,opt]*/, 
                                         IgnoreInitialAlefHamza/*[in,opt]*/, 
                                         IgnoreFinalYaa/*[in,opt]*/, SpellScript/*[in,opt]*/, 
                                         lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ColumnGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ColumnGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CopyPicture(Excel_97::XlPictureAppearance Appearance/*[in,def,opt]*/, 
                              Excel_97::XlCopyPictureFormat Format/*[in,def,opt]*/, 
                              Excel_97::XlPictureAppearance Size/*[in,def,opt]*/, 
                              long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->CopyPicture(Appearance/*[in,def,opt]*/, Format/*[in,def,opt]*/, 
                                       Size/*[in,def,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CreatePublisher(VARIANT Edition/*[in,opt]*/, 
                                  Excel_97::XlPictureAppearance Appearance/*[in,def,opt]*/, 
                                  Excel_97::XlPictureAppearance Size/*[in,def,opt]*/, 
                                  VARIANT ContainsPICT/*[in,opt]*/, VARIANT ContainsBIFF/*[in,opt]*/, 
                                  VARIANT ContainsRTF/*[in,opt]*/, VARIANT ContainsVALU/*[in,opt]*/, 
                                  long lcid/*[in]*/)
  {
    GetDefaultInterface()->CreatePublisher(Edition/*[in,opt]*/, Appearance/*[in,def,opt]*/, 
                                           Size/*[in,def,opt]*/, ContainsPICT/*[in,opt]*/, 
                                           ContainsBIFF/*[in,opt]*/, ContainsRTF/*[in,opt]*/, 
                                           ContainsVALU/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Deselect(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Deselect(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DoughnutGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DoughnutGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Drawings(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Drawings(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DrawingObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DrawingObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DropDowns(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DropDowns(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(VARIANT Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(VARIANT Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall GroupBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall GroupObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Labels(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Labels(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall LineGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->LineGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Lines(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Lines(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ListBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ListBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_97::ExcelChartPtr __fastcall Location(Excel_97::XlChartLocation Where/*[in]*/, 
                                              VARIANT Name/*[in,opt]*/)
  {
    return GetDefaultInterface()->Location(Where/*[in]*/, Name/*[in,opt]*/);
  }

  LPDISPATCH __fastcall OLEObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OLEObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall OptionButtons(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OptionButtons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Ovals(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Ovals(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Paste(VARIANT Type/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Paste(Type/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Pictures(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Pictures(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall PieGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->PieGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall RadarGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->RadarGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Rectangles(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Rectangles(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ScrollBars(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ScrollBars(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall SeriesCollection(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->SeriesCollection(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Spinners(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Spinners(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall TextBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->TextBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ApplyCustomType(Excel_97::XlChartType ChartType/*[in]*/, 
                                  VARIANT TypeName/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ApplyCustomType(ChartType/*[in]*/, TypeName/*[in,opt]*/);
  }

  LPDISPATCH __fastcall XYGroups(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->XYGroups(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CopyChartBuild(void)
  {
    GetDefaultInterface()->CopyChartBuild();
  }

  void __fastcall GetChartElement(long X/*[in]*/, long Y/*[in]*/, long* ElementID/*[in]*/, 
                                  long* Arg1/*[in]*/, long* Arg2/*[in]*/)
  {
    GetDefaultInterface()->GetChartElement(X/*[in]*/, Y/*[in]*/, ElementID/*[in]*/, Arg1/*[in]*/, 
                                           Arg2/*[in]*/);
  }

  void __fastcall SetSourceData(Excel_97::Range* Source/*[in]*/, 
                                VARIANT PlotBy/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->SetSourceData(Source/*[in]*/, PlotBy/*[in,opt]*/);
  }

  TOLEBOOL __fastcall Export(BSTR Filename/*[in]*/, VARIANT FilterName/*[in,opt]*/, 
                             VARIANT Interactive/*[in,opt]*/)
  {
    return GetDefaultInterface()->Export(Filename/*[in]*/, FilterName/*[in,opt]*/, 
                                         Interactive/*[in,opt]*/);
  }

  void __fastcall Refresh(void)
  {
    GetDefaultInterface()->Refresh();
  }

  /*CoClassWriteProperties*/
  __property Excel_97::ExcelApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property Excel_97::XlCreator Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property BSTR CodeName={ read=get_CodeName }; // 0, No
  __property long Index[long lcid]={ read=get_Index }; // 0, No
  __property LPDISPATCH Next={ read=get_Next }; // 0, No
  __property BSTR OnDoubleClick[long lcid]={ read=get_OnDoubleClick }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=get_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=get_OnSheetDeactivate }; // 0, No
  __property Excel_97::PageSetupPtr PageSetup={ read=get_PageSetup }; // 0, Yes
  __property LPDISPATCH Previous={ read=get_Previous }; // 0, No
  __property TOLEBOOL ProtectContents[long lcid]={ read=get_ProtectContents }; // 0, No
  __property TOLEBOOL ProtectDrawingObjects[long lcid]={ read=get_ProtectDrawingObjects }; // 0, No
  __property TOLEBOOL ProtectionMode[long lcid]={ read=get_ProtectionMode }; // 0, No
  __property Excel_97::XlSheetVisibility Visible[long lcid]={ read=get_Visible }; // 0, No
  __property Excel_97::ShapesPtr Shapes={ read=get_Shapes }; // 0, Yes
  __property Excel_97::ChartGroupPtr Area3DGroup[long lcid]={ read=get_Area3DGroup }; // 0, Yes
  __property TOLEBOOL AutoScaling[long lcid]={ read=get_AutoScaling }; // 0, No
  __property Excel_97::ChartGroupPtr Bar3DGroup[long lcid]={ read=get_Bar3DGroup }; // 0, Yes
  __property Excel_97::ChartAreaPtr ChartArea[long lcid]={ read=get_ChartArea }; // 0, Yes
  __property Excel_97::ChartTitlePtr ChartTitle[long lcid]={ read=get_ChartTitle }; // 0, Yes
  __property Excel_97::ChartGroupPtr Column3DGroup[long lcid]={ read=get_Column3DGroup }; // 0, Yes
  __property Excel_97::CornersPtr Corners[long lcid]={ read=get_Corners }; // 0, Yes
  __property Excel_97::DataTablePtr DataTable={ read=get_DataTable }; // 0, Yes
  __property long DepthPercent[long lcid]={ read=get_DepthPercent }; // 0, No
  __property Excel_97::XlDisplayBlanksAs DisplayBlanksAs[long lcid]={ read=get_DisplayBlanksAs }; // 0, No
  __property long Elevation[long lcid]={ read=get_Elevation }; // 0, No
  __property Excel_97::FloorPtr Floor[long lcid]={ read=get_Floor }; // 0, Yes
  __property long GapDepth[long lcid]={ read=get_GapDepth }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant HasAxis[VARIANT Index1][VARIANT Index2][long lcid]={ read=get_HasAxis }; // 0, No
  */
  __property TOLEBOOL HasLegend[long lcid]={ read=get_HasLegend }; // 0, No
  __property TOLEBOOL HasTitle[long lcid]={ read=get_HasTitle }; // 0, No
  __property long HeightPercent[long lcid]={ read=get_HeightPercent }; // 0, No
  __property Excel_97::HyperlinksPtr Hyperlinks={ read=get_Hyperlinks }; // 0, Yes
  __property Excel_97::LegendPtr Legend[long lcid]={ read=get_Legend }; // 0, Yes
  __property Excel_97::ChartGroupPtr Line3DGroup[long lcid]={ read=get_Line3DGroup }; // 0, Yes
  __property long Perspective[long lcid]={ read=get_Perspective }; // 0, No
  __property Excel_97::ChartGroupPtr Pie3DGroup[long lcid]={ read=get_Pie3DGroup }; // 0, Yes
  __property Excel_97::PlotAreaPtr PlotArea[long lcid]={ read=get_PlotArea }; // 0, Yes
  __property TOLEBOOL PlotVisibleOnly[long lcid]={ read=get_PlotVisibleOnly }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant RightAngleAxes[long lcid]={ read=get_RightAngleAxes }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Rotation[long lcid]={ read=get_Rotation }; // 0, No
  */
  __property TOLEBOOL SizeWithWindow[long lcid]={ read=get_SizeWithWindow }; // 0, No
  __property long SubType[long lcid]={ read=get_SubType }; // 0, No
  __property Excel_97::ChartGroupPtr SurfaceGroup[long lcid]={ read=get_SurfaceGroup }; // 0, Yes
  __property long Type[long lcid]={ read=get_Type }; // 0, No
  __property Excel_97::WallsPtr Walls[long lcid]={ read=get_Walls }; // 0, Yes
  __property TOLEBOOL WallsAndGridlines2D[long lcid]={ read=get_WallsAndGridlines2D }; // 0, No
  /*CoClassWriteProperties*/
  __property BSTR _CodeName={ read=get__CodeName, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property TOLEBOOL HasDataTable={ read=get_HasDataTable, stored=false }; // 0, No
  __property TOLEBOOL ShowWindow={ read=get_ShowWindow, stored=false }; // 0, No
  __property Excel_97::XlChartType ChartType={ read=get_ChartType, stored=false }; // 0, No
  __property Excel_97::XlBarShape BarShape={ read=get_BarShape, stored=false }; // 0, No
  __property Excel_97::XlRowCol PlotBy={ read=get_PlotBy, stored=false }; // 0, No
  __property TOLEBOOL ProtectFormatting={ read=get_ProtectFormatting, stored=false }; // 0, No
  __property TOLEBOOL ProtectData={ read=get_ProtectData, stored=false }; // 0, No
  __property TOLEBOOL ProtectGoalSeek={ read=get_ProtectGoalSeek, stored=false }; // 0, No
  __property TOLEBOOL ProtectSelection={ read=get_ProtectSelection, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnActivate;
  TNotifyEvent                   FOnDeactivate;
  TNotifyEvent                   FOnResize;
  TExcelChartMouseDown           FOnMouseDown;
  TExcelChartMouseUp             FOnMouseUp;
  TExcelChartMouseMove           FOnMouseMove;
  TExcelChartBeforeRightClick    FOnBeforeRightClick;
  TNotifyEvent                   FOnDragPlot;
  TNotifyEvent                   FOnDragOver;
  TExcelChartBeforeDoubleClick   FOnBeforeDoubleClick;
  TExcelChartSelect              FOnSelect;
  TExcelChartSeriesChange        FOnSeriesChange;
  TNotifyEvent                   FOnCalculate;
__published:
  __property TNotifyEvent OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TNotifyEvent OnDeactivate={ read=FOnDeactivate, write=FOnDeactivate };
  __property TNotifyEvent OnResize={ read=FOnResize, write=FOnResize };
  __property TExcelChartMouseDown OnMouseDown={ read=FOnMouseDown, write=FOnMouseDown };
  __property TExcelChartMouseUp OnMouseUp={ read=FOnMouseUp, write=FOnMouseUp };
  __property TExcelChartMouseMove OnMouseMove={ read=FOnMouseMove, write=FOnMouseMove };
  __property TExcelChartBeforeRightClick OnBeforeRightClick={ read=FOnBeforeRightClick, write=FOnBeforeRightClick };
  __property TNotifyEvent OnDragPlot={ read=FOnDragPlot, write=FOnDragPlot };
  __property TNotifyEvent OnDragOver={ read=FOnDragOver, write=FOnDragOver };
  __property TExcelChartBeforeDoubleClick OnBeforeDoubleClick={ read=FOnBeforeDoubleClick, write=FOnBeforeDoubleClick };
  __property TExcelChartSelect OnSelect={ read=FOnSelect, write=FOnSelect };
  __property TExcelChartSeriesChange OnSeriesChange={ read=FOnSeriesChange, write=FOnSeriesChange };
  __property TNotifyEvent OnCalculate={ read=FOnCalculate, write=FOnCalculate };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelWorksheet
// Help String      : 
// Default Interface: _Worksheet
// Def. Intf. Object: _WorksheetPtr
// Def. Intf. DISP? : No
// Event   Interface: DocEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelWorksheetSelectionChange)(System::TObject * Sender, 
                                                                     Excel_97::Range* Target/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetBeforeDoubleClick)(System::TObject * Sender, 
                                                                       Excel_97::Range* Target/*[in]*/, 
                                                                       VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetBeforeRightClick)(System::TObject * Sender, 
                                                                      Excel_97::Range* Target/*[in]*/, 
                                                                      VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorksheetChange)(System::TObject * Sender, 
                                                            Excel_97::Range* Target/*[in]*/);

class PACKAGE TExcelWorksheet : public Oleserver::TOleServer
{
  _WorksheetPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelWorksheet(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _WorksheetPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_WorksheetPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Excel_97::ExcelApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:TOleEnum
  Excel_97::XlCreator __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WideString
  BSTR __fastcall get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

// StdProp:WideString
  BSTR __fastcall get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

// StdProp:WideString
  void __fastcall set__CodeName(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Index(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Index(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Name(RHS/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Next(void)
  {
    return GetDefaultInterface()->get_Next();
  }

// StdProp:WideString
  BSTR __fastcall get_OnDoubleClick(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnDoubleClick(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnDoubleClick(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnDoubleClick(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::PageSetupPtr __fastcall get_PageSetup(void)
  {
    return GetDefaultInterface()->get_PageSetup();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Previous(void)
  {
    return GetDefaultInterface()->get_Previous();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectContents(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectContents(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectDrawingObjects(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectDrawingObjects(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectionMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectionMode(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectScenarios(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ProtectScenarios(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlSheetVisibility __fastcall get_Visible(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Visible(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_Visible(long lcid/*[in]*/, Excel_97::XlSheetVisibility RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::ShapesPtr __fastcall get_Shapes(void)
  {
    return GetDefaultInterface()->get_Shapes();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_TransitionExpEval(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionExpEval(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_TransitionExpEval(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionExpEval(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoFilterMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_AutoFilterMode(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_AutoFilterMode(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoFilterMode(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableCalculation(void)
  {
    return GetDefaultInterface()->get_EnableCalculation();
  }

// StdProp:WordBool
  void __fastcall set_EnableCalculation(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableCalculation(RHS/*[in]*/);
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Cells(void)
  {
    return GetDefaultInterface()->get_Cells();
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_CircularReference(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CircularReference(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Columns(void)
  {
    return GetDefaultInterface()->get_Columns();
  }

// StdProp:TOleEnum
  Excel_97::XlConsolidationFunction __fastcall get_ConsolidationFunction(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConsolidationFunction(lcid/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_ConsolidationOptions(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConsolidationOptions(lcid/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_ConsolidationSources(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ConsolidationSources(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayAutomaticPageBreaks(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayAutomaticPageBreaks(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_DisplayAutomaticPageBreaks(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayAutomaticPageBreaks(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableAutoFilter(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableAutoFilter(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_EnableAutoFilter(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableAutoFilter(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlEnableSelection __fastcall get_EnableSelection(void)
  {
    return GetDefaultInterface()->get_EnableSelection();
  }

// StdProp:TOleEnum
  void __fastcall set_EnableSelection(Excel_97::XlEnableSelection RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableSelection(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnableOutlining(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnableOutlining(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_EnableOutlining(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnableOutlining(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_EnablePivotTable(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_EnablePivotTable(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_EnablePivotTable(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_EnablePivotTable(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_FilterMode(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FilterMode(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::NamesPtr __fastcall get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

// StdProp:WideString
  BSTR __fastcall get_OnCalculate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnCalculate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnCalculate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnCalculate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnData(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnData(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnData(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnData(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnEntry(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnEntry(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnEntry(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnEntry(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::OutlinePtr __fastcall get_Outline(void)
  {
    return GetDefaultInterface()->get_Outline();
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Range(VARIANT Cell1/*[in]*/, VARIANT Cell2/*[in,opt]*/)
  {
    return GetDefaultInterface()->get_Range(Cell1/*[in]*/, Cell2/*[in,opt]*/);
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_Rows(void)
  {
    return GetDefaultInterface()->get_Rows();
  }

// StdProp:WideString
  BSTR __fastcall get_ScrollArea(void)
  {
    return GetDefaultInterface()->get_ScrollArea();
  }

// StdProp:WideString
  void __fastcall set_ScrollArea(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ScrollArea(RHS/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_StandardHeight(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardHeight(lcid/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_StandardWidth(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_StandardWidth(lcid/*[in]*/);
  }

// StdProp:Double
  void __fastcall set_StandardWidth(long lcid/*[in]*/, double RHS/*[in]*/)
  {
    GetDefaultInterface()->set_StandardWidth(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_TransitionFormEntry(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_TransitionFormEntry(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_TransitionFormEntry(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TransitionFormEntry(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlSheetType __fastcall get_Type(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Type(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::RangePtr __fastcall get_UsedRange(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UsedRange(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::HPageBreaksPtr __fastcall get_HPageBreaks(void)
  {
    return GetDefaultInterface()->get_HPageBreaks();
  }

// StdProp:
  Excel_97::VPageBreaksPtr __fastcall get_VPageBreaks(void)
  {
    return GetDefaultInterface()->get_VPageBreaks();
  }

// StdProp:
  Excel_97::QueryTablesPtr __fastcall get_QueryTables(void)
  {
    return GetDefaultInterface()->get_QueryTables();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_DisplayPageBreaks(void)
  {
    return GetDefaultInterface()->get_DisplayPageBreaks();
  }

// StdProp:WordBool
  void __fastcall set_DisplayPageBreaks(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayPageBreaks(RHS/*[in]*/);
  }

// StdProp:
  Excel_97::CommentsPtr __fastcall get_Comments(void)
  {
    return GetDefaultInterface()->get_Comments();
  }

// StdProp:
  Excel_97::HyperlinksPtr __fastcall get_Hyperlinks(void)
  {
    return GetDefaultInterface()->get_Hyperlinks();
  }

// StdProp:Integer
  long __fastcall get_DisplayRightToLeft(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayRightToLeft(lcid/*[in]*/);
  }

// StdProp:Integer
  void __fastcall set_DisplayRightToLeft(long lcid/*[in]*/, long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayRightToLeft(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::AutoFilterPtr __fastcall get_AutoFilter(void)
  {
    return GetDefaultInterface()->get_AutoFilter();
  }

  /*CoClassWriteMethods*/
  void __fastcall Activate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Activate(lcid/*[in]*/);
  }

  void __fastcall Copy(VARIANT Before/*[in,opt]*/= TNoParam(), VARIANT After/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Copy(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Delete(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Delete(lcid/*[in]*/);
  }

  void __fastcall Move(VARIANT Before/*[in,opt]*/= TNoParam(), VARIANT After/*[in,opt]*/= TNoParam(), 
                       long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Move(Before/*[in,opt]*/, After/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintOut(VARIANT From/*[in,opt]*/= TNoParam(), VARIANT To/*[in,opt]*/= TNoParam(), 
                           VARIANT Copies/*[in,opt]*/= TNoParam(), 
                           VARIANT Preview/*[in,opt]*/= TNoParam(), 
                           VARIANT ActivePrinter/*[in,opt]*/= TNoParam(), 
                           VARIANT PrintToFile/*[in,opt]*/= TNoParam(), 
                           VARIANT Collate/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                    Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                    PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintPreview(VARIANT EnableChanges/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintPreview(EnableChanges/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Protect(VARIANT Password/*[in,opt]*/= TNoParam(), 
                          VARIANT DrawingObjects/*[in,opt]*/= TNoParam(), 
                          VARIANT Contents/*[in,opt]*/= TNoParam(), 
                          VARIANT Scenarios/*[in,opt]*/= TNoParam(), 
                          VARIANT UserInterfaceOnly/*[in,opt]*/= TNoParam(), 
                          long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Protect(Password/*[in,opt]*/, DrawingObjects/*[in,opt]*/, 
                                   Contents/*[in,opt]*/, Scenarios/*[in,opt]*/, 
                                   UserInterfaceOnly/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SaveAs(BSTR Filename/*[in]*/, VARIANT FileFormat/*[in,opt]*/= TNoParam(), 
                         VARIANT Password/*[in,opt]*/= TNoParam(), 
                         VARIANT WriteResPassword/*[in,opt]*/= TNoParam(), 
                         VARIANT ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                         VARIANT CreateBackup/*[in,opt]*/= TNoParam(), 
                         VARIANT AddToMru/*[in,opt]*/= TNoParam(), 
                         VARIANT TextCodepage/*[in,opt]*/= TNoParam(), 
                         VARIANT TextVisualLayout/*[in,opt]*/= TNoParam(), 
                         long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveAs(Filename/*[in]*/, FileFormat/*[in,opt]*/, Password/*[in,opt]*/, 
                                  WriteResPassword/*[in,opt]*/, ReadOnlyRecommended/*[in,opt]*/, 
                                  CreateBackup/*[in,opt]*/, AddToMru/*[in,opt]*/, 
                                  TextCodepage/*[in,opt]*/, TextVisualLayout/*[in,opt]*/, 
                                  lcid/*[in]*/);
  }

  void __fastcall Select(VARIANT Replace/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Select(Replace/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Unprotect(VARIANT Password/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Arcs(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Arcs(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetBackgroundPicture(BSTR Filename/*[in]*/)
  {
    GetDefaultInterface()->SetBackgroundPicture(Filename/*[in]*/);
  }

  LPDISPATCH __fastcall Buttons(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Buttons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Calculate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Calculate(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ChartObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ChartObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall CheckBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->CheckBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall CheckSpelling(VARIANT CustomDictionary/*[in,opt]*/= TNoParam(), 
                                VARIANT IgnoreUppercase/*[in,opt]*/= TNoParam(), 
                                VARIANT AlwaysSuggest/*[in,opt]*/= TNoParam(), 
                                VARIANT IgnoreInitialAlefHamza/*[in,opt]*/= TNoParam(), 
                                VARIANT IgnoreFinalYaa/*[in,opt]*/= TNoParam(), 
                                VARIANT SpellScript/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->CheckSpelling(CustomDictionary/*[in,opt]*/, IgnoreUppercase/*[in,opt]*/, 
                                         AlwaysSuggest/*[in,opt]*/, 
                                         IgnoreInitialAlefHamza/*[in,opt]*/, 
                                         IgnoreFinalYaa/*[in,opt]*/, SpellScript/*[in,opt]*/, 
                                         lcid/*[in]*/);
  }

  void __fastcall ClearArrows(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ClearArrows(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Drawings(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Drawings(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DrawingObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DrawingObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall DropDowns(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->DropDowns(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall Evaluate(VARIANT Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  TVariant __fastcall _Evaluate(VARIANT Name/*[in]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->_Evaluate(Name/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall ResetAllPageBreaks(void)
  {
    GetDefaultInterface()->ResetAllPageBreaks();
  }

  LPDISPATCH __fastcall GroupBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall GroupObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->GroupObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Labels(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Labels(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Lines(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Lines(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ListBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ListBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall OLEObjects(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OLEObjects(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall OptionButtons(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->OptionButtons(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Ovals(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Ovals(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Paste(VARIANT Destination/*[in,opt]*/= TNoParam(), 
                        VARIANT Link/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Paste(Destination/*[in,opt]*/, Link/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PasteSpecial(VARIANT Format/*[in,opt]*/= TNoParam(), 
                               VARIANT Link/*[in,opt]*/= TNoParam(), 
                               VARIANT DisplayAsIcon/*[in,opt]*/= TNoParam(), 
                               VARIANT IconFileName/*[in,opt]*/= TNoParam(), 
                               VARIANT IconIndex/*[in,opt]*/= TNoParam(), 
                               VARIANT IconLabel/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PasteSpecial(Format/*[in,opt]*/, Link/*[in,opt]*/, 
                                        DisplayAsIcon/*[in,opt]*/, IconFileName/*[in,opt]*/, 
                                        IconIndex/*[in,opt]*/, IconLabel/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Pictures(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Pictures(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall PivotTables(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->PivotTables(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  Excel_97::PivotTablePtr __fastcall PivotTableWizard(VARIANT SourceType/*[in,opt]*/, 
                                                      VARIANT SourceData/*[in,opt]*/, 
                                                      VARIANT TableDestination/*[in,opt]*/, 
                                                      VARIANT TableName/*[in,opt]*/, 
                                                      VARIANT RowGrand/*[in,opt]*/, 
                                                      VARIANT ColumnGrand/*[in,opt]*/, 
                                                      VARIANT SaveData/*[in,opt]*/, 
                                                      VARIANT HasAutoFormat/*[in,opt]*/, 
                                                      VARIANT AutoPage/*[in,opt]*/, 
                                                      VARIANT Reserved/*[in,opt]*/, 
                                                      VARIANT BackgroundQuery/*[in,opt]*/, 
                                                      VARIANT OptimizeCache/*[in,opt]*/, 
                                                      VARIANT PageFieldOrder/*[in,opt]*/, 
                                                      VARIANT PageFieldWrapCount/*[in,opt]*/, 
                                                      VARIANT ReadData/*[in,opt]*/, 
                                                      VARIANT Connection/*[in,opt]*/, 
                                                      long lcid/*[in]*/)
  {
    return GetDefaultInterface()->PivotTableWizard(SourceType/*[in,opt]*/, SourceData/*[in,opt]*/, 
                                                   TableDestination/*[in,opt]*/, 
                                                   TableName/*[in,opt]*/, RowGrand/*[in,opt]*/, 
                                                   ColumnGrand/*[in,opt]*/, SaveData/*[in,opt]*/, 
                                                   HasAutoFormat/*[in,opt]*/, AutoPage/*[in,opt]*/, 
                                                   Reserved/*[in,opt]*/, BackgroundQuery/*[in,opt]*/, 
                                                   OptimizeCache/*[in,opt]*/, 
                                                   PageFieldOrder/*[in,opt]*/, 
                                                   PageFieldWrapCount/*[in,opt]*/, 
                                                   ReadData/*[in,opt]*/, Connection/*[in,opt]*/, 
                                                   lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Rectangles(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Rectangles(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Scenarios(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Scenarios(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall ScrollBars(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ScrollBars(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ShowAllData(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ShowAllData(lcid/*[in]*/);
  }

  void __fastcall ShowDataForm(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ShowDataForm(lcid/*[in]*/);
  }

  LPDISPATCH __fastcall Spinners(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->Spinners(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  LPDISPATCH __fastcall TextBoxes(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->TextBoxes(Index/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ClearCircles(void)
  {
    GetDefaultInterface()->ClearCircles();
  }

  void __fastcall CircleInvalid(void)
  {
    GetDefaultInterface()->CircleInvalid();
  }

  /*CoClassWriteProperties*/
  __property Excel_97::ExcelApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property Excel_97::XlCreator Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property BSTR CodeName={ read=get_CodeName }; // 0, No
  __property long Index[long lcid]={ read=get_Index }; // 0, No
  __property LPDISPATCH Next={ read=get_Next }; // 0, No
  __property BSTR OnDoubleClick[long lcid]={ read=get_OnDoubleClick }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=get_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=get_OnSheetDeactivate }; // 0, No
  __property Excel_97::PageSetupPtr PageSetup={ read=get_PageSetup }; // 0, Yes
  __property LPDISPATCH Previous={ read=get_Previous }; // 0, No
  __property TOLEBOOL ProtectContents[long lcid]={ read=get_ProtectContents }; // 0, No
  __property TOLEBOOL ProtectDrawingObjects[long lcid]={ read=get_ProtectDrawingObjects }; // 0, No
  __property TOLEBOOL ProtectionMode[long lcid]={ read=get_ProtectionMode }; // 0, No
  __property TOLEBOOL ProtectScenarios[long lcid]={ read=get_ProtectScenarios }; // 0, No
  __property Excel_97::XlSheetVisibility Visible[long lcid]={ read=get_Visible }; // 0, No
  __property Excel_97::ShapesPtr Shapes={ read=get_Shapes }; // 0, Yes
  __property TOLEBOOL TransitionExpEval[long lcid]={ read=get_TransitionExpEval }; // 0, No
  __property TOLEBOOL AutoFilterMode[long lcid]={ read=get_AutoFilterMode }; // 0, No
  __property Excel_97::RangePtr Cells={ read=get_Cells }; // 0, Yes
  __property Excel_97::RangePtr CircularReference[long lcid]={ read=get_CircularReference }; // 0, Yes
  __property Excel_97::RangePtr Columns={ read=get_Columns }; // 0, Yes
  __property Excel_97::XlConsolidationFunction ConsolidationFunction[long lcid]={ read=get_ConsolidationFunction }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant ConsolidationOptions[long lcid]={ read=get_ConsolidationOptions }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant ConsolidationSources[long lcid]={ read=get_ConsolidationSources }; // 0, No
  */
  __property TOLEBOOL DisplayAutomaticPageBreaks[long lcid]={ read=get_DisplayAutomaticPageBreaks }; // 0, No
  __property TOLEBOOL EnableAutoFilter[long lcid]={ read=get_EnableAutoFilter }; // 0, No
  __property TOLEBOOL EnableOutlining[long lcid]={ read=get_EnableOutlining }; // 0, No
  __property TOLEBOOL EnablePivotTable[long lcid]={ read=get_EnablePivotTable }; // 0, No
  __property TOLEBOOL FilterMode[long lcid]={ read=get_FilterMode }; // 0, No
  __property Excel_97::NamesPtr Names={ read=get_Names }; // 0, Yes
  __property BSTR OnCalculate[long lcid]={ read=get_OnCalculate }; // 0, No
  __property BSTR OnData[long lcid]={ read=get_OnData }; // 0, No
  __property BSTR OnEntry[long lcid]={ read=get_OnEntry }; // 0, No
  __property Excel_97::OutlinePtr Outline={ read=get_Outline }; // 0, Yes
  __property Excel_97::RangePtr Range[VARIANT Cell1][VARIANT Cell2]={ read=get_Range }; // 0, Yes
  __property Excel_97::RangePtr Rows={ read=get_Rows }; // 0, Yes
  __property double StandardHeight[long lcid]={ read=get_StandardHeight }; // 0, No
  __property double StandardWidth[long lcid]={ read=get_StandardWidth }; // 0, No
  __property TOLEBOOL TransitionFormEntry[long lcid]={ read=get_TransitionFormEntry }; // 0, No
  __property Excel_97::XlSheetType Type[long lcid]={ read=get_Type }; // 0, No
  __property Excel_97::RangePtr UsedRange[long lcid]={ read=get_UsedRange }; // 0, Yes
  __property Excel_97::HPageBreaksPtr HPageBreaks={ read=get_HPageBreaks }; // 0, Yes
  __property Excel_97::VPageBreaksPtr VPageBreaks={ read=get_VPageBreaks }; // 0, Yes
  __property Excel_97::QueryTablesPtr QueryTables={ read=get_QueryTables }; // 0, Yes
  __property Excel_97::CommentsPtr Comments={ read=get_Comments }; // 0, Yes
  __property Excel_97::HyperlinksPtr Hyperlinks={ read=get_Hyperlinks }; // 0, Yes
  __property long DisplayRightToLeft[long lcid]={ read=get_DisplayRightToLeft }; // 0, No
  __property Excel_97::AutoFilterPtr AutoFilter={ read=get_AutoFilter }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR _CodeName={ read=get__CodeName, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property TOLEBOOL EnableCalculation={ read=get_EnableCalculation, stored=false }; // 0, No
  __property Excel_97::XlEnableSelection EnableSelection={ read=get_EnableSelection, stored=false }; // 0, No
  __property BSTR ScrollArea={ read=get_ScrollArea, stored=false }; // 0, No
  __property TOLEBOOL DisplayPageBreaks={ read=get_DisplayPageBreaks, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TExcelWorksheetSelectionChange FOnSelectionChange;
  TExcelWorksheetBeforeDoubleClick FOnBeforeDoubleClick;
  TExcelWorksheetBeforeRightClick FOnBeforeRightClick;
  TNotifyEvent                   FOnActivate;
  TNotifyEvent                   FOnDeactivate;
  TNotifyEvent                   FOnCalculate1;
  TExcelWorksheetChange          FOnChange;
__published:
  __property TExcelWorksheetSelectionChange OnSelectionChange={ read=FOnSelectionChange, write=FOnSelectionChange };
  __property TExcelWorksheetBeforeDoubleClick OnBeforeDoubleClick={ read=FOnBeforeDoubleClick, write=FOnBeforeDoubleClick };
  __property TExcelWorksheetBeforeRightClick OnBeforeRightClick={ read=FOnBeforeRightClick, write=FOnBeforeRightClick };
  __property TNotifyEvent OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TNotifyEvent OnDeactivate={ read=FOnDeactivate, write=FOnDeactivate };
  __property TNotifyEvent OnCalculate1={ read=FOnCalculate1, write=FOnCalculate1 };
  __property TExcelWorksheetChange OnChange={ read=FOnChange, write=FOnChange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelWorkbook
// Help String      : 
// Default Interface: _Workbook
// Def. Intf. Object: _WorkbookPtr
// Def. Intf. DISP? : No
// Event   Interface: WorkbookEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
typedef void __fastcall (__closure * TExcelWorkbookBeforeClose)(System::TObject * Sender, 
                                                                VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookBeforeSave)(System::TObject * Sender, 
                                                               VARIANT_BOOL SaveAsUI/*[in]*/, 
                                                               VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookBeforePrint)(System::TObject * Sender, 
                                                                VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookNewSheet)(System::TObject * Sender, 
                                                             LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookWindowResize)(System::TObject * Sender, 
                                                                 Excel_97::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookWindowActivate)(System::TObject * Sender, 
                                                                   Excel_97::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookWindowDeactivate)(System::TObject * Sender, 
                                                                     Excel_97::WINDOW* Wn/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetSelectionChange)(System::TObject * Sender, 
                                                                         LPDISPATCH Sh/*[in]*/, 
                                                                         Excel_97::Range* Target/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetBeforeDoubleClick)(System::TObject * Sender, 
                                                                           LPDISPATCH Sh/*[in]*/, 
                                                                           Excel_97::Range* Target/*[in]*/, 
                                                                           VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetBeforeRightClick)(System::TObject * Sender, 
                                                                          LPDISPATCH Sh/*[in]*/, 
                                                                          Excel_97::Range* Target/*[in]*/, 
                                                                          VARIANT_BOOL* Cancel/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetActivate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetDeactivate)(System::TObject * Sender, 
                                                                    LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetCalculate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sh/*[in]*/);
typedef void __fastcall (__closure * TExcelWorkbookSheetChange)(System::TObject * Sender, 
                                                                LPDISPATCH Sh/*[in]*/, 
                                                                Excel_97::Range* Target/*[in]*/);

class PACKAGE TExcelWorkbook : public Oleserver::TOleServer
{
  _WorkbookPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelWorkbook(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _WorkbookPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_WorkbookPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Excel_97::ExcelApplicationPtr __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:TOleEnum
  Excel_97::XlCreator __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AcceptLabelsInFormulas(void)
  {
    return GetDefaultInterface()->get_AcceptLabelsInFormulas();
  }

// StdProp:WordBool
  void __fastcall set_AcceptLabelsInFormulas(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AcceptLabelsInFormulas(RHS/*[in]*/);
  }

// StdProp:
  Excel_97::ExcelChartPtr __fastcall get_ActiveChart(void)
  {
    return GetDefaultInterface()->get_ActiveChart();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_ActiveSheet(void)
  {
    return GetDefaultInterface()->get_ActiveSheet();
  }

// StdProp:WideString
  BSTR __fastcall get_Author(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Author(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_Author(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Author(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_AutoUpdateFrequency(void)
  {
    return GetDefaultInterface()->get_AutoUpdateFrequency();
  }

// StdProp:Integer
  void __fastcall set_AutoUpdateFrequency(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoUpdateFrequency(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_AutoUpdateSaveChanges(void)
  {
    return GetDefaultInterface()->get_AutoUpdateSaveChanges();
  }

// StdProp:WordBool
  void __fastcall set_AutoUpdateSaveChanges(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_AutoUpdateSaveChanges(RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ChangeHistoryDuration(void)
  {
    return GetDefaultInterface()->get_ChangeHistoryDuration();
  }

// StdProp:Integer
  void __fastcall set_ChangeHistoryDuration(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ChangeHistoryDuration(RHS/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_BuiltinDocumentProperties(void)
  {
    return GetDefaultInterface()->get_BuiltinDocumentProperties();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Charts(void)
  {
    return GetDefaultInterface()->get_Charts();
  }

// StdProp:WideString
  BSTR __fastcall get_CodeName(void)
  {
    return GetDefaultInterface()->get_CodeName();
  }

// StdProp:WideString
  BSTR __fastcall get__CodeName(void)
  {
    return GetDefaultInterface()->get__CodeName();
  }

// StdProp:WideString
  void __fastcall set__CodeName(BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set__CodeName(RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_Colors(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Colors(Index/*[in,opt]*/, lcid/*[in]*/);
  }

// StdProp:OleVariant
  void __fastcall set_Colors(VARIANT Index/*[in,opt]*/, long lcid/*[in]*/, VARIANT RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Colors(Index/*[in,opt]*/, lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Office_97::CommandBarsPtr __fastcall get_CommandBars(void)
  {
    return GetDefaultInterface()->get_CommandBars();
  }

// StdProp:WideString
  BSTR __fastcall get_Comments(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Comments(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_Comments(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Comments(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ConflictResolution(void)
  {
    return GetDefaultInterface()->get_ConflictResolution();
  }

// StdProp:Integer
  void __fastcall set_ConflictResolution(long RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ConflictResolution(RHS/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Container(void)
  {
    return GetDefaultInterface()->get_Container();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_CreateBackup(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_CreateBackup(lcid/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_CustomDocumentProperties(void)
  {
    return GetDefaultInterface()->get_CustomDocumentProperties();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Date1904(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Date1904(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_Date1904(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Date1904(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_DialogSheets(void)
  {
    return GetDefaultInterface()->get_DialogSheets();
  }

// StdProp:TOleEnum
  Excel_97::XlDisplayShapes __fastcall get_DisplayDrawingObjects(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_DisplayDrawingObjects(lcid/*[in]*/);
  }

// StdProp:TOleEnum
  void __fastcall set_DisplayDrawingObjects(long lcid/*[in]*/, Excel_97::XlDisplayShapes RHS/*[in]*/)
  {
    GetDefaultInterface()->set_DisplayDrawingObjects(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:TOleEnum
  Excel_97::XlFileFormat __fastcall get_FileFormat(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FileFormat(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_FullName(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_FullName(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasMailer(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasMailer(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_HasMailer(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasMailer(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasPassword(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasPassword(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HasRoutingSlip(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_HasRoutingSlip(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_HasRoutingSlip(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HasRoutingSlip(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsAddin(void)
  {
    return GetDefaultInterface()->get_IsAddin();
  }

// StdProp:WordBool
  void __fastcall set_IsAddin(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_IsAddin(RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Keywords(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Keywords(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_Keywords(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Keywords(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::MailerPtr __fastcall get_Mailer(void)
  {
    return GetDefaultInterface()->get_Mailer();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Modules(void)
  {
    return GetDefaultInterface()->get_Modules();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_MultiUserEditing(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_MultiUserEditing(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:
  Excel_97::NamesPtr __fastcall get_Names(void)
  {
    return GetDefaultInterface()->get_Names();
  }

// StdProp:WideString
  BSTR __fastcall get_OnSave(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSave(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSave(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSave(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetActivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetActivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetActivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetActivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnSheetDeactivate(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_OnSheetDeactivate(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_OnSheetDeactivate(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_OnSheetDeactivate(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Path(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Path(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PersonalViewListSettings(void)
  {
    return GetDefaultInterface()->get_PersonalViewListSettings();
  }

// StdProp:WordBool
  void __fastcall set_PersonalViewListSettings(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PersonalViewListSettings(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PersonalViewPrintSettings(void)
  {
    return GetDefaultInterface()->get_PersonalViewPrintSettings();
  }

// StdProp:WordBool
  void __fastcall set_PersonalViewPrintSettings(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PersonalViewPrintSettings(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_PrecisionAsDisplayed(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_PrecisionAsDisplayed(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_PrecisionAsDisplayed(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_PrecisionAsDisplayed(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectStructure(void)
  {
    return GetDefaultInterface()->get_ProtectStructure();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ProtectWindows(void)
  {
    return GetDefaultInterface()->get_ProtectWindows();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ReadOnly(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ReadOnly(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ReadOnlyRecommended(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ReadOnlyRecommended(lcid/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_RevisionNumber(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_RevisionNumber(lcid/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Routed(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Routed(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::RoutingSlipPtr __fastcall get_RoutingSlip(void)
  {
    return GetDefaultInterface()->get_RoutingSlip();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_Saved(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Saved(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_Saved(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Saved(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_SaveLinkValues(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_SaveLinkValues(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_SaveLinkValues(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_SaveLinkValues(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Sheets(void)
  {
    return GetDefaultInterface()->get_Sheets();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ShowConflictHistory(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_ShowConflictHistory(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_ShowConflictHistory(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ShowConflictHistory(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:
  Excel_97::StylesPtr __fastcall get_Styles(void)
  {
    return GetDefaultInterface()->get_Styles();
  }

// StdProp:WideString
  BSTR __fastcall get_Subject(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Subject(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_Subject(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Subject(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Title(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_Title(lcid/*[in]*/);
  }

// StdProp:WideString
  void __fastcall set_Title(long lcid/*[in]*/, BSTR RHS/*[in]*/)
  {
    GetDefaultInterface()->set_Title(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UpdateRemoteReferences(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UpdateRemoteReferences(lcid/*[in]*/);
  }

// StdProp:WordBool
  void __fastcall set_UpdateRemoteReferences(long lcid/*[in]*/, VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UpdateRemoteReferences(lcid/*[in]*/, RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_UserControl(void)
  {
    return GetDefaultInterface()->get_UserControl();
  }

// StdProp:WordBool
  void __fastcall set_UserControl(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_UserControl(RHS/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_UserStatus(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_UserStatus(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::CustomViewsPtr __fastcall get_CustomViews(void)
  {
    return GetDefaultInterface()->get_CustomViews();
  }

// StdProp:
  Excel_97::WindowsPtr __fastcall get_Windows(void)
  {
    return GetDefaultInterface()->get_Windows();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Worksheets(void)
  {
    return GetDefaultInterface()->get_Worksheets();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_WriteReserved(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WriteReserved(lcid/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_WriteReservedBy(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->get_WriteReservedBy(lcid/*[in]*/);
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Excel4IntlMacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4IntlMacroSheets();
  }

// StdProp:
  Excel_97::SheetsPtr __fastcall get_Excel4MacroSheets(void)
  {
    return GetDefaultInterface()->get_Excel4MacroSheets();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_TemplateRemoveExtData(void)
  {
    return GetDefaultInterface()->get_TemplateRemoveExtData();
  }

// StdProp:WordBool
  void __fastcall set_TemplateRemoveExtData(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_TemplateRemoveExtData(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_HighlightChangesOnScreen(void)
  {
    return GetDefaultInterface()->get_HighlightChangesOnScreen();
  }

// StdProp:WordBool
  void __fastcall set_HighlightChangesOnScreen(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_HighlightChangesOnScreen(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_KeepChangeHistory(void)
  {
    return GetDefaultInterface()->get_KeepChangeHistory();
  }

// StdProp:WordBool
  void __fastcall set_KeepChangeHistory(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_KeepChangeHistory(RHS/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_ListChangesOnNewSheet(void)
  {
    return GetDefaultInterface()->get_ListChangesOnNewSheet();
  }

// StdProp:WordBool
  void __fastcall set_ListChangesOnNewSheet(VARIANT_BOOL RHS/*[in]*/)
  {
    GetDefaultInterface()->set_ListChangesOnNewSheet(RHS/*[in]*/);
  }

// StdProp:
  Vbide_97::VBProjectPtr __fastcall get_VBProject(void)
  {
    return GetDefaultInterface()->get_VBProject();
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_IsInplace(void)
  {
    return GetDefaultInterface()->get_IsInplace();
  }

  /*CoClassWriteMethods*/
  void __fastcall Activate(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Activate(lcid/*[in]*/);
  }

  void __fastcall ChangeFileAccess(Excel_97::XlFileAccess Mode/*[in]*/, 
                                   VARIANT WritePassword/*[in,opt]*/= TNoParam(), 
                                   VARIANT Notify/*[in,opt]*/= TNoParam(), 
                                   long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ChangeFileAccess(Mode/*[in]*/, WritePassword/*[in,opt]*/, 
                                            Notify/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ChangeLink(BSTR Name/*[in]*/, BSTR NewName/*[in]*/, 
                             Excel_97::XlLinkType Type/*[in,def,opt]*/, 
                             long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ChangeLink(Name/*[in]*/, NewName/*[in]*/, Type/*[in,def,opt]*/, 
                                      lcid/*[in]*/);
  }

  void __fastcall Close(VARIANT SaveChanges/*[in,opt]*/= TNoParam(), 
                        VARIANT Filename/*[in,opt]*/= TNoParam(), 
                        VARIANT RouteWorkbook/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Close(SaveChanges/*[in,opt]*/, Filename/*[in,opt]*/, 
                                 RouteWorkbook/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall DeleteNumberFormat(BSTR NumberFormat/*[in]*/, long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->DeleteNumberFormat(NumberFormat/*[in]*/, lcid/*[in]*/);
  }

  TOLEBOOL __fastcall ExclusiveAccess(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->ExclusiveAccess(lcid/*[in]*/);
  }

  void __fastcall ForwardMailer(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ForwardMailer(lcid/*[in]*/);
  }

  TVariant __fastcall LinkInfo(BSTR Name/*[in]*/, Excel_97::XlLinkInfo LinkInfo/*[in]*/, 
                               VARIANT Type/*[in,opt]*/, VARIANT EditionRef/*[in,opt]*/, 
                               long lcid/*[in]*/)
  {
    return GetDefaultInterface()->LinkInfo(Name/*[in]*/, LinkInfo/*[in]*/, Type/*[in,opt]*/, 
                                           EditionRef/*[in,opt]*/, lcid/*[in]*/);
  }

  TVariant __fastcall LinkSources(VARIANT Type/*[in,opt]*/, long lcid/*[in]*/)
  {
    return GetDefaultInterface()->LinkSources(Type/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall MergeWorkbook(VARIANT Filename/*[in]*/)
  {
    GetDefaultInterface()->MergeWorkbook(Filename/*[in]*/);
  }

  Excel_97::WINDOWPtr __fastcall NewWindow(long lcid/*[in]*/)
  {
    return GetDefaultInterface()->NewWindow(lcid/*[in]*/);
  }

  void __fastcall OpenLinks(BSTR Name/*[in]*/, VARIANT ReadOnly/*[in,opt]*/= TNoParam(), 
                            VARIANT Type/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->OpenLinks(Name/*[in]*/, ReadOnly/*[in,opt]*/, Type/*[in,opt]*/, 
                                     lcid/*[in]*/);
  }

  Excel_97::PivotCachesPtr __fastcall PivotCaches(void)
  {
    return GetDefaultInterface()->PivotCaches();
  }

  void __fastcall Post(VARIANT DestName/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Post(DestName/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintOut(VARIANT From/*[in,opt]*/= TNoParam(), VARIANT To/*[in,opt]*/= TNoParam(), 
                           VARIANT Copies/*[in,opt]*/= TNoParam(), 
                           VARIANT Preview/*[in,opt]*/= TNoParam(), 
                           VARIANT ActivePrinter/*[in,opt]*/= TNoParam(), 
                           VARIANT PrintToFile/*[in,opt]*/= TNoParam(), 
                           VARIANT Collate/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintOut(From/*[in,opt]*/, To/*[in,opt]*/, Copies/*[in,opt]*/, 
                                    Preview/*[in,opt]*/, ActivePrinter/*[in,opt]*/, 
                                    PrintToFile/*[in,opt]*/, Collate/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall PrintPreview(VARIANT EnableChanges/*[in,opt]*/= TNoParam(), 
                               long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PrintPreview(EnableChanges/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Protect(VARIANT Password/*[in,opt]*/= TNoParam(), 
                          VARIANT Structure/*[in,opt]*/= TNoParam(), 
                          VARIANT Windows/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Protect(Password/*[in,opt]*/, Structure/*[in,opt]*/, Windows/*[in,opt]*/);
  }

  void __fastcall ProtectSharing(VARIANT Filename/*[in,opt]*/= TNoParam(), 
                                 VARIANT Password/*[in,opt]*/= TNoParam(), 
                                 VARIANT WriteResPassword/*[in,opt]*/= TNoParam(), 
                                 VARIANT ReadOnlyRecommended/*[in,opt]*/= TNoParam(), 
                                 VARIANT CreateBackup/*[in,opt]*/= TNoParam(), 
                                 VARIANT SharingPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->ProtectSharing(Filename/*[in,opt]*/, Password/*[in,opt]*/, 
                                          WriteResPassword/*[in,opt]*/, 
                                          ReadOnlyRecommended/*[in,opt]*/, CreateBackup/*[in,opt]*/, 
                                          SharingPassword/*[in,opt]*/);
  }

  void __fastcall RefreshAll(void)
  {
    GetDefaultInterface()->RefreshAll();
  }

  void __fastcall Reply(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Reply(lcid/*[in]*/);
  }

  void __fastcall ReplyAll(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->ReplyAll(lcid/*[in]*/);
  }

  void __fastcall RemoveUser(long Index/*[in]*/)
  {
    GetDefaultInterface()->RemoveUser(Index/*[in]*/);
  }

  void __fastcall Route(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Route(lcid/*[in]*/);
  }

  void __fastcall RunAutoMacros(Excel_97::XlRunAutoMacro Which/*[in]*/, 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->RunAutoMacros(Which/*[in]*/, lcid/*[in]*/);
  }

  void __fastcall Save(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Save(lcid/*[in]*/);
  }

  void __fastcall SaveAs(VARIANT Filename/*[in,opt]*/, VARIANT FileFormat/*[in,opt]*/, 
                         VARIANT Password/*[in,opt]*/, VARIANT WriteResPassword/*[in,opt]*/, 
                         VARIANT ReadOnlyRecommended/*[in,opt]*/, VARIANT CreateBackup/*[in,opt]*/, 
                         Excel_97::XlSaveAsAccessMode AccessMode/*[in,def,opt]*/, 
                         VARIANT ConflictResolution/*[in,opt]*/, VARIANT AddToMru/*[in,opt]*/, 
                         VARIANT TextCodepage/*[in,opt]*/, VARIANT TextVisualLayout/*[in,opt]*/, 
                         long lcid/*[in]*/)
  {
    GetDefaultInterface()->SaveAs(Filename/*[in,opt]*/, FileFormat/*[in,opt]*/, Password/*[in,opt]*/, 
                                  WriteResPassword/*[in,opt]*/, ReadOnlyRecommended/*[in,opt]*/, 
                                  CreateBackup/*[in,opt]*/, AccessMode/*[in,def,opt]*/, 
                                  ConflictResolution/*[in,opt]*/, AddToMru/*[in,opt]*/, 
                                  TextCodepage/*[in,opt]*/, TextVisualLayout/*[in,opt]*/, 
                                  lcid/*[in]*/);
  }

  void __fastcall SaveCopyAs(VARIANT Filename/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SaveCopyAs(Filename/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendMail(VARIANT Recipients/*[in]*/, VARIANT Subject/*[in,opt]*/= TNoParam(), 
                           VARIANT ReturnReceipt/*[in,opt]*/= TNoParam(), 
                           long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SendMail(Recipients/*[in]*/, Subject/*[in,opt]*/, 
                                    ReturnReceipt/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SendMailer(VARIANT FileFormat/*[in,opt]*/, 
                             Excel_97::XlPriority Priority/*[in,def,opt]*/, long lcid/*[in]*/)
  {
    GetDefaultInterface()->SendMailer(FileFormat/*[in,opt]*/, Priority/*[in,def,opt]*/, lcid/*[in]*/);
  }

  void __fastcall SetLinkOnData(BSTR Name/*[in]*/, VARIANT Procedure/*[in,opt]*/= TNoParam(), 
                                long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->SetLinkOnData(Name/*[in]*/, Procedure/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall Unprotect(VARIANT Password/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->Unprotect(Password/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall UnprotectSharing(VARIANT SharingPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->UnprotectSharing(SharingPassword/*[in,opt]*/);
  }

  void __fastcall UpdateFromFile(long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->UpdateFromFile(lcid/*[in]*/);
  }

  void __fastcall UpdateLink(VARIANT Name/*[in,opt]*/= TNoParam(), 
                             VARIANT Type/*[in,opt]*/= TNoParam(), long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->UpdateLink(Name/*[in,opt]*/, Type/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall HighlightChangesOptions(VARIANT When/*[in,opt]*/= TNoParam(), 
                                          VARIANT Who/*[in,opt]*/= TNoParam(), 
                                          VARIANT Where/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->HighlightChangesOptions(When/*[in,opt]*/, Who/*[in,opt]*/, 
                                                   Where/*[in,opt]*/);
  }

  void __fastcall PurgeChangeHistoryNow(long Days/*[in]*/, 
                                        VARIANT SharingPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->PurgeChangeHistoryNow(Days/*[in]*/, SharingPassword/*[in,opt]*/);
  }

  void __fastcall AcceptAllChanges(VARIANT When/*[in,opt]*/= TNoParam(), 
                                   VARIANT Who/*[in,opt]*/= TNoParam(), 
                                   VARIANT Where/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->AcceptAllChanges(When/*[in,opt]*/, Who/*[in,opt]*/, Where/*[in,opt]*/);
  }

  void __fastcall RejectAllChanges(VARIANT When/*[in,opt]*/= TNoParam(), 
                                   VARIANT Who/*[in,opt]*/= TNoParam(), 
                                   VARIANT Where/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->RejectAllChanges(When/*[in,opt]*/, Who/*[in,opt]*/, Where/*[in,opt]*/);
  }

  void __fastcall PivotTableWizard(VARIANT SourceType/*[in,opt]*/= TNoParam(), 
                                   VARIANT SourceData/*[in,opt]*/= TNoParam(), 
                                   VARIANT TableDestination/*[in,opt]*/= TNoParam(), 
                                   VARIANT TableName/*[in,opt]*/= TNoParam(), 
                                   VARIANT RowGrand/*[in,opt]*/= TNoParam(), 
                                   VARIANT ColumnGrand/*[in,opt]*/= TNoParam(), 
                                   VARIANT SaveData/*[in,opt]*/= TNoParam(), 
                                   VARIANT HasAutoFormat/*[in,opt]*/= TNoParam(), 
                                   VARIANT AutoPage/*[in,opt]*/= TNoParam(), 
                                   VARIANT Reserved/*[in,opt]*/= TNoParam(), 
                                   VARIANT BackgroundQuery/*[in,opt]*/= TNoParam(), 
                                   VARIANT OptimizeCache/*[in,opt]*/= TNoParam(), 
                                   VARIANT PageFieldOrder/*[in,opt]*/= TNoParam(), 
                                   VARIANT PageFieldWrapCount/*[in,opt]*/= TNoParam(), 
                                   VARIANT ReadData/*[in,opt]*/= TNoParam(), 
                                   VARIANT Connection/*[in,opt]*/= TNoParam(), 
                                   long lcid/*[in]*/= TDefLCID())
  {
    GetDefaultInterface()->PivotTableWizard(SourceType/*[in,opt]*/, SourceData/*[in,opt]*/, 
                                            TableDestination/*[in,opt]*/, TableName/*[in,opt]*/, 
                                            RowGrand/*[in,opt]*/, ColumnGrand/*[in,opt]*/, 
                                            SaveData/*[in,opt]*/, HasAutoFormat/*[in,opt]*/, 
                                            AutoPage/*[in,opt]*/, Reserved/*[in,opt]*/, 
                                            BackgroundQuery/*[in,opt]*/, OptimizeCache/*[in,opt]*/, 
                                            PageFieldOrder/*[in,opt]*/, 
                                            PageFieldWrapCount/*[in,opt]*/, ReadData/*[in,opt]*/, 
                                            Connection/*[in,opt]*/, lcid/*[in]*/);
  }

  void __fastcall ResetColors(void)
  {
    GetDefaultInterface()->ResetColors();
  }

  void __fastcall FollowHyperlink(BSTR Address/*[in]*/, VARIANT SubAddress/*[in,opt]*/= TNoParam(), 
                                  VARIANT NewWindow/*[in,opt]*/= TNoParam(), 
                                  VARIANT AddHistory/*[in,opt]*/= TNoParam(), 
                                  VARIANT ExtraInfo/*[in,opt]*/= TNoParam(), 
                                  VARIANT Method/*[in,opt]*/= TNoParam(), 
                                  VARIANT HeaderInfo/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->FollowHyperlink(Address/*[in]*/, SubAddress/*[in,opt]*/, 
                                           NewWindow/*[in,opt]*/, AddHistory/*[in,opt]*/, 
                                           ExtraInfo/*[in,opt]*/, Method/*[in,opt]*/, 
                                           HeaderInfo/*[in,opt]*/);
  }

  void __fastcall AddToFavorites(void)
  {
    GetDefaultInterface()->AddToFavorites();
  }

  /*CoClassWriteProperties*/
  __property Excel_97::ExcelApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property Excel_97::XlCreator Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Excel_97::ExcelChartPtr ActiveChart={ read=get_ActiveChart }; // 0, Yes
  __property LPDISPATCH ActiveSheet={ read=get_ActiveSheet }; // 0, No
  __property BSTR Author[long lcid]={ read=get_Author }; // 0, No
  __property LPDISPATCH BuiltinDocumentProperties={ read=get_BuiltinDocumentProperties }; // 0, No
  __property Excel_97::SheetsPtr Charts={ read=get_Charts }; // 0, Yes
  __property BSTR CodeName={ read=get_CodeName }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Colors[VARIANT Index][long lcid]={ read=get_Colors }; // 0, No
  */
  __property Office_97::CommandBarsPtr CommandBars={ read=get_CommandBars }; // 0, Yes
  __property BSTR Comments[long lcid]={ read=get_Comments }; // 0, No
  __property LPDISPATCH Container={ read=get_Container }; // 0, No
  __property TOLEBOOL CreateBackup[long lcid]={ read=get_CreateBackup }; // 0, No
  __property LPDISPATCH CustomDocumentProperties={ read=get_CustomDocumentProperties }; // 0, No
  __property TOLEBOOL Date1904[long lcid]={ read=get_Date1904 }; // 0, No
  __property Excel_97::SheetsPtr DialogSheets={ read=get_DialogSheets }; // 0, Yes
  __property Excel_97::XlDisplayShapes DisplayDrawingObjects[long lcid]={ read=get_DisplayDrawingObjects }; // 0, No
  __property Excel_97::XlFileFormat FileFormat[long lcid]={ read=get_FileFormat }; // 0, No
  __property BSTR FullName[long lcid]={ read=get_FullName }; // 0, No
  __property TOLEBOOL HasMailer[long lcid]={ read=get_HasMailer }; // 0, No
  __property TOLEBOOL HasPassword[long lcid]={ read=get_HasPassword }; // 0, No
  __property TOLEBOOL HasRoutingSlip[long lcid]={ read=get_HasRoutingSlip }; // 0, No
  __property BSTR Keywords[long lcid]={ read=get_Keywords }; // 0, No
  __property Excel_97::MailerPtr Mailer={ read=get_Mailer }; // 0, Yes
  __property Excel_97::SheetsPtr Modules={ read=get_Modules }; // 0, Yes
  __property TOLEBOOL MultiUserEditing[long lcid]={ read=get_MultiUserEditing }; // 0, No
  __property BSTR Name={ read=get_Name }; // 0, No
  __property Excel_97::NamesPtr Names={ read=get_Names }; // 0, Yes
  __property BSTR OnSave[long lcid]={ read=get_OnSave }; // 0, No
  __property BSTR OnSheetActivate[long lcid]={ read=get_OnSheetActivate }; // 0, No
  __property BSTR OnSheetDeactivate[long lcid]={ read=get_OnSheetDeactivate }; // 0, No
  __property BSTR Path[long lcid]={ read=get_Path }; // 0, No
  __property TOLEBOOL PrecisionAsDisplayed[long lcid]={ read=get_PrecisionAsDisplayed }; // 0, No
  __property TOLEBOOL ProtectStructure={ read=get_ProtectStructure }; // 0, No
  __property TOLEBOOL ProtectWindows={ read=get_ProtectWindows }; // 0, No
  __property TOLEBOOL ReadOnly[long lcid]={ read=get_ReadOnly }; // 0, No
  __property TOLEBOOL ReadOnlyRecommended[long lcid]={ read=get_ReadOnlyRecommended }; // 0, No
  __property long RevisionNumber[long lcid]={ read=get_RevisionNumber }; // 0, No
  __property TOLEBOOL Routed[long lcid]={ read=get_Routed }; // 0, No
  __property Excel_97::RoutingSlipPtr RoutingSlip={ read=get_RoutingSlip }; // 0, Yes
  __property TOLEBOOL Saved[long lcid]={ read=get_Saved }; // 0, No
  __property TOLEBOOL SaveLinkValues[long lcid]={ read=get_SaveLinkValues }; // 0, No
  __property Excel_97::SheetsPtr Sheets={ read=get_Sheets }; // 0, Yes
  __property TOLEBOOL ShowConflictHistory[long lcid]={ read=get_ShowConflictHistory }; // 0, No
  __property Excel_97::StylesPtr Styles={ read=get_Styles }; // 0, Yes
  __property BSTR Subject[long lcid]={ read=get_Subject }; // 0, No
  __property BSTR Title[long lcid]={ read=get_Title }; // 0, No
  __property TOLEBOOL UpdateRemoteReferences[long lcid]={ read=get_UpdateRemoteReferences }; // 0, No
  __property TOLEBOOL UserControl={ read=get_UserControl }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant UserStatus[long lcid]={ read=get_UserStatus }; // 0, No
  */
  __property Excel_97::CustomViewsPtr CustomViews={ read=get_CustomViews }; // 0, Yes
  __property Excel_97::WindowsPtr Windows={ read=get_Windows }; // 0, Yes
  __property Excel_97::SheetsPtr Worksheets={ read=get_Worksheets }; // 0, Yes
  __property TOLEBOOL WriteReserved[long lcid]={ read=get_WriteReserved }; // 0, No
  __property BSTR WriteReservedBy[long lcid]={ read=get_WriteReservedBy }; // 0, No
  __property Excel_97::SheetsPtr Excel4IntlMacroSheets={ read=get_Excel4IntlMacroSheets }; // 0, Yes
  __property Excel_97::SheetsPtr Excel4MacroSheets={ read=get_Excel4MacroSheets }; // 0, Yes
  __property Vbide_97::VBProjectPtr VBProject={ read=get_VBProject }; // 0, Yes
  __property TOLEBOOL IsInplace={ read=get_IsInplace }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL AcceptLabelsInFormulas={ read=get_AcceptLabelsInFormulas, stored=false }; // 0, No
  __property long AutoUpdateFrequency={ read=get_AutoUpdateFrequency, stored=false }; // 0, No
  __property TOLEBOOL AutoUpdateSaveChanges={ read=get_AutoUpdateSaveChanges, stored=false }; // 0, No
  __property long ChangeHistoryDuration={ read=get_ChangeHistoryDuration, stored=false }; // 0, No
  __property BSTR _CodeName={ read=get__CodeName, stored=false }; // 0, No
  __property long ConflictResolution={ read=get_ConflictResolution, stored=false }; // 0, No
  __property TOLEBOOL IsAddin={ read=get_IsAddin, stored=false }; // 0, No
  __property TOLEBOOL PersonalViewListSettings={ read=get_PersonalViewListSettings, stored=false }; // 0, No
  __property TOLEBOOL PersonalViewPrintSettings={ read=get_PersonalViewPrintSettings, stored=false }; // 0, No
  __property TOLEBOOL TemplateRemoveExtData={ read=get_TemplateRemoveExtData, stored=false }; // 0, No
  __property TOLEBOOL HighlightChangesOnScreen={ read=get_HighlightChangesOnScreen, stored=false }; // 0, No
  __property TOLEBOOL KeepChangeHistory={ read=get_KeepChangeHistory, stored=false }; // 0, No
  __property TOLEBOOL ListChangesOnNewSheet={ read=get_ListChangesOnNewSheet, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnOpen;
  TNotifyEvent                   FOnActivate;
  TNotifyEvent                   FOnDeactivate;
  TExcelWorkbookBeforeClose      FOnBeforeClose;
  TExcelWorkbookBeforeSave       FOnBeforeSave;
  TExcelWorkbookBeforePrint      FOnBeforePrint;
  TExcelWorkbookNewSheet         FOnNewSheet;
  TNotifyEvent                   FOnAddinInstall;
  TNotifyEvent                   FOnAddinUninstall;
  TExcelWorkbookWindowResize     FOnWindowResize;
  TExcelWorkbookWindowActivate   FOnWindowActivate;
  TExcelWorkbookWindowDeactivate FOnWindowDeactivate;
  TExcelWorkbookSheetSelectionChange FOnSheetSelectionChange;
  TExcelWorkbookSheetBeforeDoubleClick FOnSheetBeforeDoubleClick;
  TExcelWorkbookSheetBeforeRightClick FOnSheetBeforeRightClick;
  TExcelWorkbookSheetActivate    FOnSheetActivate1;
  TExcelWorkbookSheetDeactivate  FOnSheetDeactivate1;
  TExcelWorkbookSheetCalculate   FOnSheetCalculate;
  TExcelWorkbookSheetChange      FOnSheetChange;
__published:
  __property TNotifyEvent OnOpen={ read=FOnOpen, write=FOnOpen };
  __property TNotifyEvent OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TNotifyEvent OnDeactivate={ read=FOnDeactivate, write=FOnDeactivate };
  __property TExcelWorkbookBeforeClose OnBeforeClose={ read=FOnBeforeClose, write=FOnBeforeClose };
  __property TExcelWorkbookBeforeSave OnBeforeSave={ read=FOnBeforeSave, write=FOnBeforeSave };
  __property TExcelWorkbookBeforePrint OnBeforePrint={ read=FOnBeforePrint, write=FOnBeforePrint };
  __property TExcelWorkbookNewSheet OnNewSheet={ read=FOnNewSheet, write=FOnNewSheet };
  __property TNotifyEvent OnAddinInstall={ read=FOnAddinInstall, write=FOnAddinInstall };
  __property TNotifyEvent OnAddinUninstall={ read=FOnAddinUninstall, write=FOnAddinUninstall };
  __property TExcelWorkbookWindowResize OnWindowResize={ read=FOnWindowResize, write=FOnWindowResize };
  __property TExcelWorkbookWindowActivate OnWindowActivate={ read=FOnWindowActivate, write=FOnWindowActivate };
  __property TExcelWorkbookWindowDeactivate OnWindowDeactivate={ read=FOnWindowDeactivate, write=FOnWindowDeactivate };
  __property TExcelWorkbookSheetSelectionChange OnSheetSelectionChange={ read=FOnSheetSelectionChange, write=FOnSheetSelectionChange };
  __property TExcelWorkbookSheetBeforeDoubleClick OnSheetBeforeDoubleClick={ read=FOnSheetBeforeDoubleClick, write=FOnSheetBeforeDoubleClick };
  __property TExcelWorkbookSheetBeforeRightClick OnSheetBeforeRightClick={ read=FOnSheetBeforeRightClick, write=FOnSheetBeforeRightClick };
  __property TExcelWorkbookSheetActivate OnSheetActivate1={ read=FOnSheetActivate1, write=FOnSheetActivate1 };
  __property TExcelWorkbookSheetDeactivate OnSheetDeactivate1={ read=FOnSheetDeactivate1, write=FOnSheetDeactivate1 };
  __property TExcelWorkbookSheetCalculate OnSheetCalculate={ read=FOnSheetCalculate, write=FOnSheetCalculate };
  __property TExcelWorkbookSheetChange OnSheetChange={ read=FOnSheetChange, write=FOnSheetChange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExcelOLEObject
// Help String      : 
// Default Interface: _OLEObject
// Def. Intf. Object: _OLEObjectPtr
// Def. Intf. DISP? : Yes
// Event   Interface: OLEObjectEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TExcelOLEObject : public Oleserver::TOleServer
{
  _OLEObjectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExcelOLEObject(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  _OLEObjectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(_OLEObjectPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Excel_97::ExcelApplication* __fastcall get_Application(void)
  {
    return GetDefaultInterface()->get_Application();
  }

// StdProp:TOleEnum
  Excel_97::XlCreator __fastcall get_Creator(void)
  {
    return GetDefaultInterface()->get_Creator();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Parent(void)
  {
    return GetDefaultInterface()->get_Parent();
  }

// StdProp:
  Excel_97::Range* __fastcall get_BottomRightCell(void)
  {
    return GetDefaultInterface()->get_BottomRightCell();
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_Enabled(void)
  {
    return GetDefaultInterface()->get_Enabled();
  }

// StdProp:WordBool
  void __fastcall set_Enabled(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Enabled(Param1/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Height(void)
  {
    return GetDefaultInterface()->get_Height();
  }

// StdProp:Double
  void __fastcall set_Height(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Height(Param1/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_Index(void)
  {
    return GetDefaultInterface()->get_Index();
  }

// StdProp:Double
  double __fastcall get_Left(void)
  {
    return GetDefaultInterface()->get_Left();
  }

// StdProp:Double
  void __fastcall set_Left(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Left(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_Locked(void)
  {
    return GetDefaultInterface()->get_Locked();
  }

// StdProp:WordBool
  void __fastcall set_Locked(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Locked(Param1/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_Name(void)
  {
    return GetDefaultInterface()->get_Name();
  }

// StdProp:WideString
  void __fastcall set_Name(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Name(Param1/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_OnAction(void)
  {
    return GetDefaultInterface()->get_OnAction();
  }

// StdProp:WideString
  void __fastcall set_OnAction(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_OnAction(Param1/*[in]*/);
  }

// StdProp:OleVariant
  VARIANT __fastcall get_Placement(void)
  {
    return GetDefaultInterface()->get_Placement();
  }

// StdProp:OleVariant
  void __fastcall set_Placement(VARIANT Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Placement(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_PrintObject(void)
  {
    return GetDefaultInterface()->get_PrintObject();
  }

// StdProp:WordBool
  void __fastcall set_PrintObject(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_PrintObject(Param1/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Top(void)
  {
    return GetDefaultInterface()->get_Top();
  }

// StdProp:Double
  void __fastcall set_Top(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Top(Param1/*[in]*/);
  }

// StdProp:
  Excel_97::Range* __fastcall get_TopLeftCell(void)
  {
    return GetDefaultInterface()->get_TopLeftCell();
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_Visible(void)
  {
    return GetDefaultInterface()->get_Visible();
  }

// StdProp:WordBool
  void __fastcall set_Visible(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Visible(Param1/*[in]*/);
  }

// StdProp:Double
  double __fastcall get_Width(void)
  {
    return GetDefaultInterface()->get_Width();
  }

// StdProp:Double
  void __fastcall set_Width(double Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Width(Param1/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_ZOrder(void)
  {
    return GetDefaultInterface()->get_ZOrder();
  }

// StdProp:
  Excel_97::ShapeRange* __fastcall get_ShapeRange(void)
  {
    return GetDefaultInterface()->get_ShapeRange();
  }

// StdProp:
  Excel_97::Border* __fastcall get_Border(void)
  {
    return GetDefaultInterface()->get_Border();
  }

// StdProp:
  Excel_97::Interior* __fastcall get_Interior(void)
  {
    return GetDefaultInterface()->get_Interior();
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_Shadow(void)
  {
    return GetDefaultInterface()->get_Shadow();
  }

// StdProp:WordBool
  void __fastcall set_Shadow(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Shadow(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_AutoLoad(void)
  {
    return GetDefaultInterface()->get_AutoLoad();
  }

// StdProp:WordBool
  void __fastcall set_AutoLoad(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AutoLoad(Param1/*[in]*/);
  }

// StdProp:WordBool
  VARIANT_BOOL __fastcall get_AutoUpdate(void)
  {
    return GetDefaultInterface()->get_AutoUpdate();
  }

// StdProp:WordBool
  void __fastcall set_AutoUpdate(VARIANT_BOOL Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AutoUpdate(Param1/*[in]*/);
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_Object(void)
  {
    return GetDefaultInterface()->get_Object();
  }

// StdProp:OleVariant
  VARIANT __fastcall get_OLEType(void)
  {
    return GetDefaultInterface()->get_OLEType();
  }

// StdProp:WideString
  BSTR __fastcall get_SourceName(void)
  {
    return GetDefaultInterface()->get_SourceName();
  }

// StdProp:WideString
  void __fastcall set_SourceName(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_SourceName(Param1/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_LinkedCell(void)
  {
    return GetDefaultInterface()->get_LinkedCell();
  }

// StdProp:WideString
  void __fastcall set_LinkedCell(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_LinkedCell(Param1/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ListFillRange(void)
  {
    return GetDefaultInterface()->get_ListFillRange();
  }

// StdProp:WideString
  void __fastcall set_ListFillRange(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_ListFillRange(Param1/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_ProgId(void)
  {
    return GetDefaultInterface()->get_ProgId();
  }

  /*CoClassWriteMethods*/
  void __fastcall BringToFront(void)
  {
    GetDefaultInterface()->BringToFront();
  }

  void __fastcall Copy(void)
  {
    GetDefaultInterface()->Copy();
  }

  void __fastcall CopyPicture(Excel_97::XlPictureAppearance Appearance/*[in,def,opt]*/, 
                              Excel_97::XlCopyPictureFormat Format/*[in,def,opt]*/)
  {
    GetDefaultInterface()->CopyPicture(Appearance/*[in,def,opt]*/, Format/*[in,def,opt]*/);
  }

  void __fastcall Cut(void)
  {
    GetDefaultInterface()->Cut();
  }

  void __fastcall Delete(void)
  {
    GetDefaultInterface()->Delete();
  }

  LPDISPATCH __fastcall Duplicate(void)
  {
    return GetDefaultInterface()->Duplicate();
  }

  void __fastcall Select(VARIANT Replace/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->Select(Replace/*[in,opt]*/);
  }

  void __fastcall SendToBack(void)
  {
    GetDefaultInterface()->SendToBack();
  }

  void __fastcall Activate(void)
  {
    GetDefaultInterface()->Activate();
  }

  void __fastcall Update(void)
  {
    GetDefaultInterface()->Update();
  }

  void __fastcall Verb(Excel_97::XlOLEVerb Verb/*[in,def,opt]*/)
  {
    GetDefaultInterface()->Verb(Verb/*[in,def,opt]*/);
  }

  /*CoClassWriteProperties*/
  __property Excel_97::ExcelApplicationPtr Application={ read=get_Application }; // 0, Yes
  __property Excel_97::XlCreator Creator={ read=get_Creator }; // 0, No
  __property LPDISPATCH Parent={ read=get_Parent }; // 0, No
  __property Excel_97::RangePtr BottomRightCell={ read=get_BottomRightCell }; // 0, Yes
  __property long Index={ read=get_Index }; // 0, No
  __property BSTR OnAction={ read=get_OnAction }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant Placement={ read=get_Placement }; // 0, No
  */
  __property Excel_97::RangePtr TopLeftCell={ read=get_TopLeftCell }; // 0, Yes
  __property long ZOrder={ read=get_ZOrder }; // 0, No
  __property Excel_97::ShapeRangePtr ShapeRange={ read=get_ShapeRange }; // 0, Yes
  __property Excel_97::BorderPtr Border={ read=get_Border }; // 0, Yes
  __property Excel_97::InteriorPtr Interior={ read=get_Interior }; // 0, Yes
  __property LPDISPATCH Object={ read=get_Object }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant OLEType={ read=get_OLEType }; // 0, No
  */
  __property BSTR ProgId={ read=get_ProgId }; // 0, No
  /*CoClassWriteProperties*/
  __property TOLEBOOL Enabled={ read=get_Enabled, stored=false }; // 0, No
  __property double Height={ read=get_Height, stored=false }; // 0, No
  __property double Left={ read=get_Left, stored=false }; // 0, No
  __property TOLEBOOL Locked={ read=get_Locked, stored=false }; // 0, No
  __property BSTR Name={ read=get_Name, stored=false }; // 0, No
  __property TOLEBOOL PrintObject={ read=get_PrintObject, stored=false }; // 0, No
  __property double Top={ read=get_Top, stored=false }; // 0, No
  __property TOLEBOOL Visible={ read=get_Visible, stored=false }; // 0, No
  __property double Width={ read=get_Width, stored=false }; // 0, No
  __property TOLEBOOL Shadow={ read=get_Shadow, stored=false }; // 0, No
  __property TOLEBOOL AutoLoad={ read=get_AutoLoad, stored=false }; // 0, No
  __property TOLEBOOL AutoUpdate={ read=get_AutoUpdate, stored=false }; // 0, No
  __property BSTR SourceName={ read=get_SourceName, stored=false }; // 0, No
  __property BSTR LinkedCell={ read=get_LinkedCell, stored=false }; // 0, No
  __property BSTR ListFillRange={ read=get_ListFillRange, stored=false }; // 0, No
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnGotFocus;
  TNotifyEvent                   FOnLostFocus;
__published:
  __property TNotifyEvent OnGotFocus={ read=FOnGotFocus, write=FOnGotFocus };
  __property TNotifyEvent OnLostFocus={ read=FOnLostFocus, write=FOnLostFocus };
};

};     // namespace Excel_97

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Excel_97;
#endif

#pragma option pop

#endif // Excel_97_SRVRH

unit MSHTML;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : $Revision:   1.1  $
// File generated on 7/26/99 12:19:44 PM from Type Library described below.

// ************************************************************************ //
// Type Lib: C:\WINNT\System32\mshtml.tlb (1)
// IID\LCID: {3050F1C5-98B5-11CF-BB82-00AA00BDCE0B}\0
// Helpfile: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINNT\System32\STDOLE2.TLB)
//   (2) v4.0 StdVCL, (C:\WINNT\System32\STDVCL40.DLL)
// Errors:
//   Hint: Member 'type' of 'IHTMLEventObj' changed to 'type_'
//   Hint: Parameter 'String' of IHTMLElement.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLStyle.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLDOMTextNode.toString changed to 'String_'
//   Hint: Enum Member 'htmlInputImage' of '_htmlInput' changed to 'htmlInputImage_'
//   Hint: Parameter 'String' of IHTMLElementCollection.toString changed to 'String_'
//   Hint: Member 'type' of 'IHTMLStyleSheet' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLLinkElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLLinkElement' changed to 'type_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.expand changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.move changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.moveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.moveEnd changed to 'Unit_'
//   Hint: Parameter 'String' of IHTMLTxtRange.findText changed to 'String_'
//   Hint: Member 'type' of 'IHTMLUListElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLUListElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLOListElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLOListElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLLIElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLLIElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLSelectElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLSelectElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLSelectionObject' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputHiddenElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputTextElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputFileElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLOptionButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputImage' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLInputElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLTextAreaElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLTextAreaElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLRichtextElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLButtonElement' changed to 'type_'
//   Hint: Parameter 'String' of IOmNavigator.toString changed to 'String_'
//   Hint: Symbol 'assign' renamed to 'Assign_'
//   Hint: Parameter 'String' of IHTMLLocation.toString changed to 'String_'
//   Hint: Member 'repeat' of 'IHTMLEventObj2' changed to 'repeat_'
//   Hint: Member 'type' of 'IHTMLEventObj2' changed to 'type_'
//   Hint: Member 'repeat' of 'DispCEventObj' changed to 'repeat_'
//   Hint: Member 'type' of 'DispCEventObj' changed to 'type_'
//   Hint: Parameter 'String' of IHTMLDocument2.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLWindow2.toString changed to 'String_'
//   Hint: Member 'type' of 'IHTMLScriptElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLScriptElement' changed to 'type_'
//   Hint: Member 'object' of 'IHTMLObjectElement' changed to 'object_'
//   Hint: Member 'type' of 'IHTMLObjectElement' changed to 'type_'
//   Hint: Member 'object' of 'DispHTMLObjectElement' changed to 'object_'
//   Hint: Member 'type' of 'DispHTMLObjectElement' changed to 'type_'
//   Hint: Parameter 'object' of IHTMLOptionsHolder.isApartmentModel changed to 'object_'
//   Hint: Member 'type' of 'IHTMLStyleElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLStyleElement' changed to 'type_'
//   Hint: Parameter 'String' of IHTMLDialog.toString changed to 'String_'
//   Hint: Member 'type' of 'DispIHTMLInputButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputTextElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputFileElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLOptionButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputImage' changed to 'type_'
//   Error creating palette bitmap of (TScriptlet) : Error reading control bitmap
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
interface

uses Windows, ActiveX, Classes, Graphics, OleServer, OleCtrls, StdVCL;

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  MSHTMLMajorVersion = 4;
  MSHTMLMinorVersion = 0;

  LIBID_MSHTML: TGUID = '{3050F1C5-98B5-11CF-BB82-00AA00BDCE0B}';

  IID_IHTMLEventObj: TGUID = '{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement: TGUID = '{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle: TGUID = '{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFiltersCollection: TGUID = '{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSite: TGUID = '{3050F427-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehavior: TGUID = '{3050F425-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorFactory: TGUID = '{3050F429-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteOM: TGUID = '{3050F489-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorRender: TGUID = '{3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteRender: TGUID = '{3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle2: TGUID = '{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle: TGUID = '{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle2: TGUID = '{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyle: TGUID = '{3050F55A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyle: TGUID = '{3050F285-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRuleStyle: TGUID = '{3050F55C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRuleStyle: TGUID = '{3050F3D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle: TGUID = '{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCurrentStyle: TGUID = '{3050F557-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCurrentStyle: TGUID = '{3050F3DC-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFiltersCollection: TGUID = '{3050F3EF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRect: TGUID = '{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRectCollection: TGUID = '{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMNode: TGUID = '{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute: TGUID = '{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMTextNode: TGUID = '{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMAttribute: TGUID = '{3050F564-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMAttribute: TGUID = '{3050F4B2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMTextNode: TGUID = '{3050F565-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMTextNode: TGUID = '{3050F4BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection: TGUID = '{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMChildrenCollection: TGUID = '{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAttributeCollection: TGUID = '{3050F56C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAttributeCollection: TGUID = '{3050F4CC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMChildrenCollection: TGUID = '{3050F577-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMChildrenCollection: TGUID = '{3050F5AA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents2: TGUID = '{3050F60F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents: TGUID = '{3050F33C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection: TGUID = '{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement2: TGUID = '{3050F434-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUniqueName: TGUID = '{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDatabinding: TGUID = '{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCDefaultDispatch: TGUID = '{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCPropertyBehavior: TGUID = '{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCMethodBehavior: TGUID = '{3050F631-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCEventBehavior: TGUID = '{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCAttachBehavior: TGUID = '{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCDescBehavior: TGUID = '{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCDefaultDispatch: TGUID = '{3050F573-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCDefaultDispatch: TGUID = '{3050F4FC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCPropertyBehavior: TGUID = '{3050F57F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCPropertyBehavior: TGUID = '{3050F5DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCMethodBehavior: TGUID = '{3050F587-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCMethodBehavior: TGUID = '{3050F630-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCEventBehavior: TGUID = '{3050F574-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCEventBehavior: TGUID = '{3050F4FE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCAttachBehavior: TGUID = '{3050F583-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCAttachBehavior: TGUID = '{3050F5F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCDescBehavior: TGUID = '{3050F57E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCDescBehavior: TGUID = '{3050F5DD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUrnCollection: TGUID = '{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUrnCollection: TGUID = '{3050F580-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLGenericElement: TGUID = '{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLGenericElement: TGUID = '{3050F563-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLGenericElement: TGUID = '{3050F4B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRule: TGUID = '{3050F357-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRulesCollection: TGUID = '{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRule: TGUID = '{3050F3CE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRulesCollection: TGUID = '{3050F3CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetsCollection: TGUID = '{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet: TGUID = '{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheet: TGUID = '{3050F2E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetsCollection: TGUID = '{3050F37F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLinkElementEvents2: TGUID = '{3050F61D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLinkElementEvents: TGUID = '{3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement: TGUID = '{3050F205-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement2: TGUID = '{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLinkElement: TGUID = '{3050F524-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLinkElement: TGUID = '{3050F277-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTxtRange: TGUID = '{3050F220-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextRangeMetrics: TGUID = '{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextRangeMetrics2: TGUID = '{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFormElementEvents2: TGUID = '{3050F614-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFormElementEvents: TGUID = '{3050F364-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement: TGUID = '{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement2: TGUID = '{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFormElement: TGUID = '{3050F510-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFormElement: TGUID = '{3050F251-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLControlElementEvents2: TGUID = '{3050F612-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLControlElementEvents: TGUID = '{3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlElement: TGUID = '{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextElement: TGUID = '{3050F218-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTextElement: TGUID = '{3050F537-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTextElement: TGUID = '{3050F26A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTextContainerEvents2: TGUID = '{3050F624-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTextContainerEvents: TGUID = '{1FF6AA72-5842-11CF-A707-00AA00C0098D}';
  IID_IHTMLTextContainer: TGUID = '{3050F230-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlRange: TGUID = '{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLImgEvents2: TGUID = '{3050F616-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLImgEvents: TGUID = '{3050F25B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement: TGUID = '{3050F240-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImageElementFactory: TGUID = '{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLImg: TGUID = '{3050F51C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLImg: TGUID = '{3050F241-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLImageElementFactory: TGUID = '{3050F38F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement: TGUID = '{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement2: TGUID = '{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBody: TGUID = '{3050F507-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBody: TGUID = '{3050F24A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontElement: TGUID = '{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFontElement: TGUID = '{3050F512-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFontElement: TGUID = '{3050F27B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAnchorEvents2: TGUID = '{3050F610-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAnchorEvents: TGUID = '{3050F29D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAnchorElement: TGUID = '{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAnchorElement: TGUID = '{3050F502-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAnchorElement: TGUID = '{3050F248-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLabelEvents2: TGUID = '{3050F61C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLabelEvents: TGUID = '{3050F329-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLabelElement: TGUID = '{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLabelElement: TGUID = '{3050F522-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLabelElement: TGUID = '{3050F32B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLListElement: TGUID = '{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLListElement: TGUID = '{3050F525-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLListElement: TGUID = '{3050F272-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUListElement: TGUID = '{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUListElement: TGUID = '{3050F538-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUListElement: TGUID = '{3050F269-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOListElement: TGUID = '{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLOListElement: TGUID = '{3050F52A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOListElement: TGUID = '{3050F270-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLIElement: TGUID = '{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLIElement: TGUID = '{3050F523-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLIElement: TGUID = '{3050F273-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBlockElement: TGUID = '{3050F208-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBlockElement: TGUID = '{3050F506-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBlockElement: TGUID = '{3050F281-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDivElement: TGUID = '{3050F200-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDivElement: TGUID = '{3050F50C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDivElement: TGUID = '{3050F27E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDDElement: TGUID = '{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDDElement: TGUID = '{3050F50B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDDElement: TGUID = '{3050F27F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDTElement: TGUID = '{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDTElement: TGUID = '{3050F50D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDTElement: TGUID = '{3050F27C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBRElement: TGUID = '{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBRElement: TGUID = '{3050F53A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBRElement: TGUID = '{3050F280-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDListElement: TGUID = '{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDListElement: TGUID = '{3050F53B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDListElement: TGUID = '{3050F27D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHRElement: TGUID = '{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHRElement: TGUID = '{3050F53D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHRElement: TGUID = '{3050F252-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLParaElement: TGUID = '{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLParaElement: TGUID = '{3050F52C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLParaElement: TGUID = '{3050F26F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection2: TGUID = '{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLElementCollection: TGUID = '{3050F56B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLElementCollection: TGUID = '{3050F4CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHeaderElement: TGUID = '{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHeaderElement: TGUID = '{3050F515-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHeaderElement: TGUID = '{3050F27A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLSelectElementEvents2: TGUID = '{3050F622-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLSelectElementEvents: TGUID = '{3050F302-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement: TGUID = '{3050F244-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement2: TGUID = '{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSelectElement: TGUID = '{3050F531-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSelectElement: TGUID = '{3050F245-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectionObject: TGUID = '{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElement: TGUID = '{3050F211-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElementFactory: TGUID = '{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLOptionElement: TGUID = '{3050F52B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionElement: TGUID = '{3050F24D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionElementFactory: TGUID = '{3050F38D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLButtonElementEvents2: TGUID = '{3050F617-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLButtonElementEvents: TGUID = '{3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputTextElementEvents2: TGUID = '{3050F618-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLOptionButtonElementEvents2: TGUID = '{3050F619-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputFileElementEvents2: TGUID = '{3050F61A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputImageEvents2: TGUID = '{3050F61B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputTextElementEvents: TGUID = '{3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLOptionButtonElementEvents: TGUID = '{3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputFileElementEvents: TGUID = '{3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputImageEvents: TGUID = '{3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputElement: TGUID = '{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputButtonElement: TGUID = '{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputHiddenElement: TGUID = '{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputTextElement: TGUID = '{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputFileElement: TGUID = '{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionButtonElement: TGUID = '{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputImage: TGUID = '{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLInputElement: TGUID = '{3050F57D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputElement: TGUID = '{3050F5D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextAreaElement: TGUID = '{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTextAreaElement: TGUID = '{3050F521-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTextAreaElement: TGUID = '{3050F2AC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRichtextElement: TGUID = '{3050F54D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRichtextElement: TGUID = '{3050F2DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLButtonElement: TGUID = '{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLButtonElement: TGUID = '{3050F51F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLButtonElement: TGUID = '{3050F2C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMarqueeElementEvents2: TGUID = '{3050F61F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMarqueeElementEvents: TGUID = '{3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMarqueeElement: TGUID = '{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMarqueeElement: TGUID = '{3050F527-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMarqueeElement: TGUID = '{3050F2B9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTitleElement: TGUID = '{3050F322-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMetaElement: TGUID = '{3050F203-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseElement: TGUID = '{3050F204-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIsIndexElement: TGUID = '{3050F206-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNextIdElement: TGUID = '{3050F207-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHtmlElement: TGUID = '{3050F560-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHtmlElement: TGUID = '{3050F491-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHeadElement: TGUID = '{3050F561-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHeadElement: TGUID = '{3050F493-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTitleElement: TGUID = '{3050F516-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTitleElement: TGUID = '{3050F284-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMetaElement: TGUID = '{3050F517-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMetaElement: TGUID = '{3050F275-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBaseElement: TGUID = '{3050F518-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBaseElement: TGUID = '{3050F276-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLIsIndexElement: TGUID = '{3050F519-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLIsIndexElement: TGUID = '{3050F278-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNextIdElement: TGUID = '{3050F51A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNextIdElement: TGUID = '{3050F279-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseFontElement: TGUID = '{3050F202-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBaseFontElement: TGUID = '{3050F504-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBaseFontElement: TGUID = '{3050F282-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUnknownElement: TGUID = '{3050F209-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUnknownElement: TGUID = '{3050F539-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUnknownElement: TGUID = '{3050F268-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IOmHistory: TGUID = '{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}';
  IID_IHTMLMimeTypesCollection: TGUID = '{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPluginsCollection: TGUID = '{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOpsProfile: TGUID = '{3050F401-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IOmNavigator: TGUID = '{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}';
  IID_IHTMLLocation: TGUID = '{163BB1E0-6E00-11CF-837A-48DC04C10000}';
  CLASS_HTMLHistory: TGUID = '{FECEAAA3-8405-11CF-8BA1-00AA00476DA6}';
  CLASS_CMimeTypes: TGUID = '{3050F3FE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CPlugins: TGUID = '{3050F3FF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_COpsProfile: TGUID = '{3050F402-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNavigator: TGUID = '{FECEAAA6-8405-11CF-8BA1-00AA00476DA6}';
  CLASS_HTMLLocation: TGUID = '{163BB1E1-6E00-11CF-837A-48DC04C10000}';
  IID_IHTMLBookmarkCollection: TGUID = '{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDataTransfer: TGUID = '{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj2: TGUID = '{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCEventObj: TGUID = '{3050F558-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CEventObj: TGUID = '{3050F48A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents2: TGUID = '{3050F625-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents: TGUID = '{96A0A4E0-D062-11CF-94B6-00AA0060275C}';
  IID_IHTMLDocument: TGUID = '{626FC520-A41E-11CF-A731-00A0C9082637}';
  IID_IHTMLDocument2: TGUID = '{332C4425-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLFramesCollection2: TGUID = '{332C4426-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLWindow2: TGUID = '{332C4427-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLScreen: TGUID = '{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow3: TGUID = '{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLScreen: TGUID = '{3050F35D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLWindow2: TGUID = '{3050F55D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWindow2: TGUID = '{D48A6EC6-6A4A-11CF-94A7-444553540000}';
  DIID_DispHTMLWindowProxy: TGUID = '{3050F55E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWindowProxy: TGUID = '{3050F391-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents2: TGUID = '{3050F613-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents: TGUID = '{3050F260-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument3: TGUID = '{3050F485-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDocument: TGUID = '{3050F55F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDocument: TGUID = '{25336920-03F9-11CF-8FD0-00AA00686F13}';
  IID_IHTMLDocumentFragment: TGUID = '{3050F5E5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDocumentFragment: TGUID = '{3050F581-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDocumentFragment: TGUID = '{3050F5E6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DWebBridgeEvents: TGUID = '{A6D897FF-0A95-11D1-B0BA-006008166E11}';
  IID_IWebBridge: TGUID = '{AE24FDAD-03C6-11D1-8B76-0080C744F389}';
  IID_IWBScriptControl: TGUID = '{A5170870-0CF8-11D1-8B91-0080C744F389}';
  CLASS_Scriptlet: TGUID = '{AE24FDAE-03C6-11D1-8B76-0080C744F389}';
  IID_IHTMLEmbedElement: TGUID = '{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLEmbed: TGUID = '{3050F52E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLEmbed: TGUID = '{3050F25D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMapEvents2: TGUID = '{3050F61E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMapEvents: TGUID = '{3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection: TGUID = '{3050F383-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection2: TGUID = '{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMapElement: TGUID = '{3050F266-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAreasCollection: TGUID = '{3050F56A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAreasCollection: TGUID = '{3050F4CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMapElement: TGUID = '{3050F526-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMapElement: TGUID = '{3050F271-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAreaEvents2: TGUID = '{3050F611-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAreaEvents: TGUID = '{3050F366-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreaElement: TGUID = '{3050F265-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAreaElement: TGUID = '{3050F503-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAreaElement: TGUID = '{3050F283-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCaption: TGUID = '{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCaption: TGUID = '{3050F508-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCaption: TGUID = '{3050F2EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCommentElement: TGUID = '{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCommentElement: TGUID = '{3050F50A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCommentElement: TGUID = '{3050F317-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPhraseElement: TGUID = '{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSpanElement: TGUID = '{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPhraseElement: TGUID = '{3050F52D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPhraseElement: TGUID = '{3050F26E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSpanElement: TGUID = '{3050F548-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSpanElement: TGUID = '{3050F3F5-98B4-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTableEvents2: TGUID = '{3050F623-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTableEvents: TGUID = '{3050F407-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection: TGUID = '{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable: TGUID = '{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable2: TGUID = '{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCol: TGUID = '{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection2: TGUID = '{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow: TGUID = '{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow2: TGUID = '{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRowMetrics: TGUID = '{3050F413-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCell: TGUID = '{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTable: TGUID = '{3050F532-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTable: TGUID = '{3050F26B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCol: TGUID = '{3050F533-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCol: TGUID = '{3050F26C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableSection: TGUID = '{3050F534-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableSection: TGUID = '{3050F2E9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableRow: TGUID = '{3050F535-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableRow: TGUID = '{3050F26D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCell: TGUID = '{3050F536-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCell: TGUID = '{3050F246-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLScriptEvents2: TGUID = '{3050F621-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLScriptEvents: TGUID = '{3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement: TGUID = '{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLScriptElement: TGUID = '{3050F530-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLScriptElement: TGUID = '{3050F28C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNoShowElement: TGUID = '{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNoShowElement: TGUID = '{3050F528-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNoShowElement: TGUID = '{3050F38B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLObjectElementEvents2: TGUID = '{3050F620-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLObjectElementEvents: TGUID = '{3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement: TGUID = '{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement2: TGUID = '{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLObjectElement: TGUID = '{3050F529-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLObjectElement: TGUID = '{3050F24E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase: TGUID = '{3050F311-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameBase: TGUID = '{3050F541-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameBase: TGUID = '{3050F312-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameElement: TGUID = '{3050F313-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameElement: TGUID = '{3050F513-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameElement: TGUID = '{3050F314-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement: TGUID = '{3050F315-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement2: TGUID = '{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLIFrame: TGUID = '{3050F51B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLIFrame: TGUID = '{3050F316-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDivPosition: TGUID = '{3050F212-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFieldSetElement: TGUID = '{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLegendElement: TGUID = '{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDivPosition: TGUID = '{3050F50F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDivPosition: TGUID = '{3050F249-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFieldSetElement: TGUID = '{3050F545-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFieldSetElement: TGUID = '{3050F3E8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLegendElement: TGUID = '{3050F546-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLegendElement: TGUID = '{3050F3E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSpanFlow: TGUID = '{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSpanFlow: TGUID = '{3050F544-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSpanFlow: TGUID = '{3050F3E6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement: TGUID = '{3050F319-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement2: TGUID = '{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameSetSite: TGUID = '{3050F514-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameSetSite: TGUID = '{3050F31A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBGsound: TGUID = '{3050F369-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBGsound: TGUID = '{3050F53C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBGsound: TGUID = '{3050F370-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontNamesCollection: TGUID = '{3050F376-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontSizesCollection: TGUID = '{3050F377-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionsHolder: TGUID = '{3050F378-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLStyleElementEvents2: TGUID = '{3050F615-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLStyleElementEvents: TGUID = '{3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleElement: TGUID = '{3050F375-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleElement: TGUID = '{3050F511-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleElement: TGUID = '{3050F37D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleFontFace: TGUID = '{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleFontFace: TGUID = '{3050F3D4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICSSFilterSite: TGUID = '{3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupPointer: TGUID = '{3050F49F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupContainer: TGUID = '{3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IActiveIMMApp: TGUID = '{08C0E040-62D1-11D1-9326-0060B067B86E}';
  IID_IEnumRegisterWordA: TGUID = '{08C03412-F96B-11D0-A475-00AA006BCC59}';
  IID_IEnumRegisterWordW: TGUID = '{4955DD31-B159-11D0-8FCF-00AA006BCC59}';
  IID_IEnumInputContext: TGUID = '{09B5EAB0-F997-11D1-93D4-0060B067B86E}';
  IID_ICSSFilter: TGUID = '{3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISecureUrlHost: TGUID = '{C81984C4-74C8-11D2-BAA9-00C04FC2040E}';
  IID_IMarkupServices: TGUID = '{3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupTextFrags: TGUID = '{3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IXMLGenericParse: TGUID = '{E4E23071-4D07-11D2-AE76-0080C73BC199}';
  IID_IHTMLDialog: TGUID = '{3050F216-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog2: TGUID = '{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLModelessInit: TGUID = '{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_ThreadDialogProcParam: TGUID = '{3050F5EB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDialog: TGUID = '{3050F28A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior: TGUID = '{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAppBehavior: TGUID = '{3050F57C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAppBehavior: TGUID = '{3050F5CB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_OldHTMLDocument: TGUID = '{D48A6EC9-6A4A-11CF-94A7-444553540000}';
  CLASS_OldHTMLFormElement: TGUID = '{0D04D285-6BEC-11CF-8B97-00AA00476DA6}';
  DIID_DispIHTMLInputButtonElement: TGUID = '{3050F51E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputButtonElement: TGUID = '{3050F2B4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputTextElement: TGUID = '{3050F520-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputTextElement: TGUID = '{3050F2AB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputFileElement: TGUID = '{3050F542-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputFileElement: TGUID = '{3050F2AE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLOptionButtonElement: TGUID = '{3050F509-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionButtonElement: TGUID = '{3050F2BE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputImage: TGUID = '{3050F51D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_htmlInputImage: TGUID = '{3050F2C4-98B5-11CF-BB82-00AA00BDCE0B}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// _htmlDesignMode constants
type
  _htmlDesignMode = TOleEnum;
const
  htmlDesignModeInherit = $FFFFFFFE;
  htmlDesignModeOn = $FFFFFFFF;
  htmlDesignModeOff = $00000000;
  htmlDesignMode_Max = $7FFFFFFF;

// _htmlZOrder constants
type
  _htmlZOrder = TOleEnum;
const
  htmlZOrderFront = $00000000;
  htmlZOrderBack = $00000001;
  htmlZOrder_Max = $7FFFFFFF;

// _htmlClear constants
type
  _htmlClear = TOleEnum;
const
  htmlClearNotSet = $00000000;
  htmlClearAll = $00000001;
  htmlClearLeft = $00000002;
  htmlClearRight = $00000003;
  htmlClearBoth = $00000004;
  htmlClearNone = $00000005;
  htmlClear_Max = $7FFFFFFF;

// _htmlControlAlign constants
type
  _htmlControlAlign = TOleEnum;
const
  htmlControlAlignNotSet = $00000000;
  htmlControlAlignLeft = $00000001;
  htmlControlAlignCenter = $00000002;
  htmlControlAlignRight = $00000003;
  htmlControlAlignTextTop = $00000004;
  htmlControlAlignAbsMiddle = $00000005;
  htmlControlAlignBaseline = $00000006;
  htmlControlAlignAbsBottom = $00000007;
  htmlControlAlignBottom = $00000008;
  htmlControlAlignMiddle = $00000009;
  htmlControlAlignTop = $0000000A;
  htmlControlAlign_Max = $7FFFFFFF;

// _htmlBlockAlign constants
type
  _htmlBlockAlign = TOleEnum;
const
  htmlBlockAlignNotSet = $00000000;
  htmlBlockAlignLeft = $00000001;
  htmlBlockAlignCenter = $00000002;
  htmlBlockAlignRight = $00000003;
  htmlBlockAlignJustify = $00000004;
  htmlBlockAlign_Max = $7FFFFFFF;

// _htmlReadyState constants
type
  _htmlReadyState = TOleEnum;
const
  htmlReadyStateuninitialized = $00000000;
  htmlReadyStateloading = $00000001;
  htmlReadyStateloaded = $00000002;
  htmlReadyStateinteractive = $00000003;
  htmlReadyStatecomplete = $00000004;
  htmlReadyState_Max = $7FFFFFFF;

// _htmlLoop constants
type
  _htmlLoop = TOleEnum;
const
  htmlLoopLoopInfinite = $FFFFFFFF;
  htmlLoop_Max = $7FFFFFFF;

// _styleTextTransform constants
type
  _styleTextTransform = TOleEnum;
const
  styleTextTransformNotSet = $00000000;
  styleTextTransformCapitalize = $00000001;
  styleTextTransformLowercase = $00000002;
  styleTextTransformUppercase = $00000003;
  styleTextTransformNone = $00000004;
  styleTextTransform_Max = $7FFFFFFF;

// _styleDataRepeat constants
type
  _styleDataRepeat = TOleEnum;
const
  styleDataRepeatNone = $00000000;
  styleDataRepeatInner = $00000001;
  styleDataRepeat_Max = $7FFFFFFF;

// _styleOverflow constants
type
  _styleOverflow = TOleEnum;
const
  styleOverflowNotSet = $00000000;
  styleOverflowAuto = $00000001;
  styleOverflowHidden = $00000002;
  styleOverflowVisible = $00000003;
  styleOverflowScroll = $00000004;
  styleOverflow_Max = $7FFFFFFF;

// _styleTableLayout constants
type
  _styleTableLayout = TOleEnum;
const
  styleTableLayoutNotSet = $00000000;
  styleTableLayoutAuto = $00000001;
  styleTableLayoutFixed = $00000002;
  styleTableLayout_Max = $7FFFFFFF;

// _styleBorderCollapse constants
type
  _styleBorderCollapse = TOleEnum;
const
  styleBorderCollapseNotSet = $00000000;
  styleBorderCollapseSeparate = $00000001;
  styleBorderCollapseCollapse = $00000002;
  styleBorderCollapse_Max = $7FFFFFFF;

// _styleFontStyle constants
type
  _styleFontStyle = TOleEnum;
const
  styleFontStyleNotSet = $00000000;
  styleFontStyleItalic = $00000001;
  styleFontStyleOblique = $00000002;
  styleFontStyleNormal = $00000003;
  styleFontStyle_Max = $7FFFFFFF;

// _styleFontVariant constants
type
  _styleFontVariant = TOleEnum;
const
  styleFontVariantNotSet = $00000000;
  styleFontVariantSmallCaps = $00000001;
  styleFontVariantNormal = $00000002;
  styleFontVariant_Max = $7FFFFFFF;

// _styleBackgroundRepeat constants
type
  _styleBackgroundRepeat = TOleEnum;
const
  styleBackgroundRepeatRepeat = $00000000;
  styleBackgroundRepeatRepeatX = $00000001;
  styleBackgroundRepeatRepeatY = $00000002;
  styleBackgroundRepeatNoRepeat = $00000003;
  styleBackgroundRepeatNotSet = $00000004;
  styleBackgroundRepeat_Max = $7FFFFFFF;

// _styleBackgroundAttachment constants
type
  _styleBackgroundAttachment = TOleEnum;
const
  styleBackgroundAttachmentFixed = $00000000;
  styleBackgroundAttachmentScroll = $00000001;
  styleBackgroundAttachmentNotSet = $00000002;
  styleBackgroundAttachment_Max = $7FFFFFFF;

// _styleVerticalAlign constants
type
  _styleVerticalAlign = TOleEnum;
const
  styleVerticalAlignBaseline = $00000000;
  styleVerticalAlignSub = $00000001;
  styleVerticalAlignSuper = $00000002;
  styleVerticalAlignTop = $00000003;
  styleVerticalAlignTextTop = $00000004;
  styleVerticalAlignMiddle = $00000005;
  styleVerticalAlignBottom = $00000006;
  styleVerticalAlignTextBottom = $00000007;
  styleVerticalAlignPercentage = $00000008;
  styleVerticalAlignNotSet = $00000009;
  styleVerticalAlign_Max = $7FFFFFFF;

// _styleFontWeight constants
type
  _styleFontWeight = TOleEnum;
const
  styleFontWeightNotSet = $00000000;
  styleFontWeight100 = $00000001;
  styleFontWeight200 = $00000002;
  styleFontWeight300 = $00000003;
  styleFontWeight400 = $00000004;
  styleFontWeight500 = $00000005;
  styleFontWeight600 = $00000006;
  styleFontWeight700 = $00000007;
  styleFontWeight800 = $00000008;
  styleFontWeight900 = $00000009;
  styleFontWeightNormal = $0000000A;
  styleFontWeightBold = $0000000B;
  styleFontWeightBolder = $0000000C;
  styleFontWeightLighter = $0000000D;
  styleFontWeight_Max = $7FFFFFFF;

// _styleBackgroundPositionX constants
type
  _styleBackgroundPositionX = TOleEnum;
const
  styleBackgroundPositionXNotSet = $00000000;
  styleBackgroundPositionXLeft = $00000001;
  styleBackgroundPositionXCenter = $00000002;
  styleBackgroundPositionXRight = $00000003;
  styleBackgroundPositionX_Max = $7FFFFFFF;

// _styleBackgroundPositionY constants
type
  _styleBackgroundPositionY = TOleEnum;
const
  styleBackgroundPositionYNotSet = $00000000;
  styleBackgroundPositionYTop = $00000001;
  styleBackgroundPositionYCenter = $00000002;
  styleBackgroundPositionYBottom = $00000003;
  styleBackgroundPositionY_Max = $7FFFFFFF;

// _styleFontSize constants
type
  _styleFontSize = TOleEnum;
const
  styleFontSizeXXSmall = $00000000;
  styleFontSizeXSmall = $00000001;
  styleFontSizeSmall = $00000002;
  styleFontSizeMedium = $00000003;
  styleFontSizeLarge = $00000004;
  styleFontSizeXLarge = $00000005;
  styleFontSizeXXLarge = $00000006;
  styleFontSizeSmaller = $00000007;
  styleFontSizeLarger = $00000008;
  styleFontSize_Max = $7FFFFFFF;

// _styleAuto constants
type
  _styleAuto = TOleEnum;
const
  styleAutoAuto = $00000000;
  styleAuto_Max = $7FFFFFFF;

// _styleNormal constants
type
  _styleNormal = TOleEnum;
const
  styleNormalNormal = $00000000;
  styleNormal_Max = $7FFFFFFF;

// _styleBorderWidth constants
type
  _styleBorderWidth = TOleEnum;
const
  styleBorderWidthThin = $00000000;
  styleBorderWidthMedium = $00000001;
  styleBorderWidthThick = $00000002;
  styleBorderWidth_Max = $7FFFFFFF;

// _stylePosition constants
type
  _stylePosition = TOleEnum;
const
  stylePositionNotSet = $00000000;
  stylePositionstatic = $00000001;
  stylePositionrelative = $00000002;
  stylePositionabsolute = $00000003;
  stylePositionfixed = $00000004;
  stylePosition_Max = $7FFFFFFF;

// _styleBorderStyle constants
type
  _styleBorderStyle = TOleEnum;
const
  styleBorderStyleNotSet = $00000000;
  styleBorderStyleDotted = $00000001;
  styleBorderStyleDashed = $00000002;
  styleBorderStyleSolid = $00000003;
  styleBorderStyleDouble = $00000004;
  styleBorderStyleGroove = $00000005;
  styleBorderStyleRidge = $00000006;
  styleBorderStyleInset = $00000007;
  styleBorderStyleOutset = $00000008;
  styleBorderStyleNone = $00000009;
  styleBorderStyle_Max = $7FFFFFFF;

// _styleStyleFloat constants
type
  _styleStyleFloat = TOleEnum;
const
  styleStyleFloatNotSet = $00000000;
  styleStyleFloatLeft = $00000001;
  styleStyleFloatRight = $00000002;
  styleStyleFloatNone = $00000003;
  styleStyleFloat_Max = $7FFFFFFF;

// _styleDisplay constants
type
  _styleDisplay = TOleEnum;
const
  styleDisplayNotSet = $00000000;
  styleDisplayBlock = $00000001;
  styleDisplayInline = $00000002;
  styleDisplayListItem = $00000003;
  styleDisplayNone = $00000004;
  styleDisplayTableHeaderGroup = $00000005;
  styleDisplayTableFooterGroup = $00000006;
  styleDisplay_Max = $7FFFFFFF;

// _styleVisibility constants
type
  _styleVisibility = TOleEnum;
const
  styleVisibilityNotSet = $00000000;
  styleVisibilityInherit = $00000001;
  styleVisibilityVisible = $00000002;
  styleVisibilityHidden = $00000003;
  styleVisibility_Max = $7FFFFFFF;

// _styleListStyleType constants
type
  _styleListStyleType = TOleEnum;
const
  styleListStyleTypeNotSet = $00000000;
  styleListStyleTypeDisc = $00000001;
  styleListStyleTypeCircle = $00000002;
  styleListStyleTypeSquare = $00000003;
  styleListStyleTypeDecimal = $00000004;
  styleListStyleTypeLowerRoman = $00000005;
  styleListStyleTypeUpperRoman = $00000006;
  styleListStyleTypeLowerAlpha = $00000007;
  styleListStyleTypeUpperAlpha = $00000008;
  styleListStyleTypeNone = $00000009;
  styleListStyleType_Max = $7FFFFFFF;

// _styleListStylePosition constants
type
  _styleListStylePosition = TOleEnum;
const
  styleListStylePositionNotSet = $00000000;
  styleListStylePositionInside = $00000001;
  styleListStylePositionOutSide = $00000002;
  styleListStylePosition_Max = $7FFFFFFF;

// _styleWhiteSpace constants
type
  _styleWhiteSpace = TOleEnum;
const
  styleWhiteSpaceNotSet = $00000000;
  styleWhiteSpaceNormal = $00000001;
  styleWhiteSpacePre = $00000002;
  styleWhiteSpaceNowrap = $00000003;
  styleWhiteSpace_Max = $7FFFFFFF;

// _stylePageBreak constants
type
  _stylePageBreak = TOleEnum;
const
  stylePageBreakNotSet = $00000000;
  stylePageBreakAuto = $00000001;
  stylePageBreakAlways = $00000002;
  stylePageBreakLeft = $00000003;
  stylePageBreakRight = $00000004;
  stylePageBreak_Max = $7FFFFFFF;

// _styleCursor constants
type
  _styleCursor = TOleEnum;
const
  styleCursorAuto = $00000000;
  styleCursorCrosshair = $00000001;
  styleCursorDefault = $00000002;
  styleCursorHand = $00000003;
  styleCursorMove = $00000004;
  styleCursorE_resize = $00000005;
  styleCursorNe_resize = $00000006;
  styleCursorNw_resize = $00000007;
  styleCursorN_resize = $00000008;
  styleCursorSe_resize = $00000009;
  styleCursorSw_resize = $0000000A;
  styleCursorS_resize = $0000000B;
  styleCursorW_resize = $0000000C;
  styleCursorText = $0000000D;
  styleCursorWait = $0000000E;
  styleCursorHelp = $0000000F;
  styleCursorNotSet = $00000010;
  styleCursor_Max = $7FFFFFFF;

// _styleDir constants
type
  _styleDir = TOleEnum;
const
  styleDirNotSet = $00000000;
  styleDirLeftToRight = $00000001;
  styleDirRightToLeft = $00000002;
  styleDirInherit = $00000003;
  styleDir_Max = $7FFFFFFF;

// _styleBidi constants
type
  _styleBidi = TOleEnum;
const
  styleBidiNotSet = $00000000;
  styleBidiNormal = $00000001;
  styleBidiEmbed = $00000002;
  styleBidiOverride = $00000003;
  styleBidiInherit = $00000004;
  styleBidi_Max = $7FFFFFFF;

// _styleImeMode constants
type
  _styleImeMode = TOleEnum;
const
  styleImeModeAuto = $00000000;
  styleImeModeActive = $00000001;
  styleImeModeInactive = $00000002;
  styleImeModeDisabled = $00000003;
  styleImeModeNotSet = $00000004;
  styleImeMode_Max = $7FFFFFFF;

// _styleRubyAlign constants
type
  _styleRubyAlign = TOleEnum;
const
  styleRubyAlignNotSet = $00000000;
  styleRubyAlignAuto = $00000001;
  styleRubyAlignLeft = $00000002;
  styleRubyAlignCenter = $00000003;
  styleRubyAlignRight = $00000004;
  styleRubyAlignDistributeLetter = $00000005;
  styleRubyAlignDistributeSpace = $00000006;
  styleRubyAlignLineEdge = $00000007;
  styleRubyAlign_Max = $7FFFFFFF;

// _styleRubyPosition constants
type
  _styleRubyPosition = TOleEnum;
const
  styleRubyPositionNotSet = $00000000;
  styleRubyPositionAbove = $00000001;
  styleRubyPositionInline = $00000002;
  styleRubyPosition_Max = $7FFFFFFF;

// _styleRubyOverhang constants
type
  _styleRubyOverhang = TOleEnum;
const
  styleRubyOverhangNotSet = $00000000;
  styleRubyOverhangAuto = $00000001;
  styleRubyOverhangWhitespace = $00000002;
  styleRubyOverhangNone = $00000003;
  styleRubyOverhang_Max = $7FFFFFFF;

// _styleLayoutGridChar constants
type
  _styleLayoutGridChar = TOleEnum;
const
  styleLayoutGridCharNotSet = $00000000;
  styleLayoutGridCharAuto = $00000001;
  styleLayoutGridCharNone = $00000002;
  styleLayoutGridChar_Max = $7FFFFFFF;

// _styleLayoutGridLine constants
type
  _styleLayoutGridLine = TOleEnum;
const
  styleLayoutGridLineNotSet = $00000000;
  styleLayoutGridLineAuto = $00000001;
  styleLayoutGridLineNone = $00000002;
  styleLayoutGridLine_Max = $7FFFFFFF;

// _styleLayoutGridMode constants
type
  _styleLayoutGridMode = TOleEnum;
const
  styleLayoutGridModeNotSet = $00000000;
  styleLayoutGridModeChar = $00000001;
  styleLayoutGridModeLine = $00000002;
  styleLayoutGridModeBoth = $00000003;
  styleLayoutGridModeNone = $00000004;
  styleLayoutGridMode_Max = $7FFFFFFF;

// _styleLayoutGridType constants
type
  _styleLayoutGridType = TOleEnum;
const
  styleLayoutGridTypeNotSet = $00000000;
  styleLayoutGridTypeLoose = $00000001;
  styleLayoutGridTypeStrict = $00000002;
  styleLayoutGridTypeFixed = $00000003;
  styleLayoutGridType_Max = $7FFFFFFF;

// _styleLineBreak constants
type
  _styleLineBreak = TOleEnum;
const
  styleLineBreakNotSet = $00000000;
  styleLineBreakNormal = $00000001;
  styleLineBreakStrict = $00000002;
  styleLineBreak_Max = $7FFFFFFF;

// _styleWordBreak constants
type
  _styleWordBreak = TOleEnum;
const
  styleWordBreakNotSet = $00000000;
  styleWordBreakNormal = $00000001;
  styleWordBreakBreakAll = $00000002;
  styleWordBreakKeepAll = $00000003;
  styleWordBreak_Max = $7FFFFFFF;

// _styleTextJustify constants
type
  _styleTextJustify = TOleEnum;
const
  styleTextJustifyNotSet = $00000000;
  styleTextJustifyInterWord = $00000001;
  styleTextJustifyNewspaper = $00000002;
  styleTextJustifyDistribute = $00000003;
  styleTextJustifyDistributeAllLines = $00000004;
  styleTextJustifyInterIdeograph = $00000005;
  styleTextJustifyAuto = $00000006;
  styleTextJustify_Max = $7FFFFFFF;

// _styleTextJustifyTrim constants
type
  _styleTextJustifyTrim = TOleEnum;
const
  styleTextJustifyTrimNotSet = $00000000;
  styleTextJustifyTrimNone = $00000001;
  styleTextJustifyTrimPunctuation = $00000002;
  styleTextJustifyTrimPunctAndKana = $00000003;
  styleTextJustifyTrim_Max = $7FFFFFFF;

// _styleAccelerator constants
type
  _styleAccelerator = TOleEnum;
const
  styleAcceleratorFalse = $00000000;
  styleAcceleratorTrue = $00000001;
  styleAccelerator_Max = $7FFFFFFF;

// _textDecoration constants
type
  _textDecoration = TOleEnum;
const
  textDecorationNone = $00000000;
  textDecorationUnderline = $00000001;
  textDecorationOverline = $00000002;
  textDecorationLineThrough = $00000003;
  textDecorationBlink = $00000004;
  textDecoration_Max = $7FFFFFFF;

// _htmlListType constants
type
  _htmlListType = TOleEnum;
const
  htmlListTypeNotSet = $00000000;
  htmlListTypeLargeAlpha = $00000001;
  htmlListTypeSmallAlpha = $00000002;
  htmlListTypeLargeRoman = $00000003;
  htmlListTypeSmallRoman = $00000004;
  htmlListTypeNumbers = $00000005;
  htmlListTypeDisc = $00000006;
  htmlListTypeCircle = $00000007;
  htmlListTypeSquare = $00000008;
  htmlListType_Max = $7FFFFFFF;

// _htmlMethod constants
type
  _htmlMethod = TOleEnum;
const
  htmlMethodNotSet = $00000000;
  htmlMethodGet = $00000001;
  htmlMethodPost = $00000002;
  htmlMethod_Max = $7FFFFFFF;

// _htmlWrap constants
type
  _htmlWrap = TOleEnum;
const
  htmlWrapOff = $00000001;
  htmlWrapSoft = $00000002;
  htmlWrapHard = $00000003;
  htmlWrap_Max = $7FFFFFFF;

// _htmlDir constants
type
  _htmlDir = TOleEnum;
const
  htmlDirNotSet = $00000000;
  htmlDirLeftToRight = $00000001;
  htmlDirRightToLeft = $00000002;
  htmlDir_Max = $7FFFFFFF;

// _htmlInput constants
type
  _htmlInput = TOleEnum;
const
  htmlInputNotSet = $00000000;
  htmlInputButton = $00000001;
  htmlInputCheckbox = $00000002;
  htmlInputFile = $00000003;
  htmlInputHidden = $00000004;
  htmlInputImage_ = $00000005;
  htmlInputPassword = $00000006;
  htmlInputRadio = $00000007;
  htmlInputReset = $00000008;
  htmlInputSelectOne = $00000009;
  htmlInputSelectMultiple = $0000000A;
  htmlInputSubmit = $0000000B;
  htmlInputText = $0000000C;
  htmlInputTextarea = $0000000D;
  htmlInputRichtext = $0000000E;
  htmlInput_Max = $7FFFFFFF;

// _htmlEncoding constants
type
  _htmlEncoding = TOleEnum;
const
  htmlEncodingURL = $00000000;
  htmlEncodingMultipart = $00000001;
  htmlEncodingText = $00000002;
  htmlEncoding_Max = $7FFFFFFF;

// _htmlAdjacency constants
type
  _htmlAdjacency = TOleEnum;
const
  htmlAdjacencyBeforeBegin = $00000001;
  htmlAdjacencyAfterBegin = $00000002;
  htmlAdjacencyBeforeEnd = $00000003;
  htmlAdjacencyAfterEnd = $00000004;
  htmlAdjacency_Max = $7FFFFFFF;

// _htmlTabIndex constants
type
  _htmlTabIndex = TOleEnum;
const
  htmlTabIndexNotSet = $FFFF8000;
  htmlTabIndex_Max = $7FFFFFFF;

// _htmlComponent constants
type
  _htmlComponent = TOleEnum;
const
  htmlComponentClient = $00000000;
  htmlComponentSbLeft = $00000001;
  htmlComponentSbPageLeft = $00000002;
  htmlComponentSbHThumb = $00000003;
  htmlComponentSbPageRight = $00000004;
  htmlComponentSbRight = $00000005;
  htmlComponentSbUp = $00000006;
  htmlComponentSbPageUp = $00000007;
  htmlComponentSbVThumb = $00000008;
  htmlComponentSbPageDown = $00000009;
  htmlComponentSbDown = $0000000A;
  htmlComponentSbLeft2 = $0000000B;
  htmlComponentSbPageLeft2 = $0000000C;
  htmlComponentSbRight2 = $0000000D;
  htmlComponentSbPageRight2 = $0000000E;
  htmlComponentSbUp2 = $0000000F;
  htmlComponentSbPageUp2 = $00000010;
  htmlComponentSbDown2 = $00000011;
  htmlComponentSbPageDown2 = $00000012;
  htmlComponentSbTop = $00000013;
  htmlComponentSbBottom = $00000014;
  htmlComponentOutside = $00000015;
  htmlComponentGHTopLeft = $00000016;
  htmlComponentGHLeft = $00000017;
  htmlComponentGHTop = $00000018;
  htmlComponentGHBottomLeft = $00000019;
  htmlComponentGHTopRight = $0000001A;
  htmlComponentGHBottom = $0000001B;
  htmlComponentGHRight = $0000001C;
  htmlComponentGHBottomRight = $0000001D;
  htmlComponent_Max = $7FFFFFFF;

// _htmlApplyLocation constants
type
  _htmlApplyLocation = TOleEnum;
const
  htmlApplyLocationInside = $00000000;
  htmlApplyLocationOutside = $00000001;
  htmlApplyLocation_Max = $7FFFFFFF;

// _htmlUnit constants
type
  _htmlUnit = TOleEnum;
const
  htmlUnitCharacter = $00000001;
  htmlUnitWord = $00000002;
  htmlUnitSentence = $00000003;
  htmlUnitTextEdit = $00000006;
  htmlUnit_Max = $7FFFFFFF;

// _htmlEndPoints constants
type
  _htmlEndPoints = TOleEnum;
const
  htmlEndPointsStartToStart = $00000001;
  htmlEndPointsStartToEnd = $00000002;
  htmlEndPointsEndToStart = $00000003;
  htmlEndPointsEndToEnd = $00000004;
  htmlEndPoints_Max = $7FFFFFFF;

// _htmlDirection constants
type
  _htmlDirection = TOleEnum;
const
  htmlDirectionForward = $0001869F;
  htmlDirectionBackward = $FFFE7961;
  htmlDirection_Max = $7FFFFFFF;

// _htmlStart constants
type
  _htmlStart = TOleEnum;
const
  htmlStartfileopen = $00000000;
  htmlStartmouseover = $00000001;
  htmlStart_Max = $7FFFFFFF;

// _bodyScroll constants
type
  _bodyScroll = TOleEnum;
const
  bodyScrollyes = $00000001;
  bodyScrollno = $00000002;
  bodyScrollauto = $00000004;
  bodyScrolldefault = $00000003;
  bodyScroll_Max = $7FFFFFFF;

// _htmlSelectType constants
type
  _htmlSelectType = TOleEnum;
const
  htmlSelectTypeSelectOne = $00000001;
  htmlSelectTypeSelectMultiple = $00000002;
  htmlSelectType_Max = $7FFFFFFF;

// _htmlSelection constants
type
  _htmlSelection = TOleEnum;
const
  htmlSelectionNone = $00000000;
  htmlSelectionText = $00000001;
  htmlSelectionControl = $00000002;
  htmlSelectionTable = $00000003;
  htmlSelection_Max = $7FFFFFFF;

// _htmlMarqueeBehavior constants
type
  _htmlMarqueeBehavior = TOleEnum;
const
  htmlMarqueeBehaviorscroll = $00000001;
  htmlMarqueeBehaviorslide = $00000002;
  htmlMarqueeBehavioralternate = $00000003;
  htmlMarqueeBehavior_Max = $7FFFFFFF;

// _htmlMarqueeDirection constants
type
  _htmlMarqueeDirection = TOleEnum;
const
  htmlMarqueeDirectionleft = $00000001;
  htmlMarqueeDirectionright = $00000003;
  htmlMarqueeDirectionup = $00000005;
  htmlMarqueeDirectiondown = $00000007;
  htmlMarqueeDirection_Max = $7FFFFFFF;

// _htmlPersistState constants
type
  _htmlPersistState = TOleEnum;
const
  htmlPersistStateNormal = $00000000;
  htmlPersistStateFavorite = $00000001;
  htmlPersistStateHistory = $00000002;
  htmlPersistStateSnapshot = $00000003;
  htmlPersistStateUserData = $00000004;
  htmlPersistState_Max = $7FFFFFFF;

// _htmlDropEffect constants
type
  _htmlDropEffect = TOleEnum;
const
  htmlDropEffectCopy = $00000000;
  htmlDropEffectLink = $00000001;
  htmlDropEffectMove = $00000002;
  htmlDropEffectNone = $00000003;
  htmlDropEffect_Max = $7FFFFFFF;

// _htmlEffectAllowed constants
type
  _htmlEffectAllowed = TOleEnum;
const
  htmlEffectAllowedCopy = $00000000;
  htmlEffectAllowedLink = $00000001;
  htmlEffectAllowedMove = $00000002;
  htmlEffectAllowedCopyLink = $00000003;
  htmlEffectAllowedCopyMove = $00000004;
  htmlEffectAllowedLinkMove = $00000005;
  htmlEffectAllowedAll = $00000006;
  htmlEffectAllowedNone = $00000007;
  htmlEffectAllowedUninitialized = $00000008;
  htmlEffectAllowed_Max = $7FFFFFFF;

// _BoolValue constants
type
  _BoolValue = TOleEnum;
const
  BoolValue_Max = $7FFFFFFF;

// _htmlCaptionAlign constants
type
  _htmlCaptionAlign = TOleEnum;
const
  htmlCaptionAlignNotSet = $00000000;
  htmlCaptionAlignLeft = $00000001;
  htmlCaptionAlignCenter = $00000002;
  htmlCaptionAlignRight = $00000003;
  htmlCaptionAlignJustify = $00000004;
  htmlCaptionAlignTop = $00000005;
  htmlCaptionAlignBottom = $00000006;
  htmlCaptionAlign_Max = $7FFFFFFF;

// _htmlCaptionVAlign constants
type
  _htmlCaptionVAlign = TOleEnum;
const
  htmlCaptionVAlignNotSet = $00000000;
  htmlCaptionVAlignTop = $00000001;
  htmlCaptionVAlignBottom = $00000002;
  htmlCaptionVAlign_Max = $7FFFFFFF;

// _htmlFrame constants
type
  _htmlFrame = TOleEnum;
const
  htmlFrameNotSet = $00000000;
  htmlFramevoid = $00000001;
  htmlFrameabove = $00000002;
  htmlFramebelow = $00000003;
  htmlFramehsides = $00000004;
  htmlFramelhs = $00000005;
  htmlFramerhs = $00000006;
  htmlFramevsides = $00000007;
  htmlFramebox = $00000008;
  htmlFrameborder = $00000009;
  htmlFrame_Max = $7FFFFFFF;

// _htmlRules constants
type
  _htmlRules = TOleEnum;
const
  htmlRulesNotSet = $00000000;
  htmlRulesnone = $00000001;
  htmlRulesgroups = $00000002;
  htmlRulesrows = $00000003;
  htmlRulescols = $00000004;
  htmlRulesall = $00000005;
  htmlRules_Max = $7FFFFFFF;

// _htmlCellAlign constants
type
  _htmlCellAlign = TOleEnum;
const
  htmlCellAlignNotSet = $00000000;
  htmlCellAlignLeft = $00000001;
  htmlCellAlignCenter = $00000002;
  htmlCellAlignRight = $00000003;
  htmlCellAlignMiddle = $00000002;
  htmlCellAlign_Max = $7FFFFFFF;

// _htmlCellVAlign constants
type
  _htmlCellVAlign = TOleEnum;
const
  htmlCellVAlignNotSet = $00000000;
  htmlCellVAlignTop = $00000001;
  htmlCellVAlignMiddle = $00000002;
  htmlCellVAlignBottom = $00000003;
  htmlCellVAlignBaseline = $00000004;
  htmlCellVAlignCenter = $00000002;
  htmlCellVAlign_Max = $7FFFFFFF;

// _frameScrolling constants
type
  _frameScrolling = TOleEnum;
const
  frameScrollingyes = $00000001;
  frameScrollingno = $00000002;
  frameScrollingauto = $00000004;
  frameScrolling_Max = $7FFFFFFF;

// _SECUREURLHOSTVALIDATE_FLAGS constants
type
  _SECUREURLHOSTVALIDATE_FLAGS = TOleEnum;
const
  SUHV_PROMPTBEFORENO = $00000001;
  SUHV_SILENTYES = $00000002;
  SUHV_UNSECURESOURCE = $00000004;
  SECUREURLHOSTVALIDATE_FLAGS_Max = $7FFFFFFF;

// _POINTER_GRAVITY constants
type
  _POINTER_GRAVITY = TOleEnum;
const
  POINTER_GRAVITY_Left = $00000000;
  POINTER_GRAVITY_Right = $00000001;
  POINTER_GRAVITY_Max = $7FFFFFFF;

// _ELEMENT_ADJACENCY constants
type
  _ELEMENT_ADJACENCY = TOleEnum;
const
  ELEM_ADJ_BeforeBegin = $00000000;
  ELEM_ADJ_AfterBegin = $00000001;
  ELEM_ADJ_BeforeEnd = $00000002;
  ELEM_ADJ_AfterEnd = $00000003;
  ELEMENT_ADJACENCY_Max = $7FFFFFFF;

// _MARKUP_CONTEXT_TYPE constants
type
  _MARKUP_CONTEXT_TYPE = TOleEnum;
const
  CONTEXT_TYPE_None = $00000000;
  CONTEXT_TYPE_Text = $00000001;
  CONTEXT_TYPE_EnterScope = $00000002;
  CONTEXT_TYPE_ExitScope = $00000003;
  CONTEXT_TYPE_NoScope = $00000004;
  MARKUP_CONTEXT_TYPE_Max = $7FFFFFFF;

// _FINDTEXT_FLAGS constants
type
  _FINDTEXT_FLAGS = TOleEnum;
const
  FINDTEXT_BACKWARDS = $00000001;
  FINDTEXT_WHOLEWORD = $00000002;
  FINDTEXT_MATCHCASE = $00000004;
  FINDTEXT_RAW = $00020000;
  FINDTEXT_MATCHDIAC = $20000000;
  FINDTEXT_MATCHKASHIDA = $40000000;
  FINDTEXT_MATCHALEFHAMZA = $80000000;
  FINDTEXT_FLAGS_Max = $7FFFFFFF;

// _MOVEUNIT_ACTION constants
type
  _MOVEUNIT_ACTION = TOleEnum;
const
  MOVEUNIT_PREVCHAR = $00000000;
  MOVEUNIT_NEXTCHAR = $00000001;
  MOVEUNIT_PREVCLUSTERBEGIN = $00000002;
  MOVEUNIT_NEXTCLUSTERBEGIN = $00000003;
  MOVEUNIT_PREVCLUSTEREND = $00000004;
  MOVEUNIT_NEXTCLUSTEREND = $00000005;
  MOVEUNIT_PREVWORDBEGIN = $00000006;
  MOVEUNIT_NEXTWORDBEGIN = $00000007;
  MOVEUNIT_PREVWORDEND = $00000008;
  MOVEUNIT_NEXTWORDEND = $00000009;
  MOVEUNIT_PREVPROOFWORD = $0000000A;
  MOVEUNIT_NEXTPROOFWORD = $0000000B;
  MOVEUNIT_NEXTURLBEGIN = $0000000C;
  MOVEUNIT_PREVURLBEGIN = $0000000D;
  MOVEUNIT_NEXTURLEND = $0000000E;
  MOVEUNIT_PREVURLEND = $0000000F;
  MOVEUNIT_PREVSENTENCE = $00000010;
  MOVEUNIT_NEXTSENTENCE = $00000011;
  MOVEUNIT_PREVBLOCK = $00000012;
  MOVEUNIT_NEXTBLOCK = $00000013;
  MOVEUNIT_ACTION_Max = $7FFFFFFF;

// _PARSE_FLAGS constants
type
  _PARSE_FLAGS = TOleEnum;
const
  PARSE_ABSOLUTIFYIE40URLS = $00000001;
  PARSE_FLAGS_Max = $7FFFFFFF;

// _ELEMENT_TAG_ID constants
type
  _ELEMENT_TAG_ID = TOleEnum;
const
  TAGID_NULL = $00000000;
  TAGID_UNKNOWN = $00000001;
  TAGID_A = $00000002;
  TAGID_ACRONYM = $00000003;
  TAGID_ADDRESS = $00000004;
  TAGID_APPLET = $00000005;
  TAGID_AREA = $00000006;
  TAGID_B = $00000007;
  TAGID_BASE = $00000008;
  TAGID_BASEFONT = $00000009;
  TAGID_BDO = $0000000A;
  TAGID_BGSOUND = $0000000B;
  TAGID_BIG = $0000000C;
  TAGID_BLINK = $0000000D;
  TAGID_BLOCKQUOTE = $0000000E;
  TAGID_BODY = $0000000F;
  TAGID_BR = $00000010;
  TAGID_BUTTON = $00000011;
  TAGID_CAPTION = $00000012;
  TAGID_CENTER = $00000013;
  TAGID_CITE = $00000014;
  TAGID_CODE = $00000015;
  TAGID_COL = $00000016;
  TAGID_COLGROUP = $00000017;
  TAGID_COMMENT = $00000018;
  TAGID_COMMENT_RAW = $00000019;
  TAGID_DD = $0000001A;
  TAGID_DEL = $0000001B;
  TAGID_DFN = $0000001C;
  TAGID_DIR = $0000001D;
  TAGID_DIV = $0000001E;
  TAGID_DL = $0000001F;
  TAGID_DT = $00000020;
  TAGID_EM = $00000021;
  TAGID_EMBED = $00000022;
  TAGID_FIELDSET = $00000023;
  TAGID_FONT = $00000024;
  TAGID_FORM = $00000025;
  TAGID_FRAME = $00000026;
  TAGID_FRAMESET = $00000027;
  TAGID_GENERIC = $00000028;
  TAGID_H1 = $00000029;
  TAGID_H2 = $0000002A;
  TAGID_H3 = $0000002B;
  TAGID_H4 = $0000002C;
  TAGID_H5 = $0000002D;
  TAGID_H6 = $0000002E;
  TAGID_HEAD = $0000002F;
  TAGID_HR = $00000030;
  TAGID_HTML = $00000031;
  TAGID_I = $00000032;
  TAGID_IFRAME = $00000033;
  TAGID_IMG = $00000034;
  TAGID_INPUT = $00000035;
  TAGID_INS = $00000036;
  TAGID_KBD = $00000037;
  TAGID_LABEL = $00000038;
  TAGID_LEGEND = $00000039;
  TAGID_LI = $0000003A;
  TAGID_LINK = $0000003B;
  TAGID_LISTING = $0000003C;
  TAGID_MAP = $0000003D;
  TAGID_MARQUEE = $0000003E;
  TAGID_MENU = $0000003F;
  TAGID_META = $00000040;
  TAGID_NEXTID = $00000041;
  TAGID_NOBR = $00000042;
  TAGID_NOEMBED = $00000043;
  TAGID_NOFRAMES = $00000044;
  TAGID_NOSCRIPT = $00000045;
  TAGID_OBJECT = $00000046;
  TAGID_OL = $00000047;
  TAGID_OPTION = $00000048;
  TAGID_P = $00000049;
  TAGID_PARAM = $0000004A;
  TAGID_PLAINTEXT = $0000004B;
  TAGID_PRE = $0000004C;
  TAGID_Q = $0000004D;
  TAGID_RP = $0000004E;
  TAGID_RT = $0000004F;
  TAGID_RUBY = $00000050;
  TAGID_S = $00000051;
  TAGID_SAMP = $00000052;
  TAGID_SCRIPT = $00000053;
  TAGID_SELECT = $00000054;
  TAGID_SMALL = $00000055;
  TAGID_SPAN = $00000056;
  TAGID_STRIKE = $00000057;
  TAGID_STRONG = $00000058;
  TAGID_STYLE = $00000059;
  TAGID_SUB = $0000005A;
  TAGID_SUP = $0000005B;
  TAGID_TABLE = $0000005C;
  TAGID_TBODY = $0000005D;
  TAGID_TC = $0000005E;
  TAGID_TD = $0000005F;
  TAGID_TEXTAREA = $00000060;
  TAGID_TFOOT = $00000061;
  TAGID_TH = $00000062;
  TAGID_THEAD = $00000063;
  TAGID_TITLE = $00000064;
  TAGID_TR = $00000065;
  TAGID_TT = $00000066;
  TAGID_U = $00000067;
  TAGID_UL = $00000068;
  TAGID_VAR = $00000069;
  TAGID_WBR = $0000006A;
  TAGID_XMP = $0000006B;
  TAGID_COUNT = $0000006C;
  TAGID_LAST_PREDEFINED = $00002710;
  ELEMENT_TAG_ID_Max = $7FFFFFFF;

// _HTMLDlgFlag constants
type
  _HTMLDlgFlag = TOleEnum;
const
  HTMLDlgFlagNo = $00000000;
  HTMLDlgFlagOff = $00000000;
  HTMLDlgFlag0 = $00000000;
  HTMLDlgFlagYes = $00000001;
  HTMLDlgFlagOn = $00000001;
  HTMLDlgFlag1 = $00000001;
  HTMLDlgFlagNotSet = $FFFFFFFF;
  HTMLDlgFlag_Max = $7FFFFFFF;

// _HTMLDlgBorder constants
type
  _HTMLDlgBorder = TOleEnum;
const
  HTMLDlgBorderThin = $00000000;
  HTMLDlgBorderThick = $00040000;
  HTMLDlgBorder_Max = $7FFFFFFF;

// _HTMLDlgEdge constants
type
  _HTMLDlgEdge = TOleEnum;
const
  HTMLDlgEdgeSunken = $00000000;
  HTMLDlgEdgeRaised = $00000010;
  HTMLDlgEdge_Max = $7FFFFFFF;

// _HTMLDlgCenter constants
type
  _HTMLDlgCenter = TOleEnum;
const
  HTMLDlgCenterNo = $00000000;
  HTMLDlgCenterOff = $00000000;
  HTMLDlgCenter0 = $00000000;
  HTMLDlgCenterYes = $00000001;
  HTMLDlgCenterOn = $00000001;
  HTMLDlgCenter1 = $00000001;
  HTMLDlgCenterParent = $00000001;
  HTMLDlgCenterDesktop = $00000002;
  HTMLDlgCenter_Max = $7FFFFFFF;

// _HTMLAppFlag constants
type
  _HTMLAppFlag = TOleEnum;
const
  HTMLAppFlagNo = $00000000;
  HTMLAppFlagOff = $00000000;
  HTMLAppFlag0 = $00000000;
  HTMLAppFlagYes = $00000001;
  HTMLAppFlagOn = $00000001;
  HTMLAppFlag1 = $00000001;
  HTMLAppFlag_Max = $7FFFFFFF;

// _HTMLMinimizeFlag constants
type
  _HTMLMinimizeFlag = TOleEnum;
const
  HTMLMinimizeFlagNo = $00000000;
  HTMLMinimizeFlagYes = $00020000;
  HTMLMinimizeFlag_Max = $7FFFFFFF;

// _HTMLMaximizeFlag constants
type
  _HTMLMaximizeFlag = TOleEnum;
const
  HTMLMaximizeFlagNo = $00000000;
  HTMLMaximizeFlagYes = $00010000;
  HTMLMaximizeFlag_Max = $7FFFFFFF;

// _HTMLCaptionFlag constants
type
  _HTMLCaptionFlag = TOleEnum;
const
  HTMLCaptionFlagNo = $00000000;
  HTMLCaptionFlagYes = $00C00000;
  HTMLCaptionFlag_Max = $7FFFFFFF;

// _HTMLSysMenuFlag constants
type
  _HTMLSysMenuFlag = TOleEnum;
const
  HTMLSysMenuFlagNo = $00000000;
  HTMLSysMenuFlagYes = $00080000;
  HTMLSysMenuFlag_Max = $7FFFFFFF;

// _HTMLBorder constants
type
  _HTMLBorder = TOleEnum;
const
  HTMLBorderNone = $00000000;
  HTMLBorderThick = $00040000;
  HTMLBorderDialog = $00400000;
  HTMLBorderThin = $00800000;
  HTMLBorder_Max = $7FFFFFFF;

// _HTMLBorderStyle constants
type
  _HTMLBorderStyle = TOleEnum;
const
  HTMLBorderStyleNormal = $00000000;
  HTMLBorderStyleRaised = $00000100;
  HTMLBorderStyleSunken = $00000200;
  HTMLBorderStylecombined = $00000300;
  HTMLBorderStyleStatic = $00020000;
  HTMLBorderStyle_Max = $7FFFFFFF;

// _HTMLWindowState constants
type
  _HTMLWindowState = TOleEnum;
const
  HTMLWindowStateNormal = $00000001;
  HTMLWindowStateMaximize = $00000003;
  HTMLWindowStateMinimize = $00000006;
  HTMLWindowState_Max = $7FFFFFFF;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IHTMLEventObj = interface;
  IHTMLEventObjDisp = dispinterface;
  IHTMLElement = interface;
  IHTMLElementDisp = dispinterface;
  IHTMLStyle = interface;
  IHTMLStyleDisp = dispinterface;
  IHTMLFiltersCollection = interface;
  IHTMLFiltersCollectionDisp = dispinterface;
  IElementBehaviorSite = interface;
  IElementBehavior = interface;
  IElementBehaviorFactory = interface;
  IElementBehaviorSiteOM = interface;
  IElementBehaviorRender = interface;
  IElementBehaviorSiteRender = interface;
  IHTMLStyle2 = interface;
  IHTMLStyle2Disp = dispinterface;
  IHTMLRuleStyle = interface;
  IHTMLRuleStyleDisp = dispinterface;
  IHTMLRuleStyle2 = interface;
  IHTMLRuleStyle2Disp = dispinterface;
  DispHTMLStyle = dispinterface;
  DispHTMLRuleStyle = dispinterface;
  IHTMLCurrentStyle = interface;
  IHTMLCurrentStyleDisp = dispinterface;
  DispHTMLCurrentStyle = dispinterface;
  IHTMLRect = interface;
  IHTMLRectDisp = dispinterface;
  IHTMLRectCollection = interface;
  IHTMLRectCollectionDisp = dispinterface;
  IHTMLDOMNode = interface;
  IHTMLDOMNodeDisp = dispinterface;
  IHTMLDOMAttribute = interface;
  IHTMLDOMAttributeDisp = dispinterface;
  IHTMLDOMTextNode = interface;
  IHTMLDOMTextNodeDisp = dispinterface;
  DispHTMLDOMAttribute = dispinterface;
  DispHTMLDOMTextNode = dispinterface;
  IHTMLAttributeCollection = interface;
  IHTMLAttributeCollectionDisp = dispinterface;
  IHTMLDOMChildrenCollection = interface;
  IHTMLDOMChildrenCollectionDisp = dispinterface;
  DispHTMLAttributeCollection = dispinterface;
  DispDOMChildrenCollection = dispinterface;
  HTMLElementEvents2 = dispinterface;
  HTMLElementEvents = dispinterface;
  IHTMLElementCollection = interface;
  IHTMLElementCollectionDisp = dispinterface;
  IHTMLElement2 = interface;
  IHTMLElement2Disp = dispinterface;
  IHTMLUniqueName = interface;
  IHTMLUniqueNameDisp = dispinterface;
  IHTMLDatabinding = interface;
  IHTMLDatabindingDisp = dispinterface;
  IHTCDefaultDispatch = interface;
  IHTCDefaultDispatchDisp = dispinterface;
  IHTCPropertyBehavior = interface;
  IHTCPropertyBehaviorDisp = dispinterface;
  IHTCMethodBehavior = interface;
  IHTCMethodBehaviorDisp = dispinterface;
  IHTCEventBehavior = interface;
  IHTCEventBehaviorDisp = dispinterface;
  IHTCAttachBehavior = interface;
  IHTCAttachBehaviorDisp = dispinterface;
  IHTCDescBehavior = interface;
  IHTCDescBehaviorDisp = dispinterface;
  DispHTCDefaultDispatch = dispinterface;
  DispHTCPropertyBehavior = dispinterface;
  DispHTCMethodBehavior = dispinterface;
  DispHTCEventBehavior = dispinterface;
  DispHTCAttachBehavior = dispinterface;
  DispHTCDescBehavior = dispinterface;
  IHTMLUrnCollection = interface;
  IHTMLUrnCollectionDisp = dispinterface;
  IHTMLGenericElement = interface;
  IHTMLGenericElementDisp = dispinterface;
  DispHTMLGenericElement = dispinterface;
  IHTMLStyleSheetRule = interface;
  IHTMLStyleSheetRuleDisp = dispinterface;
  IHTMLStyleSheetRulesCollection = interface;
  IHTMLStyleSheetRulesCollectionDisp = dispinterface;
  IHTMLStyleSheetsCollection = interface;
  IHTMLStyleSheetsCollectionDisp = dispinterface;
  IHTMLStyleSheet = interface;
  IHTMLStyleSheetDisp = dispinterface;
  HTMLLinkElementEvents2 = dispinterface;
  HTMLLinkElementEvents = dispinterface;
  IHTMLLinkElement = interface;
  IHTMLLinkElementDisp = dispinterface;
  IHTMLLinkElement2 = interface;
  IHTMLLinkElement2Disp = dispinterface;
  DispHTMLLinkElement = dispinterface;
  IHTMLTxtRange = interface;
  IHTMLTxtRangeDisp = dispinterface;
  IHTMLTextRangeMetrics = interface;
  IHTMLTextRangeMetricsDisp = dispinterface;
  IHTMLTextRangeMetrics2 = interface;
  IHTMLTextRangeMetrics2Disp = dispinterface;
  HTMLFormElementEvents2 = dispinterface;
  HTMLFormElementEvents = dispinterface;
  IHTMLFormElement = interface;
  IHTMLFormElementDisp = dispinterface;
  IHTMLFormElement2 = interface;
  IHTMLFormElement2Disp = dispinterface;
  DispHTMLFormElement = dispinterface;
  HTMLControlElementEvents2 = dispinterface;
  HTMLControlElementEvents = dispinterface;
  IHTMLControlElement = interface;
  IHTMLControlElementDisp = dispinterface;
  IHTMLTextElement = interface;
  IHTMLTextElementDisp = dispinterface;
  DispHTMLTextElement = dispinterface;
  HTMLTextContainerEvents2 = dispinterface;
  HTMLTextContainerEvents = dispinterface;
  IHTMLTextContainer = interface;
  IHTMLTextContainerDisp = dispinterface;
  IHTMLControlRange = interface;
  IHTMLControlRangeDisp = dispinterface;
  HTMLImgEvents2 = dispinterface;
  HTMLImgEvents = dispinterface;
  IHTMLImgElement = interface;
  IHTMLImgElementDisp = dispinterface;
  IHTMLImageElementFactory = interface;
  IHTMLImageElementFactoryDisp = dispinterface;
  DispHTMLImg = dispinterface;
  IHTMLBodyElement = interface;
  IHTMLBodyElementDisp = dispinterface;
  IHTMLBodyElement2 = interface;
  IHTMLBodyElement2Disp = dispinterface;
  DispHTMLBody = dispinterface;
  IHTMLFontElement = interface;
  IHTMLFontElementDisp = dispinterface;
  DispHTMLFontElement = dispinterface;
  HTMLAnchorEvents2 = dispinterface;
  HTMLAnchorEvents = dispinterface;
  IHTMLAnchorElement = interface;
  IHTMLAnchorElementDisp = dispinterface;
  DispHTMLAnchorElement = dispinterface;
  HTMLLabelEvents2 = dispinterface;
  HTMLLabelEvents = dispinterface;
  IHTMLLabelElement = interface;
  IHTMLLabelElementDisp = dispinterface;
  DispHTMLLabelElement = dispinterface;
  IHTMLListElement = interface;
  IHTMLListElementDisp = dispinterface;
  DispHTMLListElement = dispinterface;
  IHTMLUListElement = interface;
  IHTMLUListElementDisp = dispinterface;
  DispHTMLUListElement = dispinterface;
  IHTMLOListElement = interface;
  IHTMLOListElementDisp = dispinterface;
  DispHTMLOListElement = dispinterface;
  IHTMLLIElement = interface;
  IHTMLLIElementDisp = dispinterface;
  DispHTMLLIElement = dispinterface;
  IHTMLBlockElement = interface;
  IHTMLBlockElementDisp = dispinterface;
  DispHTMLBlockElement = dispinterface;
  IHTMLDivElement = interface;
  IHTMLDivElementDisp = dispinterface;
  DispHTMLDivElement = dispinterface;
  IHTMLDDElement = interface;
  IHTMLDDElementDisp = dispinterface;
  DispHTMLDDElement = dispinterface;
  IHTMLDTElement = interface;
  IHTMLDTElementDisp = dispinterface;
  DispHTMLDTElement = dispinterface;
  IHTMLBRElement = interface;
  IHTMLBRElementDisp = dispinterface;
  DispHTMLBRElement = dispinterface;
  IHTMLDListElement = interface;
  IHTMLDListElementDisp = dispinterface;
  DispHTMLDListElement = dispinterface;
  IHTMLHRElement = interface;
  IHTMLHRElementDisp = dispinterface;
  DispHTMLHRElement = dispinterface;
  IHTMLParaElement = interface;
  IHTMLParaElementDisp = dispinterface;
  DispHTMLParaElement = dispinterface;
  IHTMLElementCollection2 = interface;
  IHTMLElementCollection2Disp = dispinterface;
  DispHTMLElementCollection = dispinterface;
  IHTMLHeaderElement = interface;
  IHTMLHeaderElementDisp = dispinterface;
  DispHTMLHeaderElement = dispinterface;
  HTMLSelectElementEvents2 = dispinterface;
  HTMLSelectElementEvents = dispinterface;
  IHTMLSelectElement = interface;
  IHTMLSelectElementDisp = dispinterface;
  IHTMLSelectElement2 = interface;
  IHTMLSelectElement2Disp = dispinterface;
  DispHTMLSelectElement = dispinterface;
  IHTMLSelectionObject = interface;
  IHTMLSelectionObjectDisp = dispinterface;
  IHTMLOptionElement = interface;
  IHTMLOptionElementDisp = dispinterface;
  IHTMLOptionElementFactory = interface;
  IHTMLOptionElementFactoryDisp = dispinterface;
  DispHTMLOptionElement = dispinterface;
  HTMLButtonElementEvents2 = dispinterface;
  HTMLButtonElementEvents = dispinterface;
  HTMLInputTextElementEvents2 = dispinterface;
  HTMLOptionButtonElementEvents2 = dispinterface;
  HTMLInputFileElementEvents2 = dispinterface;
  HTMLInputImageEvents2 = dispinterface;
  HTMLInputTextElementEvents = dispinterface;
  HTMLOptionButtonElementEvents = dispinterface;
  HTMLInputFileElementEvents = dispinterface;
  HTMLInputImageEvents = dispinterface;
  IHTMLInputElement = interface;
  IHTMLInputElementDisp = dispinterface;
  IHTMLInputButtonElement = interface;
  IHTMLInputButtonElementDisp = dispinterface;
  IHTMLInputHiddenElement = interface;
  IHTMLInputHiddenElementDisp = dispinterface;
  IHTMLInputTextElement = interface;
  IHTMLInputTextElementDisp = dispinterface;
  IHTMLInputFileElement = interface;
  IHTMLInputFileElementDisp = dispinterface;
  IHTMLOptionButtonElement = interface;
  IHTMLOptionButtonElementDisp = dispinterface;
  IHTMLInputImage = interface;
  IHTMLInputImageDisp = dispinterface;
  DispHTMLInputElement = dispinterface;
  IHTMLTextAreaElement = interface;
  IHTMLTextAreaElementDisp = dispinterface;
  DispHTMLTextAreaElement = dispinterface;
  DispHTMLRichtextElement = dispinterface;
  IHTMLButtonElement = interface;
  IHTMLButtonElementDisp = dispinterface;
  DispHTMLButtonElement = dispinterface;
  HTMLMarqueeElementEvents2 = dispinterface;
  HTMLMarqueeElementEvents = dispinterface;
  IHTMLMarqueeElement = interface;
  IHTMLMarqueeElementDisp = dispinterface;
  DispHTMLMarqueeElement = dispinterface;
  IHTMLTitleElement = interface;
  IHTMLTitleElementDisp = dispinterface;
  IHTMLMetaElement = interface;
  IHTMLMetaElementDisp = dispinterface;
  IHTMLBaseElement = interface;
  IHTMLBaseElementDisp = dispinterface;
  IHTMLIsIndexElement = interface;
  IHTMLIsIndexElementDisp = dispinterface;
  IHTMLNextIdElement = interface;
  IHTMLNextIdElementDisp = dispinterface;
  DispHTMLHtmlElement = dispinterface;
  DispHTMLHeadElement = dispinterface;
  DispHTMLTitleElement = dispinterface;
  DispHTMLMetaElement = dispinterface;
  DispHTMLBaseElement = dispinterface;
  DispHTMLIsIndexElement = dispinterface;
  DispHTMLNextIdElement = dispinterface;
  IHTMLBaseFontElement = interface;
  IHTMLBaseFontElementDisp = dispinterface;
  DispHTMLBaseFontElement = dispinterface;
  IHTMLUnknownElement = interface;
  IHTMLUnknownElementDisp = dispinterface;
  DispHTMLUnknownElement = dispinterface;
  IOmHistory = interface;
  IOmHistoryDisp = dispinterface;
  IHTMLMimeTypesCollection = interface;
  IHTMLMimeTypesCollectionDisp = dispinterface;
  IHTMLPluginsCollection = interface;
  IHTMLPluginsCollectionDisp = dispinterface;
  IHTMLOpsProfile = interface;
  IHTMLOpsProfileDisp = dispinterface;
  IOmNavigator = interface;
  IOmNavigatorDisp = dispinterface;
  IHTMLLocation = interface;
  IHTMLLocationDisp = dispinterface;
  IHTMLBookmarkCollection = interface;
  IHTMLBookmarkCollectionDisp = dispinterface;
  IHTMLDataTransfer = interface;
  IHTMLDataTransferDisp = dispinterface;
  IHTMLEventObj2 = interface;
  IHTMLEventObj2Disp = dispinterface;
  DispCEventObj = dispinterface;
  HTMLWindowEvents2 = dispinterface;
  HTMLWindowEvents = dispinterface;
  IHTMLDocument = interface;
  IHTMLDocumentDisp = dispinterface;
  IHTMLDocument2 = interface;
  IHTMLDocument2Disp = dispinterface;
  IHTMLFramesCollection2 = interface;
  IHTMLFramesCollection2Disp = dispinterface;
  IHTMLWindow2 = interface;
  IHTMLWindow2Disp = dispinterface;
  IHTMLScreen = interface;
  IHTMLScreenDisp = dispinterface;
  IHTMLWindow3 = interface;
  IHTMLWindow3Disp = dispinterface;
  DispHTMLWindow2 = dispinterface;
  DispHTMLWindowProxy = dispinterface;
  HTMLDocumentEvents2 = dispinterface;
  HTMLDocumentEvents = dispinterface;
  IHTMLDocument3 = interface;
  IHTMLDocument3Disp = dispinterface;
  DispHTMLDocument = dispinterface;
  IHTMLDocumentFragment = interface;
  IHTMLDocumentFragmentDisp = dispinterface;
  DispHTMLDocumentFragment = dispinterface;
  DWebBridgeEvents = dispinterface;
  IWebBridge = interface;
  IWebBridgeDisp = dispinterface;
  IWBScriptControl = interface;
  IWBScriptControlDisp = dispinterface;
  IHTMLEmbedElement = interface;
  IHTMLEmbedElementDisp = dispinterface;
  DispHTMLEmbed = dispinterface;
  HTMLMapEvents2 = dispinterface;
  HTMLMapEvents = dispinterface;
  IHTMLAreasCollection = interface;
  IHTMLAreasCollectionDisp = dispinterface;
  IHTMLAreasCollection2 = interface;
  IHTMLAreasCollection2Disp = dispinterface;
  IHTMLMapElement = interface;
  IHTMLMapElementDisp = dispinterface;
  DispHTMLAreasCollection = dispinterface;
  DispHTMLMapElement = dispinterface;
  HTMLAreaEvents2 = dispinterface;
  HTMLAreaEvents = dispinterface;
  IHTMLAreaElement = interface;
  IHTMLAreaElementDisp = dispinterface;
  DispHTMLAreaElement = dispinterface;
  IHTMLTableCaption = interface;
  IHTMLTableCaptionDisp = dispinterface;
  DispHTMLTableCaption = dispinterface;
  IHTMLCommentElement = interface;
  IHTMLCommentElementDisp = dispinterface;
  DispHTMLCommentElement = dispinterface;
  IHTMLPhraseElement = interface;
  IHTMLPhraseElementDisp = dispinterface;
  IHTMLSpanElement = interface;
  IHTMLSpanElementDisp = dispinterface;
  DispHTMLPhraseElement = dispinterface;
  DispHTMLSpanElement = dispinterface;
  HTMLTableEvents2 = dispinterface;
  HTMLTableEvents = dispinterface;
  IHTMLTableSection = interface;
  IHTMLTableSectionDisp = dispinterface;
  IHTMLTable = interface;
  IHTMLTableDisp = dispinterface;
  IHTMLTable2 = interface;
  IHTMLTable2Disp = dispinterface;
  IHTMLTableCol = interface;
  IHTMLTableColDisp = dispinterface;
  IHTMLTableSection2 = interface;
  IHTMLTableSection2Disp = dispinterface;
  IHTMLTableRow = interface;
  IHTMLTableRowDisp = dispinterface;
  IHTMLTableRow2 = interface;
  IHTMLTableRow2Disp = dispinterface;
  IHTMLTableRowMetrics = interface;
  IHTMLTableRowMetricsDisp = dispinterface;
  IHTMLTableCell = interface;
  IHTMLTableCellDisp = dispinterface;
  DispHTMLTable = dispinterface;
  DispHTMLTableCol = dispinterface;
  DispHTMLTableSection = dispinterface;
  DispHTMLTableRow = dispinterface;
  DispHTMLTableCell = dispinterface;
  HTMLScriptEvents2 = dispinterface;
  HTMLScriptEvents = dispinterface;
  IHTMLScriptElement = interface;
  IHTMLScriptElementDisp = dispinterface;
  DispHTMLScriptElement = dispinterface;
  IHTMLNoShowElement = interface;
  IHTMLNoShowElementDisp = dispinterface;
  DispHTMLNoShowElement = dispinterface;
  HTMLObjectElementEvents2 = dispinterface;
  HTMLObjectElementEvents = dispinterface;
  IHTMLObjectElement = interface;
  IHTMLObjectElementDisp = dispinterface;
  IHTMLObjectElement2 = interface;
  IHTMLObjectElement2Disp = dispinterface;
  DispHTMLObjectElement = dispinterface;
  IHTMLFrameBase = interface;
  IHTMLFrameBaseDisp = dispinterface;
  DispHTMLFrameBase = dispinterface;
  IHTMLFrameElement = interface;
  IHTMLFrameElementDisp = dispinterface;
  DispHTMLFrameElement = dispinterface;
  IHTMLIFrameElement = interface;
  IHTMLIFrameElementDisp = dispinterface;
  IHTMLIFrameElement2 = interface;
  IHTMLIFrameElement2Disp = dispinterface;
  DispHTMLIFrame = dispinterface;
  IHTMLDivPosition = interface;
  IHTMLDivPositionDisp = dispinterface;
  IHTMLFieldSetElement = interface;
  IHTMLFieldSetElementDisp = dispinterface;
  IHTMLLegendElement = interface;
  IHTMLLegendElementDisp = dispinterface;
  DispHTMLDivPosition = dispinterface;
  DispHTMLFieldSetElement = dispinterface;
  DispHTMLLegendElement = dispinterface;
  IHTMLSpanFlow = interface;
  IHTMLSpanFlowDisp = dispinterface;
  DispHTMLSpanFlow = dispinterface;
  IHTMLFrameSetElement = interface;
  IHTMLFrameSetElementDisp = dispinterface;
  IHTMLFrameSetElement2 = interface;
  IHTMLFrameSetElement2Disp = dispinterface;
  DispHTMLFrameSetSite = dispinterface;
  IHTMLBGsound = interface;
  IHTMLBGsoundDisp = dispinterface;
  DispHTMLBGsound = dispinterface;
  IHTMLFontNamesCollection = interface;
  IHTMLFontNamesCollectionDisp = dispinterface;
  IHTMLFontSizesCollection = interface;
  IHTMLFontSizesCollectionDisp = dispinterface;
  IHTMLOptionsHolder = interface;
  IHTMLOptionsHolderDisp = dispinterface;
  HTMLStyleElementEvents2 = dispinterface;
  HTMLStyleElementEvents = dispinterface;
  IHTMLStyleElement = interface;
  IHTMLStyleElementDisp = dispinterface;
  DispHTMLStyleElement = dispinterface;
  IHTMLStyleFontFace = interface;
  IHTMLStyleFontFaceDisp = dispinterface;
  ICSSFilterSite = interface;
  IMarkupPointer = interface;
  IMarkupContainer = interface;
  IActiveIMMApp = interface;
  IEnumRegisterWordA = interface;
  IEnumRegisterWordW = interface;
  IEnumInputContext = interface;
  ICSSFilter = interface;
  ISecureUrlHost = interface;
  IMarkupServices = interface;
  IMarkupTextFrags = interface;
  IXMLGenericParse = interface;
  IHTMLDialog = interface;
  IHTMLDialogDisp = dispinterface;
  IHTMLDialog2 = interface;
  IHTMLDialog2Disp = dispinterface;
  IHTMLModelessInit = interface;
  IHTMLModelessInitDisp = dispinterface;
  IHTMLAppBehavior = interface;
  IHTMLAppBehaviorDisp = dispinterface;
  DispHTMLAppBehavior = dispinterface;
  DispIHTMLInputButtonElement = dispinterface;
  DispIHTMLInputTextElement = dispinterface;
  DispIHTMLInputFileElement = dispinterface;
  DispIHTMLOptionButtonElement = dispinterface;
  DispIHTMLInputImage = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  HTMLStyle = DispHTMLStyle;
  HTMLRuleStyle = DispHTMLRuleStyle;
  HTMLCurrentStyle = DispHTMLCurrentStyle;
  HTMLFiltersCollection = IHTMLFiltersCollection;
  HTMLDOMAttribute = DispHTMLDOMAttribute;
  HTMLDOMTextNode = DispHTMLDOMTextNode;
  HTMLAttributeCollection = DispHTMLAttributeCollection;
  DOMChildrenCollection = DispDOMChildrenCollection;
  HTCDefaultDispatch = DispHTCDefaultDispatch;
  HTCPropertyBehavior = DispHTCPropertyBehavior;
  HTCMethodBehavior = DispHTCMethodBehavior;
  HTCEventBehavior = DispHTCEventBehavior;
  HTCAttachBehavior = DispHTCAttachBehavior;
  HTCDescBehavior = DispHTCDescBehavior;
  HTMLUrnCollection = IHTMLUrnCollection;
  HTMLGenericElement = DispHTMLGenericElement;
  HTMLStyleSheetRule = IHTMLStyleSheetRule;
  HTMLStyleSheetRulesCollection = IHTMLStyleSheetRulesCollection;
  HTMLStyleSheet = IHTMLStyleSheet;
  HTMLStyleSheetsCollection = IHTMLStyleSheetsCollection;
  HTMLLinkElement = DispHTMLLinkElement;
  HTMLFormElement = DispHTMLFormElement;
  HTMLTextElement = DispHTMLTextElement;
  HTMLImg = DispHTMLImg;
  HTMLImageElementFactory = IHTMLImageElementFactory;
  HTMLBody = DispHTMLBody;
  HTMLFontElement = DispHTMLFontElement;
  HTMLAnchorElement = DispHTMLAnchorElement;
  HTMLLabelElement = DispHTMLLabelElement;
  HTMLListElement = DispHTMLListElement;
  HTMLUListElement = DispHTMLUListElement;
  HTMLOListElement = DispHTMLOListElement;
  HTMLLIElement = DispHTMLLIElement;
  HTMLBlockElement = DispHTMLBlockElement;
  HTMLDivElement = DispHTMLDivElement;
  HTMLDDElement = DispHTMLDDElement;
  HTMLDTElement = DispHTMLDTElement;
  HTMLBRElement = DispHTMLBRElement;
  HTMLDListElement = DispHTMLDListElement;
  HTMLHRElement = DispHTMLHRElement;
  HTMLParaElement = DispHTMLParaElement;
  HTMLElementCollection = DispHTMLElementCollection;
  HTMLHeaderElement = DispHTMLHeaderElement;
  HTMLSelectElement = DispHTMLSelectElement;
  HTMLOptionElement = DispHTMLOptionElement;
  HTMLOptionElementFactory = IHTMLOptionElementFactory;
  HTMLInputElement = DispHTMLInputElement;
  HTMLTextAreaElement = DispHTMLTextAreaElement;
  HTMLRichtextElement = DispHTMLRichtextElement;
  HTMLButtonElement = DispHTMLButtonElement;
  HTMLMarqueeElement = DispHTMLMarqueeElement;
  HTMLHtmlElement = DispHTMLHtmlElement;
  HTMLHeadElement = DispHTMLHeadElement;
  HTMLTitleElement = DispHTMLTitleElement;
  HTMLMetaElement = DispHTMLMetaElement;
  HTMLBaseElement = DispHTMLBaseElement;
  HTMLIsIndexElement = DispHTMLIsIndexElement;
  HTMLNextIdElement = DispHTMLNextIdElement;
  HTMLBaseFontElement = DispHTMLBaseFontElement;
  HTMLUnknownElement = DispHTMLUnknownElement;
  HTMLHistory = IOmHistory;
  CMimeTypes = IHTMLMimeTypesCollection;
  CPlugins = IHTMLPluginsCollection;
  COpsProfile = IHTMLOpsProfile;
  HTMLNavigator = IOmNavigator;
  HTMLLocation = IHTMLLocation;
  CEventObj = DispCEventObj;
  HTMLScreen = IHTMLScreen;
  HTMLWindow2 = DispHTMLWindow2;
  HTMLWindowProxy = DispHTMLWindowProxy;
  HTMLDocument = DispHTMLDocument;
  HTMLDocumentFragment = DispHTMLDocumentFragment;
  Scriptlet = IWebBridge;
  HTMLEmbed = DispHTMLEmbed;
  HTMLAreasCollection = DispHTMLAreasCollection;
  HTMLMapElement = DispHTMLMapElement;
  HTMLAreaElement = DispHTMLAreaElement;
  HTMLTableCaption = DispHTMLTableCaption;
  HTMLCommentElement = DispHTMLCommentElement;
  HTMLPhraseElement = DispHTMLPhraseElement;
  HTMLSpanElement = DispHTMLSpanElement;
  HTMLTable = DispHTMLTable;
  HTMLTableCol = DispHTMLTableCol;
  HTMLTableSection = DispHTMLTableSection;
  HTMLTableRow = DispHTMLTableRow;
  HTMLTableCell = DispHTMLTableCell;
  HTMLScriptElement = DispHTMLScriptElement;
  HTMLNoShowElement = DispHTMLNoShowElement;
  HTMLObjectElement = DispHTMLObjectElement;
  HTMLFrameBase = DispHTMLFrameBase;
  HTMLFrameElement = DispHTMLFrameElement;
  HTMLIFrame = DispHTMLIFrame;
  HTMLDivPosition = DispHTMLDivPosition;
  HTMLFieldSetElement = DispHTMLFieldSetElement;
  HTMLLegendElement = DispHTMLLegendElement;
  HTMLSpanFlow = DispHTMLSpanFlow;
  HTMLFrameSetSite = DispHTMLFrameSetSite;
  HTMLBGsound = DispHTMLBGsound;
  HTMLStyleElement = DispHTMLStyleElement;
  HTMLStyleFontFace = IHTMLStyleFontFace;
  ThreadDialogProcParam = IHTMLModelessInit;
  HTMLDialog = IHTMLDialog;
  HTMLAppBehavior = DispHTMLAppBehavior;
  OldHTMLDocument = DispHTMLDocument;
  OldHTMLFormElement = DispHTMLFormElement;
  HTMLInputButtonElement = DispIHTMLInputButtonElement;
  HTMLInputTextElement = DispIHTMLInputTextElement;
  HTMLInputFileElement = DispIHTMLInputFileElement;
  HTMLOptionButtonElement = DispIHTMLOptionButtonElement;
  htmlInputImage = DispIHTMLInputImage;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  wireHDC = ^TGUID; 
  wireHWND = ^TGUID; 
  wireHBITMAP = ^TGUID; 
  wireHGLOBAL = ^TGUID; 
  POleVariant1 = ^OleVariant; {*}
  PUserType1 = ^TGUID; {*}
  PUserType2 = ^TGUID; {*}
  PWord1 = ^Word; {*}
  PUserType3 = ^TGUID; {*}
  PUserType4 = ^TGUID; {*}
  PUserType5 = ^TGUID; {*}
  PUserType6 = ^TGUID; {*}
  PUserType7 = ^TGUID; {*}
  PUserType8 = ^TGUID; {*}
  PUserType9 = ^TGUID; {*}
  PUserType10 = ^TGUID; {*}


  __MIDL_IWinTypes_0009 = record
    case Integer of
      0: (hInproc: Integer);
      1: (hRemote: Integer);
  end;

  _RemotableHandle = packed record
    fContext: Integer;
    u: __MIDL_IWinTypes_0009;
  end;

  tagRECT = packed record
    left: Integer;
    top: Integer;
    right: Integer;
    bottom: Integer;
  end;

  tagPOINT = packed record
    x: Integer;
    y: Integer;
  end;


  __MIDL___MIDL_itf_mshtml_0245_0001 = packed record
    lpReading: PChar;
    lpWord: PChar;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0002 = packed record
    lpReading: PWideChar;
    lpWord: PWideChar;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0007 = packed record
    dwSize: LongWord;
    dwStyle: LongWord;
    dwCount: LongWord;
    dwSelection: LongWord;
    dwPageStart: LongWord;
    dwPageSize: LongWord;
    dwOffset: array[0..0] of LongWord;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0005 = packed record
    dwIndex: LongWord;
    dwStyle: LongWord;
    ptCurrentPos: TGUID;
    rcArea: TGUID;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0003 = packed record
    lfHeight: Integer;
    lfWidth: Integer;
    lfEscapement: Integer;
    lfOrientation: Integer;
    lfWeight: Integer;
    lfItalic: Byte;
    lfUnderline: Byte;
    lfStrikeOut: Byte;
    lfCharSet: Byte;
    lfOutPrecision: Byte;
    lfClipPrecision: Byte;
    lfQuality: Byte;
    lfPitchAndFamily: Byte;
    lfFaceName: array[0..31] of Byte;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0004 = packed record
    lfHeight: Integer;
    lfWidth: Integer;
    lfEscapement: Integer;
    lfOrientation: Integer;
    lfWeight: Integer;
    lfItalic: Byte;
    lfUnderline: Byte;
    lfStrikeOut: Byte;
    lfCharSet: Byte;
    lfOutPrecision: Byte;
    lfClipPrecision: Byte;
    lfQuality: Byte;
    lfPitchAndFamily: Byte;
    lfFaceName: array[0..31] of Word;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0006 = packed record
    dwStyle: LongWord;
    ptCurrentPos: TGUID;
    rcArea: TGUID;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0008 = packed record
    dwStyle: LongWord;
    szDescription: array[0..31] of Byte;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0009 = packed record
    dwStyle: LongWord;
    szDescription: array[0..31] of Word;
  end;


  __MIDL___MIDL_itf_mshtml_0245_0010 = packed record
    cbSize: SYSUINT;
    fType: SYSUINT;
    fState: SYSUINT;
    wID: SYSUINT;
    hbmpChecked: wireHBITMAP;
    hbmpUnchecked: wireHBITMAP;
    dwItemData: LongWord;
    szString: array[0..79] of Byte;
    hbmpItem: wireHBITMAP;
  end;

  _userBITMAP = packed record
    bmType: Integer;
    bmWidth: Integer;
    bmHeight: Integer;
    bmWidthBytes: Integer;
    bmPlanes: Word;
    bmBitsPixel: Word;
    cbSize: LongWord;
    pBuffer: ^Byte;
  end;

  __MIDL_IWinTypes_0007 = record
    case Integer of
      0: (hInproc: Integer);
      1: (hRemote: ^TGUID);
      2: (hGlobal: Integer);
  end;

  _userHBITMAP = packed record
    fContext: Integer;
    u: __MIDL_IWinTypes_0007;
  end;

  __MIDL___MIDL_itf_mshtml_0245_0011 = packed record
    cbSize: SYSUINT;
    fType: SYSUINT;
    fState: SYSUINT;
    wID: SYSUINT;
    hbmpChecked: wireHBITMAP;
    hbmpUnchecked: wireHBITMAP;
    dwItemData: LongWord;
    szString: array[0..79] of Word;
    hbmpItem: wireHBITMAP;
  end;


  _FLAGGED_BYTE_BLOB = packed record
    fFlags: LongWord;
    clSize: LongWord;
    abData: ^Byte;
  end;

  __MIDL_IWinTypes_0003 = record
    case Integer of
      0: (hInproc: Integer);
      1: (hRemote: ^TGUID);
      2: (hGlobal: Integer);
  end;

  _userHGLOBAL = packed record
    fContext: Integer;
    u: __MIDL_IWinTypes_0003;
  end;


// *********************************************************************//
// Interface: IHTMLEventObj
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj = interface(IDispatch)
    ['{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_srcElement: IHTMLElement; safecall;
    function  Get_altKey: WordBool; safecall;
    function  Get_ctrlKey: WordBool; safecall;
    function  Get_shiftKey: WordBool; safecall;
    procedure Set_returnValue(p: OleVariant); safecall;
    function  Get_returnValue: OleVariant; safecall;
    procedure Set_cancelBubble(p: WordBool); safecall;
    function  Get_cancelBubble: WordBool; safecall;
    function  Get_fromElement: IHTMLElement; safecall;
    function  Get_toElement: IHTMLElement; safecall;
    procedure Set_keyCode(p: Integer); safecall;
    function  Get_keyCode: Integer; safecall;
    function  Get_button: Integer; safecall;
    function  Get_type_: WideString; safecall;
    function  Get_qualifier: WideString; safecall;
    function  Get_reason: Integer; safecall;
    function  Get_x: Integer; safecall;
    function  Get_y: Integer; safecall;
    function  Get_clientX: Integer; safecall;
    function  Get_clientY: Integer; safecall;
    function  Get_offsetX: Integer; safecall;
    function  Get_offsetY: Integer; safecall;
    function  Get_screenX: Integer; safecall;
    function  Get_screenY: Integer; safecall;
    function  Get_srcFilter: IDispatch; safecall;
    property srcElement: IHTMLElement read Get_srcElement;
    property altKey: WordBool read Get_altKey;
    property ctrlKey: WordBool read Get_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
    property cancelBubble: WordBool read Get_cancelBubble write Set_cancelBubble;
    property fromElement: IHTMLElement read Get_fromElement;
    property toElement: IHTMLElement read Get_toElement;
    property keyCode: Integer read Get_keyCode write Set_keyCode;
    property button: Integer read Get_button;
    property type_: WideString read Get_type_;
    property qualifier: WideString read Get_qualifier;
    property reason: Integer read Get_reason;
    property x: Integer read Get_x;
    property y: Integer read Get_y;
    property clientX: Integer read Get_clientX;
    property clientY: Integer read Get_clientY;
    property offsetX: Integer read Get_offsetX;
    property offsetY: Integer read Get_offsetY;
    property screenX: Integer read Get_screenX;
    property screenY: Integer read Get_screenY;
    property srcFilter: IDispatch read Get_srcFilter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObjDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObjDisp = dispinterface
    ['{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}']
    property srcElement: IHTMLElement readonly dispid 1001;
    property altKey: WordBool readonly dispid 1002;
    property ctrlKey: WordBool readonly dispid 1003;
    property shiftKey: WordBool readonly dispid 1004;
    property returnValue: OleVariant dispid 1007;
    property cancelBubble: WordBool dispid 1008;
    property fromElement: IHTMLElement readonly dispid 1009;
    property toElement: IHTMLElement readonly dispid 1010;
    property keyCode: Integer dispid 1011;
    property button: Integer readonly dispid 1012;
    property type_: WideString readonly dispid 1013;
    property qualifier: WideString readonly dispid 1014;
    property reason: Integer readonly dispid 1015;
    property x: Integer readonly dispid 1005;
    property y: Integer readonly dispid 1006;
    property clientX: Integer readonly dispid 1020;
    property clientY: Integer readonly dispid 1021;
    property offsetX: Integer readonly dispid 1022;
    property offsetY: Integer readonly dispid 1023;
    property screenX: Integer readonly dispid 1024;
    property screenY: Integer readonly dispid 1025;
    property srcFilter: IDispatch readonly dispid 1026;
  end;

// *********************************************************************//
// Interface: IHTMLElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement = interface(IDispatch)
    ['{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    procedure Set_className(const p: WideString); safecall;
    function  Get_className: WideString; safecall;
    procedure Set_id(const p: WideString); safecall;
    function  Get_id: WideString; safecall;
    function  Get_tagName: WideString; safecall;
    function  Get_parentElement: IHTMLElement; safecall;
    function  Get_style: IHTMLStyle; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function  Get_onhelp: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function  Get_onclick: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function  Get_ondblclick: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function  Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function  Get_onkeyup: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function  Get_onkeypress: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function  Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function  Get_onmouseover: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function  Get_onmousemove: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function  Get_onmousedown: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function  Get_onmouseup: OleVariant; safecall;
    function  Get_document: IDispatch; safecall;
    procedure Set_title(const p: WideString); safecall;
    function  Get_title: WideString; safecall;
    procedure Set_language(const p: WideString); safecall;
    function  Get_language: WideString; safecall;
    procedure Set_onselectstart(p: OleVariant); safecall;
    function  Get_onselectstart: OleVariant; safecall;
    procedure scrollIntoView(varargStart: OleVariant); safecall;
    function  contains(const pChild: IHTMLElement): WordBool; safecall;
    function  Get_sourceIndex: Integer; safecall;
    function  Get_recordNumber: OleVariant; safecall;
    procedure Set_lang(const p: WideString); safecall;
    function  Get_lang: WideString; safecall;
    function  Get_offsetLeft: Integer; safecall;
    function  Get_offsetTop: Integer; safecall;
    function  Get_offsetWidth: Integer; safecall;
    function  Get_offsetHeight: Integer; safecall;
    function  Get_offsetParent: IHTMLElement; safecall;
    procedure Set_innerHTML(const p: WideString); safecall;
    function  Get_innerHTML: WideString; safecall;
    procedure Set_innerText(const p: WideString); safecall;
    function  Get_innerText: WideString; safecall;
    procedure Set_outerHTML(const p: WideString); safecall;
    function  Get_outerHTML: WideString; safecall;
    procedure Set_outerText(const p: WideString); safecall;
    function  Get_outerText: WideString; safecall;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); safecall;
    procedure insertAdjacentText(const where: WideString; const text: WideString); safecall;
    function  Get_parentTextEdit: IHTMLElement; safecall;
    function  Get_isTextEdit: WordBool; safecall;
    procedure click; safecall;
    function  Get_filters: IHTMLFiltersCollection; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function  Get_ondragstart: OleVariant; safecall;
    function  toString: WideString; safecall;
    procedure Set_onbeforeupdate(p: OleVariant); safecall;
    function  Get_onbeforeupdate: OleVariant; safecall;
    procedure Set_onafterupdate(p: OleVariant); safecall;
    function  Get_onafterupdate: OleVariant; safecall;
    procedure Set_onerrorupdate(p: OleVariant); safecall;
    function  Get_onerrorupdate: OleVariant; safecall;
    procedure Set_onrowexit(p: OleVariant); safecall;
    function  Get_onrowexit: OleVariant; safecall;
    procedure Set_onrowenter(p: OleVariant); safecall;
    function  Get_onrowenter: OleVariant; safecall;
    procedure Set_ondatasetchanged(p: OleVariant); safecall;
    function  Get_ondatasetchanged: OleVariant; safecall;
    procedure Set_ondataavailable(p: OleVariant); safecall;
    function  Get_ondataavailable: OleVariant; safecall;
    procedure Set_ondatasetcomplete(p: OleVariant); safecall;
    function  Get_ondatasetcomplete: OleVariant; safecall;
    procedure Set_onfilterchange(p: OleVariant); safecall;
    function  Get_onfilterchange: OleVariant; safecall;
    function  Get_children: IDispatch; safecall;
    function  Get_all: IDispatch; safecall;
    property className: WideString read Get_className write Set_className;
    property id: WideString read Get_id write Set_id;
    property tagName: WideString read Get_tagName;
    property parentElement: IHTMLElement read Get_parentElement;
    property style: IHTMLStyle read Get_style;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property document: IDispatch read Get_document;
    property title: WideString read Get_title write Set_title;
    property language: WideString read Get_language write Set_language;
    property onselectstart: OleVariant read Get_onselectstart write Set_onselectstart;
    property sourceIndex: Integer read Get_sourceIndex;
    property recordNumber: OleVariant read Get_recordNumber;
    property lang: WideString read Get_lang write Set_lang;
    property offsetLeft: Integer read Get_offsetLeft;
    property offsetTop: Integer read Get_offsetTop;
    property offsetWidth: Integer read Get_offsetWidth;
    property offsetHeight: Integer read Get_offsetHeight;
    property offsetParent: IHTMLElement read Get_offsetParent;
    property innerHTML: WideString read Get_innerHTML write Set_innerHTML;
    property innerText: WideString read Get_innerText write Set_innerText;
    property outerHTML: WideString read Get_outerHTML write Set_outerHTML;
    property outerText: WideString read Get_outerText write Set_outerText;
    property parentTextEdit: IHTMLElement read Get_parentTextEdit;
    property isTextEdit: WordBool read Get_isTextEdit;
    property filters: IHTMLFiltersCollection read Get_filters;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property onbeforeupdate: OleVariant read Get_onbeforeupdate write Set_onbeforeupdate;
    property onafterupdate: OleVariant read Get_onafterupdate write Set_onafterupdate;
    property onerrorupdate: OleVariant read Get_onerrorupdate write Set_onerrorupdate;
    property onrowexit: OleVariant read Get_onrowexit write Set_onrowexit;
    property onrowenter: OleVariant read Get_onrowenter write Set_onrowenter;
    property ondatasetchanged: OleVariant read Get_ondatasetchanged write Set_ondatasetchanged;
    property ondataavailable: OleVariant read Get_ondataavailable write Set_ondataavailable;
    property ondatasetcomplete: OleVariant read Get_ondatasetcomplete write Set_ondatasetcomplete;
    property onfilterchange: OleVariant read Get_onfilterchange write Set_onfilterchange;
    property children: IDispatch read Get_children;
    property all: IDispatch read Get_all;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDisp = dispinterface
    ['{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
  end;

// *********************************************************************//
// Interface: IHTMLStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle = interface(IDispatch)
    ['{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontFamily(const p: WideString); safecall;
    function  Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function  Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function  Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function  Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function  Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function  Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function  Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function  Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function  Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function  Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function  Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function  Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function  Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function  Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function  Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function  Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function  Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function  Get_textDecoration: WideString; safecall;
    procedure Set_textDecorationNone(p: WordBool); safecall;
    function  Get_textDecorationNone: WordBool; safecall;
    procedure Set_textDecorationUnderline(p: WordBool); safecall;
    function  Get_textDecorationUnderline: WordBool; safecall;
    procedure Set_textDecorationOverline(p: WordBool); safecall;
    function  Get_textDecorationOverline: WordBool; safecall;
    procedure Set_textDecorationLineThrough(p: WordBool); safecall;
    function  Get_textDecorationLineThrough: WordBool; safecall;
    procedure Set_textDecorationBlink(p: WordBool); safecall;
    function  Get_textDecorationBlink: WordBool; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function  Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function  Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function  Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function  Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function  Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function  Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function  Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function  Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function  Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function  Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function  Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function  Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function  Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function  Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function  Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function  Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function  Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function  Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function  Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function  Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function  Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function  Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function  Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function  Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function  Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function  Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function  Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function  Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function  Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function  Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function  Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function  Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function  Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function  Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function  Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function  Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function  Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function  Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function  Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function  Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function  Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function  Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function  Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function  Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function  Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function  Get_left: OleVariant; safecall;
    function  Get_position: WideString; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function  Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function  Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function  Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function  Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function  Get_cssText: WideString; safecall;
    procedure Set_pixelTop(p: Integer); safecall;
    function  Get_pixelTop: Integer; safecall;
    procedure Set_pixelLeft(p: Integer); safecall;
    function  Get_pixelLeft: Integer; safecall;
    procedure Set_pixelWidth(p: Integer); safecall;
    function  Get_pixelWidth: Integer; safecall;
    procedure Set_pixelHeight(p: Integer); safecall;
    function  Get_pixelHeight: Integer; safecall;
    procedure Set_posTop(p: Single); safecall;
    function  Get_posTop: Single; safecall;
    procedure Set_posLeft(p: Single); safecall;
    function  Get_posLeft: Single; safecall;
    procedure Set_posWidth(p: Single); safecall;
    function  Get_posWidth: Single; safecall;
    procedure Set_posHeight(p: Single); safecall;
    function  Get_posHeight: Single; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function  Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function  Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function  Get_filter: WideString; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    function  toString: WideString; safecall;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property textDecorationNone: WordBool read Get_textDecorationNone write Set_textDecorationNone;
    property textDecorationUnderline: WordBool read Get_textDecorationUnderline write Set_textDecorationUnderline;
    property textDecorationOverline: WordBool read Get_textDecorationOverline write Set_textDecorationOverline;
    property textDecorationLineThrough: WordBool read Get_textDecorationLineThrough write Set_textDecorationLineThrough;
    property textDecorationBlink: WordBool read Get_textDecorationBlink write Set_textDecorationBlink;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property position: WideString read Get_position;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property pixelTop: Integer read Get_pixelTop write Set_pixelTop;
    property pixelLeft: Integer read Get_pixelLeft write Set_pixelLeft;
    property pixelWidth: Integer read Get_pixelWidth write Set_pixelWidth;
    property pixelHeight: Integer read Get_pixelHeight write Set_pixelHeight;
    property posTop: Single read Get_posTop write Set_posTop;
    property posLeft: Single read Get_posLeft write Set_posLeft;
    property posWidth: Single read Get_posWidth write Set_posWidth;
    property posHeight: Single read Get_posHeight write Set_posHeight;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleDisp = dispinterface
    ['{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property position: WideString readonly dispid -2147413022;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property pixelTop: Integer dispid -2147414112;
    property pixelLeft: Integer dispid -2147414111;
    property pixelWidth: Integer dispid -2147414110;
    property pixelHeight: Integer dispid -2147414109;
    property posTop: Single dispid -2147414108;
    property posLeft: Single dispid -2147414107;
    property posWidth: Single dispid -2147414106;
    property posHeight: Single dispid -2147414105;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    function  toString: WideString; dispid -2147414104;
  end;

// *********************************************************************//
// Interface: IHTMLFiltersCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFiltersCollection = interface(IDispatch)
    ['{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(var pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFiltersCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFiltersCollectionDisp = dispinterface
    ['{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSite
// Flags:     (0)
// GUID:      {3050F427-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSite = interface(IUnknown)
    ['{3050F427-98B5-11CF-BB82-00AA00BDCE0B}']
    function  GetElement(out ppElement: IHTMLElement): HResult; stdcall;
    function  RegisterNotification(lEvent: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehavior
// Flags:     (0)
// GUID:      {3050F425-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehavior = interface(IUnknown)
    ['{3050F425-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Init(const pBehaviorSite: IElementBehaviorSite): HResult; stdcall;
    function  Notify(lEvent: Integer; var pVar: OleVariant): HResult; stdcall;
    function  Detach: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorFactory
// Flags:     (0)
// GUID:      {3050F429-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorFactory = interface(IUnknown)
    ['{3050F429-98B5-11CF-BB82-00AA00BDCE0B}']
    function  FindBehavior(const bstrBehavior: WideString; const bstrBehaviorUrl: WideString; 
                           const pSite: IElementBehaviorSite; out ppBehavior: IElementBehavior): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteOM
// Flags:     (0)
// GUID:      {3050F489-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteOM = interface(IUnknown)
    ['{3050F489-98B5-11CF-BB82-00AA00BDCE0B}']
    function  RegisterEvent(pchEvent: PWideChar; lFlags: Integer; out plCookie: Integer): HResult; stdcall;
    function  GetEventCookie(pchEvent: PWideChar; out plCookie: Integer): HResult; stdcall;
    function  FireEvent(lCookie: Integer; const pEventObject: IHTMLEventObj): HResult; stdcall;
    function  CreateEventObject(out ppEventObject: IHTMLEventObj): HResult; stdcall;
    function  RegisterName(pchName: PWideChar): HResult; stdcall;
    function  RegisterUrn(pchUrn: PWideChar): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorRender
// Flags:     (0)
// GUID:      {3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorRender = interface(IUnknown)
    ['{3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Draw(var hdc: TGUID; lLayer: Integer; var pRect: TGUID; const pReserved: IUnknown): HResult; stdcall;
    function  GetRenderInfo(out plRenderInfo: Integer): HResult; stdcall;
    function  HitTestPoint(var pPoint: TGUID; const pReserved: IUnknown; out pbHit: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteRender
// Flags:     (0)
// GUID:      {3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteRender = interface(IUnknown)
    ['{3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Invalidate(var pRect: TGUID): HResult; stdcall;
    function  InvalidateRenderInfo: HResult; stdcall;
    function  InvalidateStyle: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle2 = interface(IDispatch)
    ['{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tableLayout(const p: WideString); safecall;
    function  Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function  Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function  Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function  Get_behavior: WideString; safecall;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); safecall;
    function  getExpression(const propname: WideString): OleVariant; safecall;
    function  removeExpression(const propname: WideString): WordBool; safecall;
    procedure Set_position(const p: WideString); safecall;
    function  Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function  Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function  Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function  Get_right: OleVariant; safecall;
    procedure Set_pixelBottom(p: Integer); safecall;
    function  Get_pixelBottom: Integer; safecall;
    procedure Set_pixelRight(p: Integer); safecall;
    function  Get_pixelRight: Integer; safecall;
    procedure Set_posBottom(p: Single); safecall;
    function  Get_posBottom: Single; safecall;
    procedure Set_posRight(p: Single); safecall;
    function  Get_posRight: Single; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function  Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function  Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function  Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function  Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function  Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function  Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function  Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function  Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function  Get_layoutGrid: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function  Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function  Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function  Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function  Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function  Get_textKashida: OleVariant; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function  Get_textAutospace: WideString; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function  Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function  Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function  Get_accelerator: WideString; safecall;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property pixelBottom: Integer read Get_pixelBottom write Set_pixelBottom;
    property pixelRight: Integer read Get_pixelRight write Set_pixelRight;
    property posBottom: Single read Get_posBottom write Set_posBottom;
    property posRight: Single read Get_posRight write Set_posRight;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle2Disp = dispinterface
    ['{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}']
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property textAutospace: WideString dispid -2147412980;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle = interface(IDispatch)
    ['{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontFamily(const p: WideString); safecall;
    function  Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function  Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function  Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function  Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function  Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function  Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function  Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function  Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function  Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function  Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function  Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function  Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function  Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function  Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function  Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function  Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function  Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function  Get_textDecoration: WideString; safecall;
    procedure Set_textDecorationNone(p: WordBool); safecall;
    function  Get_textDecorationNone: WordBool; safecall;
    procedure Set_textDecorationUnderline(p: WordBool); safecall;
    function  Get_textDecorationUnderline: WordBool; safecall;
    procedure Set_textDecorationOverline(p: WordBool); safecall;
    function  Get_textDecorationOverline: WordBool; safecall;
    procedure Set_textDecorationLineThrough(p: WordBool); safecall;
    function  Get_textDecorationLineThrough: WordBool; safecall;
    procedure Set_textDecorationBlink(p: WordBool); safecall;
    function  Get_textDecorationBlink: WordBool; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function  Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function  Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function  Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function  Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function  Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function  Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function  Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function  Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function  Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function  Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function  Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function  Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function  Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function  Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function  Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function  Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function  Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function  Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function  Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function  Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function  Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function  Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function  Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function  Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function  Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function  Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function  Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function  Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function  Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function  Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function  Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function  Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function  Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function  Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function  Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function  Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function  Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function  Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function  Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function  Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function  Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function  Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function  Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function  Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function  Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function  Get_left: OleVariant; safecall;
    function  Get_position: WideString; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function  Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function  Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function  Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function  Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function  Get_cssText: WideString; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function  Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function  Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function  Get_filter: WideString; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property textDecorationNone: WordBool read Get_textDecorationNone write Set_textDecorationNone;
    property textDecorationUnderline: WordBool read Get_textDecorationUnderline write Set_textDecorationUnderline;
    property textDecorationOverline: WordBool read Get_textDecorationOverline write Set_textDecorationOverline;
    property textDecorationLineThrough: WordBool read Get_textDecorationLineThrough write Set_textDecorationLineThrough;
    property textDecorationBlink: WordBool read Get_textDecorationBlink write Set_textDecorationBlink;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property position: WideString read Get_position;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyleDisp = dispinterface
    ['{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property position: WideString readonly dispid -2147413022;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle2 = interface(IDispatch)
    ['{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tableLayout(const p: WideString); safecall;
    function  Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function  Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function  Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function  Get_behavior: WideString; safecall;
    procedure Set_position(const p: WideString); safecall;
    function  Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function  Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function  Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function  Get_right: OleVariant; safecall;
    procedure Set_pixelBottom(p: Integer); safecall;
    function  Get_pixelBottom: Integer; safecall;
    procedure Set_pixelRight(p: Integer); safecall;
    function  Get_pixelRight: Integer; safecall;
    procedure Set_posBottom(p: Single); safecall;
    function  Get_posBottom: Single; safecall;
    procedure Set_posRight(p: Single); safecall;
    function  Get_posRight: Single; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function  Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function  Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function  Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function  Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function  Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function  Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function  Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function  Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function  Get_layoutGrid: WideString; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function  Get_textAutospace: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function  Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function  Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function  Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function  Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function  Get_textKashida: OleVariant; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function  Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function  Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function  Get_accelerator: WideString; safecall;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property pixelBottom: Integer read Get_pixelBottom write Set_pixelBottom;
    property pixelRight: Integer read Get_pixelRight write Set_pixelRight;
    property posBottom: Single read Get_posBottom write Set_posBottom;
    property posRight: Single read Get_posRight write Set_posRight;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle2Disp = dispinterface
    ['{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}']
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyle = dispinterface
    ['{3050F55A-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property pixelTop: Integer dispid -2147414112;
    property pixelLeft: Integer dispid -2147414111;
    property pixelWidth: Integer dispid -2147414110;
    property pixelHeight: Integer dispid -2147414109;
    property posTop: Single dispid -2147414108;
    property posLeft: Single dispid -2147414107;
    property posWidth: Single dispid -2147414106;
    property posHeight: Single dispid -2147414105;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    function  toString: WideString; dispid -2147414104;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property textAutospace: WideString dispid -2147412980;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRuleStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRuleStyle = dispinterface
    ['{3050F55C-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle = interface(IDispatch)
    ['{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_position: WideString; safecall;
    function  Get_styleFloat: WideString; safecall;
    function  Get_color: OleVariant; safecall;
    function  Get_backgroundColor: OleVariant; safecall;
    function  Get_fontFamily: WideString; safecall;
    function  Get_fontStyle: WideString; safecall;
    function  Get_fontVariant: WideString; safecall;
    function  Get_fontWeight: OleVariant; safecall;
    function  Get_fontSize: OleVariant; safecall;
    function  Get_backgroundImage: WideString; safecall;
    function  Get_backgroundPositionX: OleVariant; safecall;
    function  Get_backgroundPositionY: OleVariant; safecall;
    function  Get_backgroundRepeat: WideString; safecall;
    function  Get_borderLeftColor: OleVariant; safecall;
    function  Get_borderTopColor: OleVariant; safecall;
    function  Get_borderRightColor: OleVariant; safecall;
    function  Get_borderBottomColor: OleVariant; safecall;
    function  Get_borderTopStyle: WideString; safecall;
    function  Get_borderRightStyle: WideString; safecall;
    function  Get_borderBottomStyle: WideString; safecall;
    function  Get_borderLeftStyle: WideString; safecall;
    function  Get_borderTopWidth: OleVariant; safecall;
    function  Get_borderRightWidth: OleVariant; safecall;
    function  Get_borderBottomWidth: OleVariant; safecall;
    function  Get_borderLeftWidth: OleVariant; safecall;
    function  Get_left: OleVariant; safecall;
    function  Get_top: OleVariant; safecall;
    function  Get_width: OleVariant; safecall;
    function  Get_height: OleVariant; safecall;
    function  Get_paddingLeft: OleVariant; safecall;
    function  Get_paddingTop: OleVariant; safecall;
    function  Get_paddingRight: OleVariant; safecall;
    function  Get_paddingBottom: OleVariant; safecall;
    function  Get_textAlign: WideString; safecall;
    function  Get_textDecoration: WideString; safecall;
    function  Get_display: WideString; safecall;
    function  Get_visibility: WideString; safecall;
    function  Get_zIndex: OleVariant; safecall;
    function  Get_letterSpacing: OleVariant; safecall;
    function  Get_lineHeight: OleVariant; safecall;
    function  Get_textIndent: OleVariant; safecall;
    function  Get_verticalAlign: OleVariant; safecall;
    function  Get_backgroundAttachment: WideString; safecall;
    function  Get_marginTop: OleVariant; safecall;
    function  Get_marginRight: OleVariant; safecall;
    function  Get_marginBottom: OleVariant; safecall;
    function  Get_marginLeft: OleVariant; safecall;
    function  Get_clear: WideString; safecall;
    function  Get_listStyleType: WideString; safecall;
    function  Get_listStylePosition: WideString; safecall;
    function  Get_listStyleImage: WideString; safecall;
    function  Get_clipTop: OleVariant; safecall;
    function  Get_clipRight: OleVariant; safecall;
    function  Get_clipBottom: OleVariant; safecall;
    function  Get_clipLeft: OleVariant; safecall;
    function  Get_overflow: WideString; safecall;
    function  Get_pageBreakBefore: WideString; safecall;
    function  Get_pageBreakAfter: WideString; safecall;
    function  Get_cursor: WideString; safecall;
    function  Get_tableLayout: WideString; safecall;
    function  Get_borderCollapse: WideString; safecall;
    function  Get_direction: WideString; safecall;
    function  Get_behavior: WideString; safecall;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function  Get_unicodeBidi: WideString; safecall;
    function  Get_right: OleVariant; safecall;
    function  Get_bottom: OleVariant; safecall;
    function  Get_imeMode: WideString; safecall;
    function  Get_rubyAlign: WideString; safecall;
    function  Get_rubyPosition: WideString; safecall;
    function  Get_rubyOverhang: WideString; safecall;
    function  Get_textAutospace: WideString; safecall;
    function  Get_lineBreak: WideString; safecall;
    function  Get_wordBreak: WideString; safecall;
    function  Get_textJustify: WideString; safecall;
    function  Get_textJustifyTrim: WideString; safecall;
    function  Get_textKashida: OleVariant; safecall;
    function  Get_blockDirection: WideString; safecall;
    function  Get_layoutGridChar: OleVariant; safecall;
    function  Get_layoutGridLine: OleVariant; safecall;
    function  Get_layoutGridMode: WideString; safecall;
    function  Get_layoutGridType: WideString; safecall;
    function  Get_borderStyle: WideString; safecall;
    function  Get_borderColor: WideString; safecall;
    function  Get_borderWidth: WideString; safecall;
    function  Get_padding: WideString; safecall;
    function  Get_margin: WideString; safecall;
    function  Get_accelerator: WideString; safecall;
    function  Get_overflowX: WideString; safecall;
    function  Get_overflowY: WideString; safecall;
    function  Get_textTransform: WideString; safecall;
    property position: WideString read Get_position;
    property styleFloat: WideString read Get_styleFloat;
    property color: OleVariant read Get_color;
    property backgroundColor: OleVariant read Get_backgroundColor;
    property fontFamily: WideString read Get_fontFamily;
    property fontStyle: WideString read Get_fontStyle;
    property fontVariant: WideString read Get_fontVariant;
    property fontWeight: OleVariant read Get_fontWeight;
    property fontSize: OleVariant read Get_fontSize;
    property backgroundImage: WideString read Get_backgroundImage;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY;
    property backgroundRepeat: WideString read Get_backgroundRepeat;
    property borderLeftColor: OleVariant read Get_borderLeftColor;
    property borderTopColor: OleVariant read Get_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor;
    property borderTopStyle: WideString read Get_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle;
    property borderTopWidth: OleVariant read Get_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth;
    property left: OleVariant read Get_left;
    property top: OleVariant read Get_top;
    property width: OleVariant read Get_width;
    property height: OleVariant read Get_height;
    property paddingLeft: OleVariant read Get_paddingLeft;
    property paddingTop: OleVariant read Get_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom;
    property textAlign: WideString read Get_textAlign;
    property textDecoration: WideString read Get_textDecoration;
    property display: WideString read Get_display;
    property visibility: WideString read Get_visibility;
    property zIndex: OleVariant read Get_zIndex;
    property letterSpacing: OleVariant read Get_letterSpacing;
    property lineHeight: OleVariant read Get_lineHeight;
    property textIndent: OleVariant read Get_textIndent;
    property verticalAlign: OleVariant read Get_verticalAlign;
    property backgroundAttachment: WideString read Get_backgroundAttachment;
    property marginTop: OleVariant read Get_marginTop;
    property marginRight: OleVariant read Get_marginRight;
    property marginBottom: OleVariant read Get_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft;
    property clear: WideString read Get_clear;
    property listStyleType: WideString read Get_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage;
    property clipTop: OleVariant read Get_clipTop;
    property clipRight: OleVariant read Get_clipRight;
    property clipBottom: OleVariant read Get_clipBottom;
    property clipLeft: OleVariant read Get_clipLeft;
    property overflow: WideString read Get_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter;
    property cursor: WideString read Get_cursor;
    property tableLayout: WideString read Get_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse;
    property direction: WideString read Get_direction;
    property behavior: WideString read Get_behavior;
    property unicodeBidi: WideString read Get_unicodeBidi;
    property right: OleVariant read Get_right;
    property bottom: OleVariant read Get_bottom;
    property imeMode: WideString read Get_imeMode;
    property rubyAlign: WideString read Get_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang;
    property textAutospace: WideString read Get_textAutospace;
    property lineBreak: WideString read Get_lineBreak;
    property wordBreak: WideString read Get_wordBreak;
    property textJustify: WideString read Get_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida;
    property blockDirection: WideString read Get_blockDirection;
    property layoutGridChar: OleVariant read Get_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType;
    property borderStyle: WideString read Get_borderStyle;
    property borderColor: WideString read Get_borderColor;
    property borderWidth: WideString read Get_borderWidth;
    property padding: WideString read Get_padding;
    property margin: WideString read Get_margin;
    property accelerator: WideString read Get_accelerator;
    property overflowX: WideString read Get_overflowX;
    property overflowY: WideString read Get_overflowY;
    property textTransform: WideString read Get_textTransform;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyleDisp = dispinterface
    ['{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}']
    property position: WideString readonly dispid -2147413022;
    property styleFloat: WideString readonly dispid -2147413042;
    property color: OleVariant readonly dispid -2147413110;
    property backgroundColor: OleVariant readonly dispid -501;
    property fontFamily: WideString readonly dispid -2147413094;
    property fontStyle: WideString readonly dispid -2147413088;
    property fontVariant: WideString readonly dispid -2147413087;
    property fontWeight: OleVariant readonly dispid -2147413085;
    property fontSize: OleVariant readonly dispid -2147413093;
    property backgroundImage: WideString readonly dispid -2147413111;
    property backgroundPositionX: OleVariant readonly dispid -2147413079;
    property backgroundPositionY: OleVariant readonly dispid -2147413078;
    property backgroundRepeat: WideString readonly dispid -2147413068;
    property borderLeftColor: OleVariant readonly dispid -2147413054;
    property borderTopColor: OleVariant readonly dispid -2147413057;
    property borderRightColor: OleVariant readonly dispid -2147413056;
    property borderBottomColor: OleVariant readonly dispid -2147413055;
    property borderTopStyle: WideString readonly dispid -2147413047;
    property borderRightStyle: WideString readonly dispid -2147413046;
    property borderBottomStyle: WideString readonly dispid -2147413045;
    property borderLeftStyle: WideString readonly dispid -2147413044;
    property borderTopWidth: OleVariant readonly dispid -2147413052;
    property borderRightWidth: OleVariant readonly dispid -2147413051;
    property borderBottomWidth: OleVariant readonly dispid -2147413050;
    property borderLeftWidth: OleVariant readonly dispid -2147413049;
    property left: OleVariant readonly dispid -2147418109;
    property top: OleVariant readonly dispid -2147418108;
    property width: OleVariant readonly dispid -2147418107;
    property height: OleVariant readonly dispid -2147418106;
    property paddingLeft: OleVariant readonly dispid -2147413097;
    property paddingTop: OleVariant readonly dispid -2147413100;
    property paddingRight: OleVariant readonly dispid -2147413099;
    property paddingBottom: OleVariant readonly dispid -2147413098;
    property textAlign: WideString readonly dispid -2147418040;
    property textDecoration: WideString readonly dispid -2147413077;
    property display: WideString readonly dispid -2147413041;
    property visibility: WideString readonly dispid -2147413032;
    property zIndex: OleVariant readonly dispid -2147413021;
    property letterSpacing: OleVariant readonly dispid -2147413104;
    property lineHeight: OleVariant readonly dispid -2147413106;
    property textIndent: OleVariant readonly dispid -2147413105;
    property verticalAlign: OleVariant readonly dispid -2147413064;
    property backgroundAttachment: WideString readonly dispid -2147413067;
    property marginTop: OleVariant readonly dispid -2147413075;
    property marginRight: OleVariant readonly dispid -2147413074;
    property marginBottom: OleVariant readonly dispid -2147413073;
    property marginLeft: OleVariant readonly dispid -2147413072;
    property clear: WideString readonly dispid -2147413096;
    property listStyleType: WideString readonly dispid -2147413040;
    property listStylePosition: WideString readonly dispid -2147413039;
    property listStyleImage: WideString readonly dispid -2147413038;
    property clipTop: OleVariant readonly dispid -2147413019;
    property clipRight: OleVariant readonly dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant readonly dispid -2147413016;
    property overflow: WideString readonly dispid -2147413102;
    property pageBreakBefore: WideString readonly dispid -2147413035;
    property pageBreakAfter: WideString readonly dispid -2147413034;
    property cursor: WideString readonly dispid -2147413010;
    property tableLayout: WideString readonly dispid -2147413014;
    property borderCollapse: WideString readonly dispid -2147413028;
    property direction: WideString readonly dispid -2147412993;
    property behavior: WideString readonly dispid -2147412997;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    property unicodeBidi: WideString readonly dispid -2147412994;
    property right: OleVariant readonly dispid -2147418035;
    property bottom: OleVariant readonly dispid -2147418034;
    property imeMode: WideString readonly dispid -2147412992;
    property rubyAlign: WideString readonly dispid -2147412991;
    property rubyPosition: WideString readonly dispid -2147412990;
    property rubyOverhang: WideString readonly dispid -2147412989;
    property textAutospace: WideString readonly dispid -2147412980;
    property lineBreak: WideString readonly dispid -2147412979;
    property wordBreak: WideString readonly dispid -2147412978;
    property textJustify: WideString readonly dispid -2147412977;
    property textJustifyTrim: WideString readonly dispid -2147412976;
    property textKashida: OleVariant readonly dispid -2147412975;
    property blockDirection: WideString readonly dispid -2147412995;
    property layoutGridChar: OleVariant readonly dispid -2147412985;
    property layoutGridLine: OleVariant readonly dispid -2147412984;
    property layoutGridMode: WideString readonly dispid -2147412983;
    property layoutGridType: WideString readonly dispid -2147412982;
    property borderStyle: WideString readonly dispid -2147413048;
    property borderColor: WideString readonly dispid -2147413058;
    property borderWidth: WideString readonly dispid -2147413053;
    property padding: WideString readonly dispid -2147413101;
    property margin: WideString readonly dispid -2147413076;
    property accelerator: WideString readonly dispid -2147412965;
    property overflowX: WideString readonly dispid -2147412973;
    property overflowY: WideString readonly dispid -2147412972;
    property textTransform: WideString readonly dispid -2147413108;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCurrentStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F557-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCurrentStyle = dispinterface
    ['{3050F557-98B5-11CF-BB82-00AA00BDCE0B}']
    property position: WideString readonly dispid -2147413022;
    property styleFloat: WideString readonly dispid -2147413042;
    property color: OleVariant readonly dispid -2147413110;
    property backgroundColor: OleVariant readonly dispid -501;
    property fontFamily: WideString readonly dispid -2147413094;
    property fontStyle: WideString readonly dispid -2147413088;
    property fontVariant: WideString readonly dispid -2147413087;
    property fontWeight: OleVariant readonly dispid -2147413085;
    property fontSize: OleVariant readonly dispid -2147413093;
    property backgroundImage: WideString readonly dispid -2147413111;
    property backgroundPositionX: OleVariant readonly dispid -2147413079;
    property backgroundPositionY: OleVariant readonly dispid -2147413078;
    property backgroundRepeat: WideString readonly dispid -2147413068;
    property borderLeftColor: OleVariant readonly dispid -2147413054;
    property borderTopColor: OleVariant readonly dispid -2147413057;
    property borderRightColor: OleVariant readonly dispid -2147413056;
    property borderBottomColor: OleVariant readonly dispid -2147413055;
    property borderTopStyle: WideString readonly dispid -2147413047;
    property borderRightStyle: WideString readonly dispid -2147413046;
    property borderBottomStyle: WideString readonly dispid -2147413045;
    property borderLeftStyle: WideString readonly dispid -2147413044;
    property borderTopWidth: OleVariant readonly dispid -2147413052;
    property borderRightWidth: OleVariant readonly dispid -2147413051;
    property borderBottomWidth: OleVariant readonly dispid -2147413050;
    property borderLeftWidth: OleVariant readonly dispid -2147413049;
    property left: OleVariant readonly dispid -2147418109;
    property top: OleVariant readonly dispid -2147418108;
    property width: OleVariant readonly dispid -2147418107;
    property height: OleVariant readonly dispid -2147418106;
    property paddingLeft: OleVariant readonly dispid -2147413097;
    property paddingTop: OleVariant readonly dispid -2147413100;
    property paddingRight: OleVariant readonly dispid -2147413099;
    property paddingBottom: OleVariant readonly dispid -2147413098;
    property textAlign: WideString readonly dispid -2147418040;
    property textDecoration: WideString readonly dispid -2147413077;
    property display: WideString readonly dispid -2147413041;
    property visibility: WideString readonly dispid -2147413032;
    property zIndex: OleVariant readonly dispid -2147413021;
    property letterSpacing: OleVariant readonly dispid -2147413104;
    property lineHeight: OleVariant readonly dispid -2147413106;
    property textIndent: OleVariant readonly dispid -2147413105;
    property verticalAlign: OleVariant readonly dispid -2147413064;
    property backgroundAttachment: WideString readonly dispid -2147413067;
    property marginTop: OleVariant readonly dispid -2147413075;
    property marginRight: OleVariant readonly dispid -2147413074;
    property marginBottom: OleVariant readonly dispid -2147413073;
    property marginLeft: OleVariant readonly dispid -2147413072;
    property clear: WideString readonly dispid -2147413096;
    property listStyleType: WideString readonly dispid -2147413040;
    property listStylePosition: WideString readonly dispid -2147413039;
    property listStyleImage: WideString readonly dispid -2147413038;
    property clipTop: OleVariant readonly dispid -2147413019;
    property clipRight: OleVariant readonly dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant readonly dispid -2147413016;
    property overflow: WideString readonly dispid -2147413102;
    property pageBreakBefore: WideString readonly dispid -2147413035;
    property pageBreakAfter: WideString readonly dispid -2147413034;
    property cursor: WideString readonly dispid -2147413010;
    property tableLayout: WideString readonly dispid -2147413014;
    property borderCollapse: WideString readonly dispid -2147413028;
    property direction: WideString readonly dispid -2147412993;
    property behavior: WideString readonly dispid -2147412997;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    property unicodeBidi: WideString readonly dispid -2147412994;
    property right: OleVariant readonly dispid -2147418035;
    property bottom: OleVariant readonly dispid -2147418034;
    property imeMode: WideString readonly dispid -2147412992;
    property rubyAlign: WideString readonly dispid -2147412991;
    property rubyPosition: WideString readonly dispid -2147412990;
    property rubyOverhang: WideString readonly dispid -2147412989;
    property textAutospace: WideString readonly dispid -2147412980;
    property lineBreak: WideString readonly dispid -2147412979;
    property wordBreak: WideString readonly dispid -2147412978;
    property textJustify: WideString readonly dispid -2147412977;
    property textJustifyTrim: WideString readonly dispid -2147412976;
    property textKashida: OleVariant readonly dispid -2147412975;
    property blockDirection: WideString readonly dispid -2147412995;
    property layoutGridChar: OleVariant readonly dispid -2147412985;
    property layoutGridLine: OleVariant readonly dispid -2147412984;
    property layoutGridMode: WideString readonly dispid -2147412983;
    property layoutGridType: WideString readonly dispid -2147412982;
    property borderStyle: WideString readonly dispid -2147413048;
    property borderColor: WideString readonly dispid -2147413058;
    property borderWidth: WideString readonly dispid -2147413053;
    property padding: WideString readonly dispid -2147413101;
    property margin: WideString readonly dispid -2147413076;
    property accelerator: WideString readonly dispid -2147412965;
    property overflowX: WideString readonly dispid -2147412973;
    property overflowY: WideString readonly dispid -2147412972;
    property textTransform: WideString readonly dispid -2147413108;
  end;

// *********************************************************************//
// Interface: IHTMLRect
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRect = interface(IDispatch)
    ['{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_left(p: Integer); safecall;
    function  Get_left: Integer; safecall;
    procedure Set_top(p: Integer); safecall;
    function  Get_top: Integer; safecall;
    procedure Set_right(p: Integer); safecall;
    function  Get_right: Integer; safecall;
    procedure Set_bottom(p: Integer); safecall;
    function  Get_bottom: Integer; safecall;
    property left: Integer read Get_left write Set_left;
    property top: Integer read Get_top write Set_top;
    property right: Integer read Get_right write Set_right;
    property bottom: Integer read Get_bottom write Set_bottom;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectDisp = dispinterface
    ['{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}']
    property left: Integer dispid 1001;
    property top: Integer dispid 1002;
    property right: Integer dispid 1003;
    property bottom: Integer dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLRectCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectCollection = interface(IDispatch)
    ['{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(var pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRectCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectCollectionDisp = dispinterface
    ['{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDOMNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode = interface(IDispatch)
    ['{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_nodeType: Integer; safecall;
    function  Get_parentNode: IHTMLDOMNode; safecall;
    function  hasChildNodes: WordBool; safecall;
    function  Get_childNodes: IDispatch; safecall;
    function  Get_attributes: IDispatch; safecall;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; safecall;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; safecall;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; safecall;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function  Get_nodeName: WideString; safecall;
    procedure Set_nodeValue(p: OleVariant); safecall;
    function  Get_nodeValue: OleVariant; safecall;
    function  Get_firstChild: IHTMLDOMNode; safecall;
    function  Get_lastChild: IHTMLDOMNode; safecall;
    function  Get_previousSibling: IHTMLDOMNode; safecall;
    function  Get_nextSibling: IHTMLDOMNode; safecall;
    property nodeType: Integer read Get_nodeType;
    property parentNode: IHTMLDOMNode read Get_parentNode;
    property childNodes: IDispatch read Get_childNodes;
    property attributes: IDispatch read Get_attributes;
    property nodeName: WideString read Get_nodeName;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property firstChild: IHTMLDOMNode read Get_firstChild;
    property lastChild: IHTMLDOMNode read Get_lastChild;
    property previousSibling: IHTMLDOMNode read Get_previousSibling;
    property nextSibling: IHTMLDOMNode read Get_nextSibling;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNodeDisp = dispinterface
    ['{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute = interface(IDispatch)
    ['{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_nodeName: WideString; safecall;
    procedure Set_nodeValue(p: OleVariant); safecall;
    function  Get_nodeValue: OleVariant; safecall;
    function  Get_specified: WordBool; safecall;
    property nodeName: WideString read Get_nodeName;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property specified: WordBool read Get_specified;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttributeDisp = dispinterface
    ['{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeName: WideString readonly dispid 1000;
    property nodeValue: OleVariant dispid 0;
    property specified: WordBool readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLDOMTextNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode = interface(IDispatch)
    ['{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_data(const p: WideString); safecall;
    function  Get_data: WideString; safecall;
    function  toString: WideString; safecall;
    function  Get_length: Integer; safecall;
    function  splitText(offset: Integer): IHTMLDOMNode; safecall;
    property data: WideString read Get_data write Set_data;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMTextNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNodeDisp = dispinterface
    ['{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1000;
    function  toString: WideString; dispid 1001;
    property length: Integer readonly dispid 1002;
    function  splitText(offset: Integer): IHTMLDOMNode; dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMAttribute
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F564-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMAttribute = dispinterface
    ['{3050F564-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeName: WideString readonly dispid 1000;
    property nodeValue: OleVariant dispid 0;
    property specified: WordBool readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMTextNode
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F565-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMTextNode = dispinterface
    ['{3050F565-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1000;
    function  toString: WideString; dispid 1001;
    property length: Integer readonly dispid 1002;
    function  splitText(offset: Integer): IHTMLDOMNode; dispid 1003;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection = interface(IDispatch)
    ['{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(var name: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollectionDisp = dispinterface
    ['{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(var name: OleVariant): IDispatch; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDOMChildrenCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollection = interface(IDispatch)
    ['{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(index: Integer): IDispatch; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMChildrenCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollectionDisp = dispinterface
    ['{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(index: Integer): IDispatch; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAttributeCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAttributeCollection = dispinterface
    ['{3050F56C-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(var name: OleVariant): IDispatch; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispDOMChildrenCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F577-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMChildrenCollection = dispinterface
    ['{3050F577-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(index: Integer): IDispatch; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F60F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents2 = dispinterface
    ['{3050F60F-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F33C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents = dispinterface
    ['{3050F33C-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection = interface(IDispatch)
    ['{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}']
    function  toString: WideString; safecall;
    procedure Set_length(p: Integer); safecall;
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function  tags(tagName: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollectionDisp = dispinterface
    ['{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}']
    function  toString: WideString; dispid 1501;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement2 = interface(IDispatch)
    ['{3050F434-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_scopeName: WideString; safecall;
    procedure setCapture(containerCapture: WordBool); safecall;
    procedure releaseCapture; safecall;
    procedure Set_onlosecapture(p: OleVariant); safecall;
    function  Get_onlosecapture: OleVariant; safecall;
    function  componentFromPoint(x: Integer; y: Integer): WideString; safecall;
    procedure doScroll(component: OleVariant); safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function  Get_onscroll: OleVariant; safecall;
    procedure Set_ondrag(p: OleVariant); safecall;
    function  Get_ondrag: OleVariant; safecall;
    procedure Set_ondragend(p: OleVariant); safecall;
    function  Get_ondragend: OleVariant; safecall;
    procedure Set_ondragenter(p: OleVariant); safecall;
    function  Get_ondragenter: OleVariant; safecall;
    procedure Set_ondragover(p: OleVariant); safecall;
    function  Get_ondragover: OleVariant; safecall;
    procedure Set_ondragleave(p: OleVariant); safecall;
    function  Get_ondragleave: OleVariant; safecall;
    procedure Set_ondrop(p: OleVariant); safecall;
    function  Get_ondrop: OleVariant; safecall;
    procedure Set_onbeforecut(p: OleVariant); safecall;
    function  Get_onbeforecut: OleVariant; safecall;
    procedure Set_oncut(p: OleVariant); safecall;
    function  Get_oncut: OleVariant; safecall;
    procedure Set_onbeforecopy(p: OleVariant); safecall;
    function  Get_onbeforecopy: OleVariant; safecall;
    procedure Set_oncopy(p: OleVariant); safecall;
    function  Get_oncopy: OleVariant; safecall;
    procedure Set_onbeforepaste(p: OleVariant); safecall;
    function  Get_onbeforepaste: OleVariant; safecall;
    procedure Set_onpaste(p: OleVariant); safecall;
    function  Get_onpaste: OleVariant; safecall;
    function  Get_currentStyle: IHTMLCurrentStyle; safecall;
    procedure Set_onpropertychange(p: OleVariant); safecall;
    function  Get_onpropertychange: OleVariant; safecall;
    function  getClientRects: IHTMLRectCollection; safecall;
    function  getBoundingClientRect: IHTMLRect; safecall;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); safecall;
    function  getExpression(const propname: WideString): OleVariant; safecall;
    function  removeExpression(const propname: WideString): WordBool; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function  Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function  Get_accessKey: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function  Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function  Get_onfocus: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function  Get_onresize: OleVariant; safecall;
    procedure blur; safecall;
    procedure addFilter(const pUnk: IUnknown); safecall;
    procedure removeFilter(const pUnk: IUnknown); safecall;
    function  Get_clientHeight: Integer; safecall;
    function  Get_clientWidth: Integer; safecall;
    function  Get_clientTop: Integer; safecall;
    function  Get_clientLeft: Integer; safecall;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    function  Get_readyState: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function  Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onrowsdelete(p: OleVariant); safecall;
    function  Get_onrowsdelete: OleVariant; safecall;
    procedure Set_onrowsinserted(p: OleVariant); safecall;
    function  Get_onrowsinserted: OleVariant; safecall;
    procedure Set_oncellchange(p: OleVariant); safecall;
    function  Get_oncellchange: OleVariant; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function  Get_dir: WideString; safecall;
    function  createControlRange: IDispatch; safecall;
    function  Get_scrollHeight: Integer; safecall;
    function  Get_scrollWidth: Integer; safecall;
    procedure Set_scrollTop(p: Integer); safecall;
    function  Get_scrollTop: Integer; safecall;
    procedure Set_scrollLeft(p: Integer); safecall;
    function  Get_scrollLeft: Integer; safecall;
    procedure clearAttributes; safecall;
    procedure mergeAttributes(const mergeThis: IHTMLElement); safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function  Get_oncontextmenu: OleVariant; safecall;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; safecall;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; safecall;
    function  getAdjacentText(const where: WideString): WideString; safecall;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; safecall;
    function  Get_canHaveChildren: WordBool; safecall;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; safecall;
    function  removeBehavior(cookie: Integer): WordBool; safecall;
    function  Get_runtimeStyle: IHTMLStyle; safecall;
    function  Get_behaviorUrns: IDispatch; safecall;
    procedure Set_tagUrn(const p: WideString); safecall;
    function  Get_tagUrn: WideString; safecall;
    procedure Set_onbeforeeditfocus(p: OleVariant); safecall;
    function  Get_onbeforeeditfocus: OleVariant; safecall;
    function  Get_readyStateValue: Integer; safecall;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; safecall;
    property scopeName: WideString read Get_scopeName;
    property onlosecapture: OleVariant read Get_onlosecapture write Set_onlosecapture;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property ondrag: OleVariant read Get_ondrag write Set_ondrag;
    property ondragend: OleVariant read Get_ondragend write Set_ondragend;
    property ondragenter: OleVariant read Get_ondragenter write Set_ondragenter;
    property ondragover: OleVariant read Get_ondragover write Set_ondragover;
    property ondragleave: OleVariant read Get_ondragleave write Set_ondragleave;
    property ondrop: OleVariant read Get_ondrop write Set_ondrop;
    property onbeforecut: OleVariant read Get_onbeforecut write Set_onbeforecut;
    property oncut: OleVariant read Get_oncut write Set_oncut;
    property onbeforecopy: OleVariant read Get_onbeforecopy write Set_onbeforecopy;
    property oncopy: OleVariant read Get_oncopy write Set_oncopy;
    property onbeforepaste: OleVariant read Get_onbeforepaste write Set_onbeforepaste;
    property onpaste: OleVariant read Get_onpaste write Set_onpaste;
    property currentStyle: IHTMLCurrentStyle read Get_currentStyle;
    property onpropertychange: OleVariant read Get_onpropertychange write Set_onpropertychange;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
    property readyState: OleVariant read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onrowsdelete: OleVariant read Get_onrowsdelete write Set_onrowsdelete;
    property onrowsinserted: OleVariant read Get_onrowsinserted write Set_onrowsinserted;
    property oncellchange: OleVariant read Get_oncellchange write Set_oncellchange;
    property dir: WideString read Get_dir write Set_dir;
    property scrollHeight: Integer read Get_scrollHeight;
    property scrollWidth: Integer read Get_scrollWidth;
    property scrollTop: Integer read Get_scrollTop write Set_scrollTop;
    property scrollLeft: Integer read Get_scrollLeft write Set_scrollLeft;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property canHaveChildren: WordBool read Get_canHaveChildren;
    property runtimeStyle: IHTMLStyle read Get_runtimeStyle;
    property behaviorUrns: IDispatch read Get_behaviorUrns;
    property tagUrn: WideString read Get_tagUrn write Set_tagUrn;
    property onbeforeeditfocus: OleVariant read Get_onbeforeeditfocus write Set_onbeforeeditfocus;
    property readyStateValue: Integer read Get_readyStateValue;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement2Disp = dispinterface
    ['{3050F434-98B5-11CF-BB82-00AA00BDCE0B}']
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
  end;

// *********************************************************************//
// Interface: IHTMLUniqueName
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUniqueName = interface(IDispatch)
    ['{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_uniqueNumber: Integer; safecall;
    function  Get_uniqueID: WideString; safecall;
    property uniqueNumber: Integer read Get_uniqueNumber;
    property uniqueID: WideString read Get_uniqueID;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUniqueNameDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUniqueNameDisp = dispinterface
    ['{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}']
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
  end;

// *********************************************************************//
// Interface: IHTMLDatabinding
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDatabinding = interface(IDispatch)
    ['{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_dataFld(const p: WideString); safecall;
    function  Get_dataFld: WideString; safecall;
    procedure Set_dataSrc(const p: WideString); safecall;
    function  Get_dataSrc: WideString; safecall;
    procedure Set_dataFormatAs(const p: WideString); safecall;
    function  Get_dataFormatAs: WideString; safecall;
    property dataFld: WideString read Get_dataFld write Set_dataFld;
    property dataSrc: WideString read Get_dataSrc write Set_dataSrc;
    property dataFormatAs: WideString read Get_dataFormatAs write Set_dataFormatAs;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDatabindingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDatabindingDisp = dispinterface
    ['{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}']
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// Interface: IHTCDefaultDispatch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDefaultDispatch = interface(IDispatch)
    ['{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_element: IHTMLElement; safecall;
    function  CreateEventObject: IHTMLEventObj; safecall;
    property element: IHTMLElement read Get_element;
  end;

// *********************************************************************//
// DispIntf:  IHTCDefaultDispatchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDefaultDispatchDisp = dispinterface
    ['{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid -2147412969;
    function  CreateEventObject: IHTMLEventObj; dispid -2147412968;
  end;

// *********************************************************************//
// Interface: IHTCPropertyBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCPropertyBehavior = interface(IDispatch)
    ['{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; safecall;
    procedure Set_value(p: OleVariant); safecall;
    function  Get_value: OleVariant; safecall;
    property value: OleVariant read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTCPropertyBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCPropertyBehaviorDisp = dispinterface
    ['{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; dispid -2147417612;
    property value: OleVariant dispid -2147412971;
  end;

// *********************************************************************//
// Interface: IHTCMethodBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F631-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCMethodBehavior = interface(IDispatch)
    ['{3050F631-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTCMethodBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F631-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCMethodBehaviorDisp = dispinterface
    ['{3050F631-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTCEventBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCEventBehavior = interface(IDispatch)
    ['{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCEventBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCEventBehaviorDisp = dispinterface
    ['{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); dispid -2147417612;
  end;

// *********************************************************************//
// Interface: IHTCAttachBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior = interface(IDispatch)
    ['{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); safecall;
    procedure detachEvent; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCAttachBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehaviorDisp = dispinterface
    ['{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); dispid 0;
    procedure detachEvent; dispid -2147417612;
  end;

// *********************************************************************//
// Interface: IHTCDescBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDescBehavior = interface(IDispatch)
    ['{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_urn: WideString; safecall;
    function  Get_name: WideString; safecall;
    property urn: WideString read Get_urn;
    property name: WideString read Get_name;
  end;

// *********************************************************************//
// DispIntf:  IHTCDescBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDescBehaviorDisp = dispinterface
    ['{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}']
    property urn: WideString readonly dispid -2147417612;
    property name: WideString readonly dispid -2147417611;
  end;

// *********************************************************************//
// DispIntf:  DispHTCDefaultDispatch
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F573-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCDefaultDispatch = dispinterface
    ['{3050F573-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid -2147412969;
    function  CreateEventObject: IHTMLEventObj; dispid -2147412968;
  end;

// *********************************************************************//
// DispIntf:  DispHTCPropertyBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCPropertyBehavior = dispinterface
    ['{3050F57F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; dispid -2147417612;
    property value: OleVariant dispid -2147412971;
  end;

// *********************************************************************//
// DispIntf:  DispHTCMethodBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F587-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCMethodBehavior = dispinterface
    ['{3050F587-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTCEventBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F574-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCEventBehavior = dispinterface
    ['{3050F574-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); dispid -2147417612;
  end;

// *********************************************************************//
// DispIntf:  DispHTCAttachBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F583-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCAttachBehavior = dispinterface
    ['{3050F583-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); dispid 0;
    procedure detachEvent; dispid -2147417612;
  end;

// *********************************************************************//
// DispIntf:  DispHTCDescBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCDescBehavior = dispinterface
    ['{3050F57E-98B5-11CF-BB82-00AA00BDCE0B}']
    property urn: WideString readonly dispid -2147417612;
    property name: WideString readonly dispid -2147417611;
  end;

// *********************************************************************//
// Interface: IHTMLUrnCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUrnCollection = interface(IDispatch)
    ['{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  item(index: Integer): WideString; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUrnCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUrnCollectionDisp = dispinterface
    ['{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function  item(index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLGenericElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLGenericElement = interface(IDispatch)
    ['{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_recordset: IDispatch; safecall;
    function  namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; safecall;
    property recordset: IDispatch read Get_recordset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLGenericElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLGenericElementDisp = dispinterface
    ['{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}']
    property recordset: IDispatch readonly dispid 1001;
    function  namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLGenericElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F563-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLGenericElement = dispinterface
    ['{3050F563-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property recordset: IDispatch readonly dispid 1001;
    function  namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F357-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRule = interface(IDispatch)
    ['{3050F357-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectorText(const p: WideString); safecall;
    function  Get_selectorText: WideString; safecall;
    function  Get_style: IHTMLRuleStyle; safecall;
    function  Get_readOnly: WordBool; safecall;
    property selectorText: WideString read Get_selectorText write Set_selectorText;
    property style: IHTMLRuleStyle read Get_style;
    property readOnly: WordBool read Get_readOnly;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F357-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRuleDisp = dispinterface
    ['{3050F357-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectorText: WideString dispid 1001;
    property style: IHTMLRuleStyle readonly dispid -2147418038;
    property readOnly: WordBool readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRulesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollection = interface(IDispatch)
    ['{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  item(index: Integer): IHTMLStyleSheetRule; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRulesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollectionDisp = dispinterface
    ['{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function  item(index: Integer): IHTMLStyleSheetRule; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F37E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollection = interface(IDispatch)
    ['{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(var pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F37E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollectionDisp = dispinterface
    ['{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet = interface(IDispatch)
    ['{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_title(const p: WideString); safecall;
    function  Get_title: WideString; safecall;
    function  Get_parentStyleSheet: IHTMLStyleSheet; safecall;
    function  Get_owningElement: IHTMLElement; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_readOnly: WordBool; safecall;
    function  Get_imports: IHTMLStyleSheetsCollection; safecall;
    procedure Set_href(const p: WideString); safecall;
    function  Get_href: WideString; safecall;
    function  Get_type_: WideString; safecall;
    function  Get_id: WideString; safecall;
    function  addImport(const bstrUrl: WideString; lIndex: Integer): Integer; safecall;
    function  addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; safecall;
    procedure removeImport(lIndex: Integer); safecall;
    procedure removeRule(lIndex: Integer); safecall;
    procedure Set_media(const p: WideString); safecall;
    function  Get_media: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function  Get_cssText: WideString; safecall;
    function  Get_rules: IHTMLStyleSheetRulesCollection; safecall;
    property title: WideString read Get_title write Set_title;
    property parentStyleSheet: IHTMLStyleSheet read Get_parentStyleSheet;
    property owningElement: IHTMLElement read Get_owningElement;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property readOnly: WordBool read Get_readOnly;
    property imports: IHTMLStyleSheetsCollection read Get_imports;
    property href: WideString read Get_href write Set_href;
    property type_: WideString read Get_type_;
    property id: WideString read Get_id;
    property media: WideString read Get_media write Set_media;
    property cssText: WideString read Get_cssText write Set_cssText;
    property rules: IHTMLStyleSheetRulesCollection read Get_rules;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetDisp = dispinterface
    ['{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}']
    property title: WideString dispid 1001;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1002;
    property owningElement: IHTMLElement readonly dispid 1003;
    property disabled: WordBool dispid -2147418036;
    property readOnly: WordBool readonly dispid 1004;
    property imports: IHTMLStyleSheetsCollection readonly dispid 1005;
    property href: WideString dispid 1006;
    property type_: WideString readonly dispid 1007;
    property id: WideString readonly dispid 1008;
    function  addImport(const bstrUrl: WideString; lIndex: Integer): Integer; dispid 1009;
    function  addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; dispid 1010;
    procedure removeImport(lIndex: Integer); dispid 1011;
    procedure removeRule(lIndex: Integer); dispid 1012;
    property media: WideString dispid 1013;
    property cssText: WideString dispid 1014;
    property rules: IHTMLStyleSheetRulesCollection readonly dispid 1015;
  end;

// *********************************************************************//
// DispIntf:  HTMLLinkElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLinkElementEvents2 = dispinterface
    ['{3050F61D-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLLinkElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLinkElementEvents = dispinterface
    ['{3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F205-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement = interface(IDispatch)
    ['{3050F205-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function  Get_href: WideString; safecall;
    procedure Set_rel(const p: WideString); safecall;
    function  Get_rel: WideString; safecall;
    procedure Set_rev(const p: WideString); safecall;
    function  Get_rev: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    function  Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function  Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    function  Get_styleSheet: IHTMLStyleSheet; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    procedure Set_media(const p: WideString); safecall;
    function  Get_media: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property rel: WideString read Get_rel write Set_rel;
    property rev: WideString read Get_rev write Set_rev;
    property type_: WideString read Get_type_ write Set_type_;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F205-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElementDisp = dispinterface
    ['{3050F205-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1005;
    property rel: WideString dispid 1006;
    property rev: WideString dispid 1007;
    property type_: WideString dispid 1008;
    property readyState: WideString readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1014;
    property disabled: WordBool dispid -2147418036;
    property media: WideString dispid 1016;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement2 = interface(IDispatch)
    ['{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_target(const p: WideString); safecall;
    function  Get_target: WideString; safecall;
    property target: WideString read Get_target write Set_target;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement2Disp = dispinterface
    ['{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property target: WideString dispid 1017;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLinkElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F524-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLinkElement = dispinterface
    ['{3050F524-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property href: WideString dispid 1005;
    property rel: WideString dispid 1006;
    property rev: WideString dispid 1007;
    property type_: WideString dispid 1008;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1014;
    property disabled: WordBool dispid -2147418036;
    property media: WideString dispid 1016;
    property target: WideString dispid 1017;
  end;

// *********************************************************************//
// Interface: IHTMLTxtRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F220-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRange = interface(IDispatch)
    ['{3050F220-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_htmlText: WideString; safecall;
    procedure Set_text(const p: WideString); safecall;
    function  Get_text: WideString; safecall;
    function  parentElement: IHTMLElement; safecall;
    function  duplicate: IHTMLTxtRange; safecall;
    function  inRange(const range: IHTMLTxtRange): WordBool; safecall;
    function  isEqual(const range: IHTMLTxtRange): WordBool; safecall;
    procedure scrollIntoView(fStart: WordBool); safecall;
    procedure collapse(Start: WordBool); safecall;
    function  expand(const Unit_: WideString): WordBool; safecall;
    function  move(const Unit_: WideString; Count: Integer): Integer; safecall;
    function  moveStart(const Unit_: WideString; Count: Integer): Integer; safecall;
    function  moveEnd(const Unit_: WideString; Count: Integer): Integer; safecall;
    procedure select; safecall;
    procedure pasteHTML(const html: WideString); safecall;
    procedure moveToElementText(const element: IHTMLElement); safecall;
    procedure setEndPoint(const how: WideString; const SourceRange: IHTMLTxtRange); safecall;
    function  compareEndPoints(const how: WideString; const SourceRange: IHTMLTxtRange): Integer; safecall;
    function  findText(const String_: WideString; Count: Integer; Flags: Integer): WordBool; safecall;
    procedure moveToPoint(x: Integer; y: Integer); safecall;
    function  getBookmark: WideString; safecall;
    function  moveToBookmark(const Bookmark: WideString): WordBool; safecall;
    function  queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function  queryCommandState(const cmdID: WideString): WordBool; safecall;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function  queryCommandText(const cmdID: WideString): WideString; safecall;
    function  queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    property htmlText: WideString read Get_htmlText;
    property text: WideString read Get_text write Set_text;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTxtRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F220-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeDisp = dispinterface
    ['{3050F220-98B5-11CF-BB82-00AA00BDCE0B}']
    property htmlText: WideString readonly dispid 1003;
    property text: WideString dispid 1004;
    function  parentElement: IHTMLElement; dispid 1006;
    function  duplicate: IHTMLTxtRange; dispid 1008;
    function  inRange(const range: IHTMLTxtRange): WordBool; dispid 1010;
    function  isEqual(const range: IHTMLTxtRange): WordBool; dispid 1011;
    procedure scrollIntoView(fStart: WordBool); dispid 1012;
    procedure collapse(Start: WordBool); dispid 1013;
    function  expand(const Unit_: WideString): WordBool; dispid 1014;
    function  move(const Unit_: WideString; Count: Integer): Integer; dispid 1015;
    function  moveStart(const Unit_: WideString; Count: Integer): Integer; dispid 1016;
    function  moveEnd(const Unit_: WideString; Count: Integer): Integer; dispid 1017;
    procedure select; dispid 1024;
    procedure pasteHTML(const html: WideString); dispid 1026;
    procedure moveToElementText(const element: IHTMLElement); dispid 1001;
    procedure setEndPoint(const how: WideString; const SourceRange: IHTMLTxtRange); dispid 1025;
    function  compareEndPoints(const how: WideString; const SourceRange: IHTMLTxtRange): Integer; dispid 1018;
    function  findText(const String_: WideString; Count: Integer; Flags: Integer): WordBool; dispid 1019;
    procedure moveToPoint(x: Integer; y: Integer); dispid 1020;
    function  getBookmark: WideString; dispid 1021;
    function  moveToBookmark(const Bookmark: WideString): WordBool; dispid 1009;
    function  queryCommandSupported(const cmdID: WideString): WordBool; dispid 1027;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1028;
    function  queryCommandState(const cmdID: WideString): WordBool; dispid 1029;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1030;
    function  queryCommandText(const cmdID: WideString): WideString; dispid 1031;
    function  queryCommandValue(const cmdID: WideString): OleVariant; dispid 1032;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1033;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1034;
  end;

// *********************************************************************//
// Interface: IHTMLTextRangeMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F40B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics = interface(IDispatch)
    ['{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_offsetTop: Integer; safecall;
    function  Get_offsetLeft: Integer; safecall;
    function  Get_boundingTop: Integer; safecall;
    function  Get_boundingLeft: Integer; safecall;
    function  Get_boundingWidth: Integer; safecall;
    function  Get_boundingHeight: Integer; safecall;
    property offsetTop: Integer read Get_offsetTop;
    property offsetLeft: Integer read Get_offsetLeft;
    property boundingTop: Integer read Get_boundingTop;
    property boundingLeft: Integer read Get_boundingLeft;
    property boundingWidth: Integer read Get_boundingWidth;
    property boundingHeight: Integer read Get_boundingHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextRangeMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F40B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetricsDisp = dispinterface
    ['{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}']
    property offsetTop: Integer readonly dispid 1035;
    property offsetLeft: Integer readonly dispid 1036;
    property boundingTop: Integer readonly dispid 1037;
    property boundingLeft: Integer readonly dispid 1038;
    property boundingWidth: Integer readonly dispid 1039;
    property boundingHeight: Integer readonly dispid 1040;
  end;

// *********************************************************************//
// Interface: IHTMLTextRangeMetrics2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics2 = interface(IDispatch)
    ['{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function  getClientRects: IHTMLRectCollection; safecall;
    function  getBoundingClientRect: IHTMLRect; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextRangeMetrics2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics2Disp = dispinterface
    ['{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function  getClientRects: IHTMLRectCollection; dispid 1041;
    function  getBoundingClientRect: IHTMLRect; dispid 1042;
  end;

// *********************************************************************//
// DispIntf:  HTMLFormElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F614-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFormElementEvents2 = dispinterface
    ['{3050F614-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    function  onsubmit(const pEvtObj: IHTMLEventObj): WordBool; dispid 1007;
    function  onreset(const pEvtObj: IHTMLEventObj): WordBool; dispid 1015;
  end;

// *********************************************************************//
// DispIntf:  HTMLFormElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F364-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFormElementEvents = dispinterface
    ['{3050F364-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    function  onsubmit: WordBool; dispid 1007;
    function  onreset: WordBool; dispid 1015;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement = interface(IDispatch)
    ['{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_action(const p: WideString); safecall;
    function  Get_action: WideString; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function  Get_dir: WideString; safecall;
    procedure Set_encoding(const p: WideString); safecall;
    function  Get_encoding: WideString; safecall;
    procedure Set_method(const p: WideString); safecall;
    function  Get_method: WideString; safecall;
    function  Get_elements: IDispatch; safecall;
    procedure Set_target(const p: WideString); safecall;
    function  Get_target: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_onsubmit(p: OleVariant); safecall;
    function  Get_onsubmit: OleVariant; safecall;
    procedure Set_onreset(p: OleVariant); safecall;
    function  Get_onreset: OleVariant; safecall;
    procedure submit; safecall;
    procedure reset; safecall;
    procedure Set_length(p: Integer); safecall;
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function  tags(tagName: OleVariant): IDispatch; safecall;
    property action: WideString read Get_action write Set_action;
    property dir: WideString read Get_dir write Set_dir;
    property encoding: WideString read Get_encoding write Set_encoding;
    property method: WideString read Get_method write Set_method;
    property elements: IDispatch read Get_elements;
    property target: WideString read Get_target write Set_target;
    property name: WideString read Get_name write Set_name;
    property onsubmit: OleVariant read Get_onsubmit write Set_onsubmit;
    property onreset: OleVariant read Get_onreset write Set_onreset;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElementDisp = dispinterface
    ['{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}']
    property action: WideString dispid 1001;
    property dir: WideString dispid -2147412995;
    property encoding: WideString dispid 1003;
    property method: WideString dispid 1004;
    property elements: IDispatch readonly dispid 1005;
    property target: WideString dispid 1006;
    property name: WideString dispid -2147418112;
    property onsubmit: OleVariant dispid -2147412101;
    property onreset: OleVariant dispid -2147412100;
    procedure submit; dispid 1009;
    procedure reset; dispid 1010;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement2 = interface(IDispatch)
    ['{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_acceptCharset(const p: WideString); safecall;
    function  Get_acceptCharset: WideString; safecall;
    function  urns(urn: OleVariant): IDispatch; safecall;
    property acceptCharset: WideString read Get_acceptCharset write Set_acceptCharset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement2Disp = dispinterface
    ['{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property acceptCharset: WideString dispid 1011;
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFormElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F510-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFormElement = dispinterface
    ['{3050F510-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property action: WideString dispid 1001;
    property encoding: WideString dispid 1003;
    property method: WideString dispid 1004;
    property elements: IDispatch readonly dispid 1005;
    property target: WideString dispid 1006;
    property name: WideString dispid -2147418112;
    property onsubmit: OleVariant dispid -2147412101;
    property onreset: OleVariant dispid -2147412100;
    procedure submit; dispid 1009;
    procedure reset; dispid 1010;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
    property acceptCharset: WideString dispid 1011;
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// DispIntf:  HTMLControlElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F612-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLControlElementEvents2 = dispinterface
    ['{3050F612-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLControlElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLControlElementEvents = dispinterface
    ['{3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLControlElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlElement = interface(IDispatch)
    ['{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tabIndex(p: Smallint); safecall;
    function  Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function  Get_accessKey: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function  Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function  Get_onfocus: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function  Get_onresize: OleVariant; safecall;
    procedure blur; safecall;
    procedure addFilter(const pUnk: IUnknown); safecall;
    procedure removeFilter(const pUnk: IUnknown); safecall;
    function  Get_clientHeight: Integer; safecall;
    function  Get_clientWidth: Integer; safecall;
    function  Get_clientTop: Integer; safecall;
    function  Get_clientLeft: Integer; safecall;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlElementDisp = dispinterface
    ['{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}']
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
  end;

// *********************************************************************//
// Interface: IHTMLTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F218-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextElement = interface(IDispatch)
    ['{3050F218-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F218-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextElementDisp = dispinterface
    ['{3050F218-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F537-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTextElement = dispinterface
    ['{3050F537-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// DispIntf:  HTMLTextContainerEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F624-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTextContainerEvents2 = dispinterface
    ['{3050F624-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  HTMLTextContainerEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {1FF6AA72-5842-11CF-A707-00AA00C0098D}
// *********************************************************************//
  HTMLTextContainerEvents = dispinterface
    ['{1FF6AA72-5842-11CF-A707-00AA00C0098D}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onchange; dispid 1001;
    procedure onselect; dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLTextContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F230-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextContainer = interface(IDispatch)
    ['{3050F230-98B5-11CF-BB82-00AA00BDCE0B}']
    function  createControlRange: IDispatch; safecall;
    function  Get_scrollHeight: Integer; safecall;
    function  Get_scrollWidth: Integer; safecall;
    procedure Set_scrollTop(p: Integer); safecall;
    function  Get_scrollTop: Integer; safecall;
    procedure Set_scrollLeft(p: Integer); safecall;
    function  Get_scrollLeft: Integer; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function  Get_onscroll: OleVariant; safecall;
    property scrollHeight: Integer read Get_scrollHeight;
    property scrollWidth: Integer read Get_scrollWidth;
    property scrollTop: Integer read Get_scrollTop write Set_scrollTop;
    property scrollLeft: Integer read Get_scrollLeft write Set_scrollLeft;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F230-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextContainerDisp = dispinterface
    ['{3050F230-98B5-11CF-BB82-00AA00BDCE0B}']
    function  createControlRange: IDispatch; dispid 1001;
    property scrollHeight: Integer readonly dispid 1002;
    property scrollWidth: Integer readonly dispid 1003;
    property scrollTop: Integer dispid 1004;
    property scrollLeft: Integer dispid 1005;
    property onscroll: OleVariant dispid -2147412081;
  end;

// *********************************************************************//
// Interface: IHTMLControlRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F29C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange = interface(IDispatch)
    ['{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure select; safecall;
    procedure add(const item: IHTMLControlElement); safecall;
    procedure remove(index: Integer); safecall;
    function  item(index: Integer): IHTMLElement; safecall;
    procedure scrollIntoView(varargStart: OleVariant); safecall;
    function  queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function  queryCommandState(const cmdID: WideString): WordBool; safecall;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function  queryCommandText(const cmdID: WideString): WideString; safecall;
    function  queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    function  commonParentElement: IHTMLElement; safecall;
    function  Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F29C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRangeDisp = dispinterface
    ['{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure select; dispid 1002;
    procedure add(const item: IHTMLControlElement); dispid 1003;
    procedure remove(index: Integer); dispid 1004;
    function  item(index: Integer): IHTMLElement; dispid 0;
    procedure scrollIntoView(varargStart: OleVariant); dispid 1006;
    function  queryCommandSupported(const cmdID: WideString): WordBool; dispid 1007;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1008;
    function  queryCommandState(const cmdID: WideString): WordBool; dispid 1009;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1010;
    function  queryCommandText(const cmdID: WideString): WideString; dispid 1011;
    function  queryCommandValue(const cmdID: WideString): OleVariant; dispid 1012;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1013;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1014;
    function  commonParentElement: IHTMLElement; dispid 1015;
    property length: Integer readonly dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  HTMLImgEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F616-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLImgEvents2 = dispinterface
    ['{3050F616-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLImgEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F25B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLImgEvents = dispinterface
    ['{3050F25B-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F240-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement = interface(IDispatch)
    ['{3050F240-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_isMap(p: WordBool); safecall;
    function  Get_isMap: WordBool; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function  Get_useMap: WideString; safecall;
    function  Get_mimeType: WideString; safecall;
    function  Get_fileSize: WideString; safecall;
    function  Get_fileCreatedDate: WideString; safecall;
    function  Get_fileModifiedDate: WideString; safecall;
    function  Get_fileUpdatedDate: WideString; safecall;
    function  Get_protocol: WideString; safecall;
    function  Get_href: WideString; safecall;
    function  Get_nameProp: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function  Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function  Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function  Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function  Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function  Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function  Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function  Get_dynsrc: WideString; safecall;
    function  Get_readyState: WideString; safecall;
    function  Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function  Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function  Get_onabort: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_width(p: Integer); safecall;
    function  Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function  Get_height: Integer; safecall;
    procedure Set_Start(const p: WideString); safecall;
    function  Get_Start: WideString; safecall;
    property isMap: WordBool read Get_isMap write Set_isMap;
    property useMap: WideString read Get_useMap write Set_useMap;
    property mimeType: WideString read Get_mimeType;
    property fileSize: WideString read Get_fileSize;
    property fileCreatedDate: WideString read Get_fileCreatedDate;
    property fileModifiedDate: WideString read Get_fileModifiedDate;
    property fileUpdatedDate: WideString read Get_fileUpdatedDate;
    property protocol: WideString read Get_protocol;
    property href: WideString read Get_href;
    property nameProp: WideString read Get_nameProp;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property name: WideString read Get_name write Set_name;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property Start: WideString read Get_Start write Set_Start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F240-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElementDisp = dispinterface
    ['{3050F240-98B5-11CF-BB82-00AA00BDCE0B}']
    property isMap: WordBool dispid 2002;
    property useMap: WideString dispid 2008;
    property mimeType: WideString readonly dispid 2010;
    property fileSize: WideString readonly dispid 2011;
    property fileCreatedDate: WideString readonly dispid 2012;
    property fileModifiedDate: WideString readonly dispid 2013;
    property fileUpdatedDate: WideString readonly dispid 2014;
    property protocol: WideString readonly dispid 2015;
    property href: WideString readonly dispid 2016;
    property nameProp: WideString readonly dispid 2017;
    property border: OleVariant dispid 1004;
    property vspace: Integer dispid 1005;
    property hspace: Integer dispid 1006;
    property alt: WideString dispid 1002;
    property src: WideString dispid 1003;
    property lowsrc: WideString dispid 1007;
    property vrml: WideString dispid 1008;
    property dynsrc: WideString dispid 1009;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 1010;
    property loop: OleVariant dispid 1011;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property Start: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLImageElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImageElementFactory = interface(IDispatch)
    ['{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}']
    function  create(width: OleVariant; height: OleVariant): IHTMLImgElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImageElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImageElementFactoryDisp = dispinterface
    ['{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}']
    function  create(width: OleVariant; height: OleVariant): IHTMLImgElement; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLImg
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLImg = dispinterface
    ['{3050F51C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property isMap: WordBool dispid 2002;
    property useMap: WideString dispid 2008;
    property mimeType: WideString readonly dispid 2010;
    property fileSize: WideString readonly dispid 2011;
    property fileCreatedDate: WideString readonly dispid 2012;
    property fileModifiedDate: WideString readonly dispid 2013;
    property fileUpdatedDate: WideString readonly dispid 2014;
    property protocol: WideString readonly dispid 2015;
    property href: WideString readonly dispid 2016;
    property nameProp: WideString readonly dispid 2017;
    property border: OleVariant dispid 1004;
    property vspace: Integer dispid 1005;
    property hspace: Integer dispid 1006;
    property alt: WideString dispid 1002;
    property src: WideString dispid 1003;
    property lowsrc: WideString dispid 1007;
    property vrml: WideString dispid 1008;
    property dynsrc: WideString dispid 1009;
    property complete: WordBool readonly dispid 1010;
    property loop: OleVariant dispid 1011;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property Start: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement = interface(IDispatch)
    ['{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_background(const p: WideString); safecall;
    function  Get_background: WideString; safecall;
    procedure Set_bgProperties(const p: WideString); safecall;
    function  Get_bgProperties: WideString; safecall;
    procedure Set_leftMargin(p: OleVariant); safecall;
    function  Get_leftMargin: OleVariant; safecall;
    procedure Set_topMargin(p: OleVariant); safecall;
    function  Get_topMargin: OleVariant; safecall;
    procedure Set_rightMargin(p: OleVariant); safecall;
    function  Get_rightMargin: OleVariant; safecall;
    procedure Set_bottomMargin(p: OleVariant); safecall;
    function  Get_bottomMargin: OleVariant; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function  Get_noWrap: WordBool; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    procedure Set_text(p: OleVariant); safecall;
    function  Get_text: OleVariant; safecall;
    procedure Set_link(p: OleVariant); safecall;
    function  Get_link: OleVariant; safecall;
    procedure Set_vLink(p: OleVariant); safecall;
    function  Get_vLink: OleVariant; safecall;
    procedure Set_aLink(p: OleVariant); safecall;
    function  Get_aLink: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function  Get_onunload: OleVariant; safecall;
    procedure Set_scroll(const p: WideString); safecall;
    function  Get_scroll: WideString; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function  Get_onselect: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function  Get_onbeforeunload: OleVariant; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    property background: WideString read Get_background write Set_background;
    property bgProperties: WideString read Get_bgProperties write Set_bgProperties;
    property leftMargin: OleVariant read Get_leftMargin write Set_leftMargin;
    property topMargin: OleVariant read Get_topMargin write Set_topMargin;
    property rightMargin: OleVariant read Get_rightMargin write Set_rightMargin;
    property bottomMargin: OleVariant read Get_bottomMargin write Set_bottomMargin;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property text: OleVariant read Get_text write Set_text;
    property link: OleVariant read Get_link write Set_link;
    property vLink: OleVariant read Get_vLink write Set_vLink;
    property aLink: OleVariant read Get_aLink write Set_aLink;
    property onload: OleVariant read Get_onload write Set_onload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property scroll: WideString read Get_scroll write Set_scroll;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElementDisp = dispinterface
    ['{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}']
    property background: WideString dispid -2147413111;
    property bgProperties: WideString dispid -2147413067;
    property leftMargin: OleVariant dispid -2147413072;
    property topMargin: OleVariant dispid -2147413075;
    property rightMargin: OleVariant dispid -2147413074;
    property bottomMargin: OleVariant dispid -2147413073;
    property noWrap: WordBool dispid -2147413107;
    property bgColor: OleVariant dispid -501;
    property text: OleVariant dispid -2147413110;
    property link: OleVariant dispid 2010;
    property vLink: OleVariant dispid 2012;
    property aLink: OleVariant dispid 2011;
    property onload: OleVariant dispid -2147412080;
    property onunload: OleVariant dispid -2147412079;
    property scroll: WideString dispid -2147413033;
    property onselect: OleVariant dispid -2147412102;
    property onbeforeunload: OleVariant dispid -2147412073;
    function  createTextRange: IHTMLTxtRange; dispid 2013;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement2 = interface(IDispatch)
    ['{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function  Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function  Get_onafterprint: OleVariant; safecall;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement2Disp = dispinterface
    ['{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}']
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBody
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F507-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBody = dispinterface
    ['{3050F507-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property background: WideString dispid -2147413111;
    property bgProperties: WideString dispid -2147413067;
    property leftMargin: OleVariant dispid -2147413072;
    property topMargin: OleVariant dispid -2147413075;
    property rightMargin: OleVariant dispid -2147413074;
    property bottomMargin: OleVariant dispid -2147413073;
    property noWrap: WordBool dispid -2147413107;
    property bgColor: OleVariant dispid -501;
    property text: OleVariant dispid -2147413110;
    property link: OleVariant dispid 2010;
    property vLink: OleVariant dispid 2012;
    property aLink: OleVariant dispid 2011;
    property onload: OleVariant dispid -2147412080;
    property onunload: OleVariant dispid -2147412079;
    property scroll: WideString dispid -2147413033;
    property onselect: OleVariant dispid -2147412102;
    property onbeforeunload: OleVariant dispid -2147412073;
    function  createTextRange: IHTMLTxtRange; dispid 2013;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
  end;

// *********************************************************************//
// Interface: IHTMLFontElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontElement = interface(IDispatch)
    ['{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_color(p: OleVariant); safecall;
    function  Get_color: OleVariant; safecall;
    procedure Set_face(const p: WideString); safecall;
    function  Get_face: WideString; safecall;
    procedure Set_size(p: OleVariant); safecall;
    function  Get_size: OleVariant; safecall;
    property color: OleVariant read Get_color write Set_color;
    property face: WideString read Get_face write Set_face;
    property size: OleVariant read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontElementDisp = dispinterface
    ['{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}']
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: OleVariant dispid -2147413093;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFontElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F512-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFontElement = dispinterface
    ['{3050F512-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: OleVariant dispid -2147413093;
  end;

// *********************************************************************//
// DispIntf:  HTMLAnchorEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F610-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAnchorEvents2 = dispinterface
    ['{3050F610-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLAnchorEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F29D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAnchorEvents = dispinterface
    ['{3050F29D-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLAnchorElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement = interface(IDispatch)
    ['{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function  Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function  Get_target: WideString; safecall;
    procedure Set_rel(const p: WideString); safecall;
    function  Get_rel: WideString; safecall;
    procedure Set_rev(const p: WideString); safecall;
    function  Get_rev: WideString; safecall;
    procedure Set_urn(const p: WideString); safecall;
    function  Get_urn: WideString; safecall;
    procedure Set_Methods(const p: WideString); safecall;
    function  Get_Methods: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_host(const p: WideString); safecall;
    function  Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function  Get_hostname: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function  Get_pathname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function  Get_port: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function  Get_protocol: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function  Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function  Get_hash: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function  Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function  Get_onfocus: OleVariant; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function  Get_accessKey: WideString; safecall;
    function  Get_protocolLong: WideString; safecall;
    function  Get_mimeType: WideString; safecall;
    function  Get_nameProp: WideString; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function  Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure blur; safecall;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
    property rel: WideString read Get_rel write Set_rel;
    property rev: WideString read Get_rev write Set_rev;
    property urn: WideString read Get_urn write Set_urn;
    property Methods: WideString read Get_Methods write Set_Methods;
    property name: WideString read Get_name write Set_name;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property pathname: WideString read Get_pathname write Set_pathname;
    property port: WideString read Get_port write Set_port;
    property protocol: WideString read Get_protocol write Set_protocol;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property protocolLong: WideString read Get_protocolLong;
    property mimeType: WideString read Get_mimeType;
    property nameProp: WideString read Get_nameProp;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAnchorElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElementDisp = dispinterface
    ['{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 0;
    property target: WideString dispid 1003;
    property rel: WideString dispid 1005;
    property rev: WideString dispid 1006;
    property urn: WideString dispid 1007;
    property Methods: WideString dispid 1008;
    property name: WideString dispid -2147418112;
    property host: WideString dispid 1012;
    property hostname: WideString dispid 1013;
    property pathname: WideString dispid 1014;
    property port: WideString dispid 1015;
    property protocol: WideString dispid 1016;
    property search: WideString dispid 1017;
    property hash: WideString dispid 1018;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property accessKey: WideString dispid -2147416107;
    property protocolLong: WideString readonly dispid 1031;
    property mimeType: WideString readonly dispid 1030;
    property nameProp: WideString readonly dispid 1032;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    procedure blur; dispid -2147416110;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAnchorElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F502-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAnchorElement = dispinterface
    ['{3050F502-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property href: WideString dispid 0;
    property target: WideString dispid 1003;
    property rel: WideString dispid 1005;
    property rev: WideString dispid 1006;
    property urn: WideString dispid 1007;
    property Methods: WideString dispid 1008;
    property name: WideString dispid -2147418112;
    property host: WideString dispid 1012;
    property hostname: WideString dispid 1013;
    property pathname: WideString dispid 1014;
    property port: WideString dispid 1015;
    property protocol: WideString dispid 1016;
    property search: WideString dispid 1017;
    property hash: WideString dispid 1018;
    property protocolLong: WideString readonly dispid 1031;
    property mimeType: WideString readonly dispid 1030;
    property nameProp: WideString readonly dispid 1032;
  end;

// *********************************************************************//
// DispIntf:  HTMLLabelEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLabelEvents2 = dispinterface
    ['{3050F61C-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLLabelEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F329-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLabelEvents = dispinterface
    ['{3050F329-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLLabelElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement = interface(IDispatch)
    ['{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_htmlFor(const p: WideString); safecall;
    function  Get_htmlFor: WideString; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function  Get_accessKey: WideString; safecall;
    property htmlFor: WideString read Get_htmlFor write Set_htmlFor;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLabelElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElementDisp = dispinterface
    ['{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}']
    property htmlFor: WideString dispid 1000;
    property accessKey: WideString dispid -2147416107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLabelElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F522-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLabelElement = dispinterface
    ['{3050F522-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property htmlFor: WideString dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement = interface(IDispatch)
    ['{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElementDisp = dispinterface
    ['{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F525-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLListElement = dispinterface
    ['{3050F525-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// Interface: IHTMLUListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUListElement = interface(IDispatch)
    ['{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function  Get_compact: WordBool; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    property compact: WordBool read Get_compact write Set_compact;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUListElementDisp = dispinterface
    ['{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1002;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F538-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUListElement = dispinterface
    ['{3050F538-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property compact: WordBool dispid 1002;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// Interface: IHTMLOListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOListElement = interface(IDispatch)
    ['{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function  Get_compact: WordBool; safecall;
    procedure Set_Start(p: Integer); safecall;
    function  Get_Start: Integer; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    property compact: WordBool read Get_compact write Set_compact;
    property Start: Integer read Get_Start write Set_Start;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOListElementDisp = dispinterface
    ['{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1002;
    property Start: Integer dispid 1003;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLOListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLOListElement = dispinterface
    ['{3050F52A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property compact: WordBool dispid 1002;
    property Start: Integer dispid 1003;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// Interface: IHTMLLIElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLIElement = interface(IDispatch)
    ['{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    procedure Set_value(p: Integer); safecall;
    function  Get_value: Integer; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property value: Integer read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLIElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLIElementDisp = dispinterface
    ['{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid -2147413095;
    property value: Integer dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLIElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F523-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLIElement = dispinterface
    ['{3050F523-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property type_: WideString dispid -2147413095;
    property value: Integer dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLBlockElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F208-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement = interface(IDispatch)
    ['{3050F208-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_clear(const p: WideString); safecall;
    function  Get_clear: WideString; safecall;
    property clear: WideString read Get_clear write Set_clear;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBlockElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F208-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElementDisp = dispinterface
    ['{3050F208-98B5-11CF-BB82-00AA00BDCE0B}']
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBlockElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F506-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBlockElement = dispinterface
    ['{3050F506-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// Interface: IHTMLDivElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F200-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivElement = interface(IDispatch)
    ['{3050F200-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function  Get_noWrap: WordBool; safecall;
    property align: WideString read Get_align write Set_align;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDivElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F200-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivElementDisp = dispinterface
    ['{3050F200-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDivElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDivElement = dispinterface
    ['{3050F50C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property align: WideString dispid -2147418040;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLDDElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDDElement = interface(IDispatch)
    ['{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_noWrap(p: WordBool); safecall;
    function  Get_noWrap: WordBool; safecall;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDDElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDDElementDisp = dispinterface
    ['{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}']
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDDElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDDElement = dispinterface
    ['{3050F50B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLDTElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDTElement = interface(IDispatch)
    ['{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_noWrap(p: WordBool); safecall;
    function  Get_noWrap: WordBool; safecall;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDTElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDTElementDisp = dispinterface
    ['{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}']
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDTElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDTElement = dispinterface
    ['{3050F50D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLBRElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBRElement = interface(IDispatch)
    ['{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_clear(const p: WideString); safecall;
    function  Get_clear: WideString; safecall;
    property clear: WideString read Get_clear write Set_clear;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBRElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBRElementDisp = dispinterface
    ['{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}']
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBRElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBRElement = dispinterface
    ['{3050F53A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// Interface: IHTMLDListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDListElement = interface(IDispatch)
    ['{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function  Get_compact: WordBool; safecall;
    property compact: WordBool read Get_compact write Set_compact;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDListElementDisp = dispinterface
    ['{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDListElement = dispinterface
    ['{3050F53B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLHRElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHRElement = interface(IDispatch)
    ['{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function  Get_color: OleVariant; safecall;
    procedure Set_noShade(p: WordBool); safecall;
    function  Get_noShade: WordBool; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_size(p: OleVariant); safecall;
    function  Get_size: OleVariant; safecall;
    property align: WideString read Get_align write Set_align;
    property color: OleVariant read Get_color write Set_color;
    property noShade: WordBool read Get_noShade write Set_noShade;
    property width: OleVariant read Get_width write Set_width;
    property size: OleVariant read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHRElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHRElementDisp = dispinterface
    ['{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property color: OleVariant dispid -2147413110;
    property noShade: WordBool dispid 1001;
    property width: OleVariant dispid -2147418107;
    property size: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHRElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHRElement = dispinterface
    ['{3050F53D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property align: WideString dispid -2147418040;
    property color: OleVariant dispid -2147413110;
    property noShade: WordBool dispid 1001;
    property width: OleVariant dispid -2147418107;
    property size: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLParaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParaElement = interface(IDispatch)
    ['{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLParaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParaElementDisp = dispinterface
    ['{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLParaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLParaElement = dispinterface
    ['{3050F52C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property clear: WideString dispid -2147413096;
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection2 = interface(IDispatch)
    ['{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function  urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection2Disp = dispinterface
    ['{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLElementCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLElementCollection = dispinterface
    ['{3050F56B-98B5-11CF-BB82-00AA00BDCE0B}']
    function  toString: WideString; dispid 1501;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLHeaderElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeaderElement = interface(IDispatch)
    ['{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHeaderElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeaderElementDisp = dispinterface
    ['{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHeaderElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F515-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHeaderElement = dispinterface
    ['{3050F515-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property clear: WideString dispid -2147413096;
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// DispIntf:  HTMLSelectElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F622-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLSelectElementEvents2 = dispinterface
    ['{3050F622-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  HTMLSelectElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F302-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLSelectElementEvents = dispinterface
    ['{3050F302-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onchange; dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F244-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement = interface(IDispatch)
    ['{3050F244-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_size(p: Integer); safecall;
    function  Get_size: Integer; safecall;
    procedure Set_multiple(p: WordBool); safecall;
    function  Get_multiple: WordBool; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    function  Get_options: IDispatch; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function  Get_onchange: OleVariant; safecall;
    procedure Set_selectedIndex(p: Integer); safecall;
    function  Get_selectedIndex: Integer; safecall;
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    procedure add(const element: IHTMLElement; before: OleVariant); safecall;
    procedure remove(index: Integer); safecall;
    procedure Set_length(p: Integer); safecall;
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function  tags(tagName: OleVariant): IDispatch; safecall;
    property size: Integer read Get_size write Set_size;
    property multiple: WordBool read Get_multiple write Set_multiple;
    property name: WideString read Get_name write Set_name;
    property options: IDispatch read Get_options;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property selectedIndex: Integer read Get_selectedIndex write Set_selectedIndex;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F244-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElementDisp = dispinterface
    ['{3050F244-98B5-11CF-BB82-00AA00BDCE0B}']
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid -2147418112;
    property options: IDispatch readonly dispid 1005;
    property onchange: OleVariant dispid -2147412082;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement2 = interface(IDispatch)
    ['{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function  urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement2Disp = dispinterface
    ['{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSelectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F531-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSelectElement = dispinterface
    ['{3050F531-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid -2147418112;
    property options: IDispatch readonly dispid 1005;
    property onchange: OleVariant dispid -2147412082;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLSelectionObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject = interface(IDispatch)
    ['{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}']
    function  createRange: IDispatch; safecall;
    procedure empty; safecall;
    procedure clear; safecall;
    function  Get_type_: WideString; safecall;
    property type_: WideString read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectionObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObjectDisp = dispinterface
    ['{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}']
    function  createRange: IDispatch; dispid 1001;
    procedure empty; dispid 1002;
    procedure clear; dispid 1003;
    property type_: WideString readonly dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F211-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement = interface(IDispatch)
    ['{3050F211-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selected(p: WordBool); safecall;
    function  Get_selected: WordBool; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_defaultSelected(p: WordBool); safecall;
    function  Get_defaultSelected: WordBool; safecall;
    procedure Set_index(p: Integer); safecall;
    function  Get_index: Integer; safecall;
    procedure Set_text(const p: WideString); safecall;
    function  Get_text: WideString; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    property selected: WordBool read Get_selected write Set_selected;
    property value: WideString read Get_value write Set_value;
    property defaultSelected: WordBool read Get_defaultSelected write Set_defaultSelected;
    property index: Integer read Get_index write Set_index;
    property text: WideString read Get_text write Set_text;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F211-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementDisp = dispinterface
    ['{3050F211-98B5-11CF-BB82-00AA00BDCE0B}']
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementFactory = interface(IDispatch)
    ['{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}']
    function  create(text: OleVariant; value: OleVariant; defaultSelected: OleVariant; 
                     selected: OleVariant): IHTMLOptionElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementFactoryDisp = dispinterface
    ['{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}']
    function  create(text: OleVariant; value: OleVariant; defaultSelected: OleVariant; 
                     selected: OleVariant): IHTMLOptionElement; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLOptionElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLOptionElement = dispinterface
    ['{3050F52B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  HTMLButtonElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F617-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLButtonElementEvents2 = dispinterface
    ['{3050F617-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLButtonElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLButtonElementEvents = dispinterface
    ['{3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputTextElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F618-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputTextElementEvents2 = dispinterface
    ['{3050F618-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    function  onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLOptionButtonElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F619-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLOptionButtonElementEvents2 = dispinterface
    ['{3050F619-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    function  onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputFileElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputFileElementEvents2 = dispinterface
    ['{3050F61A-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    function  onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputImageEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputImageEvents2 = dispinterface
    ['{3050F61B-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputTextElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputTextElementEvents = dispinterface
    ['{3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    function  onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLOptionButtonElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLOptionButtonElementEvents = dispinterface
    ['{3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    function  onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputFileElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputFileElementEvents = dispinterface
    ['{3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    function  onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputImageEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputImageEvents = dispinterface
    ['{3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLInputElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement = interface(IDispatch)
    ['{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: WordBool); safecall;
    function  Get_status: WordBool; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    procedure Set_size(p: Integer); safecall;
    function  Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function  Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function  Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function  Get_onselect: OleVariant; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function  Get_defaultValue: WideString; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function  Get_readOnly: WordBool; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    procedure Set_indeterminate(p: WordBool); safecall;
    function  Get_indeterminate: WordBool; safecall;
    procedure Set_defaultChecked(p: WordBool); safecall;
    function  Get_defaultChecked: WordBool; safecall;
    procedure Set_checked(p: WordBool); safecall;
    function  Get_checked: WordBool; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function  Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function  Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function  Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function  Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function  Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function  Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function  Get_dynsrc: WideString; safecall;
    function  Get_readyState: WideString; safecall;
    function  Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function  Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function  Get_onabort: OleVariant; safecall;
    procedure Set_width(p: Integer); safecall;
    function  Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function  Get_height: Integer; safecall;
    procedure Set_Start(const p: WideString); safecall;
    function  Get_Start: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: WordBool read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
    property indeterminate: WordBool read Get_indeterminate write Set_indeterminate;
    property defaultChecked: WordBool read Get_defaultChecked write Set_defaultChecked;
    property checked: WordBool read Get_checked write Set_checked;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property Start: WideString read Get_Start write Set_Start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElementDisp = dispinterface
    ['{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: WordBool dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property defaultValue: WideString dispid -2147413029;
    property readOnly: WordBool dispid 2005;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
    property indeterminate: WordBool dispid 2007;
    property defaultChecked: WordBool dispid 2008;
    property checked: WordBool dispid 2009;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IHTMLInputButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputButtonElement = interface(IDispatch)
    ['{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function  Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputButtonElementDisp = dispinterface
    ['{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputHiddenElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputHiddenElement = interface(IDispatch)
    ['{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function  Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputHiddenElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputHiddenElementDisp = dispinterface
    ['{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElement = interface(IDispatch)
    ['{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function  Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function  Get_defaultValue: WideString; safecall;
    procedure Set_size(p: Integer); safecall;
    function  Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function  Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function  Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function  Get_onselect: OleVariant; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function  Get_readOnly: WordBool; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElementDisp = dispinterface
    ['{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 2005;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputFileElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputFileElement = interface(IDispatch)
    ['{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function  Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    procedure Set_size(p: Integer); safecall;
    function  Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function  Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function  Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function  Get_onselect: OleVariant; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    property type_: WideString read Get_type_;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property value: WideString read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputFileElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputFileElementDisp = dispinterface
    ['{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property value: WideString dispid -2147413011;
  end;

// *********************************************************************//
// Interface: IHTMLOptionButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionButtonElement = interface(IDispatch)
    ['{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    function  Get_type_: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_checked(p: WordBool); safecall;
    function  Get_checked: WordBool; safecall;
    procedure Set_defaultChecked(p: WordBool); safecall;
    function  Get_defaultChecked: WordBool; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function  Get_onchange: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    procedure Set_status(p: WordBool); safecall;
    function  Get_status: WordBool; safecall;
    procedure Set_indeterminate(p: WordBool); safecall;
    function  Get_indeterminate: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    property value: WideString read Get_value write Set_value;
    property type_: WideString read Get_type_;
    property name: WideString read Get_name write Set_name;
    property checked: WordBool read Get_checked write Set_checked;
    property defaultChecked: WordBool read Get_defaultChecked write Set_defaultChecked;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property status: WordBool read Get_status write Set_status;
    property indeterminate: WordBool read Get_indeterminate write Set_indeterminate;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionButtonElementDisp = dispinterface
    ['{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}']
    property value: WideString dispid -2147413011;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property checked: WordBool dispid 2009;
    property defaultChecked: WordBool dispid 2008;
    property onchange: OleVariant dispid -2147412082;
    property disabled: WordBool dispid -2147418036;
    property status: WordBool dispid 2001;
    property indeterminate: WordBool dispid 2007;
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLInputImage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputImage = interface(IDispatch)
    ['{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function  Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function  Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function  Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function  Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function  Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function  Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function  Get_dynsrc: WideString; safecall;
    function  Get_readyState: WideString; safecall;
    function  Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function  Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function  Get_onabort: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_width(p: Integer); safecall;
    function  Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function  Get_height: Integer; safecall;
    procedure Set_Start(const p: WideString); safecall;
    function  Get_Start: WideString; safecall;
    property type_: WideString read Get_type_;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property name: WideString read Get_name write Set_name;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property Start: WideString read Get_Start write Set_Start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputImageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputImageDisp = dispinterface
    ['{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property disabled: WordBool dispid -2147418036;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLInputElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLInputElement = dispinterface
    ['{3050F57D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property type_: WideString dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: WordBool dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property defaultValue: WideString dispid -2147413029;
    property readOnly: WordBool dispid 2005;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
    property indeterminate: WordBool dispid 2007;
    property defaultChecked: WordBool dispid 2008;
    property checked: WordBool dispid 2009;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IHTMLTextAreaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElement = interface(IDispatch)
    ['{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function  Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function  Get_defaultValue: WideString; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function  Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function  Get_onselect: OleVariant; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function  Get_readOnly: WordBool; safecall;
    procedure Set_rows(p: Integer); safecall;
    function  Get_rows: Integer; safecall;
    procedure Set_cols(p: Integer); safecall;
    function  Get_cols: Integer; safecall;
    procedure Set_wrap(const p: WideString); safecall;
    function  Get_wrap: WideString; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
    property rows: Integer read Get_rows write Set_rows;
    property cols: Integer read Get_cols write Set_cols;
    property wrap: WideString read Get_wrap write Set_wrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextAreaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElementDisp = dispinterface
    ['{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function  createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTextAreaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F521-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTextAreaElement = dispinterface
    ['{3050F521-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function  createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRichtextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRichtextElement = dispinterface
    ['{3050F54D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function  createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// Interface: IHTMLButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElement = interface(IDispatch)
    ['{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function  Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function  Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    function  createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElementDisp = dispinterface
    ['{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 8001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function  createTextRange: IHTMLTxtRange; dispid 8002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLButtonElement = dispinterface
    ['{3050F51F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 8001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function  createTextRange: IHTMLTxtRange; dispid 8002;
  end;

// *********************************************************************//
// DispIntf:  HTMLMarqueeElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMarqueeElementEvents2 = dispinterface
    ['{3050F61F-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onbounce(const pEvtObj: IHTMLEventObj); dispid 1009;
    procedure onfinish(const pEvtObj: IHTMLEventObj); dispid 1010;
    procedure onstart(const pEvtObj: IHTMLEventObj); dispid 1011;
  end;

// *********************************************************************//
// DispIntf:  HTMLMarqueeElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMarqueeElementEvents = dispinterface
    ['{3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onchange; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onbounce; dispid 1009;
    procedure onfinish; dispid 1010;
    procedure onstart; dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLMarqueeElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMarqueeElement = interface(IDispatch)
    ['{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    procedure Set_scrollDelay(p: Integer); safecall;
    function  Get_scrollDelay: Integer; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function  Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function  Get_behavior: WideString; safecall;
    procedure Set_scrollAmount(p: Integer); safecall;
    function  Get_scrollAmount: Integer; safecall;
    procedure Set_loop(p: Integer); safecall;
    function  Get_loop: Integer; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function  Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function  Get_hspace: Integer; safecall;
    procedure Set_onfinish(p: OleVariant); safecall;
    function  Get_onfinish: OleVariant; safecall;
    procedure Set_onstart(p: OleVariant); safecall;
    function  Get_onstart: OleVariant; safecall;
    procedure Set_onbounce(p: OleVariant); safecall;
    function  Get_onbounce: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    procedure Set_trueSpeed(p: WordBool); safecall;
    function  Get_trueSpeed: WordBool; safecall;
    procedure Start; safecall;
    procedure stop; safecall;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property scrollDelay: Integer read Get_scrollDelay write Set_scrollDelay;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property scrollAmount: Integer read Get_scrollAmount write Set_scrollAmount;
    property loop: Integer read Get_loop write Set_loop;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property onfinish: OleVariant read Get_onfinish write Set_onfinish;
    property onstart: OleVariant read Get_onstart write Set_onstart;
    property onbounce: OleVariant read Get_onbounce write Set_onbounce;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property trueSpeed: WordBool read Get_trueSpeed write Set_trueSpeed;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMarqueeElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMarqueeElementDisp = dispinterface
    ['{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property bgColor: OleVariant dispid -501;
    property scrollDelay: Integer dispid 6000;
    property direction: WideString dispid 6001;
    property behavior: WideString dispid 6002;
    property scrollAmount: Integer dispid 6003;
    property loop: Integer dispid 6004;
    property vspace: Integer dispid 6005;
    property hspace: Integer dispid 6006;
    property onfinish: OleVariant dispid -2147412086;
    property onstart: OleVariant dispid -2147412085;
    property onbounce: OleVariant dispid -2147412092;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property trueSpeed: WordBool dispid 6007;
    procedure Start; dispid 6010;
    procedure stop; dispid 6011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMarqueeElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F527-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMarqueeElement = dispinterface
    ['{3050F527-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property bgColor: OleVariant dispid -501;
    property scrollDelay: Integer dispid 6000;
    property direction: WideString dispid 6001;
    property behavior: WideString dispid 6002;
    property scrollAmount: Integer dispid 6003;
    property loop: Integer dispid 6004;
    property vspace: Integer dispid 6005;
    property hspace: Integer dispid 6006;
    property onfinish: OleVariant dispid -2147412086;
    property onstart: OleVariant dispid -2147412085;
    property onbounce: OleVariant dispid -2147412092;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property trueSpeed: WordBool dispid 6007;
    procedure Start; dispid 6010;
    procedure stop; dispid 6011;
  end;

// *********************************************************************//
// Interface: IHTMLTitleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F322-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTitleElement = interface(IDispatch)
    ['{3050F322-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_text(const p: WideString); safecall;
    function  Get_text: WideString; safecall;
    property text: WideString read Get_text write Set_text;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTitleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F322-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTitleElementDisp = dispinterface
    ['{3050F322-98B5-11CF-BB82-00AA00BDCE0B}']
    property text: WideString dispid -2147413011;
  end;

// *********************************************************************//
// Interface: IHTMLMetaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F203-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement = interface(IDispatch)
    ['{3050F203-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_httpEquiv(const p: WideString); safecall;
    function  Get_httpEquiv: WideString; safecall;
    procedure Set_content(const p: WideString); safecall;
    function  Get_content: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_url(const p: WideString); safecall;
    function  Get_url: WideString; safecall;
    procedure Set_charset(const p: WideString); safecall;
    function  Get_charset: WideString; safecall;
    property httpEquiv: WideString read Get_httpEquiv write Set_httpEquiv;
    property content: WideString read Get_content write Set_content;
    property name: WideString read Get_name write Set_name;
    property url: WideString read Get_url write Set_url;
    property charset: WideString read Get_charset write Set_charset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMetaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F203-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElementDisp = dispinterface
    ['{3050F203-98B5-11CF-BB82-00AA00BDCE0B}']
    property httpEquiv: WideString dispid 1001;
    property content: WideString dispid 1002;
    property name: WideString dispid -2147418112;
    property url: WideString dispid 1003;
    property charset: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLBaseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F204-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElement = interface(IDispatch)
    ['{3050F204-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function  Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function  Get_target: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F204-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElementDisp = dispinterface
    ['{3050F204-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1003;
    property target: WideString dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLIsIndexElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F206-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement = interface(IDispatch)
    ['{3050F206-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_prompt(const p: WideString); safecall;
    function  Get_prompt: WideString; safecall;
    procedure Set_action(const p: WideString); safecall;
    function  Get_action: WideString; safecall;
    property prompt: WideString read Get_prompt write Set_prompt;
    property action: WideString read Get_action write Set_action;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIsIndexElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F206-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElementDisp = dispinterface
    ['{3050F206-98B5-11CF-BB82-00AA00BDCE0B}']
    property prompt: WideString dispid 1010;
    property action: WideString dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLNextIdElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F207-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNextIdElement = interface(IDispatch)
    ['{3050F207-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_n(const p: WideString); safecall;
    function  Get_n: WideString; safecall;
    property n: WideString read Get_n write Set_n;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNextIdElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F207-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNextIdElementDisp = dispinterface
    ['{3050F207-98B5-11CF-BB82-00AA00BDCE0B}']
    property n: WideString dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHtmlElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F560-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHtmlElement = dispinterface
    ['{3050F560-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHeadElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F561-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHeadElement = dispinterface
    ['{3050F561-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTitleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F516-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTitleElement = dispinterface
    ['{3050F516-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property text: WideString dispid -2147413011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMetaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F517-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMetaElement = dispinterface
    ['{3050F517-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property httpEquiv: WideString dispid 1001;
    property content: WideString dispid 1002;
    property name: WideString dispid -2147418112;
    property url: WideString dispid 1003;
    property charset: WideString dispid 1013;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBaseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F518-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBaseElement = dispinterface
    ['{3050F518-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property href: WideString dispid 1003;
    property target: WideString dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLIsIndexElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F519-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLIsIndexElement = dispinterface
    ['{3050F519-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property prompt: WideString dispid 1010;
    property action: WideString dispid 1011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNextIdElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNextIdElement = dispinterface
    ['{3050F51A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property n: WideString dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLBaseFontElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F202-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseFontElement = interface(IDispatch)
    ['{3050F202-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_color(p: OleVariant); safecall;
    function  Get_color: OleVariant; safecall;
    procedure Set_face(const p: WideString); safecall;
    function  Get_face: WideString; safecall;
    procedure Set_size(p: Integer); safecall;
    function  Get_size: Integer; safecall;
    property color: OleVariant read Get_color write Set_color;
    property face: WideString read Get_face write Set_face;
    property size: Integer read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseFontElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F202-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseFontElementDisp = dispinterface
    ['{3050F202-98B5-11CF-BB82-00AA00BDCE0B}']
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: Integer dispid -2147413086;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBaseFontElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F504-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBaseFontElement = dispinterface
    ['{3050F504-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: Integer dispid -2147413086;
  end;

// *********************************************************************//
// Interface: IHTMLUnknownElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F209-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUnknownElement = interface(IDispatch)
    ['{3050F209-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLUnknownElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F209-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUnknownElementDisp = dispinterface
    ['{3050F209-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUnknownElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F539-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUnknownElement = dispinterface
    ['{3050F539-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// Interface: IOmHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA2-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmHistory = interface(IDispatch)
    ['{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}']
    function  Get_length: Smallint; safecall;
    procedure back(var pvargdistance: OleVariant); safecall;
    procedure forward(var pvargdistance: OleVariant); safecall;
    procedure go(var pvargdistance: OleVariant); safecall;
    property length: Smallint read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IOmHistoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA2-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmHistoryDisp = dispinterface
    ['{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}']
    property length: Smallint readonly dispid 1;
    procedure back(var pvargdistance: OleVariant); dispid 2;
    procedure forward(var pvargdistance: OleVariant); dispid 3;
    procedure go(var pvargdistance: OleVariant); dispid 4;
  end;

// *********************************************************************//
// Interface: IHTMLMimeTypesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMimeTypesCollection = interface(IDispatch)
    ['{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMimeTypesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMimeTypesCollectionDisp = dispinterface
    ['{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IHTMLPluginsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPluginsCollection = interface(IDispatch)
    ['{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    procedure refresh(reload: WordBool); safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPluginsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPluginsCollectionDisp = dispinterface
    ['{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
    procedure refresh(reload: WordBool); dispid 2;
  end;

// *********************************************************************//
// Interface: IHTMLOpsProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F401-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOpsProfile = interface(IDispatch)
    ['{3050F401-98B5-11CF-BB82-00AA00BDCE0B}']
    function  addRequest(const name: WideString; reserved: OleVariant): WordBool; safecall;
    procedure clearRequest; safecall;
    procedure doRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; path: OleVariant; 
                        expire: OleVariant; reserved: OleVariant); safecall;
    function  getAttribute(const name: WideString): WideString; safecall;
    function  setAttribute(const name: WideString; const value: WideString; prefs: OleVariant): WordBool; safecall;
    function  commitChanges: WordBool; safecall;
    function  addReadRequest(const name: WideString; reserved: OleVariant): WordBool; safecall;
    procedure doReadRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; 
                            path: OleVariant; expire: OleVariant; reserved: OleVariant); safecall;
    function  doWriteRequest: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOpsProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F401-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOpsProfileDisp = dispinterface
    ['{3050F401-98B5-11CF-BB82-00AA00BDCE0B}']
    function  addRequest(const name: WideString; reserved: OleVariant): WordBool; dispid 1;
    procedure clearRequest; dispid 2;
    procedure doRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; path: OleVariant; 
                        expire: OleVariant; reserved: OleVariant); dispid 3;
    function  getAttribute(const name: WideString): WideString; dispid 4;
    function  setAttribute(const name: WideString; const value: WideString; prefs: OleVariant): WordBool; dispid 5;
    function  commitChanges: WordBool; dispid 6;
    function  addReadRequest(const name: WideString; reserved: OleVariant): WordBool; dispid 7;
    procedure doReadRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; 
                            path: OleVariant; expire: OleVariant; reserved: OleVariant); dispid 8;
    function  doWriteRequest: WordBool; dispid 9;
  end;

// *********************************************************************//
// Interface: IOmNavigator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA5-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmNavigator = interface(IDispatch)
    ['{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}']
    function  Get_appCodeName: WideString; safecall;
    function  Get_appName: WideString; safecall;
    function  Get_appVersion: WideString; safecall;
    function  Get_userAgent: WideString; safecall;
    function  javaEnabled: WordBool; safecall;
    function  taintEnabled: WordBool; safecall;
    function  Get_mimeTypes: IHTMLMimeTypesCollection; safecall;
    function  Get_plugins: IHTMLPluginsCollection; safecall;
    function  Get_cookieEnabled: WordBool; safecall;
    function  Get_opsProfile: IHTMLOpsProfile; safecall;
    function  toString: WideString; safecall;
    function  Get_cpuClass: WideString; safecall;
    function  Get_systemLanguage: WideString; safecall;
    function  Get_browserLanguage: WideString; safecall;
    function  Get_userLanguage: WideString; safecall;
    function  Get_platform: WideString; safecall;
    function  Get_appMinorVersion: WideString; safecall;
    function  Get_connectionSpeed: Integer; safecall;
    function  Get_onLine: WordBool; safecall;
    function  Get_userProfile: IHTMLOpsProfile; safecall;
    property appCodeName: WideString read Get_appCodeName;
    property appName: WideString read Get_appName;
    property appVersion: WideString read Get_appVersion;
    property userAgent: WideString read Get_userAgent;
    property mimeTypes: IHTMLMimeTypesCollection read Get_mimeTypes;
    property plugins: IHTMLPluginsCollection read Get_plugins;
    property cookieEnabled: WordBool read Get_cookieEnabled;
    property opsProfile: IHTMLOpsProfile read Get_opsProfile;
    property cpuClass: WideString read Get_cpuClass;
    property systemLanguage: WideString read Get_systemLanguage;
    property browserLanguage: WideString read Get_browserLanguage;
    property userLanguage: WideString read Get_userLanguage;
    property platform: WideString read Get_platform;
    property appMinorVersion: WideString read Get_appMinorVersion;
    property connectionSpeed: Integer read Get_connectionSpeed;
    property onLine: WordBool read Get_onLine;
    property userProfile: IHTMLOpsProfile read Get_userProfile;
  end;

// *********************************************************************//
// DispIntf:  IOmNavigatorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA5-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmNavigatorDisp = dispinterface
    ['{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}']
    property appCodeName: WideString readonly dispid 1;
    property appName: WideString readonly dispid 2;
    property appVersion: WideString readonly dispid 3;
    property userAgent: WideString readonly dispid 4;
    function  javaEnabled: WordBool; dispid 5;
    function  taintEnabled: WordBool; dispid 6;
    property mimeTypes: IHTMLMimeTypesCollection readonly dispid 7;
    property plugins: IHTMLPluginsCollection readonly dispid 8;
    property cookieEnabled: WordBool readonly dispid 9;
    property opsProfile: IHTMLOpsProfile readonly dispid 10;
    function  toString: WideString; dispid 11;
    property cpuClass: WideString readonly dispid 12;
    property systemLanguage: WideString readonly dispid 13;
    property browserLanguage: WideString readonly dispid 14;
    property userLanguage: WideString readonly dispid 15;
    property platform: WideString readonly dispid 16;
    property appMinorVersion: WideString readonly dispid 17;
    property connectionSpeed: Integer readonly dispid 18;
    property onLine: WordBool readonly dispid 19;
    property userProfile: IHTMLOpsProfile readonly dispid 20;
  end;

// *********************************************************************//
// Interface: IHTMLLocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {163BB1E0-6E00-11CF-837A-48DC04C10000}
// *********************************************************************//
  IHTMLLocation = interface(IDispatch)
    ['{163BB1E0-6E00-11CF-837A-48DC04C10000}']
    procedure Set_href(const p: WideString); safecall;
    function  Get_href: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function  Get_protocol: WideString; safecall;
    procedure Set_host(const p: WideString); safecall;
    function  Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function  Get_hostname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function  Get_port: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function  Get_pathname: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function  Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function  Get_hash: WideString; safecall;
    procedure reload(flag: WordBool); safecall;
    procedure replace(const bstr: WideString); safecall;
    procedure Assign_(const bstr: WideString); safecall;
    function  toString: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property protocol: WideString read Get_protocol write Set_protocol;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property port: WideString read Get_port write Set_port;
    property pathname: WideString read Get_pathname write Set_pathname;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {163BB1E0-6E00-11CF-837A-48DC04C10000}
// *********************************************************************//
  IHTMLLocationDisp = dispinterface
    ['{163BB1E0-6E00-11CF-837A-48DC04C10000}']
    property href: WideString dispid 0;
    property protocol: WideString dispid 1;
    property host: WideString dispid 2;
    property hostname: WideString dispid 3;
    property port: WideString dispid 4;
    property pathname: WideString dispid 5;
    property search: WideString dispid 6;
    property hash: WideString dispid 7;
    procedure reload(flag: WordBool); dispid 8;
    procedure replace(const bstr: WideString); dispid 9;
    procedure Assign_(const bstr: WideString); dispid 10;
    function  toString: WideString; dispid 11;
  end;

// *********************************************************************//
// Interface: IHTMLBookmarkCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBookmarkCollection = interface(IDispatch)
    ['{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(index: Integer): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBookmarkCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBookmarkCollectionDisp = dispinterface
    ['{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(index: Integer): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDataTransfer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDataTransfer = interface(IDispatch)
    ['{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function  setData(const format: WideString; var data: OleVariant): WordBool; safecall;
    function  getData(const format: WideString): OleVariant; safecall;
    function  clearData(const format: WideString): WordBool; safecall;
    procedure Set_dropEffect(const p: WideString); safecall;
    function  Get_dropEffect: WideString; safecall;
    procedure Set_effectAllowed(const p: WideString); safecall;
    function  Get_effectAllowed: WideString; safecall;
    property dropEffect: WideString read Get_dropEffect write Set_dropEffect;
    property effectAllowed: WideString read Get_effectAllowed write Set_effectAllowed;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDataTransferDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDataTransferDisp = dispinterface
    ['{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function  setData(const format: WideString; var data: OleVariant): WordBool; dispid 1001;
    function  getData(const format: WideString): OleVariant; dispid 1002;
    function  clearData(const format: WideString): WordBool; dispid 1003;
    property dropEffect: WideString dispid 1004;
    property effectAllowed: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F48B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj2 = interface(IDispatch)
    ['{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    procedure Set_propertyName(const p: WideString); safecall;
    function  Get_propertyName: WideString; safecall;
    procedure Set_bookmarks(const p: IHTMLBookmarkCollection); safecall;
    function  Get_bookmarks: IHTMLBookmarkCollection; safecall;
    procedure Set_recordset(const p: IDispatch); safecall;
    function  Get_recordset: IDispatch; safecall;
    procedure Set_dataFld(const p: WideString); safecall;
    function  Get_dataFld: WideString; safecall;
    procedure Set_boundElements(const p: IHTMLElementCollection); safecall;
    function  Get_boundElements: IHTMLElementCollection; safecall;
    procedure Set_repeat_(p: WordBool); safecall;
    function  Get_repeat_: WordBool; safecall;
    procedure Set_srcUrn(const p: WideString); safecall;
    function  Get_srcUrn: WideString; safecall;
    procedure Set_srcElement(const p: IHTMLElement); safecall;
    function  Get_srcElement: IHTMLElement; safecall;
    procedure Set_altKey(p: WordBool); safecall;
    function  Get_altKey: WordBool; safecall;
    procedure Set_ctrlKey(p: WordBool); safecall;
    function  Get_ctrlKey: WordBool; safecall;
    procedure Set_shiftKey(p: WordBool); safecall;
    function  Get_shiftKey: WordBool; safecall;
    procedure Set_fromElement(const p: IHTMLElement); safecall;
    function  Get_fromElement: IHTMLElement; safecall;
    procedure Set_toElement(const p: IHTMLElement); safecall;
    function  Get_toElement: IHTMLElement; safecall;
    procedure Set_button(p: Integer); safecall;
    function  Get_button: Integer; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    procedure Set_qualifier(const p: WideString); safecall;
    function  Get_qualifier: WideString; safecall;
    procedure Set_reason(p: Integer); safecall;
    function  Get_reason: Integer; safecall;
    procedure Set_x(p: Integer); safecall;
    function  Get_x: Integer; safecall;
    procedure Set_y(p: Integer); safecall;
    function  Get_y: Integer; safecall;
    procedure Set_clientX(p: Integer); safecall;
    function  Get_clientX: Integer; safecall;
    procedure Set_clientY(p: Integer); safecall;
    function  Get_clientY: Integer; safecall;
    procedure Set_offsetX(p: Integer); safecall;
    function  Get_offsetX: Integer; safecall;
    procedure Set_offsetY(p: Integer); safecall;
    function  Get_offsetY: Integer; safecall;
    procedure Set_screenX(p: Integer); safecall;
    function  Get_screenX: Integer; safecall;
    procedure Set_screenY(p: Integer); safecall;
    function  Get_screenY: Integer; safecall;
    procedure Set_srcFilter(const p: IDispatch); safecall;
    function  Get_srcFilter: IDispatch; safecall;
    function  Get_dataTransfer: IHTMLDataTransfer; safecall;
    property propertyName: WideString read Get_propertyName write Set_propertyName;
    property bookmarks: IHTMLBookmarkCollection read Get_bookmarks write Set_bookmarks;
    property recordset: IDispatch read Get_recordset write Set_recordset;
    property dataFld: WideString read Get_dataFld write Set_dataFld;
    property boundElements: IHTMLElementCollection read Get_boundElements write Set_boundElements;
    property repeat_: WordBool read Get_repeat_ write Set_repeat_;
    property srcUrn: WideString read Get_srcUrn write Set_srcUrn;
    property srcElement: IHTMLElement read Get_srcElement write Set_srcElement;
    property altKey: WordBool read Get_altKey write Set_altKey;
    property ctrlKey: WordBool read Get_ctrlKey write Set_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey write Set_shiftKey;
    property fromElement: IHTMLElement read Get_fromElement write Set_fromElement;
    property toElement: IHTMLElement read Get_toElement write Set_toElement;
    property button: Integer read Get_button write Set_button;
    property type_: WideString read Get_type_ write Set_type_;
    property qualifier: WideString read Get_qualifier write Set_qualifier;
    property reason: Integer read Get_reason write Set_reason;
    property x: Integer read Get_x write Set_x;
    property y: Integer read Get_y write Set_y;
    property clientX: Integer read Get_clientX write Set_clientX;
    property clientY: Integer read Get_clientY write Set_clientY;
    property offsetX: Integer read Get_offsetX write Set_offsetX;
    property offsetY: Integer read Get_offsetY write Set_offsetY;
    property screenX: Integer read Get_screenX write Set_screenX;
    property screenY: Integer read Get_screenY write Set_screenY;
    property srcFilter: IDispatch read Get_srcFilter write Set_srcFilter;
    property dataTransfer: IHTMLDataTransfer read Get_dataTransfer;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F48B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj2Disp = dispinterface
    ['{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property propertyName: WideString dispid 1027;
    property bookmarks: IHTMLBookmarkCollection dispid 1031;
    property recordset: IDispatch dispid 1032;
    property dataFld: WideString dispid 1033;
    property boundElements: IHTMLElementCollection dispid 1034;
    property repeat_: WordBool dispid 1035;
    property srcUrn: WideString dispid 1036;
    property srcElement: IHTMLElement dispid 1001;
    property altKey: WordBool dispid 1002;
    property ctrlKey: WordBool dispid 1003;
    property shiftKey: WordBool dispid 1004;
    property fromElement: IHTMLElement dispid 1009;
    property toElement: IHTMLElement dispid 1010;
    property button: Integer dispid 1012;
    property type_: WideString dispid 1013;
    property qualifier: WideString dispid 1014;
    property reason: Integer dispid 1015;
    property x: Integer dispid 1005;
    property y: Integer dispid 1006;
    property clientX: Integer dispid 1020;
    property clientY: Integer dispid 1021;
    property offsetX: Integer dispid 1022;
    property offsetY: Integer dispid 1023;
    property screenX: Integer dispid 1024;
    property screenY: Integer dispid 1025;
    property srcFilter: IDispatch dispid 1026;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1037;
  end;

// *********************************************************************//
// DispIntf:  DispCEventObj
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F558-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCEventObj = dispinterface
    ['{3050F558-98B5-11CF-BB82-00AA00BDCE0B}']
    property returnValue: OleVariant dispid 1007;
    property cancelBubble: WordBool dispid 1008;
    property keyCode: Integer dispid 1011;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property propertyName: WideString dispid 1027;
    property bookmarks: IHTMLBookmarkCollection dispid 1031;
    property recordset: IDispatch dispid 1032;
    property dataFld: WideString dispid 1033;
    property boundElements: IHTMLElementCollection dispid 1034;
    property repeat_: WordBool dispid 1035;
    property srcUrn: WideString dispid 1036;
    property srcElement: IHTMLElement dispid 1001;
    property altKey: WordBool dispid 1002;
    property ctrlKey: WordBool dispid 1003;
    property shiftKey: WordBool dispid 1004;
    property fromElement: IHTMLElement dispid 1009;
    property toElement: IHTMLElement dispid 1010;
    property button: Integer dispid 1012;
    property type_: WideString dispid 1013;
    property qualifier: WideString dispid 1014;
    property reason: Integer dispid 1015;
    property x: Integer dispid 1005;
    property y: Integer dispid 1006;
    property clientX: Integer dispid 1020;
    property clientY: Integer dispid 1021;
    property offsetX: Integer dispid 1022;
    property offsetY: Integer dispid 1023;
    property screenX: Integer dispid 1024;
    property screenY: Integer dispid 1025;
    property srcFilter: IDispatch dispid 1026;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1037;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F625-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLWindowEvents2 = dispinterface
    ['{3050F625-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onunload(const pEvtObj: IHTMLEventObj); dispid 1008;
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onerror(const description: WideString; const url: WideString; line: Integer); dispid 1002;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onbeforeunload(const pEvtObj: IHTMLEventObj); dispid 1017;
    procedure onbeforeprint(const pEvtObj: IHTMLEventObj); dispid 1024;
    procedure onafterprint(const pEvtObj: IHTMLEventObj); dispid 1025;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {96A0A4E0-D062-11CF-94B6-00AA0060275C}
// *********************************************************************//
  HTMLWindowEvents = dispinterface
    ['{96A0A4E0-D062-11CF-94B6-00AA0060275C}']
    procedure onload; dispid 1003;
    procedure onunload; dispid 1008;
    function  onhelp: WordBool; dispid -2147418102;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onerror(const description: WideString; const url: WideString; line: Integer); dispid 1002;
    procedure onresize; dispid 1016;
    procedure onscroll; dispid 1014;
    procedure onbeforeunload; dispid 1017;
    procedure onbeforeprint; dispid 1024;
    procedure onafterprint; dispid 1025;
  end;

// *********************************************************************//
// Interface: IHTMLDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {626FC520-A41E-11CF-A731-00A0C9082637}
// *********************************************************************//
  IHTMLDocument = interface(IDispatch)
    ['{626FC520-A41E-11CF-A731-00A0C9082637}']
    function  Get_Script: IDispatch; safecall;
    property Script: IDispatch read Get_Script;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {626FC520-A41E-11CF-A731-00A0C9082637}
// *********************************************************************//
  IHTMLDocumentDisp = dispinterface
    ['{626FC520-A41E-11CF-A731-00A0C9082637}']
    property Script: IDispatch readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLDocument2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4425-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLDocument2 = interface(IHTMLDocument)
    ['{332C4425-26CB-11D0-B483-00C04FD90119}']
    function  Get_all: IHTMLElementCollection; safecall;
    function  Get_body: IHTMLElement; safecall;
    function  Get_activeElement: IHTMLElement; safecall;
    function  Get_images: IHTMLElementCollection; safecall;
    function  Get_applets: IHTMLElementCollection; safecall;
    function  Get_links: IHTMLElementCollection; safecall;
    function  Get_forms: IHTMLElementCollection; safecall;
    function  Get_anchors: IHTMLElementCollection; safecall;
    procedure Set_title(const p: WideString); safecall;
    function  Get_title: WideString; safecall;
    function  Get_scripts: IHTMLElementCollection; safecall;
    procedure Set_designMode(const p: WideString); safecall;
    function  Get_designMode: WideString; safecall;
    function  Get_selection: IHTMLSelectionObject; safecall;
    function  Get_readyState: WideString; safecall;
    function  Get_frames: IHTMLFramesCollection2; safecall;
    function  Get_embeds: IHTMLElementCollection; safecall;
    function  Get_plugins: IHTMLElementCollection; safecall;
    procedure Set_alinkColor(p: OleVariant); safecall;
    function  Get_alinkColor: OleVariant; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    procedure Set_fgColor(p: OleVariant); safecall;
    function  Get_fgColor: OleVariant; safecall;
    procedure Set_linkColor(p: OleVariant); safecall;
    function  Get_linkColor: OleVariant; safecall;
    procedure Set_vlinkColor(p: OleVariant); safecall;
    function  Get_vlinkColor: OleVariant; safecall;
    function  Get_referrer: WideString; safecall;
    function  Get_location: IHTMLLocation; safecall;
    function  Get_lastModified: WideString; safecall;
    procedure Set_url(const p: WideString); safecall;
    function  Get_url: WideString; safecall;
    procedure Set_domain(const p: WideString); safecall;
    function  Get_domain: WideString; safecall;
    procedure Set_cookie(const p: WideString); safecall;
    function  Get_cookie: WideString; safecall;
    procedure Set_expando(p: WordBool); safecall;
    function  Get_expando: WordBool; safecall;
    procedure Set_charset(const p: WideString); safecall;
    function  Get_charset: WideString; safecall;
    procedure Set_defaultCharset(const p: WideString); safecall;
    function  Get_defaultCharset: WideString; safecall;
    function  Get_mimeType: WideString; safecall;
    function  Get_fileSize: WideString; safecall;
    function  Get_fileCreatedDate: WideString; safecall;
    function  Get_fileModifiedDate: WideString; safecall;
    function  Get_fileUpdatedDate: WideString; safecall;
    function  Get_security: WideString; safecall;
    function  Get_protocol: WideString; safecall;
    function  Get_nameProp: WideString; safecall;
    procedure write(psarray: PSafeArray); safecall;
    procedure writeln(psarray: PSafeArray); safecall;
    function  open(const url: WideString; name: OleVariant; features: OleVariant; 
                   replace: OleVariant): IDispatch; safecall;
    procedure close; safecall;
    procedure clear; safecall;
    function  queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function  queryCommandState(const cmdID: WideString): WordBool; safecall;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function  queryCommandText(const cmdID: WideString): WideString; safecall;
    function  queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    function  createElement(const eTag: WideString): IHTMLElement; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function  Get_onhelp: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function  Get_onclick: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function  Get_ondblclick: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function  Get_onkeyup: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function  Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function  Get_onkeypress: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function  Get_onmouseup: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function  Get_onmousedown: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function  Get_onmousemove: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function  Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function  Get_onmouseover: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function  Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onafterupdate(p: OleVariant); safecall;
    function  Get_onafterupdate: OleVariant; safecall;
    procedure Set_onrowexit(p: OleVariant); safecall;
    function  Get_onrowexit: OleVariant; safecall;
    procedure Set_onrowenter(p: OleVariant); safecall;
    function  Get_onrowenter: OleVariant; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function  Get_ondragstart: OleVariant; safecall;
    procedure Set_onselectstart(p: OleVariant); safecall;
    function  Get_onselectstart: OleVariant; safecall;
    function  elementFromPoint(x: Integer; y: Integer): IHTMLElement; safecall;
    function  Get_parentWindow: IHTMLWindow2; safecall;
    function  Get_styleSheets: IHTMLStyleSheetsCollection; safecall;
    procedure Set_onbeforeupdate(p: OleVariant); safecall;
    function  Get_onbeforeupdate: OleVariant; safecall;
    procedure Set_onerrorupdate(p: OleVariant); safecall;
    function  Get_onerrorupdate: OleVariant; safecall;
    function  toString: WideString; safecall;
    function  createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; safecall;
    property all: IHTMLElementCollection read Get_all;
    property body: IHTMLElement read Get_body;
    property activeElement: IHTMLElement read Get_activeElement;
    property images: IHTMLElementCollection read Get_images;
    property applets: IHTMLElementCollection read Get_applets;
    property links: IHTMLElementCollection read Get_links;
    property forms: IHTMLElementCollection read Get_forms;
    property anchors: IHTMLElementCollection read Get_anchors;
    property title: WideString read Get_title write Set_title;
    property scripts: IHTMLElementCollection read Get_scripts;
    property designMode: WideString read Get_designMode write Set_designMode;
    property selection: IHTMLSelectionObject read Get_selection;
    property readyState: WideString read Get_readyState;
    property frames: IHTMLFramesCollection2 read Get_frames;
    property embeds: IHTMLElementCollection read Get_embeds;
    property plugins: IHTMLElementCollection read Get_plugins;
    property alinkColor: OleVariant read Get_alinkColor write Set_alinkColor;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property fgColor: OleVariant read Get_fgColor write Set_fgColor;
    property linkColor: OleVariant read Get_linkColor write Set_linkColor;
    property vlinkColor: OleVariant read Get_vlinkColor write Set_vlinkColor;
    property referrer: WideString read Get_referrer;
    property location: IHTMLLocation read Get_location;
    property lastModified: WideString read Get_lastModified;
    property url: WideString read Get_url write Set_url;
    property domain: WideString read Get_domain write Set_domain;
    property cookie: WideString read Get_cookie write Set_cookie;
    property expando: WordBool read Get_expando write Set_expando;
    property charset: WideString read Get_charset write Set_charset;
    property defaultCharset: WideString read Get_defaultCharset write Set_defaultCharset;
    property mimeType: WideString read Get_mimeType;
    property fileSize: WideString read Get_fileSize;
    property fileCreatedDate: WideString read Get_fileCreatedDate;
    property fileModifiedDate: WideString read Get_fileModifiedDate;
    property fileUpdatedDate: WideString read Get_fileUpdatedDate;
    property security: WideString read Get_security;
    property protocol: WideString read Get_protocol;
    property nameProp: WideString read Get_nameProp;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onafterupdate: OleVariant read Get_onafterupdate write Set_onafterupdate;
    property onrowexit: OleVariant read Get_onrowexit write Set_onrowexit;
    property onrowenter: OleVariant read Get_onrowenter write Set_onrowenter;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property onselectstart: OleVariant read Get_onselectstart write Set_onselectstart;
    property parentWindow: IHTMLWindow2 read Get_parentWindow;
    property styleSheets: IHTMLStyleSheetsCollection read Get_styleSheets;
    property onbeforeupdate: OleVariant read Get_onbeforeupdate write Set_onbeforeupdate;
    property onerrorupdate: OleVariant read Get_onerrorupdate write Set_onerrorupdate;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4425-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLDocument2Disp = dispinterface
    ['{332C4425-26CB-11D0-B483-00C04FD90119}']
    property all: IHTMLElementCollection readonly dispid 1003;
    property body: IHTMLElement readonly dispid 1004;
    property activeElement: IHTMLElement readonly dispid 1005;
    property images: IHTMLElementCollection readonly dispid 1011;
    property applets: IHTMLElementCollection readonly dispid 1008;
    property links: IHTMLElementCollection readonly dispid 1009;
    property forms: IHTMLElementCollection readonly dispid 1010;
    property anchors: IHTMLElementCollection readonly dispid 1007;
    property title: WideString dispid 1012;
    property scripts: IHTMLElementCollection readonly dispid 1013;
    property designMode: WideString dispid 1014;
    property selection: IHTMLSelectionObject readonly dispid 1017;
    property readyState: WideString readonly dispid 1018;
    property frames: IHTMLFramesCollection2 readonly dispid 1019;
    property embeds: IHTMLElementCollection readonly dispid 1015;
    property plugins: IHTMLElementCollection readonly dispid 1021;
    property alinkColor: OleVariant dispid 1022;
    property bgColor: OleVariant dispid -501;
    property fgColor: OleVariant dispid -2147413110;
    property linkColor: OleVariant dispid 1024;
    property vlinkColor: OleVariant dispid 1023;
    property referrer: WideString readonly dispid 1027;
    property location: IHTMLLocation readonly dispid 1026;
    property lastModified: WideString readonly dispid 1028;
    property url: WideString dispid 1025;
    property domain: WideString dispid 1029;
    property cookie: WideString dispid 1030;
    property expando: WordBool dispid 1031;
    property charset: WideString dispid 1032;
    property defaultCharset: WideString dispid 1033;
    property mimeType: WideString readonly dispid 1041;
    property fileSize: WideString readonly dispid 1042;
    property fileCreatedDate: WideString readonly dispid 1043;
    property fileModifiedDate: WideString readonly dispid 1044;
    property fileUpdatedDate: WideString readonly dispid 1045;
    property security: WideString readonly dispid 1046;
    property protocol: WideString readonly dispid 1047;
    property nameProp: WideString readonly dispid 1048;
    procedure write(psarray: {??PSafeArray} OleVariant); dispid 1054;
    procedure writeln(psarray: {??PSafeArray} OleVariant); dispid 1055;
    function  open(const url: WideString; name: OleVariant; features: OleVariant; 
                   replace: OleVariant): IDispatch; dispid 1056;
    procedure close; dispid 1057;
    procedure clear; dispid 1058;
    function  queryCommandSupported(const cmdID: WideString): WordBool; dispid 1059;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1060;
    function  queryCommandState(const cmdID: WideString): WordBool; dispid 1061;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1062;
    function  queryCommandText(const cmdID: WideString): WideString; dispid 1063;
    function  queryCommandValue(const cmdID: WideString): OleVariant; dispid 1064;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1065;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1066;
    function  createElement(const eTag: WideString): IHTMLElement; dispid 1067;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousedown: OleVariant dispid -2147412110;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onafterupdate: OleVariant dispid -2147412090;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondragstart: OleVariant dispid -2147412077;
    property onselectstart: OleVariant dispid -2147412075;
    function  elementFromPoint(x: Integer; y: Integer): IHTMLElement; dispid 1068;
    property parentWindow: IHTMLWindow2 readonly dispid 1034;
    property styleSheets: IHTMLStyleSheetsCollection readonly dispid 1069;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onerrorupdate: OleVariant dispid -2147412074;
    function  toString: WideString; dispid 1070;
    function  createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; dispid 1071;
    property Script: IDispatch readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLFramesCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4426-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLFramesCollection2 = interface(IDispatch)
    ['{332C4426-26CB-11D0-B483-00C04FD90119}']
    function  item(var pvarIndex: OleVariant): OleVariant; safecall;
    function  Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFramesCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4426-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLFramesCollection2Disp = dispinterface
    ['{332C4426-26CB-11D0-B483-00C04FD90119}']
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLWindow2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4427-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLWindow2 = interface(IHTMLFramesCollection2)
    ['{332C4427-26CB-11D0-B483-00C04FD90119}']
    function  Get_frames: IHTMLFramesCollection2; safecall;
    procedure Set_defaultStatus(const p: WideString); safecall;
    function  Get_defaultStatus: WideString; safecall;
    procedure Set_status(const p: WideString); safecall;
    function  Get_status: WideString; safecall;
    function  setTimeout(const expression: WideString; msec: Integer; var language: OleVariant): Integer; safecall;
    procedure clearTimeout(timerID: Integer); safecall;
    procedure alert(const message: WideString); safecall;
    function  confirm(const message: WideString): WordBool; safecall;
    function  prompt(const message: WideString; const defstr: WideString): OleVariant; safecall;
    function  Get_Image: IHTMLImageElementFactory; safecall;
    function  Get_location: IHTMLLocation; safecall;
    function  Get_history: IOmHistory; safecall;
    procedure close; safecall;
    procedure Set_opener(p: OleVariant); safecall;
    function  Get_opener: OleVariant; safecall;
    function  Get_navigator: IOmNavigator; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    function  Get_parent: IHTMLWindow2; safecall;
    function  open(const url: WideString; const name: WideString; const features: WideString; 
                   replace: WordBool): IHTMLWindow2; safecall;
    function  Get_self: IHTMLWindow2; safecall;
    function  Get_top: IHTMLWindow2; safecall;
    function  Get_window: IHTMLWindow2; safecall;
    procedure navigate(const url: WideString); safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function  Get_onfocus: OleVariant; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function  Get_onblur: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function  Get_onbeforeunload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function  Get_onunload: OleVariant; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function  Get_onhelp: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function  Get_onresize: OleVariant; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function  Get_onscroll: OleVariant; safecall;
    function  Get_document: IHTMLDocument2; safecall;
    function  Get_event: IHTMLEventObj; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  showModalDialog(const dialog: WideString; var varArgIn: OleVariant; 
                              var varOptions: OleVariant): OleVariant; safecall;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); safecall;
    function  Get_screen: IHTMLScreen; safecall;
    function  Get_Option: IHTMLOptionElementFactory; safecall;
    procedure focus; safecall;
    function  Get_closed: WordBool; safecall;
    procedure blur; safecall;
    procedure scroll(x: Integer; y: Integer); safecall;
    function  Get_clientInformation: IOmNavigator; safecall;
    function  setInterval(const expression: WideString; msec: Integer; var language: OleVariant): Integer; safecall;
    procedure clearInterval(timerID: Integer); safecall;
    procedure Set_offscreenBuffering(p: OleVariant); safecall;
    function  Get_offscreenBuffering: OleVariant; safecall;
    function  execScript(const code: WideString; const language: WideString): OleVariant; safecall;
    function  toString: WideString; safecall;
    procedure scrollBy(x: Integer; y: Integer); safecall;
    procedure scrollTo(x: Integer; y: Integer); safecall;
    procedure moveTo(x: Integer; y: Integer); safecall;
    procedure moveBy(x: Integer; y: Integer); safecall;
    procedure resizeTo(x: Integer; y: Integer); safecall;
    procedure resizeBy(x: Integer; y: Integer); safecall;
    function  Get_external: IDispatch; safecall;
    property frames: IHTMLFramesCollection2 read Get_frames;
    property defaultStatus: WideString read Get_defaultStatus write Set_defaultStatus;
    property status: WideString read Get_status write Set_status;
    property Image: IHTMLImageElementFactory read Get_Image;
    property location: IHTMLLocation read Get_location;
    property history: IOmHistory read Get_history;
    property opener: OleVariant read Get_opener write Set_opener;
    property navigator: IOmNavigator read Get_navigator;
    property name: WideString read Get_name write Set_name;
    property parent: IHTMLWindow2 read Get_parent;
    property self: IHTMLWindow2 read Get_self;
    property top: IHTMLWindow2 read Get_top;
    property window: IHTMLWindow2 read Get_window;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onload: OleVariant read Get_onload write Set_onload;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property document: IHTMLDocument2 read Get_document;
    property event: IHTMLEventObj read Get_event;
    property _newEnum: IUnknown read Get__newEnum;
    property screen: IHTMLScreen read Get_screen;
    property Option: IHTMLOptionElementFactory read Get_Option;
    property closed: WordBool read Get_closed;
    property clientInformation: IOmNavigator read Get_clientInformation;
    property offscreenBuffering: OleVariant read Get_offscreenBuffering write Set_offscreenBuffering;
    property external: IDispatch read Get_external;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4427-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLWindow2Disp = dispinterface
    ['{332C4427-26CB-11D0-B483-00C04FD90119}']
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    function  setTimeout(const expression: WideString; msec: Integer; var language: OleVariant): Integer; dispid 1172;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function  confirm(const message: WideString): WordBool; dispid 1110;
    function  prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function  open(const url: WideString; const name: WideString; const features: WideString; 
                   replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid -2147412098;
    property onblur: OleVariant dispid -2147412097;
    property onload: OleVariant dispid -2147412080;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onunload: OleVariant dispid -2147412079;
    property onhelp: OleVariant dispid -2147412099;
    property onerror: OleVariant dispid -2147412083;
    property onresize: OleVariant dispid -2147412076;
    property onscroll: OleVariant dispid -2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function  showModalDialog(const dialog: WideString; var varArgIn: OleVariant; 
                              var varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    function  setInterval(const expression: WideString; msec: Integer; var language: OleVariant): Integer; dispid 1173;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function  execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function  toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLScreen
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F35C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen = interface(IDispatch)
    ['{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_colorDepth: Integer; safecall;
    procedure Set_bufferDepth(p: Integer); safecall;
    function  Get_bufferDepth: Integer; safecall;
    function  Get_width: Integer; safecall;
    function  Get_height: Integer; safecall;
    procedure Set_updateInterval(p: Integer); safecall;
    function  Get_updateInterval: Integer; safecall;
    function  Get_availHeight: Integer; safecall;
    function  Get_availWidth: Integer; safecall;
    function  Get_fontSmoothingEnabled: WordBool; safecall;
    property colorDepth: Integer read Get_colorDepth;
    property bufferDepth: Integer read Get_bufferDepth write Set_bufferDepth;
    property width: Integer read Get_width;
    property height: Integer read Get_height;
    property updateInterval: Integer read Get_updateInterval write Set_updateInterval;
    property availHeight: Integer read Get_availHeight;
    property availWidth: Integer read Get_availWidth;
    property fontSmoothingEnabled: WordBool read Get_fontSmoothingEnabled;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreenDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F35C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreenDisp = dispinterface
    ['{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}']
    property colorDepth: Integer readonly dispid 1001;
    property bufferDepth: Integer dispid 1002;
    property width: Integer readonly dispid 1003;
    property height: Integer readonly dispid 1004;
    property updateInterval: Integer dispid 1005;
    property availHeight: Integer readonly dispid 1006;
    property availWidth: Integer readonly dispid 1007;
    property fontSmoothingEnabled: WordBool readonly dispid 1008;
  end;

// *********************************************************************//
// Interface: IHTMLWindow3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow3 = interface(IDispatch)
    ['{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_screenLeft: Integer; safecall;
    function  Get_screenTop: Integer; safecall;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    function  setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; safecall;
    function  setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; safecall;
    procedure print; safecall;
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function  Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function  Get_onafterprint: OleVariant; safecall;
    function  Get_clipboardData: IHTMLDataTransfer; safecall;
    function  showModelessDialog(const url: WideString; var varArgIn: OleVariant; 
                                 var options: OleVariant): IHTMLWindow2; safecall;
    property screenLeft: Integer read Get_screenLeft;
    property screenTop: Integer read Get_screenTop;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
    property clipboardData: IHTMLDataTransfer read Get_clipboardData;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow3Disp = dispinterface
    ['{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}']
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    function  setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1103;
    function  setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function  showModelessDialog(const url: WideString; var varArgIn: OleVariant; 
                                 var options: OleVariant): IHTMLWindow2; dispid 1176;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWindow2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWindow2 = dispinterface
    ['{3050F55D-98B5-11CF-BB82-00AA00BDCE0B}']
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function  confirm(const message: WideString): WordBool; dispid 1110;
    function  prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function  open(const url: WideString; const name: WideString; const features: WideString; 
                   replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid -2147412098;
    property onblur: OleVariant dispid -2147412097;
    property onload: OleVariant dispid -2147412080;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onunload: OleVariant dispid -2147412079;
    property onhelp: OleVariant dispid -2147412099;
    property onerror: OleVariant dispid -2147412083;
    property onresize: OleVariant dispid -2147412076;
    property onscroll: OleVariant dispid -2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function  showModalDialog(const dialog: WideString; var varArgIn: OleVariant; 
                              var varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function  execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function  toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    function  setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1103;
    function  setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function  showModelessDialog(const url: WideString; var varArgIn: OleVariant; 
                                 var options: OleVariant): IHTMLWindow2; dispid 1176;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWindowProxy
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWindowProxy = dispinterface
    ['{3050F55E-98B5-11CF-BB82-00AA00BDCE0B}']
    function  item(var pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function  confirm(const message: WideString): WordBool; dispid 1110;
    function  prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function  open(const url: WideString; const name: WideString; const features: WideString; 
                   replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid -2147412098;
    property onblur: OleVariant dispid -2147412097;
    property onload: OleVariant dispid -2147412080;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onunload: OleVariant dispid -2147412079;
    property onhelp: OleVariant dispid -2147412099;
    property onerror: OleVariant dispid -2147412083;
    property onresize: OleVariant dispid -2147412076;
    property onscroll: OleVariant dispid -2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function  showModalDialog(const dialog: WideString; var varArgIn: OleVariant; 
                              var varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function  execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function  toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    function  setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1103;
    function  setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function  showModelessDialog(const url: WideString; var varArgIn: OleVariant; 
                                 var options: OleVariant): IHTMLWindow2; dispid 1176;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F613-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents2 = dispinterface
    ['{3050F613-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    function  onstop(const pEvtObj: IHTMLEventObj): WordBool; dispid 1026;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onbeforeeditfocus(const pEvtObj: IHTMLEventObj); dispid 1027;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F260-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents = dispinterface
    ['{3050F260-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    function  onkeypress: WordBool; dispid -603;
    procedure onmousedown; dispid -605;
    procedure onmousemove; dispid -606;
    procedure onmouseup; dispid -607;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onreadystatechange; dispid -609;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onselectstart: WordBool; dispid -2147418100;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  oncontextmenu: WordBool; dispid 1023;
    function  onstop: WordBool; dispid 1026;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onpropertychange; dispid -2147418093;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLDocument3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F485-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument3 = interface(IDispatch)
    ['{3050F485-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure releaseCapture; safecall;
    procedure recalc(fForce: WordBool); safecall;
    function  createTextNode(const text: WideString): IHTMLDOMNode; safecall;
    function  Get_documentElement: IHTMLElement; safecall;
    function  Get_uniqueID: WideString; safecall;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    procedure Set_onrowsdelete(p: OleVariant); safecall;
    function  Get_onrowsdelete: OleVariant; safecall;
    procedure Set_onrowsinserted(p: OleVariant); safecall;
    function  Get_onrowsinserted: OleVariant; safecall;
    procedure Set_oncellchange(p: OleVariant); safecall;
    function  Get_oncellchange: OleVariant; safecall;
    procedure Set_ondatasetchanged(p: OleVariant); safecall;
    function  Get_ondatasetchanged: OleVariant; safecall;
    procedure Set_ondataavailable(p: OleVariant); safecall;
    function  Get_ondataavailable: OleVariant; safecall;
    procedure Set_ondatasetcomplete(p: OleVariant); safecall;
    function  Get_ondatasetcomplete: OleVariant; safecall;
    procedure Set_onpropertychange(p: OleVariant); safecall;
    function  Get_onpropertychange: OleVariant; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function  Get_dir: WideString; safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function  Get_oncontextmenu: OleVariant; safecall;
    procedure Set_onstop(p: OleVariant); safecall;
    function  Get_onstop: OleVariant; safecall;
    function  createDocumentFragment: IHTMLDocument2; safecall;
    function  Get_parentDocument: IHTMLDocument2; safecall;
    procedure Set_enableDownload(p: WordBool); safecall;
    function  Get_enableDownload: WordBool; safecall;
    procedure Set_baseUrl(const p: WideString); safecall;
    function  Get_baseUrl: WideString; safecall;
    function  Get_childNodes: IDispatch; safecall;
    procedure Set_inheritStyleSheets(p: WordBool); safecall;
    function  Get_inheritStyleSheets: WordBool; safecall;
    procedure Set_onbeforeeditfocus(p: OleVariant); safecall;
    function  Get_onbeforeeditfocus: OleVariant; safecall;
    function  getElementsByName(const v: WideString): IHTMLElementCollection; safecall;
    function  getElementById(const v: WideString): IHTMLElement; safecall;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; safecall;
    property documentElement: IHTMLElement read Get_documentElement;
    property uniqueID: WideString read Get_uniqueID;
    property onrowsdelete: OleVariant read Get_onrowsdelete write Set_onrowsdelete;
    property onrowsinserted: OleVariant read Get_onrowsinserted write Set_onrowsinserted;
    property oncellchange: OleVariant read Get_oncellchange write Set_oncellchange;
    property ondatasetchanged: OleVariant read Get_ondatasetchanged write Set_ondatasetchanged;
    property ondataavailable: OleVariant read Get_ondataavailable write Set_ondataavailable;
    property ondatasetcomplete: OleVariant read Get_ondatasetcomplete write Set_ondatasetcomplete;
    property onpropertychange: OleVariant read Get_onpropertychange write Set_onpropertychange;
    property dir: WideString read Get_dir write Set_dir;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property onstop: OleVariant read Get_onstop write Set_onstop;
    property parentDocument: IHTMLDocument2 read Get_parentDocument;
    property enableDownload: WordBool read Get_enableDownload write Set_enableDownload;
    property baseUrl: WideString read Get_baseUrl write Set_baseUrl;
    property childNodes: IDispatch read Get_childNodes;
    property inheritStyleSheets: WordBool read Get_inheritStyleSheets write Set_inheritStyleSheets;
    property onbeforeeditfocus: OleVariant read Get_onbeforeeditfocus write Set_onbeforeeditfocus;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F485-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument3Disp = dispinterface
    ['{3050F485-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure releaseCapture; dispid 1072;
    procedure recalc(fForce: WordBool); dispid 1073;
    function  createTextNode(const text: WideString): IHTMLDOMNode; dispid 1074;
    property documentElement: IHTMLElement readonly dispid 1075;
    property uniqueID: WideString readonly dispid 1077;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onpropertychange: OleVariant dispid -2147412065;
    property dir: WideString dispid -2147412995;
    property oncontextmenu: OleVariant dispid -2147412047;
    property onstop: OleVariant dispid -2147412044;
    function  createDocumentFragment: IHTMLDocument2; dispid 1076;
    property parentDocument: IHTMLDocument2 readonly dispid 1078;
    property enableDownload: WordBool dispid 1079;
    property baseUrl: WideString dispid 1080;
    property childNodes: IDispatch readonly dispid 1081;
    property inheritStyleSheets: WordBool dispid 1082;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    function  getElementsByName(const v: WideString): IHTMLElementCollection; dispid 1086;
    function  getElementById(const v: WideString): IHTMLElement; dispid 1088;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid 1087;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDocument
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDocument = dispinterface
    ['{3050F55F-98B5-11CF-BB82-00AA00BDCE0B}']
    property Script: IDispatch readonly dispid 1001;
    property all: IHTMLElementCollection readonly dispid 1003;
    property body: IHTMLElement readonly dispid 1004;
    property activeElement: IHTMLElement readonly dispid 1005;
    property images: IHTMLElementCollection readonly dispid 1011;
    property applets: IHTMLElementCollection readonly dispid 1008;
    property links: IHTMLElementCollection readonly dispid 1009;
    property forms: IHTMLElementCollection readonly dispid 1010;
    property anchors: IHTMLElementCollection readonly dispid 1007;
    property title: WideString dispid 1012;
    property scripts: IHTMLElementCollection readonly dispid 1013;
    property designMode: WideString dispid 1014;
    property selection: IHTMLSelectionObject readonly dispid 1017;
    property readyState: WideString readonly dispid 1018;
    property frames: IHTMLFramesCollection2 readonly dispid 1019;
    property embeds: IHTMLElementCollection readonly dispid 1015;
    property plugins: IHTMLElementCollection readonly dispid 1021;
    property alinkColor: OleVariant dispid 1022;
    property bgColor: OleVariant dispid -501;
    property fgColor: OleVariant dispid -2147413110;
    property linkColor: OleVariant dispid 1024;
    property vlinkColor: OleVariant dispid 1023;
    property referrer: WideString readonly dispid 1027;
    property location: IHTMLLocation readonly dispid 1026;
    property lastModified: WideString readonly dispid 1028;
    property url: WideString dispid 1025;
    property domain: WideString dispid 1029;
    property cookie: WideString dispid 1030;
    property expando: WordBool dispid 1031;
    property charset: WideString dispid 1032;
    property defaultCharset: WideString dispid 1033;
    property mimeType: WideString readonly dispid 1041;
    property fileSize: WideString readonly dispid 1042;
    property fileCreatedDate: WideString readonly dispid 1043;
    property fileModifiedDate: WideString readonly dispid 1044;
    property fileUpdatedDate: WideString readonly dispid 1045;
    property security: WideString readonly dispid 1046;
    property protocol: WideString readonly dispid 1047;
    property nameProp: WideString readonly dispid 1048;
    procedure write(psarray: {??PSafeArray} OleVariant); dispid 1054;
    procedure writeln(psarray: {??PSafeArray} OleVariant); dispid 1055;
    function  open(const url: WideString; name: OleVariant; features: OleVariant; 
                   replace: OleVariant): IDispatch; dispid 1056;
    procedure close; dispid 1057;
    procedure clear; dispid 1058;
    function  queryCommandSupported(const cmdID: WideString): WordBool; dispid 1059;
    function  queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1060;
    function  queryCommandState(const cmdID: WideString): WordBool; dispid 1061;
    function  queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1062;
    function  queryCommandText(const cmdID: WideString): WideString; dispid 1063;
    function  queryCommandValue(const cmdID: WideString): OleVariant; dispid 1064;
    function  execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1065;
    function  execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1066;
    function  createElement(const eTag: WideString): IHTMLElement; dispid 1067;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousedown: OleVariant dispid -2147412110;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onafterupdate: OleVariant dispid -2147412090;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondragstart: OleVariant dispid -2147412077;
    property onselectstart: OleVariant dispid -2147412075;
    function  elementFromPoint(x: Integer; y: Integer): IHTMLElement; dispid 1068;
    property parentWindow: IHTMLWindow2 readonly dispid 1034;
    property styleSheets: IHTMLStyleSheetsCollection readonly dispid 1069;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onerrorupdate: OleVariant dispid -2147412074;
    function  toString: WideString; dispid 1070;
    function  createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; dispid 1071;
    procedure releaseCapture; dispid 1072;
    procedure recalc(fForce: WordBool); dispid 1073;
    function  createTextNode(const text: WideString): IHTMLDOMNode; dispid 1074;
    property documentElement: IHTMLElement readonly dispid 1075;
    property uniqueID: WideString readonly dispid 1077;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onpropertychange: OleVariant dispid -2147412065;
    property dir: WideString dispid -2147412995;
    property oncontextmenu: OleVariant dispid -2147412047;
    property onstop: OleVariant dispid -2147412044;
    function  createDocumentFragment: IHTMLDocument2; dispid 1076;
    property parentDocument: IHTMLDocument2 readonly dispid 1078;
    property enableDownload: WordBool dispid 1079;
    property baseUrl: WideString dispid 1080;
    property childNodes: IDispatch readonly dispid 1081;
    property inheritStyleSheets: WordBool dispid 1082;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    function  getElementsByName(const v: WideString): IHTMLElementCollection; dispid 1086;
    function  getElementById(const v: WideString): IHTMLElement; dispid 1088;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid 1087;
  end;

// *********************************************************************//
// Interface: IHTMLDocumentFragment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocumentFragment = interface(IDispatch)
    ['{3050F5E5-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_document: IDispatch; safecall;
    property document: IDispatch read Get_document;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocumentFragmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocumentFragmentDisp = dispinterface
    ['{3050F5E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property document: IDispatch readonly dispid -2147412970;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDocumentFragment
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F581-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDocumentFragment = dispinterface
    ['{3050F581-98B5-11CF-BB82-00AA00BDCE0B}']
    property document: IDispatch readonly dispid -2147412970;
  end;

// *********************************************************************//
// DispIntf:  DWebBridgeEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {A6D897FF-0A95-11D1-B0BA-006008166E11}
// *********************************************************************//
  DWebBridgeEvents = dispinterface
    ['{A6D897FF-0A95-11D1-B0BA-006008166E11}']
    procedure onscriptletevent(const name: WideString; eventData: OleVariant); dispid 1;
    procedure onreadystatechange; dispid -609;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    function  onkeypress: WordBool; dispid -603;
    procedure onmousedown; dispid -605;
    procedure onmousemove; dispid -606;
    procedure onmouseup; dispid -607;
  end;

// *********************************************************************//
// Interface: IWebBridge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE24FDAD-03C6-11D1-8B76-0080C744F389}
// *********************************************************************//
  IWebBridge = interface(IDispatch)
    ['{AE24FDAD-03C6-11D1-8B76-0080C744F389}']
    procedure Set_url(const p: WideString); safecall;
    function  Get_url: WideString; safecall;
    procedure Set_Scrollbar(p: WordBool); safecall;
    function  Get_Scrollbar: WordBool; safecall;
    procedure Set_embed(p: WordBool); safecall;
    function  Get_embed: WordBool; safecall;
    function  Get_event: IDispatch; safecall;
    function  Get_readyState: Integer; safecall;
    procedure AboutBox; safecall;
    property url: WideString read Get_url write Set_url;
    property Scrollbar: WordBool read Get_Scrollbar write Set_Scrollbar;
    property embed: WordBool read Get_embed write Set_embed;
    property event: IDispatch read Get_event;
    property readyState: Integer read Get_readyState;
  end;

// *********************************************************************//
// DispIntf:  IWebBridgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE24FDAD-03C6-11D1-8B76-0080C744F389}
// *********************************************************************//
  IWebBridgeDisp = dispinterface
    ['{AE24FDAD-03C6-11D1-8B76-0080C744F389}']
    property url: WideString dispid 1;
    property Scrollbar: WordBool dispid 2;
    property embed: WordBool dispid 3;
    property event: IDispatch readonly dispid 1152;
    property readyState: Integer readonly dispid -525;
    procedure AboutBox; dispid -552;
  end;

// *********************************************************************//
// Interface: IWBScriptControl
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5170870-0CF8-11D1-8B91-0080C744F389}
// *********************************************************************//
  IWBScriptControl = interface(IDispatch)
    ['{A5170870-0CF8-11D1-8B91-0080C744F389}']
    procedure raiseEvent(const name: WideString; eventData: OleVariant); safecall;
    procedure bubbleEvent; safecall;
    procedure setContextMenu(menuItemPairs: OleVariant); safecall;
    procedure Set_selectableContent(p: WordBool); safecall;
    function  Get_selectableContent: WordBool; safecall;
    function  Get_frozen: WordBool; safecall;
    procedure Set_Scrollbar(p: WordBool); safecall;
    function  Get_Scrollbar: WordBool; safecall;
    function  Get_version: WideString; safecall;
    function  Get_visibility: WordBool; safecall;
    procedure Set_onvisibilitychange(p: OleVariant); safecall;
    function  Get_onvisibilitychange: OleVariant; safecall;
    property selectableContent: WordBool read Get_selectableContent write Set_selectableContent;
    property frozen: WordBool read Get_frozen;
    property Scrollbar: WordBool read Get_Scrollbar write Set_Scrollbar;
    property version: WideString read Get_version;
    property visibility: WordBool read Get_visibility;
    property onvisibilitychange: OleVariant read Get_onvisibilitychange write Set_onvisibilitychange;
  end;

// *********************************************************************//
// DispIntf:  IWBScriptControlDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5170870-0CF8-11D1-8B91-0080C744F389}
// *********************************************************************//
  IWBScriptControlDisp = dispinterface
    ['{A5170870-0CF8-11D1-8B91-0080C744F389}']
    procedure raiseEvent(const name: WideString; eventData: OleVariant); dispid 1;
    procedure bubbleEvent; dispid 2;
    procedure setContextMenu(menuItemPairs: OleVariant); dispid 3;
    property selectableContent: WordBool dispid 4;
    property frozen: WordBool readonly dispid 5;
    property Scrollbar: WordBool dispid 7;
    property version: WideString readonly dispid 8;
    property visibility: WordBool readonly dispid 9;
    property onvisibilitychange: OleVariant dispid 10;
  end;

// *********************************************************************//
// Interface: IHTMLEmbedElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElement = interface(IDispatch)
    ['{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_hidden(const p: WideString); safecall;
    function  Get_hidden: WideString; safecall;
    function  Get_palette: WideString; safecall;
    function  Get_pluginspage: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_units(const p: WideString); safecall;
    function  Get_units: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    property hidden: WideString read Get_hidden write Set_hidden;
    property palette: WideString read Get_palette;
    property pluginspage: WideString read Get_pluginspage;
    property src: WideString read Get_src write Set_src;
    property units: WideString read Get_units write Set_units;
    property name: WideString read Get_name write Set_name;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEmbedElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElementDisp = dispinterface
    ['{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}']
    property hidden: WideString dispid -2147415102;
    property palette: WideString readonly dispid -2147415108;
    property pluginspage: WideString readonly dispid -2147415107;
    property src: WideString dispid -2147415106;
    property units: WideString dispid -2147415104;
    property name: WideString dispid -2147418112;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLEmbed
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLEmbed = dispinterface
    ['{3050F52E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property hidden: WideString dispid -2147415102;
    property palette: WideString readonly dispid -2147415108;
    property pluginspage: WideString readonly dispid -2147415107;
    property src: WideString dispid -2147415106;
    property units: WideString dispid -2147415104;
    property name: WideString dispid -2147418112;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// DispIntf:  HTMLMapEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMapEvents2 = dispinterface
    ['{3050F61E-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLMapEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMapEvents = dispinterface
    ['{3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F383-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection = interface(IDispatch)
    ['{3050F383-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_length(p: Integer); safecall;
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function  tags(tagName: OleVariant): IDispatch; safecall;
    procedure add(const element: IHTMLElement; before: OleVariant); safecall;
    procedure remove(index: Integer); safecall;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F383-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollectionDisp = dispinterface
    ['{3050F383-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection2 = interface(IDispatch)
    ['{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function  urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection2Disp = dispinterface
    ['{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLMapElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F266-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMapElement = interface(IDispatch)
    ['{3050F266-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_areas: IHTMLAreasCollection; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    property areas: IHTMLAreasCollection read Get_areas;
    property name: WideString read Get_name write Set_name;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMapElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F266-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMapElementDisp = dispinterface
    ['{3050F266-98B5-11CF-BB82-00AA00BDCE0B}']
    property areas: IHTMLAreasCollection readonly dispid 1002;
    property name: WideString dispid -2147418112;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAreasCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAreasCollection = dispinterface
    ['{3050F56A-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function  tags(tagName: OleVariant): IDispatch; dispid 1502;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    function  urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMapElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F526-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMapElement = dispinterface
    ['{3050F526-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property areas: IHTMLAreasCollection readonly dispid 1002;
    property name: WideString dispid -2147418112;
  end;

// *********************************************************************//
// DispIntf:  HTMLAreaEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F611-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAreaEvents2 = dispinterface
    ['{3050F611-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLAreaEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F366-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAreaEvents = dispinterface
    ['{3050F366-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLAreaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F265-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElement = interface(IDispatch)
    ['{3050F265-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_shape(const p: WideString); safecall;
    function  Get_shape: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function  Get_coords: WideString; safecall;
    procedure Set_href(const p: WideString); safecall;
    function  Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function  Get_target: WideString; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function  Get_alt: WideString; safecall;
    procedure Set_noHref(p: WordBool); safecall;
    function  Get_noHref: WordBool; safecall;
    procedure Set_host(const p: WideString); safecall;
    function  Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function  Get_hostname: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function  Get_pathname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function  Get_port: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function  Get_protocol: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function  Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function  Get_hash: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function  Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function  Get_onfocus: OleVariant; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function  Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure blur; safecall;
    property shape: WideString read Get_shape write Set_shape;
    property coords: WideString read Get_coords write Set_coords;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
    property alt: WideString read Get_alt write Set_alt;
    property noHref: WordBool read Get_noHref write Set_noHref;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property pathname: WideString read Get_pathname write Set_pathname;
    property port: WideString read Get_port write Set_port;
    property protocol: WideString read Get_protocol write Set_protocol;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F265-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElementDisp = dispinterface
    ['{3050F265-98B5-11CF-BB82-00AA00BDCE0B}']
    property shape: WideString dispid 1001;
    property coords: WideString dispid 1002;
    property href: WideString dispid 0;
    property target: WideString dispid 1004;
    property alt: WideString dispid 1005;
    property noHref: WordBool dispid 1006;
    property host: WideString dispid 1007;
    property hostname: WideString dispid 1008;
    property pathname: WideString dispid 1009;
    property port: WideString dispid 1010;
    property protocol: WideString dispid 1011;
    property search: WideString dispid 1012;
    property hash: WideString dispid 1013;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    procedure blur; dispid -2147416110;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAreaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F503-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAreaElement = dispinterface
    ['{3050F503-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property shape: WideString dispid 1001;
    property coords: WideString dispid 1002;
    property href: WideString dispid 0;
    property target: WideString dispid 1004;
    property alt: WideString dispid 1005;
    property noHref: WordBool dispid 1006;
    property host: WideString dispid 1007;
    property hostname: WideString dispid 1008;
    property pathname: WideString dispid 1009;
    property port: WideString dispid 1010;
    property protocol: WideString dispid 1011;
    property search: WideString dispid 1012;
    property hash: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLTableCaption
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCaption = interface(IDispatch)
    ['{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function  Get_vAlign: WideString; safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCaptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCaptionDisp = dispinterface
    ['{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCaption
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F508-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCaption = dispinterface
    ['{3050F508-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// Interface: IHTMLCommentElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement = interface(IDispatch)
    ['{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_text(const p: WideString); safecall;
    function  Get_text: WideString; safecall;
    procedure Set_atomic(p: Integer); safecall;
    function  Get_atomic: Integer; safecall;
    property text: WideString read Get_text write Set_text;
    property atomic: Integer read Get_atomic write Set_atomic;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCommentElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElementDisp = dispinterface
    ['{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}']
    property text: WideString dispid 1001;
    property atomic: Integer dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCommentElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCommentElement = dispinterface
    ['{3050F50A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property text: WideString dispid 1001;
    property atomic: Integer dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLPhraseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement = interface(IDispatch)
    ['{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLPhraseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElementDisp = dispinterface
    ['{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTMLSpanElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanElement = interface(IDispatch)
    ['{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLSpanElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanElementDisp = dispinterface
    ['{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPhraseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPhraseElement = dispinterface
    ['{3050F52D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSpanElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F548-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSpanElement = dispinterface
    ['{3050F548-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// DispIntf:  HTMLTableEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F623-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTableEvents2 = dispinterface
    ['{3050F623-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// DispIntf:  HTMLTableEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F407-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTableEvents = dispinterface
    ['{3050F407-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection = interface(IDispatch)
    ['{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function  Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    function  Get_rows: IHTMLElementCollection; safecall;
    function  insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property rows: IHTMLElementCollection read Get_rows;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSectionDisp = dispinterface
    ['{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property rows: IHTMLElementCollection readonly dispid 1000;
    function  insertRow(index: Integer): IDispatch; dispid 1001;
    procedure deleteRow(index: Integer); dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLTable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable = interface(IDispatch)
    ['{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cols(p: Integer); safecall;
    function  Get_cols: Integer; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function  Get_border: OleVariant; safecall;
    procedure Set_frame(const p: WideString); safecall;
    function  Get_frame: WideString; safecall;
    procedure Set_rules(const p: WideString); safecall;
    function  Get_rules: WideString; safecall;
    procedure Set_cellSpacing(p: OleVariant); safecall;
    function  Get_cellSpacing: OleVariant; safecall;
    procedure Set_cellPadding(p: OleVariant); safecall;
    function  Get_cellPadding: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function  Get_background: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function  Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function  Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function  Get_borderColorDark: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure refresh; safecall;
    function  Get_rows: IHTMLElementCollection; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    procedure Set_dataPageSize(p: Integer); safecall;
    function  Get_dataPageSize: Integer; safecall;
    procedure nextPage; safecall;
    procedure previousPage; safecall;
    function  Get_tHead: IHTMLTableSection; safecall;
    function  Get_tFoot: IHTMLTableSection; safecall;
    function  Get_tBodies: IHTMLElementCollection; safecall;
    function  Get_caption: IHTMLTableCaption; safecall;
    function  createTHead: IDispatch; safecall;
    procedure deleteTHead; safecall;
    function  createTFoot: IDispatch; safecall;
    procedure deleteTFoot; safecall;
    function  createCaption: IHTMLTableCaption; safecall;
    procedure deleteCaption; safecall;
    function  insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    function  Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function  Get_onreadystatechange: OleVariant; safecall;
    property cols: Integer read Get_cols write Set_cols;
    property border: OleVariant read Get_border write Set_border;
    property frame: WideString read Get_frame write Set_frame;
    property rules: WideString read Get_rules write Set_rules;
    property cellSpacing: OleVariant read Get_cellSpacing write Set_cellSpacing;
    property cellPadding: OleVariant read Get_cellPadding write Set_cellPadding;
    property background: WideString read Get_background write Set_background;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property align: WideString read Get_align write Set_align;
    property rows: IHTMLElementCollection read Get_rows;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property dataPageSize: Integer read Get_dataPageSize write Set_dataPageSize;
    property tHead: IHTMLTableSection read Get_tHead;
    property tFoot: IHTMLTableSection read Get_tFoot;
    property tBodies: IHTMLElementCollection read Get_tBodies;
    property caption: IHTMLTableCaption read Get_caption;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableDisp = dispinterface
    ['{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}']
    property cols: Integer dispid 1001;
    property border: OleVariant dispid 1002;
    property frame: WideString dispid 1004;
    property rules: WideString dispid 1003;
    property cellSpacing: OleVariant dispid 1005;
    property cellPadding: OleVariant dispid 1006;
    property background: WideString dispid -2147413111;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property align: WideString dispid -2147418039;
    procedure refresh; dispid 1015;
    property rows: IHTMLElementCollection readonly dispid 1016;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property dataPageSize: Integer dispid 1017;
    procedure nextPage; dispid 1018;
    procedure previousPage; dispid 1019;
    property tHead: IHTMLTableSection readonly dispid 1020;
    property tFoot: IHTMLTableSection readonly dispid 1021;
    property tBodies: IHTMLElementCollection readonly dispid 1024;
    property caption: IHTMLTableCaption readonly dispid 1025;
    function  createTHead: IDispatch; dispid 1026;
    procedure deleteTHead; dispid 1027;
    function  createTFoot: IDispatch; dispid 1028;
    procedure deleteTFoot; dispid 1029;
    function  createCaption: IHTMLTableCaption; dispid 1030;
    procedure deleteCaption; dispid 1031;
    function  insertRow(index: Integer): IDispatch; dispid 1032;
    procedure deleteRow(index: Integer); dispid 1033;
    property readyState: WideString readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
  end;

// *********************************************************************//
// Interface: IHTMLTable2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable2 = interface(IDispatch)
    ['{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure firstPage; safecall;
    procedure lastPage; safecall;
    function  Get_cells: IHTMLElementCollection; safecall;
    function  moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; safecall;
    property cells: IHTMLElementCollection read Get_cells;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTable2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable2Disp = dispinterface
    ['{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure firstPage; dispid 1035;
    procedure lastPage; dispid 1036;
    property cells: IHTMLElementCollection readonly dispid 1037;
    function  moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1038;
  end;

// *********************************************************************//
// Interface: IHTMLTableCol
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol = interface(IDispatch)
    ['{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_span(p: Integer); safecall;
    function  Get_span: Integer; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function  Get_vAlign: WideString; safecall;
    property span: Integer read Get_span write Set_span;
    property width: OleVariant read Get_width write Set_width;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableColDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableColDisp = dispinterface
    ['{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}']
    property span: Integer dispid 1001;
    property width: OleVariant dispid -2147418107;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection2 = interface(IDispatch)
    ['{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function  moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection2Disp = dispinterface
    ['{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function  moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow = interface(IDispatch)
    ['{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function  Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function  Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function  Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function  Get_borderColorDark: OleVariant; safecall;
    function  Get_rowIndex: Integer; safecall;
    function  Get_sectionRowIndex: Integer; safecall;
    function  Get_cells: IHTMLElementCollection; safecall;
    function  insertCell(index: Integer): IDispatch; safecall;
    procedure deleteCell(index: Integer); safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property rowIndex: Integer read Get_rowIndex;
    property sectionRowIndex: Integer read Get_sectionRowIndex;
    property cells: IHTMLElementCollection read Get_cells;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowDisp = dispinterface
    ['{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property rowIndex: Integer readonly dispid 1000;
    property sectionRowIndex: Integer readonly dispid 1001;
    property cells: IHTMLElementCollection readonly dispid 1002;
    function  insertCell(index: Integer): IDispatch; dispid 1003;
    procedure deleteCell(index: Integer); dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow2 = interface(IDispatch)
    ['{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRow2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow2Disp = dispinterface
    ['{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLTableRowMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowMetrics = interface(IDispatch)
    ['{3050F413-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_clientHeight: Integer; safecall;
    function  Get_clientWidth: Integer; safecall;
    function  Get_clientTop: Integer; safecall;
    function  Get_clientLeft: Integer; safecall;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRowMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowMetricsDisp = dispinterface
    ['{3050F413-98B5-11CF-BB82-00AA00BDCE0B}']
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
  end;

// *********************************************************************//
// Interface: IHTMLTableCell
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell = interface(IDispatch)
    ['{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_rowSpan(p: Integer); safecall;
    function  Get_rowSpan: Integer; safecall;
    procedure Set_colSpan(p: Integer); safecall;
    function  Get_colSpan: Integer; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function  Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function  Get_bgColor: OleVariant; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function  Get_noWrap: WordBool; safecall;
    procedure Set_background(const p: WideString); safecall;
    function  Get_background: WideString; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function  Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function  Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function  Get_borderColorDark: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    function  Get_cellIndex: Integer; safecall;
    property rowSpan: Integer read Get_rowSpan write Set_rowSpan;
    property colSpan: Integer read Get_colSpan write Set_colSpan;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
    property background: WideString read Get_background write Set_background;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property cellIndex: Integer read Get_cellIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCellDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCellDisp = dispinterface
    ['{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}']
    property rowSpan: Integer dispid 2001;
    property colSpan: Integer dispid 2002;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property noWrap: WordBool dispid -2147413107;
    property background: WideString dispid -2147413111;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property cellIndex: Integer readonly dispid 2003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTable
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F532-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTable = dispinterface
    ['{3050F532-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property cols: Integer dispid 1001;
    property border: OleVariant dispid 1002;
    property frame: WideString dispid 1004;
    property rules: WideString dispid 1003;
    property cellSpacing: OleVariant dispid 1005;
    property cellPadding: OleVariant dispid 1006;
    property background: WideString dispid -2147413111;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property align: WideString dispid -2147418039;
    procedure refresh; dispid 1015;
    property rows: IHTMLElementCollection readonly dispid 1016;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property dataPageSize: Integer dispid 1017;
    procedure nextPage; dispid 1018;
    procedure previousPage; dispid 1019;
    property tHead: IHTMLTableSection readonly dispid 1020;
    property tFoot: IHTMLTableSection readonly dispid 1021;
    property tBodies: IHTMLElementCollection readonly dispid 1024;
    property caption: IHTMLTableCaption readonly dispid 1025;
    function  createTHead: IDispatch; dispid 1026;
    procedure deleteTHead; dispid 1027;
    function  createTFoot: IDispatch; dispid 1028;
    procedure deleteTFoot; dispid 1029;
    function  createCaption: IHTMLTableCaption; dispid 1030;
    procedure deleteCaption; dispid 1031;
    function  insertRow(index: Integer): IDispatch; dispid 1032;
    procedure deleteRow(index: Integer); dispid 1033;
    procedure firstPage; dispid 1035;
    procedure lastPage; dispid 1036;
    property cells: IHTMLElementCollection readonly dispid 1037;
    function  moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1038;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCol
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F533-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCol = dispinterface
    ['{3050F533-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property span: Integer dispid 1001;
    property width: OleVariant dispid -2147418107;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableSection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F534-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableSection = dispinterface
    ['{3050F534-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property rows: IHTMLElementCollection readonly dispid 1000;
    function  insertRow(index: Integer): IDispatch; dispid 1001;
    procedure deleteRow(index: Integer); dispid 1002;
    function  moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableRow
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F535-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableRow = dispinterface
    ['{3050F535-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property rowIndex: Integer readonly dispid 1000;
    property sectionRowIndex: Integer readonly dispid 1001;
    property cells: IHTMLElementCollection readonly dispid 1002;
    function  insertCell(index: Integer): IDispatch; dispid 1003;
    procedure deleteCell(index: Integer); dispid 1004;
    property height: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCell
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F536-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCell = dispinterface
    ['{3050F536-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property rowSpan: Integer dispid 2001;
    property colSpan: Integer dispid 2002;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property noWrap: WordBool dispid -2147413107;
    property background: WideString dispid -2147413111;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property cellIndex: Integer readonly dispid 2003;
  end;

// *********************************************************************//
// DispIntf:  HTMLScriptEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F621-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLScriptEvents2 = dispinterface
    ['{3050F621-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLScriptEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLScriptEvents = dispinterface
    ['{3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F28B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement = interface(IDispatch)
    ['{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_htmlFor(const p: WideString); safecall;
    function  Get_htmlFor: WideString; safecall;
    procedure Set_event(const p: WideString); safecall;
    function  Get_event: WideString; safecall;
    procedure Set_text(const p: WideString); safecall;
    function  Get_text: WideString; safecall;
    procedure Set_defer(p: WordBool); safecall;
    function  Get_defer: WordBool; safecall;
    function  Get_readyState: WideString; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property htmlFor: WideString read Get_htmlFor write Set_htmlFor;
    property event: WideString read Get_event write Set_event;
    property text: WideString read Get_text write Set_text;
    property defer: WordBool read Get_defer write Set_defer;
    property readyState: WideString read Get_readyState;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F28B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElementDisp = dispinterface
    ['{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1001;
    property htmlFor: WideString dispid 1004;
    property event: WideString dispid 1005;
    property text: WideString dispid 1006;
    property defer: WordBool dispid 1007;
    property readyState: WideString readonly dispid -2147412996;
    property onerror: OleVariant dispid -2147412083;
    property type_: WideString dispid 1009;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLScriptElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F530-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLScriptElement = dispinterface
    ['{3050F530-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property src: WideString dispid 1001;
    property htmlFor: WideString dispid 1004;
    property event: WideString dispid 1005;
    property text: WideString dispid 1006;
    property defer: WordBool dispid 1007;
    property onerror: OleVariant dispid -2147412083;
    property type_: WideString dispid 1009;
  end;

// *********************************************************************//
// Interface: IHTMLNoShowElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNoShowElement = interface(IDispatch)
    ['{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLNoShowElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNoShowElementDisp = dispinterface
    ['{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNoShowElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F528-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNoShowElement = dispinterface
    ['{3050F528-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// DispIntf:  HTMLObjectElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F620-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLObjectElementEvents2 = dispinterface
    ['{3050F620-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    function  onerror(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418093;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -2147418092;
  end;

// *********************************************************************//
// DispIntf:  HTMLObjectElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLObjectElementEvents = dispinterface
    ['{3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    function  onerror: WordBool; dispid -2147418093;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -2147418092;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F24F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement = interface(IDispatch)
    ['{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_object_: IDispatch; safecall;
    function  Get_classid: WideString; safecall;
    function  Get_data: WideString; safecall;
    procedure Set_recordset(const p: IDispatch); safecall;
    function  Get_recordset: IDispatch; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_codeBase(const p: WideString); safecall;
    function  Get_codeBase: WideString; safecall;
    procedure Set_codeType(const p: WideString); safecall;
    function  Get_codeType: WideString; safecall;
    procedure Set_code(const p: WideString); safecall;
    function  Get_code: WideString; safecall;
    function  Get_BaseHref: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    function  Get_form: IHTMLFormElement; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    function  Get_readyState: Integer; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function  Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    procedure Set_altHtml(const p: WideString); safecall;
    function  Get_altHtml: WideString; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function  Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function  Get_hspace: Integer; safecall;
    property object_: IDispatch read Get_object_;
    property classid: WideString read Get_classid;
    property data: WideString read Get_data;
    property recordset: IDispatch read Get_recordset write Set_recordset;
    property align: WideString read Get_align write Set_align;
    property name: WideString read Get_name write Set_name;
    property codeBase: WideString read Get_codeBase write Set_codeBase;
    property codeType: WideString read Get_codeType write Set_codeType;
    property code: WideString read Get_code write Set_code;
    property BaseHref: WideString read Get_BaseHref;
    property type_: WideString read Get_type_ write Set_type_;
    property form: IHTMLFormElement read Get_form;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property readyState: Integer read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property altHtml: WideString read Get_altHtml write Set_altHtml;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F24F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElementDisp = dispinterface
    ['{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}']
    property object_: IDispatch readonly dispid -2147415111;
    property classid: WideString readonly dispid -2147415110;
    property data: WideString readonly dispid -2147415109;
    property recordset: IDispatch dispid -2147415107;
    property align: WideString dispid -2147418039;
    property name: WideString dispid -2147418112;
    property codeBase: WideString dispid -2147415106;
    property codeType: WideString dispid -2147415105;
    property code: WideString dispid -2147415104;
    property BaseHref: WideString readonly dispid -2147418110;
    property type_: WideString dispid -2147415103;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property readyState: Integer readonly dispid -2147415102;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onerror: OleVariant dispid -2147412083;
    property altHtml: WideString dispid -2147415101;
    property vspace: Integer dispid -2147415100;
    property hspace: Integer dispid -2147415099;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement2 = interface(IDispatch)
    ['{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function  namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; safecall;
    procedure Set_classid(const p: WideString); safecall;
    function  Get_classid: WideString; safecall;
    procedure Set_data(const p: WideString); safecall;
    function  Get_data: WideString; safecall;
    property classid: WideString read Get_classid write Set_classid;
    property data: WideString read Get_data write Set_data;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement2Disp = dispinterface
    ['{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function  namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid -2147415098;
    property classid: WideString dispid -2147415110;
    property data: WideString dispid -2147415109;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLObjectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F529-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLObjectElement = dispinterface
    ['{3050F529-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property object_: IDispatch readonly dispid -2147415111;
    property recordset: IDispatch dispid -2147415107;
    property align: WideString dispid -2147418039;
    property name: WideString dispid -2147418112;
    property codeBase: WideString dispid -2147415106;
    property codeType: WideString dispid -2147415105;
    property code: WideString dispid -2147415104;
    property BaseHref: WideString readonly dispid -2147418110;
    property type_: WideString dispid -2147415103;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property onerror: OleVariant dispid -2147412083;
    property altHtml: WideString dispid -2147415101;
    property vspace: Integer dispid -2147415100;
    property hspace: Integer dispid -2147415099;
    function  namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid -2147415098;
    property classid: WideString dispid -2147415110;
    property data: WideString dispid -2147415109;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F311-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase = interface(IDispatch)
    ['{3050F311-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function  Get_border: OleVariant; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function  Get_frameBorder: WideString; safecall;
    procedure Set_frameSpacing(p: OleVariant); safecall;
    function  Get_frameSpacing: OleVariant; safecall;
    procedure Set_marginWidth(p: OleVariant); safecall;
    function  Get_marginWidth: OleVariant; safecall;
    procedure Set_marginHeight(p: OleVariant); safecall;
    function  Get_marginHeight: OleVariant; safecall;
    procedure Set_noResize(p: WordBool); safecall;
    function  Get_noResize: WordBool; safecall;
    procedure Set_scrolling(const p: WideString); safecall;
    function  Get_scrolling: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property name: WideString read Get_name write Set_name;
    property border: OleVariant read Get_border write Set_border;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
    property frameSpacing: OleVariant read Get_frameSpacing write Set_frameSpacing;
    property marginWidth: OleVariant read Get_marginWidth write Set_marginWidth;
    property marginHeight: OleVariant read Get_marginHeight write Set_marginHeight;
    property noResize: WordBool read Get_noResize write Set_noResize;
    property scrolling: WideString read Get_scrolling write Set_scrolling;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F311-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBaseDisp = dispinterface
    ['{3050F311-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameBase
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F541-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameBase = dispinterface
    ['{3050F541-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
  end;

// *********************************************************************//
// Interface: IHTMLFrameElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F313-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement = interface(IDispatch)
    ['{3050F313-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_borderColor(p: OleVariant); safecall;
    function  Get_borderColor: OleVariant; safecall;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F313-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElementDisp = dispinterface
    ['{3050F313-98B5-11CF-BB82-00AA00BDCE0B}']
    property borderColor: OleVariant dispid -2147414111;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F513-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameElement = dispinterface
    ['{3050F513-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
    property borderColor: OleVariant dispid -2147414111;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F315-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement = interface(IDispatch)
    ['{3050F315-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_vspace(p: Integer); safecall;
    function  Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function  Get_hspace: Integer; safecall;
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F315-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElementDisp = dispinterface
    ['{3050F315-98B5-11CF-BB82-00AA00BDCE0B}']
    property vspace: Integer dispid -2147414111;
    property hspace: Integer dispid -2147414110;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement2 = interface(IDispatch)
    ['{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function  Get_height: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function  Get_width: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
    property width: OleVariant read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement2Disp = dispinterface
    ['{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid -2147418106;
    property width: OleVariant dispid -2147418107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLIFrame
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLIFrame = dispinterface
    ['{3050F51B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
    property vspace: Integer dispid -2147414111;
    property hspace: Integer dispid -2147414110;
    property align: WideString dispid -2147418039;
    property height: OleVariant dispid -2147418106;
    property width: OleVariant dispid -2147418107;
  end;

// *********************************************************************//
// Interface: IHTMLDivPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F212-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivPosition = interface(IDispatch)
    ['{3050F212-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDivPositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F212-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivPositionDisp = dispinterface
    ['{3050F212-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFieldSetElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement = interface(IDispatch)
    ['{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFieldSetElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElementDisp = dispinterface
    ['{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLLegendElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement = interface(IDispatch)
    ['{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLegendElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElementDisp = dispinterface
    ['{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDivPosition
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDivPosition = dispinterface
    ['{3050F50F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFieldSetElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F545-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFieldSetElement = dispinterface
    ['{3050F545-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLegendElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F546-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLegendElement = dispinterface
    ['{3050F546-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLSpanFlow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanFlow = interface(IDispatch)
    ['{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function  Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSpanFlowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanFlowDisp = dispinterface
    ['{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSpanFlow
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F544-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSpanFlow = dispinterface
    ['{3050F544-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F319-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement = interface(IDispatch)
    ['{3050F319-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_rows(const p: WideString); safecall;
    function  Get_rows: WideString; safecall;
    procedure Set_cols(const p: WideString); safecall;
    function  Get_cols: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function  Get_border: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function  Get_borderColor: OleVariant; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function  Get_frameBorder: WideString; safecall;
    procedure Set_frameSpacing(p: OleVariant); safecall;
    function  Get_frameSpacing: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function  Get_name: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function  Get_onunload: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function  Get_onbeforeunload: OleVariant; safecall;
    property rows: WideString read Get_rows write Set_rows;
    property cols: WideString read Get_cols write Set_cols;
    property border: OleVariant read Get_border write Set_border;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
    property frameSpacing: OleVariant read Get_frameSpacing write Set_frameSpacing;
    property name: WideString read Get_name write Set_name;
    property onload: OleVariant read Get_onload write Set_onload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F319-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElementDisp = dispinterface
    ['{3050F319-98B5-11CF-BB82-00AA00BDCE0B}']
    property rows: WideString dispid 1000;
    property cols: WideString dispid 1001;
    property border: OleVariant dispid 1002;
    property borderColor: OleVariant dispid 1003;
    property frameBorder: WideString dispid 1004;
    property frameSpacing: OleVariant dispid 1005;
    property name: WideString dispid -2147418112;
    property onload: OleVariant dispid -2147412080;
    property onunload: OleVariant dispid -2147412079;
    property onbeforeunload: OleVariant dispid -2147412073;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement2 = interface(IDispatch)
    ['{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function  Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function  Get_onafterprint: OleVariant; safecall;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement2Disp = dispinterface
    ['{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}']
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameSetSite
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F514-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameSetSite = dispinterface
    ['{3050F514-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property rows: WideString dispid 1000;
    property cols: WideString dispid 1001;
    property border: OleVariant dispid 1002;
    property borderColor: OleVariant dispid 1003;
    property frameBorder: WideString dispid 1004;
    property frameSpacing: OleVariant dispid 1005;
    property name: WideString dispid -2147418112;
    property onload: OleVariant dispid -2147412080;
    property onunload: OleVariant dispid -2147412079;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
  end;

// *********************************************************************//
// Interface: IHTMLBGsound
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F369-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBGsound = interface(IDispatch)
    ['{3050F369-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function  Get_src: WideString; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function  Get_loop: OleVariant; safecall;
    procedure Set_volume(p: OleVariant); safecall;
    function  Get_volume: OleVariant; safecall;
    procedure Set_balance(p: OleVariant); safecall;
    function  Get_balance: OleVariant; safecall;
    property src: WideString read Get_src write Set_src;
    property loop: OleVariant read Get_loop write Set_loop;
    property volume: OleVariant read Get_volume write Set_volume;
    property balance: OleVariant read Get_balance write Set_balance;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBGsoundDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F369-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBGsoundDisp = dispinterface
    ['{3050F369-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1001;
    property loop: OleVariant dispid 1002;
    property volume: OleVariant dispid 1003;
    property balance: OleVariant dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBGsound
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBGsound = dispinterface
    ['{3050F53C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property src: WideString dispid 1001;
    property loop: OleVariant dispid 1002;
    property volume: OleVariant dispid 1003;
    property balance: OleVariant dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLFontNamesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F376-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontNamesCollection = interface(IDispatch)
    ['{3050F376-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  item(index: Integer): WideString; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontNamesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F376-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontNamesCollectionDisp = dispinterface
    ['{3050F376-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid -4;
    function  item(index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLFontSizesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F377-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontSizesCollection = interface(IDispatch)
    ['{3050F377-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_length: Integer; safecall;
    function  Get__newEnum: IUnknown; safecall;
    function  Get_forFont: WideString; safecall;
    function  item(index: Integer): Integer; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
    property forFont: WideString read Get_forFont;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontSizesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F377-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontSizesCollectionDisp = dispinterface
    ['{3050F377-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1502;
    property _newEnum: IUnknown readonly dispid -4;
    property forFont: WideString readonly dispid 1503;
    function  item(index: Integer): Integer; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLOptionsHolder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F378-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionsHolder = interface(IDispatch)
    ['{3050F378-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_document: IHTMLDocument2; safecall;
    function  Get_fonts: IHTMLFontNamesCollection; safecall;
    procedure Set_execArg(p: OleVariant); safecall;
    function  Get_execArg: OleVariant; safecall;
    procedure Set_errorLine(p: Integer); safecall;
    function  Get_errorLine: Integer; safecall;
    procedure Set_errorCharacter(p: Integer); safecall;
    function  Get_errorCharacter: Integer; safecall;
    procedure Set_errorCode(p: Integer); safecall;
    function  Get_errorCode: Integer; safecall;
    procedure Set_errorMessage(const p: WideString); safecall;
    function  Get_errorMessage: WideString; safecall;
    procedure Set_errorDebug(p: WordBool); safecall;
    function  Get_errorDebug: WordBool; safecall;
    function  Get_unsecuredWindowOfDocument: IHTMLWindow2; safecall;
    procedure Set_findText(const p: WideString); safecall;
    function  Get_findText: WideString; safecall;
    procedure Set_anythingAfterFrameset(p: WordBool); safecall;
    function  Get_anythingAfterFrameset: WordBool; safecall;
    function  sizes(const fontName: WideString): IHTMLFontSizesCollection; safecall;
    function  openfiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                          title: OleVariant): WideString; safecall;
    function  savefiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                          title: OleVariant): WideString; safecall;
    function  choosecolordlg(initColor: OleVariant): Integer; safecall;
    procedure showSecurityInfo; safecall;
    function  isApartmentModel(const object_: IHTMLObjectElement): WordBool; safecall;
    function  getCharset(const fontName: WideString): Integer; safecall;
    function  Get_secureConnectionInfo: WideString; safecall;
    property document: IHTMLDocument2 read Get_document;
    property fonts: IHTMLFontNamesCollection read Get_fonts;
    property execArg: OleVariant read Get_execArg write Set_execArg;
    property errorLine: Integer read Get_errorLine write Set_errorLine;
    property errorCharacter: Integer read Get_errorCharacter write Set_errorCharacter;
    property errorCode: Integer read Get_errorCode write Set_errorCode;
    property errorMessage: WideString read Get_errorMessage write Set_errorMessage;
    property errorDebug: WordBool read Get_errorDebug write Set_errorDebug;
    property unsecuredWindowOfDocument: IHTMLWindow2 read Get_unsecuredWindowOfDocument;
    property findText: WideString read Get_findText write Set_findText;
    property anythingAfterFrameset: WordBool read Get_anythingAfterFrameset write Set_anythingAfterFrameset;
    property secureConnectionInfo: WideString read Get_secureConnectionInfo;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionsHolderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F378-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionsHolderDisp = dispinterface
    ['{3050F378-98B5-11CF-BB82-00AA00BDCE0B}']
    property document: IHTMLDocument2 readonly dispid 1503;
    property fonts: IHTMLFontNamesCollection readonly dispid 1504;
    property execArg: OleVariant dispid 1505;
    property errorLine: Integer dispid 1506;
    property errorCharacter: Integer dispid 1507;
    property errorCode: Integer dispid 1508;
    property errorMessage: WideString dispid 1509;
    property errorDebug: WordBool dispid 1510;
    property unsecuredWindowOfDocument: IHTMLWindow2 readonly dispid 1511;
    property findText: WideString dispid 1512;
    property anythingAfterFrameset: WordBool dispid 1513;
    function  sizes(const fontName: WideString): IHTMLFontSizesCollection; dispid 1514;
    function  openfiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                          title: OleVariant): WideString; dispid 1515;
    function  savefiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                          title: OleVariant): WideString; dispid 1516;
    function  choosecolordlg(initColor: OleVariant): Integer; dispid 1517;
    procedure showSecurityInfo; dispid 1518;
    function  isApartmentModel(const object_: IHTMLObjectElement): WordBool; dispid 1519;
    function  getCharset(const fontName: WideString): Integer; dispid 1520;
    property secureConnectionInfo: WideString readonly dispid 1521;
  end;

// *********************************************************************//
// DispIntf:  HTMLStyleElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F615-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLStyleElementEvents2 = dispinterface
    ['{3050F615-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function  onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function  ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function  onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function  onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function  ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function  onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function  onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function  onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function  ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function  ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function  ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function  ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function  onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function  oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function  onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function  oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function  onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function  onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function  oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLStyleElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLStyleElementEvents = dispinterface
    ['{3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}']
    function  onhelp: WordBool; dispid -2147418102;
    function  onclick: WordBool; dispid -600;
    function  ondblclick: WordBool; dispid -601;
    function  onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function  onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function  ondragstart: WordBool; dispid -2147418101;
    function  onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function  onerrorupdate: WordBool; dispid -2147418099;
    function  onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function  ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function  ondragenter: WordBool; dispid -2147418090;
    function  ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function  ondrop: WordBool; dispid -2147418087;
    function  onbeforecut: WordBool; dispid -2147418083;
    function  oncut: WordBool; dispid -2147418086;
    function  onbeforecopy: WordBool; dispid -2147418082;
    function  oncopy: WordBool; dispid -2147418085;
    function  onbeforepaste: WordBool; dispid -2147418081;
    function  onpaste: WordBool; dispid -2147418084;
    function  oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F375-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElement = interface(IDispatch)
    ['{3050F375-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function  Get_type_: WideString; safecall;
    function  Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function  Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function  Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function  Get_onerror: OleVariant; safecall;
    function  Get_styleSheet: IHTMLStyleSheet; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function  Get_disabled: WordBool; safecall;
    procedure Set_media(const p: WideString); safecall;
    function  Get_media: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F375-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElementDisp = dispinterface
    ['{3050F375-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1002;
    property readyState: WideString readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1004;
    property disabled: WordBool dispid -2147418036;
    property media: WideString dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F511-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleElement = dispinterface
    ['{3050F511-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function  componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function  getClientRects: IHTMLRectCollection; dispid -2147417068;
    function  getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function  getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function  removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function  attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function  createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function  insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function  applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function  getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function  replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function  addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid -2147417032;
    function  removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function  getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function  hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function  insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function  removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function  replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function  cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function  removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function  swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function  replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function  appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property type_: WideString dispid 1002;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1004;
    property disabled: WordBool dispid -2147418036;
    property media: WideString dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLStyleFontFace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFace = interface(IDispatch)
    ['{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontsrc(const p: WideString); safecall;
    function  Get_fontsrc: WideString; safecall;
    property fontsrc: WideString read Get_fontsrc write Set_fontsrc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleFontFaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFaceDisp = dispinterface
    ['{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontsrc: WideString dispid -2147413015;
  end;

// *********************************************************************//
// Interface: ICSSFilterSite
// Flags:     (0)
// GUID:      {3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICSSFilterSite = interface(IUnknown)
    ['{3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function  GetElement(out element: IHTMLElement): HResult; stdcall;
    function  FireOnFilterChangeEvent: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupPointer
// Flags:     (0)
// GUID:      {3050F49F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupPointer = interface(IUnknown)
    ['{3050F49F-98B5-11CF-BB82-00AA00BDCE0B}']
    function  OwningDoc(out ppDoc: IHTMLDocument2): HResult; stdcall;
    function  Gravity(out pGravity: _POINTER_GRAVITY): HResult; stdcall;
    function  SetGravity(Gravity: _POINTER_GRAVITY): HResult; stdcall;
    function  Cling(out pfCling: Integer): HResult; stdcall;
    function  SetCling(fCLing: Integer): HResult; stdcall;
    function  Unposition: HResult; stdcall;
    function  IsPositioned(out pfPositioned: Integer): HResult; stdcall;
    function  GetContainer(out ppContainer: IMarkupContainer): HResult; stdcall;
    function  MoveAdjacentToElement(const pElement: IHTMLElement; eAdj: _ELEMENT_ADJACENCY): HResult; stdcall;
    function  MoveToPointer(const pPointer: IMarkupPointer): HResult; stdcall;
    function  MoveToContainer(const pContainer: IMarkupContainer; fAtStart: Integer): HResult; stdcall;
    function  left(fMove: Integer; out pContext: _MARKUP_CONTEXT_TYPE; out ppElement: IHTMLElement; 
                   var pcch: Integer; out pchText: Word): HResult; stdcall;
    function  right(fMove: Integer; out pContext: _MARKUP_CONTEXT_TYPE; 
                    out ppElement: IHTMLElement; var pcch: Integer; out pchText: Word): HResult; stdcall;
    function  CurrentScope(out ppElemCurrent: IHTMLElement): HResult; stdcall;
    function  IsLeftOf(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function  IsLeftOfOrEqualTo(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function  IsRightOf(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function  IsRightOfOrEqualTo(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function  IsEqualTo(const pPointerThat: IMarkupPointer; out pfAreEqual: Integer): HResult; stdcall;
    function  MoveUnit(muAction: _MOVEUNIT_ACTION): HResult; stdcall;
    function  findText(var pchFindText: Word; dwFlags: LongWord; const pIEndMatch: IMarkupPointer; 
                       const pIEndSearch: IMarkupPointer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupContainer
// Flags:     (0)
// GUID:      {3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupContainer = interface(IUnknown)
    ['{3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}']
    function  OwningDoc(out ppDoc: IHTMLDocument2): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IActiveIMMApp
// Flags:     (0)
// GUID:      {08C0E040-62D1-11D1-9326-0060B067B86E}
// *********************************************************************//
  IActiveIMMApp = interface(IUnknown)
    ['{08C0E040-62D1-11D1-9326-0060B067B86E}']
    function  AssociateContext(var hWnd: TGUID; hIME: LongWord; out phPrev: LongWord): HResult; stdcall;
    function  ConfigureIMEA(var hKL: Pointer; var hWnd: TGUID; dwMode: LongWord; var pData: TGUID): HResult; stdcall;
    function  ConfigureIMEW(var hKL: Pointer; var hWnd: TGUID; dwMode: LongWord; var pData: TGUID): HResult; stdcall;
    function  CreateContext(out phIMC: LongWord): HResult; stdcall;
    function  DestroyContext(hIME: LongWord): HResult; stdcall;
    function  EnumRegisterWordA(var hKL: Pointer; szReading: PChar; dwStyle: LongWord; 
                                szRegister: PChar; var pData: Pointer; out pEnum: IEnumRegisterWordA): HResult; stdcall;
    function  EnumRegisterWordW(var hKL: Pointer; szReading: PWideChar; dwStyle: LongWord; 
                                szRegister: PWideChar; var pData: Pointer; 
                                out pEnum: IEnumRegisterWordW): HResult; stdcall;
    function  EscapeA(var hKL: Pointer; hIMC: LongWord; uEscape: SYSUINT; var pData: Pointer; 
                      out plResult: Integer): HResult; stdcall;
    function  EscapeW(var hKL: Pointer; hIMC: LongWord; uEscape: SYSUINT; var pData: Pointer; 
                      out plResult: Integer): HResult; stdcall;
    function  GetCandidateListA(hIMC: LongWord; dwIndex: LongWord; uBufLen: SYSUINT; 
                                out pCandList: TGUID; out puCopied: SYSUINT): HResult; stdcall;
    function  GetCandidateListW(hIMC: LongWord; dwIndex: LongWord; uBufLen: SYSUINT; 
                                out pCandList: TGUID; out puCopied: SYSUINT): HResult; stdcall;
    function  GetCandidateListCountA(hIMC: LongWord; out pdwListSize: LongWord; 
                                     out pdwBufLen: LongWord): HResult; stdcall;
    function  GetCandidateListCountW(hIMC: LongWord; out pdwListSize: LongWord; 
                                     out pdwBufLen: LongWord): HResult; stdcall;
    function  GetCandidateWindow(hIMC: LongWord; dwIndex: LongWord; out pCandidate: TGUID): HResult; stdcall;
    function  GetCompositionFontA(hIMC: LongWord; out plf: TGUID): HResult; stdcall;
    function  GetCompositionFontW(hIMC: LongWord; out plf: TGUID): HResult; stdcall;
    function  GetCompositionStringA(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; 
                                    out plCopied: Integer; out pBuf: Pointer): HResult; stdcall;
    function  GetCompositionStringW(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; 
                                    out plCopied: Integer; out pBuf: Pointer): HResult; stdcall;
    function  GetCompositionWindow(hIMC: LongWord; out pCompForm: TGUID): HResult; stdcall;
    function  GetContext(var hWnd: TGUID; out phIMC: LongWord): HResult; stdcall;
    function  GetConversionListA(var hKL: Pointer; hIMC: LongWord; pSrc: PChar; uBufLen: SYSUINT; 
                                 uFlag: SYSUINT; out pDst: TGUID; out puCopied: SYSUINT): HResult; stdcall;
    function  GetConversionListW(var hKL: Pointer; hIMC: LongWord; pSrc: PWideChar; 
                                 uBufLen: SYSUINT; uFlag: SYSUINT; out pDst: TGUID; 
                                 out puCopied: SYSUINT): HResult; stdcall;
    function  GetConversionStatus(hIMC: LongWord; out pfdwConversion: LongWord; 
                                  out pfdwSentence: LongWord): HResult; stdcall;
    function  GetDefaultIMEWnd(var hWnd: TGUID; out phDefWnd: wireHWND): HResult; stdcall;
    function  GetDescriptionA(var hKL: Pointer; uBufLen: SYSUINT; szDescription: PChar; 
                              out puCopied: SYSUINT): HResult; stdcall;
    function  GetDescriptionW(var hKL: Pointer; uBufLen: SYSUINT; szDescription: PWideChar; 
                              out puCopied: SYSUINT): HResult; stdcall;
    function  GetGuideLineA(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; pBuf: PChar; 
                            out pdwResult: LongWord): HResult; stdcall;
    function  GetGuideLineW(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; pBuf: PWideChar; 
                            out pdwResult: LongWord): HResult; stdcall;
    function  GetIMEFileNameA(var hKL: Pointer; uBufLen: SYSUINT; szFileName: PChar; 
                              out puCopied: SYSUINT): HResult; stdcall;
    function  GetIMEFileNameW(var hKL: Pointer; uBufLen: SYSUINT; szFileName: PWideChar; 
                              out puCopied: SYSUINT): HResult; stdcall;
    function  GetOpenStatus(hIMC: LongWord): HResult; stdcall;
    function  GetProperty(var hKL: Pointer; fdwIndex: LongWord; out pdwProperty: LongWord): HResult; stdcall;
    function  GetRegisterWordStyleA(var hKL: Pointer; nItem: SYSUINT; out pStyleBuf: TGUID; 
                                    out puCopied: SYSUINT): HResult; stdcall;
    function  GetRegisterWordStyleW(var hKL: Pointer; nItem: SYSUINT; out pStyleBuf: TGUID; 
                                    out puCopied: SYSUINT): HResult; stdcall;
    function  GetStatusWindowPos(hIMC: LongWord; out pptPos: TGUID): HResult; stdcall;
    function  GetVirtualKey(var hWnd: TGUID; out puVirtualKey: SYSUINT): HResult; stdcall;
    function  InstallIMEA(szIMEFileName: PChar; szLayoutText: PChar; out phKL: Pointer): HResult; stdcall;
    function  InstallIMEW(szIMEFileName: PWideChar; szLayoutText: PWideChar; out phKL: Pointer): HResult; stdcall;
    function  IsIME(var hKL: Pointer): HResult; stdcall;
    function  IsUIMessageA(var hWndIME: TGUID; msg: SYSUINT; wParam: LongWord; lParam: Integer): HResult; stdcall;
    function  IsUIMessageW(var hWndIME: TGUID; msg: SYSUINT; wParam: LongWord; lParam: Integer): HResult; stdcall;
    function  NotifyIME(hIMC: LongWord; dwAction: LongWord; dwIndex: LongWord; dwValue: LongWord): HResult; stdcall;
    function  RegisterWordA(var hKL: Pointer; szReading: PChar; dwStyle: LongWord; szRegister: PChar): HResult; stdcall;
    function  RegisterWordW(var hKL: Pointer; szReading: PWideChar; dwStyle: LongWord; 
                            szRegister: PWideChar): HResult; stdcall;
    function  ReleaseContext(var hWnd: TGUID; hIMC: LongWord): HResult; stdcall;
    function  SetCandidateWindow(hIMC: LongWord; var pCandidate: TGUID): HResult; stdcall;
    function  SetCompositionFontA(hIMC: LongWord; var plf: TGUID): HResult; stdcall;
    function  SetCompositionFontW(hIMC: LongWord; var plf: TGUID): HResult; stdcall;
    function  SetCompositionStringA(hIMC: LongWord; dwIndex: LongWord; var pComp: Pointer; 
                                    dwCompLen: LongWord; var pRead: Pointer; dwReadLen: LongWord): HResult; stdcall;
    function  SetCompositionStringW(hIMC: LongWord; dwIndex: LongWord; var pComp: Pointer; 
                                    dwCompLen: LongWord; var pRead: Pointer; dwReadLen: LongWord): HResult; stdcall;
    function  SetCompositionWindow(hIMC: LongWord; var pCompForm: TGUID): HResult; stdcall;
    function  SetConversionStatus(hIMC: LongWord; fdwConversion: LongWord; fdwSentence: LongWord): HResult; stdcall;
    function  SetOpenStatus(hIMC: LongWord; fOpen: Integer): HResult; stdcall;
    function  SetStatusWindowPos(hIMC: LongWord; var pptPos: TGUID): HResult; stdcall;
    function  SimulateHotKey(var hWnd: TGUID; dwHotKeyID: LongWord): HResult; stdcall;
    function  UnregisterWordA(var hKL: Pointer; szReading: PChar; dwStyle: LongWord; 
                              szUnregister: PChar): HResult; stdcall;
    function  UnregisterWordW(var hKL: Pointer; szReading: PWideChar; dwStyle: LongWord; 
                              szUnregister: PWideChar): HResult; stdcall;
    function  Activate(fRestoreLayout: Integer): HResult; stdcall;
    function  Deactivate: HResult; stdcall;
    function  OnDefWindowProc(var hWnd: TGUID; msg: SYSUINT; wParam: LongWord; lParam: Integer; 
                              out plResult: Integer): HResult; stdcall;
    function  FilterClientWindows(var aaClassList: Word; uSize: SYSUINT): HResult; stdcall;
    function  GetCodePageA(var hKL: Pointer; out uCodePage: SYSUINT): HResult; stdcall;
    function  GetLangId(var hKL: Pointer; out plid: Word): HResult; stdcall;
    function  AssociateContextEx(var hWnd: TGUID; hIMC: LongWord; dwFlags: LongWord): HResult; stdcall;
    function  DisableIME(idThread: LongWord): HResult; stdcall;
    function  GetImeMenuItemsA(hIMC: LongWord; dwFlags: LongWord; dwType: LongWord; 
                               var pImeParentMenu: TGUID; out pImeMenu: TGUID; dwSize: LongWord; 
                               out pdwResult: LongWord): HResult; stdcall;
    function  GetImeMenuItemsW(hIMC: LongWord; dwFlags: LongWord; dwType: LongWord; 
                               var pImeParentMenu: TGUID; out pImeMenu: TGUID; dwSize: LongWord; 
                               out pdwResult: LongWord): HResult; stdcall;
    function  EnumInputContext(idThread: LongWord; out ppEnum: IEnumInputContext): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumRegisterWordA
// Flags:     (0)
// GUID:      {08C03412-F96B-11D0-A475-00AA006BCC59}
// *********************************************************************//
  IEnumRegisterWordA = interface(IUnknown)
    ['{08C03412-F96B-11D0-A475-00AA006BCC59}']
    function  Clone(out ppEnum: IEnumRegisterWordA): HResult; stdcall;
    function  Next(ulCount: LongWord; out rgRegisterWord: TGUID; out pcFetched: LongWord): HResult; stdcall;
    function  reset: HResult; stdcall;
    function  Skip(ulCount: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumRegisterWordW
// Flags:     (0)
// GUID:      {4955DD31-B159-11D0-8FCF-00AA006BCC59}
// *********************************************************************//
  IEnumRegisterWordW = interface(IUnknown)
    ['{4955DD31-B159-11D0-8FCF-00AA006BCC59}']
    function  Clone(out ppEnum: IEnumRegisterWordW): HResult; stdcall;
    function  Next(ulCount: LongWord; out rgRegisterWord: TGUID; out pcFetched: LongWord): HResult; stdcall;
    function  reset: HResult; stdcall;
    function  Skip(ulCount: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumInputContext
// Flags:     (0)
// GUID:      {09B5EAB0-F997-11D1-93D4-0060B067B86E}
// *********************************************************************//
  IEnumInputContext = interface(IUnknown)
    ['{09B5EAB0-F997-11D1-93D4-0060B067B86E}']
    function  Clone(out ppEnum: IEnumInputContext): HResult; stdcall;
    function  Next(ulCount: LongWord; out rgInputContext: LongWord; out pcFetched: LongWord): HResult; stdcall;
    function  reset: HResult; stdcall;
    function  Skip(ulCount: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ICSSFilter
// Flags:     (0)
// GUID:      {3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICSSFilter = interface(IUnknown)
    ['{3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function  SetSite(const pSink: ICSSFilterSite): HResult; stdcall;
    function  OnAmbientPropertyChange(dispid: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISecureUrlHost
// Flags:     (0)
// GUID:      {C81984C4-74C8-11D2-BAA9-00C04FC2040E}
// *********************************************************************//
  ISecureUrlHost = interface(IUnknown)
    ['{C81984C4-74C8-11D2-BAA9-00C04FC2040E}']
    function  ValidateSecureUrl(out pfAllow: Integer; var pchUrlInQuestion: Word; dwFlags: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupServices
// Flags:     (0)
// GUID:      {3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupServices = interface(IUnknown)
    ['{3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}']
    function  CreateMarkupPointer(out ppPointer: IMarkupPointer): HResult; stdcall;
    function  CreateMarkupContainer(out ppMarkupContainer: IMarkupContainer): HResult; stdcall;
    function  createElement(tagID: _ELEMENT_TAG_ID; var pchAttributes: Word; 
                            out ppElement: IHTMLElement): HResult; stdcall;
    function  CloneElement(const pElemCloneThis: IHTMLElement; out ppElementTheClone: IHTMLElement): HResult; stdcall;
    function  InsertElement(const pElementInsert: IHTMLElement; 
                            const pPointerStart: IMarkupPointer; 
                            const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function  RemoveElement(const pElementRemove: IHTMLElement): HResult; stdcall;
    function  remove(const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function  Copy(const pPointerSourceStart: IMarkupPointer; 
                   const pPointerSourceFinish: IMarkupPointer; const pPointerTarget: IMarkupPointer): HResult; stdcall;
    function  move(const pPointerSourceStart: IMarkupPointer; 
                   const pPointerSourceFinish: IMarkupPointer; const pPointerTarget: IMarkupPointer): HResult; stdcall;
    function  InsertText(var pchText: Word; cch: Integer; const pPointerTarget: IMarkupPointer): HResult; stdcall;
    function  ParseString(var pchHTML: Word; dwFlags: LongWord; 
                          out ppContainerResult: IMarkupContainer; 
                          const ppPointerStart: IMarkupPointer; 
                          const ppPointerFinish: IMarkupPointer): HResult; stdcall;
    function  ParseGlobal(var hglobalHTML: TGUID; dwFlags: LongWord; 
                          out ppContainerResult: IMarkupContainer; 
                          const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function  IsScopedElement(const pElement: IHTMLElement; out pfScoped: Integer): HResult; stdcall;
    function  GetElementTagId(const pElement: IHTMLElement; out ptagId: _ELEMENT_TAG_ID): HResult; stdcall;
    function  GetTagIDForName(const bstrName: WideString; out ptagId: _ELEMENT_TAG_ID): HResult; stdcall;
    function  GetNameForTagID(tagID: _ELEMENT_TAG_ID; out pbstrName: WideString): HResult; stdcall;
    function  MovePointersToRange(const pIRange: IHTMLTxtRange; 
                                  const pPointerStart: IMarkupPointer; 
                                  const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function  MoveRangeToPointers(const pPointerStart: IMarkupPointer; 
                                  const pPointerFinish: IMarkupPointer; const pIRange: IHTMLTxtRange): HResult; stdcall;
    function  BeginUndoUnit(var pchTitle: Word): HResult; stdcall;
    function  EndUndoUnit: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupTextFrags
// Flags:     (0)
// GUID:      {3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupTextFrags = interface(IUnknown)
    ['{3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}']
    function  GetTextFragCount(out pcFrags: Integer): HResult; stdcall;
    function  GetTextFrag(iFrag: Integer; out pbstrFrag: WideString; 
                          const pPointerFrag: IMarkupPointer): HResult; stdcall;
    function  RemoveTextFrag(iFrag: Integer): HResult; stdcall;
    function  InsertTextFrag(iFrag: Integer; const bstrInsert: WideString; 
                             const pPointerInsert: IMarkupPointer): HResult; stdcall;
    function  FindTextFragFromMarkupPointer(const pPointerFind: IMarkupPointer; 
                                            out piFrag: Integer; out pfFragFound: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IXMLGenericParse
// Flags:     (0)
// GUID:      {E4E23071-4D07-11D2-AE76-0080C73BC199}
// *********************************************************************//
  IXMLGenericParse = interface(IUnknown)
    ['{E4E23071-4D07-11D2-AE76-0080C73BC199}']
    function  SetGenericParse(fDoGeneric: WordBool): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLDialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F216-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog = interface(IDispatch)
    ['{3050F216-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_dialogTop(p: OleVariant); safecall;
    function  Get_dialogTop: OleVariant; safecall;
    procedure Set_dialogLeft(p: OleVariant); safecall;
    function  Get_dialogLeft: OleVariant; safecall;
    procedure Set_dialogWidth(p: OleVariant); safecall;
    function  Get_dialogWidth: OleVariant; safecall;
    procedure Set_dialogHeight(p: OleVariant); safecall;
    function  Get_dialogHeight: OleVariant; safecall;
    function  Get_dialogArguments: OleVariant; safecall;
    function  Get_menuArguments: OleVariant; safecall;
    procedure Set_returnValue(p: OleVariant); safecall;
    function  Get_returnValue: OleVariant; safecall;
    procedure close; safecall;
    function  toString: WideString; safecall;
    property dialogTop: OleVariant read Get_dialogTop write Set_dialogTop;
    property dialogLeft: OleVariant read Get_dialogLeft write Set_dialogLeft;
    property dialogWidth: OleVariant read Get_dialogWidth write Set_dialogWidth;
    property dialogHeight: OleVariant read Get_dialogHeight write Set_dialogHeight;
    property dialogArguments: OleVariant read Get_dialogArguments;
    property menuArguments: OleVariant read Get_menuArguments;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialogDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F216-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialogDisp = dispinterface
    ['{3050F216-98B5-11CF-BB82-00AA00BDCE0B}']
    property dialogTop: OleVariant dispid -2147418108;
    property dialogLeft: OleVariant dispid -2147418109;
    property dialogWidth: OleVariant dispid -2147418107;
    property dialogHeight: OleVariant dispid -2147418106;
    property dialogArguments: OleVariant readonly dispid 25000;
    property menuArguments: OleVariant readonly dispid 25013;
    property returnValue: OleVariant dispid 25001;
    procedure close; dispid 25011;
    function  toString: WideString; dispid 25012;
  end;

// *********************************************************************//
// Interface: IHTMLDialog2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog2 = interface(IDispatch)
    ['{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_status(const p: WideString); safecall;
    function  Get_status: WideString; safecall;
    procedure Set_resizable(const p: WideString); safecall;
    function  Get_resizable: WideString; safecall;
    property status: WideString read Get_status write Set_status;
    property resizable: WideString read Get_resizable write Set_resizable;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialog2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog2Disp = dispinterface
    ['{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property status: WideString dispid 25014;
    property resizable: WideString dispid 25015;
  end;

// *********************************************************************//
// Interface: IHTMLModelessInit
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLModelessInit = interface(IDispatch)
    ['{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}']
    function  Get_parameters: OleVariant; safecall;
    function  Get_optionString: OleVariant; safecall;
    function  Get_moniker: IUnknown; safecall;
    function  Get_document: IUnknown; safecall;
    property parameters: OleVariant read Get_parameters;
    property optionString: OleVariant read Get_optionString;
    property moniker: IUnknown read Get_moniker;
    property document: IUnknown read Get_document;
  end;

// *********************************************************************//
// DispIntf:  IHTMLModelessInitDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLModelessInitDisp = dispinterface
    ['{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}']
    property parameters: OleVariant readonly dispid 25000;
    property optionString: OleVariant readonly dispid 25001;
    property moniker: IUnknown readonly dispid 25006;
    property document: IUnknown readonly dispid 25007;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior = interface(IDispatch)
    ['{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_applicationName(const p: WideString); safecall;
    function  Get_applicationName: WideString; safecall;
    procedure Set_version(const p: WideString); safecall;
    function  Get_version: WideString; safecall;
    procedure Set_icon(const p: WideString); safecall;
    function  Get_icon: WideString; safecall;
    procedure Set_singleInstance(const p: WideString); safecall;
    function  Get_singleInstance: WideString; safecall;
    procedure Set_minimizeButton(const p: WideString); safecall;
    function  Get_minimizeButton: WideString; safecall;
    procedure Set_maximizeButton(const p: WideString); safecall;
    function  Get_maximizeButton: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function  Get_border: WideString; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function  Get_borderStyle: WideString; safecall;
    procedure Set_sysMenu(const p: WideString); safecall;
    function  Get_sysMenu: WideString; safecall;
    procedure Set_caption(const p: WideString); safecall;
    function  Get_caption: WideString; safecall;
    procedure Set_windowState(const p: WideString); safecall;
    function  Get_windowState: WideString; safecall;
    procedure Set_showInTaskBar(const p: WideString); safecall;
    function  Get_showInTaskBar: WideString; safecall;
    function  Get_commandLine: WideString; safecall;
    property applicationName: WideString read Get_applicationName write Set_applicationName;
    property version: WideString read Get_version write Set_version;
    property icon: WideString read Get_icon write Set_icon;
    property singleInstance: WideString read Get_singleInstance write Set_singleInstance;
    property minimizeButton: WideString read Get_minimizeButton write Set_minimizeButton;
    property maximizeButton: WideString read Get_maximizeButton write Set_maximizeButton;
    property border: WideString read Get_border write Set_border;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property sysMenu: WideString read Get_sysMenu write Set_sysMenu;
    property caption: WideString read Get_caption write Set_caption;
    property windowState: WideString read Get_windowState write Set_windowState;
    property showInTaskBar: WideString read Get_showInTaskBar write Set_showInTaskBar;
    property commandLine: WideString read Get_commandLine;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehaviorDisp = dispinterface
    ['{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}']
    property applicationName: WideString dispid 5000;
    property version: WideString dispid 5001;
    property icon: WideString dispid 5002;
    property singleInstance: WideString dispid 5003;
    property minimizeButton: WideString dispid 5005;
    property maximizeButton: WideString dispid 5006;
    property border: WideString dispid 5007;
    property borderStyle: WideString dispid 5008;
    property sysMenu: WideString dispid 5009;
    property caption: WideString dispid 5010;
    property windowState: WideString dispid 5011;
    property showInTaskBar: WideString dispid 5012;
    property commandLine: WideString readonly dispid 5013;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAppBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAppBehavior = dispinterface
    ['{3050F57C-98B5-11CF-BB82-00AA00BDCE0B}']
    property applicationName: WideString dispid 5000;
    property version: WideString dispid 5001;
    property icon: WideString dispid 5002;
    property singleInstance: WideString dispid 5003;
    property minimizeButton: WideString dispid 5005;
    property maximizeButton: WideString dispid 5006;
    property border: WideString dispid 5007;
    property borderStyle: WideString dispid 5008;
    property sysMenu: WideString dispid 5009;
    property caption: WideString dispid 5010;
    property windowState: WideString dispid 5011;
    property showInTaskBar: WideString dispid 5012;
    property commandLine: WideString readonly dispid 5013;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputButtonElement = dispinterface
    ['{3050F51E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F520-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputTextElement = dispinterface
    ['{3050F520-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 2005;
    function  createTextRange: IHTMLTxtRange; dispid 2006;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputFileElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F542-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputFileElement = dispinterface
    ['{3050F542-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property value: WideString dispid -2147413011;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLOptionButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F509-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLOptionButtonElement = dispinterface
    ['{3050F509-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property value: WideString dispid -2147413011;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property checked: WordBool dispid 2009;
    property defaultChecked: WordBool dispid 2008;
    property onchange: OleVariant dispid -2147412082;
    property disabled: WordBool dispid -2147418036;
    property status: WordBool dispid 2001;
    property indeterminate: WordBool dispid 2007;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputImage
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputImage = dispinterface
    ['{3050F51D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function  getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function  removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function  contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function  toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property disabled: WordBool dispid -2147418036;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// The Class CoHTMLStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyle exposed by              
// the CoClass HTMLStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyle = class
    class function Create: DispHTMLStyle;
    class function CreateRemote(const MachineName: string): DispHTMLStyle;
  end;

// *********************************************************************//
// The Class CoHTMLRuleStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLRuleStyle exposed by              
// the CoClass HTMLRuleStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLRuleStyle = class
    class function Create: DispHTMLRuleStyle;
    class function CreateRemote(const MachineName: string): DispHTMLRuleStyle;
  end;

// *********************************************************************//
// The Class CoHTMLCurrentStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCurrentStyle exposed by              
// the CoClass HTMLCurrentStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCurrentStyle = class
    class function Create: DispHTMLCurrentStyle;
    class function CreateRemote(const MachineName: string): DispHTMLCurrentStyle;
  end;

// *********************************************************************//
// The Class CoHTMLFiltersCollection provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLFiltersCollection exposed by              
// the CoClass HTMLFiltersCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFiltersCollection = class
    class function Create: IHTMLFiltersCollection;
    class function CreateRemote(const MachineName: string): IHTMLFiltersCollection;
  end;

// *********************************************************************//
// The Class CoHTMLDOMAttribute provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDOMAttribute exposed by              
// the CoClass HTMLDOMAttribute. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMAttribute = class
    class function Create: DispHTMLDOMAttribute;
    class function CreateRemote(const MachineName: string): DispHTMLDOMAttribute;
  end;

// *********************************************************************//
// The Class CoHTMLDOMTextNode provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDOMTextNode exposed by              
// the CoClass HTMLDOMTextNode. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMTextNode = class
    class function Create: DispHTMLDOMTextNode;
    class function CreateRemote(const MachineName: string): DispHTMLDOMTextNode;
  end;

// *********************************************************************//
// The Class CoHTMLAttributeCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAttributeCollection exposed by              
// the CoClass HTMLAttributeCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAttributeCollection = class
    class function Create: DispHTMLAttributeCollection;
    class function CreateRemote(const MachineName: string): DispHTMLAttributeCollection;
  end;

// *********************************************************************//
// The Class CoDOMChildrenCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMChildrenCollection exposed by              
// the CoClass DOMChildrenCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMChildrenCollection = class
    class function Create: DispDOMChildrenCollection;
    class function CreateRemote(const MachineName: string): DispDOMChildrenCollection;
  end;

// *********************************************************************//
// The Class CoHTCDefaultDispatch provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCDefaultDispatch exposed by              
// the CoClass HTCDefaultDispatch. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCDefaultDispatch = class
    class function Create: DispHTCDefaultDispatch;
    class function CreateRemote(const MachineName: string): DispHTCDefaultDispatch;
  end;

// *********************************************************************//
// The Class CoHTCPropertyBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCPropertyBehavior exposed by              
// the CoClass HTCPropertyBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCPropertyBehavior = class
    class function Create: DispHTCPropertyBehavior;
    class function CreateRemote(const MachineName: string): DispHTCPropertyBehavior;
  end;

// *********************************************************************//
// The Class CoHTCMethodBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCMethodBehavior exposed by              
// the CoClass HTCMethodBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCMethodBehavior = class
    class function Create: DispHTCMethodBehavior;
    class function CreateRemote(const MachineName: string): DispHTCMethodBehavior;
  end;

// *********************************************************************//
// The Class CoHTCEventBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCEventBehavior exposed by              
// the CoClass HTCEventBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCEventBehavior = class
    class function Create: DispHTCEventBehavior;
    class function CreateRemote(const MachineName: string): DispHTCEventBehavior;
  end;

// *********************************************************************//
// The Class CoHTCAttachBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCAttachBehavior exposed by              
// the CoClass HTCAttachBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCAttachBehavior = class
    class function Create: DispHTCAttachBehavior;
    class function CreateRemote(const MachineName: string): DispHTCAttachBehavior;
  end;

// *********************************************************************//
// The Class CoHTCDescBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCDescBehavior exposed by              
// the CoClass HTCDescBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCDescBehavior = class
    class function Create: DispHTCDescBehavior;
    class function CreateRemote(const MachineName: string): DispHTCDescBehavior;
  end;

// *********************************************************************//
// The Class CoHTMLUrnCollection provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLUrnCollection exposed by              
// the CoClass HTMLUrnCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLUrnCollection = class
    class function Create: IHTMLUrnCollection;
    class function CreateRemote(const MachineName: string): IHTMLUrnCollection;
  end;

// *********************************************************************//
// The Class CoHTMLGenericElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLGenericElement exposed by              
// the CoClass HTMLGenericElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLGenericElement = class
    class function Create: DispHTMLGenericElement;
    class function CreateRemote(const MachineName: string): DispHTMLGenericElement;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetRule provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLStyleSheetRule exposed by              
// the CoClass HTMLStyleSheetRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetRule = class
    class function Create: IHTMLStyleSheetRule;
    class function CreateRemote(const MachineName: string): IHTMLStyleSheetRule;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetRulesCollection provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLStyleSheetRulesCollection exposed by              
// the CoClass HTMLStyleSheetRulesCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetRulesCollection = class
    class function Create: IHTMLStyleSheetRulesCollection;
    class function CreateRemote(const MachineName: string): IHTMLStyleSheetRulesCollection;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheet provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLStyleSheet exposed by              
// the CoClass HTMLStyleSheet. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheet = class
    class function Create: IHTMLStyleSheet;
    class function CreateRemote(const MachineName: string): IHTMLStyleSheet;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetsCollection provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLStyleSheetsCollection exposed by              
// the CoClass HTMLStyleSheetsCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetsCollection = class
    class function Create: IHTMLStyleSheetsCollection;
    class function CreateRemote(const MachineName: string): IHTMLStyleSheetsCollection;
  end;

// *********************************************************************//
// The Class CoHTMLLinkElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLinkElement exposed by              
// the CoClass HTMLLinkElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLinkElement = class
    class function Create: DispHTMLLinkElement;
    class function CreateRemote(const MachineName: string): DispHTMLLinkElement;
  end;

// *********************************************************************//
// The Class CoHTMLFormElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFormElement exposed by              
// the CoClass HTMLFormElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFormElement = class
    class function Create: DispHTMLFormElement;
    class function CreateRemote(const MachineName: string): DispHTMLFormElement;
  end;

// *********************************************************************//
// The Class CoHTMLTextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTextElement exposed by              
// the CoClass HTMLTextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTextElement = class
    class function Create: DispHTMLTextElement;
    class function CreateRemote(const MachineName: string): DispHTMLTextElement;
  end;

// *********************************************************************//
// The Class CoHTMLImg provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLImg exposed by              
// the CoClass HTMLImg. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLImg = class
    class function Create: DispHTMLImg;
    class function CreateRemote(const MachineName: string): DispHTMLImg;
  end;

// *********************************************************************//
// The Class CoHTMLImageElementFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLImageElementFactory exposed by              
// the CoClass HTMLImageElementFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLImageElementFactory = class
    class function Create: IHTMLImageElementFactory;
    class function CreateRemote(const MachineName: string): IHTMLImageElementFactory;
  end;

// *********************************************************************//
// The Class CoHTMLBody provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBody exposed by              
// the CoClass HTMLBody. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBody = class
    class function Create: DispHTMLBody;
    class function CreateRemote(const MachineName: string): DispHTMLBody;
  end;

// *********************************************************************//
// The Class CoHTMLFontElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFontElement exposed by              
// the CoClass HTMLFontElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFontElement = class
    class function Create: DispHTMLFontElement;
    class function CreateRemote(const MachineName: string): DispHTMLFontElement;
  end;

// *********************************************************************//
// The Class CoHTMLAnchorElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAnchorElement exposed by              
// the CoClass HTMLAnchorElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAnchorElement = class
    class function Create: DispHTMLAnchorElement;
    class function CreateRemote(const MachineName: string): DispHTMLAnchorElement;
  end;

// *********************************************************************//
// The Class CoHTMLLabelElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLabelElement exposed by              
// the CoClass HTMLLabelElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLabelElement = class
    class function Create: DispHTMLLabelElement;
    class function CreateRemote(const MachineName: string): DispHTMLLabelElement;
  end;

// *********************************************************************//
// The Class CoHTMLListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLListElement exposed by              
// the CoClass HTMLListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLListElement = class
    class function Create: DispHTMLListElement;
    class function CreateRemote(const MachineName: string): DispHTMLListElement;
  end;

// *********************************************************************//
// The Class CoHTMLUListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLUListElement exposed by              
// the CoClass HTMLUListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLUListElement = class
    class function Create: DispHTMLUListElement;
    class function CreateRemote(const MachineName: string): DispHTMLUListElement;
  end;

// *********************************************************************//
// The Class CoHTMLOListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLOListElement exposed by              
// the CoClass HTMLOListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOListElement = class
    class function Create: DispHTMLOListElement;
    class function CreateRemote(const MachineName: string): DispHTMLOListElement;
  end;

// *********************************************************************//
// The Class CoHTMLLIElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLIElement exposed by              
// the CoClass HTMLLIElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLIElement = class
    class function Create: DispHTMLLIElement;
    class function CreateRemote(const MachineName: string): DispHTMLLIElement;
  end;

// *********************************************************************//
// The Class CoHTMLBlockElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBlockElement exposed by              
// the CoClass HTMLBlockElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBlockElement = class
    class function Create: DispHTMLBlockElement;
    class function CreateRemote(const MachineName: string): DispHTMLBlockElement;
  end;

// *********************************************************************//
// The Class CoHTMLDivElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDivElement exposed by              
// the CoClass HTMLDivElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDivElement = class
    class function Create: DispHTMLDivElement;
    class function CreateRemote(const MachineName: string): DispHTMLDivElement;
  end;

// *********************************************************************//
// The Class CoHTMLDDElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDDElement exposed by              
// the CoClass HTMLDDElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDDElement = class
    class function Create: DispHTMLDDElement;
    class function CreateRemote(const MachineName: string): DispHTMLDDElement;
  end;

// *********************************************************************//
// The Class CoHTMLDTElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDTElement exposed by              
// the CoClass HTMLDTElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDTElement = class
    class function Create: DispHTMLDTElement;
    class function CreateRemote(const MachineName: string): DispHTMLDTElement;
  end;

// *********************************************************************//
// The Class CoHTMLBRElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBRElement exposed by              
// the CoClass HTMLBRElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBRElement = class
    class function Create: DispHTMLBRElement;
    class function CreateRemote(const MachineName: string): DispHTMLBRElement;
  end;

// *********************************************************************//
// The Class CoHTMLDListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDListElement exposed by              
// the CoClass HTMLDListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDListElement = class
    class function Create: DispHTMLDListElement;
    class function CreateRemote(const MachineName: string): DispHTMLDListElement;
  end;

// *********************************************************************//
// The Class CoHTMLHRElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHRElement exposed by              
// the CoClass HTMLHRElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHRElement = class
    class function Create: DispHTMLHRElement;
    class function CreateRemote(const MachineName: string): DispHTMLHRElement;
  end;

// *********************************************************************//
// The Class CoHTMLParaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLParaElement exposed by              
// the CoClass HTMLParaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLParaElement = class
    class function Create: DispHTMLParaElement;
    class function CreateRemote(const MachineName: string): DispHTMLParaElement;
  end;

// *********************************************************************//
// The Class CoHTMLElementCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLElementCollection exposed by              
// the CoClass HTMLElementCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLElementCollection = class
    class function Create: DispHTMLElementCollection;
    class function CreateRemote(const MachineName: string): DispHTMLElementCollection;
  end;

// *********************************************************************//
// The Class CoHTMLHeaderElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHeaderElement exposed by              
// the CoClass HTMLHeaderElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHeaderElement = class
    class function Create: DispHTMLHeaderElement;
    class function CreateRemote(const MachineName: string): DispHTMLHeaderElement;
  end;

// *********************************************************************//
// The Class CoHTMLSelectElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSelectElement exposed by              
// the CoClass HTMLSelectElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSelectElement = class
    class function Create: DispHTMLSelectElement;
    class function CreateRemote(const MachineName: string): DispHTMLSelectElement;
  end;

// *********************************************************************//
// The Class CoHTMLOptionElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLOptionElement exposed by              
// the CoClass HTMLOptionElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOptionElement = class
    class function Create: DispHTMLOptionElement;
    class function CreateRemote(const MachineName: string): DispHTMLOptionElement;
  end;

// *********************************************************************//
// The Class CoHTMLOptionElementFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLOptionElementFactory exposed by              
// the CoClass HTMLOptionElementFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOptionElementFactory = class
    class function Create: IHTMLOptionElementFactory;
    class function CreateRemote(const MachineName: string): IHTMLOptionElementFactory;
  end;

// *********************************************************************//
// The Class CoHTMLInputElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLInputElement exposed by              
// the CoClass HTMLInputElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputElement = class
    class function Create: DispHTMLInputElement;
    class function CreateRemote(const MachineName: string): DispHTMLInputElement;
  end;

// *********************************************************************//
// The Class CoHTMLTextAreaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTextAreaElement exposed by              
// the CoClass HTMLTextAreaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTextAreaElement = class
    class function Create: DispHTMLTextAreaElement;
    class function CreateRemote(const MachineName: string): DispHTMLTextAreaElement;
  end;

// *********************************************************************//
// The Class CoHTMLRichtextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLRichtextElement exposed by              
// the CoClass HTMLRichtextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLRichtextElement = class
    class function Create: DispHTMLRichtextElement;
    class function CreateRemote(const MachineName: string): DispHTMLRichtextElement;
  end;

// *********************************************************************//
// The Class CoHTMLButtonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLButtonElement exposed by              
// the CoClass HTMLButtonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLButtonElement = class
    class function Create: DispHTMLButtonElement;
    class function CreateRemote(const MachineName: string): DispHTMLButtonElement;
  end;

// *********************************************************************//
// The Class CoHTMLMarqueeElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMarqueeElement exposed by              
// the CoClass HTMLMarqueeElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMarqueeElement = class
    class function Create: DispHTMLMarqueeElement;
    class function CreateRemote(const MachineName: string): DispHTMLMarqueeElement;
  end;

// *********************************************************************//
// The Class CoHTMLHtmlElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHtmlElement exposed by              
// the CoClass HTMLHtmlElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHtmlElement = class
    class function Create: DispHTMLHtmlElement;
    class function CreateRemote(const MachineName: string): DispHTMLHtmlElement;
  end;

// *********************************************************************//
// The Class CoHTMLHeadElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHeadElement exposed by              
// the CoClass HTMLHeadElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHeadElement = class
    class function Create: DispHTMLHeadElement;
    class function CreateRemote(const MachineName: string): DispHTMLHeadElement;
  end;

// *********************************************************************//
// The Class CoHTMLTitleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTitleElement exposed by              
// the CoClass HTMLTitleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTitleElement = class
    class function Create: DispHTMLTitleElement;
    class function CreateRemote(const MachineName: string): DispHTMLTitleElement;
  end;

// *********************************************************************//
// The Class CoHTMLMetaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMetaElement exposed by              
// the CoClass HTMLMetaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMetaElement = class
    class function Create: DispHTMLMetaElement;
    class function CreateRemote(const MachineName: string): DispHTMLMetaElement;
  end;

// *********************************************************************//
// The Class CoHTMLBaseElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBaseElement exposed by              
// the CoClass HTMLBaseElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBaseElement = class
    class function Create: DispHTMLBaseElement;
    class function CreateRemote(const MachineName: string): DispHTMLBaseElement;
  end;

// *********************************************************************//
// The Class CoHTMLIsIndexElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLIsIndexElement exposed by              
// the CoClass HTMLIsIndexElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLIsIndexElement = class
    class function Create: DispHTMLIsIndexElement;
    class function CreateRemote(const MachineName: string): DispHTMLIsIndexElement;
  end;

// *********************************************************************//
// The Class CoHTMLNextIdElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNextIdElement exposed by              
// the CoClass HTMLNextIdElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNextIdElement = class
    class function Create: DispHTMLNextIdElement;
    class function CreateRemote(const MachineName: string): DispHTMLNextIdElement;
  end;

// *********************************************************************//
// The Class CoHTMLBaseFontElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBaseFontElement exposed by              
// the CoClass HTMLBaseFontElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBaseFontElement = class
    class function Create: DispHTMLBaseFontElement;
    class function CreateRemote(const MachineName: string): DispHTMLBaseFontElement;
  end;

// *********************************************************************//
// The Class CoHTMLUnknownElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLUnknownElement exposed by              
// the CoClass HTMLUnknownElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLUnknownElement = class
    class function Create: DispHTMLUnknownElement;
    class function CreateRemote(const MachineName: string): DispHTMLUnknownElement;
  end;

// *********************************************************************//
// The Class CoHTMLHistory provides a Create and CreateRemote method to          
// create instances of the default interface IOmHistory exposed by              
// the CoClass HTMLHistory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHistory = class
    class function Create: IOmHistory;
    class function CreateRemote(const MachineName: string): IOmHistory;
  end;

// *********************************************************************//
// The Class CoCMimeTypes provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLMimeTypesCollection exposed by              
// the CoClass CMimeTypes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCMimeTypes = class
    class function Create: IHTMLMimeTypesCollection;
    class function CreateRemote(const MachineName: string): IHTMLMimeTypesCollection;
  end;

// *********************************************************************//
// The Class CoCPlugins provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLPluginsCollection exposed by              
// the CoClass CPlugins. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCPlugins = class
    class function Create: IHTMLPluginsCollection;
    class function CreateRemote(const MachineName: string): IHTMLPluginsCollection;
  end;

// *********************************************************************//
// The Class CoCOpsProfile provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLOpsProfile exposed by              
// the CoClass COpsProfile. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCOpsProfile = class
    class function Create: IHTMLOpsProfile;
    class function CreateRemote(const MachineName: string): IHTMLOpsProfile;
  end;

// *********************************************************************//
// The Class CoHTMLNavigator provides a Create and CreateRemote method to          
// create instances of the default interface IOmNavigator exposed by              
// the CoClass HTMLNavigator. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNavigator = class
    class function Create: IOmNavigator;
    class function CreateRemote(const MachineName: string): IOmNavigator;
  end;

// *********************************************************************//
// The Class CoHTMLLocation provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLLocation exposed by              
// the CoClass HTMLLocation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLocation = class
    class function Create: IHTMLLocation;
    class function CreateRemote(const MachineName: string): IHTMLLocation;
  end;

// *********************************************************************//
// The Class CoCEventObj provides a Create and CreateRemote method to          
// create instances of the default interface DispCEventObj exposed by              
// the CoClass CEventObj. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCEventObj = class
    class function Create: DispCEventObj;
    class function CreateRemote(const MachineName: string): DispCEventObj;
  end;

// *********************************************************************//
// The Class CoHTMLScreen provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLScreen exposed by              
// the CoClass HTMLScreen. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLScreen = class
    class function Create: IHTMLScreen;
    class function CreateRemote(const MachineName: string): IHTMLScreen;
  end;

// *********************************************************************//
// The Class CoHTMLWindow2 provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLWindow2 exposed by              
// the CoClass HTMLWindow2. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLWindow2 = class
    class function Create: DispHTMLWindow2;
    class function CreateRemote(const MachineName: string): DispHTMLWindow2;
  end;

// *********************************************************************//
// The Class CoHTMLWindowProxy provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLWindowProxy exposed by              
// the CoClass HTMLWindowProxy. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLWindowProxy = class
    class function Create: DispHTMLWindowProxy;
    class function CreateRemote(const MachineName: string): DispHTMLWindowProxy;
  end;

// *********************************************************************//
// The Class CoHTMLDocument provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocument exposed by              
// the CoClass HTMLDocument. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDocument = class
    class function Create: DispHTMLDocument;
    class function CreateRemote(const MachineName: string): DispHTMLDocument;
  end;

// *********************************************************************//
// The Class CoHTMLDocumentFragment provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocumentFragment exposed by              
// the CoClass HTMLDocumentFragment. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDocumentFragment = class
    class function Create: DispHTMLDocumentFragment;
    class function CreateRemote(const MachineName: string): DispHTMLDocumentFragment;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TScriptlet
// Help String      : 
// Default Interface: IWebBridge
// Def. Intf. DISP? : No
// Event   Interface: DWebBridgeEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//
  TScriptletonscriptletevent = procedure(Sender: TObject; const name: WideString; 
                                                          eventData: OleVariant) of object;

  TScriptlet = class(TOleControl)
  private
    FOnonscriptletevent: TScriptletonscriptletevent;
    FOnonreadystatechange: TNotifyEvent;
    FIntf: IWebBridge;
    function  GetControlInterface: IWebBridge;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
    function  Get_event: IDispatch;
  public
    procedure AboutBox;
    property  ControlInterface: IWebBridge read GetControlInterface;
    property  DefaultInterface: IWebBridge read GetControlInterface;
    property event: IDispatch index 1152 read GetIDispatchProp;
    property readyState: Integer index -525 read GetIntegerProp;
  published
    property  TabStop;
    property  Align;
    property  DragCursor;
    property  DragMode;
    property  ParentShowHint;
    property  PopupMenu;
    property  ShowHint;
    property  TabOrder;
    property  Visible;
    property  OnDragDrop;
    property  OnDragOver;
    property  OnEndDrag;
    property  OnEnter;
    property  OnExit;
    property  OnStartDrag;
    property  OnMouseUp;
    property  OnMouseMove;
    property  OnMouseDown;
    property  OnKeyUp;
    property  OnKeyPress;
    property  OnKeyDown;
    property  OnDblClick;
    property  OnClick;
    property url: WideString index 1 read GetWideStringProp write SetWideStringProp stored False;
    property Scrollbar: WordBool index 2 read GetWordBoolProp write SetWordBoolProp stored False;
    property embed: WordBool index 3 read GetWordBoolProp write SetWordBoolProp stored False;
    property Ononscriptletevent: TScriptletonscriptletevent read FOnonscriptletevent write FOnonscriptletevent;
    property Ononreadystatechange: TNotifyEvent read FOnonreadystatechange write FOnonreadystatechange;
  end;

// *********************************************************************//
// The Class CoHTMLEmbed provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLEmbed exposed by              
// the CoClass HTMLEmbed. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLEmbed = class
    class function Create: DispHTMLEmbed;
    class function CreateRemote(const MachineName: string): DispHTMLEmbed;
  end;

// *********************************************************************//
// The Class CoHTMLAreasCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAreasCollection exposed by              
// the CoClass HTMLAreasCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAreasCollection = class
    class function Create: DispHTMLAreasCollection;
    class function CreateRemote(const MachineName: string): DispHTMLAreasCollection;
  end;

// *********************************************************************//
// The Class CoHTMLMapElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMapElement exposed by              
// the CoClass HTMLMapElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMapElement = class
    class function Create: DispHTMLMapElement;
    class function CreateRemote(const MachineName: string): DispHTMLMapElement;
  end;

// *********************************************************************//
// The Class CoHTMLAreaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAreaElement exposed by              
// the CoClass HTMLAreaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAreaElement = class
    class function Create: DispHTMLAreaElement;
    class function CreateRemote(const MachineName: string): DispHTMLAreaElement;
  end;

// *********************************************************************//
// The Class CoHTMLTableCaption provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableCaption exposed by              
// the CoClass HTMLTableCaption. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableCaption = class
    class function Create: DispHTMLTableCaption;
    class function CreateRemote(const MachineName: string): DispHTMLTableCaption;
  end;

// *********************************************************************//
// The Class CoHTMLCommentElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCommentElement exposed by              
// the CoClass HTMLCommentElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCommentElement = class
    class function Create: DispHTMLCommentElement;
    class function CreateRemote(const MachineName: string): DispHTMLCommentElement;
  end;

// *********************************************************************//
// The Class CoHTMLPhraseElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLPhraseElement exposed by              
// the CoClass HTMLPhraseElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLPhraseElement = class
    class function Create: DispHTMLPhraseElement;
    class function CreateRemote(const MachineName: string): DispHTMLPhraseElement;
  end;

// *********************************************************************//
// The Class CoHTMLSpanElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSpanElement exposed by              
// the CoClass HTMLSpanElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSpanElement = class
    class function Create: DispHTMLSpanElement;
    class function CreateRemote(const MachineName: string): DispHTMLSpanElement;
  end;

// *********************************************************************//
// The Class CoHTMLTable provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTable exposed by              
// the CoClass HTMLTable. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTable = class
    class function Create: DispHTMLTable;
    class function CreateRemote(const MachineName: string): DispHTMLTable;
  end;

// *********************************************************************//
// The Class CoHTMLTableCol provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableCol exposed by              
// the CoClass HTMLTableCol. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableCol = class
    class function Create: DispHTMLTableCol;
    class function CreateRemote(const MachineName: string): DispHTMLTableCol;
  end;

// *********************************************************************//
// The Class CoHTMLTableSection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableSection exposed by              
// the CoClass HTMLTableSection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableSection = class
    class function Create: DispHTMLTableSection;
    class function CreateRemote(const MachineName: string): DispHTMLTableSection;
  end;

// *********************************************************************//
// The Class CoHTMLTableRow provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableRow exposed by              
// the CoClass HTMLTableRow. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableRow = class
    class function Create: DispHTMLTableRow;
    class function CreateRemote(const MachineName: string): DispHTMLTableRow;
  end;

// *********************************************************************//
// The Class CoHTMLTableCell provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableCell exposed by              
// the CoClass HTMLTableCell. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableCell = class
    class function Create: DispHTMLTableCell;
    class function CreateRemote(const MachineName: string): DispHTMLTableCell;
  end;

// *********************************************************************//
// The Class CoHTMLScriptElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLScriptElement exposed by              
// the CoClass HTMLScriptElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLScriptElement = class
    class function Create: DispHTMLScriptElement;
    class function CreateRemote(const MachineName: string): DispHTMLScriptElement;
  end;

// *********************************************************************//
// The Class CoHTMLNoShowElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNoShowElement exposed by              
// the CoClass HTMLNoShowElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNoShowElement = class
    class function Create: DispHTMLNoShowElement;
    class function CreateRemote(const MachineName: string): DispHTMLNoShowElement;
  end;

// *********************************************************************//
// The Class CoHTMLObjectElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLObjectElement exposed by              
// the CoClass HTMLObjectElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLObjectElement = class
    class function Create: DispHTMLObjectElement;
    class function CreateRemote(const MachineName: string): DispHTMLObjectElement;
  end;

// *********************************************************************//
// The Class CoHTMLFrameBase provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFrameBase exposed by              
// the CoClass HTMLFrameBase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFrameBase = class
    class function Create: DispHTMLFrameBase;
    class function CreateRemote(const MachineName: string): DispHTMLFrameBase;
  end;

// *********************************************************************//
// The Class CoHTMLFrameElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFrameElement exposed by              
// the CoClass HTMLFrameElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFrameElement = class
    class function Create: DispHTMLFrameElement;
    class function CreateRemote(const MachineName: string): DispHTMLFrameElement;
  end;

// *********************************************************************//
// The Class CoHTMLIFrame provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLIFrame exposed by              
// the CoClass HTMLIFrame. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLIFrame = class
    class function Create: DispHTMLIFrame;
    class function CreateRemote(const MachineName: string): DispHTMLIFrame;
  end;

// *********************************************************************//
// The Class CoHTMLDivPosition provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDivPosition exposed by              
// the CoClass HTMLDivPosition. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDivPosition = class
    class function Create: DispHTMLDivPosition;
    class function CreateRemote(const MachineName: string): DispHTMLDivPosition;
  end;

// *********************************************************************//
// The Class CoHTMLFieldSetElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFieldSetElement exposed by              
// the CoClass HTMLFieldSetElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFieldSetElement = class
    class function Create: DispHTMLFieldSetElement;
    class function CreateRemote(const MachineName: string): DispHTMLFieldSetElement;
  end;

// *********************************************************************//
// The Class CoHTMLLegendElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLegendElement exposed by              
// the CoClass HTMLLegendElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLegendElement = class
    class function Create: DispHTMLLegendElement;
    class function CreateRemote(const MachineName: string): DispHTMLLegendElement;
  end;

// *********************************************************************//
// The Class CoHTMLSpanFlow provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSpanFlow exposed by              
// the CoClass HTMLSpanFlow. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSpanFlow = class
    class function Create: DispHTMLSpanFlow;
    class function CreateRemote(const MachineName: string): DispHTMLSpanFlow;
  end;

// *********************************************************************//
// The Class CoHTMLFrameSetSite provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFrameSetSite exposed by              
// the CoClass HTMLFrameSetSite. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFrameSetSite = class
    class function Create: DispHTMLFrameSetSite;
    class function CreateRemote(const MachineName: string): DispHTMLFrameSetSite;
  end;

// *********************************************************************//
// The Class CoHTMLBGsound provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBGsound exposed by              
// the CoClass HTMLBGsound. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBGsound = class
    class function Create: DispHTMLBGsound;
    class function CreateRemote(const MachineName: string): DispHTMLBGsound;
  end;

// *********************************************************************//
// The Class CoHTMLStyleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleElement exposed by              
// the CoClass HTMLStyleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleElement = class
    class function Create: DispHTMLStyleElement;
    class function CreateRemote(const MachineName: string): DispHTMLStyleElement;
  end;

// *********************************************************************//
// The Class CoHTMLStyleFontFace provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLStyleFontFace exposed by              
// the CoClass HTMLStyleFontFace. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleFontFace = class
    class function Create: IHTMLStyleFontFace;
    class function CreateRemote(const MachineName: string): IHTMLStyleFontFace;
  end;

// *********************************************************************//
// The Class CoThreadDialogProcParam provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLModelessInit exposed by              
// the CoClass ThreadDialogProcParam. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoThreadDialogProcParam = class
    class function Create: IHTMLModelessInit;
    class function CreateRemote(const MachineName: string): IHTMLModelessInit;
  end;

// *********************************************************************//
// The Class CoHTMLDialog provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLDialog exposed by              
// the CoClass HTMLDialog. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDialog = class
    class function Create: IHTMLDialog;
    class function CreateRemote(const MachineName: string): IHTMLDialog;
  end;

// *********************************************************************//
// The Class CoHTMLAppBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAppBehavior exposed by              
// the CoClass HTMLAppBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAppBehavior = class
    class function Create: DispHTMLAppBehavior;
    class function CreateRemote(const MachineName: string): DispHTMLAppBehavior;
  end;

// *********************************************************************//
// The Class CoOldHTMLDocument provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocument exposed by              
// the CoClass OldHTMLDocument. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOldHTMLDocument = class
    class function Create: DispHTMLDocument;
    class function CreateRemote(const MachineName: string): DispHTMLDocument;
  end;

// *********************************************************************//
// The Class CoOldHTMLFormElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFormElement exposed by              
// the CoClass OldHTMLFormElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOldHTMLFormElement = class
    class function Create: DispHTMLFormElement;
    class function CreateRemote(const MachineName: string): DispHTMLFormElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputButtonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputButtonElement exposed by              
// the CoClass HTMLInputButtonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputButtonElement = class
    class function Create: DispIHTMLInputButtonElement;
    class function CreateRemote(const MachineName: string): DispIHTMLInputButtonElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputTextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputTextElement exposed by              
// the CoClass HTMLInputTextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputTextElement = class
    class function Create: DispIHTMLInputTextElement;
    class function CreateRemote(const MachineName: string): DispIHTMLInputTextElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputFileElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputFileElement exposed by              
// the CoClass HTMLInputFileElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputFileElement = class
    class function Create: DispIHTMLInputFileElement;
    class function CreateRemote(const MachineName: string): DispIHTMLInputFileElement;
  end;

// *********************************************************************//
// The Class CoHTMLOptionButtonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLOptionButtonElement exposed by              
// the CoClass HTMLOptionButtonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOptionButtonElement = class
    class function Create: DispIHTMLOptionButtonElement;
    class function CreateRemote(const MachineName: string): DispIHTMLOptionButtonElement;
  end;

// *********************************************************************//
// The Class CohtmlInputImage provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputImage exposed by              
// the CoClass htmlInputImage. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CohtmlInputImage = class
    class function Create: DispIHTMLInputImage;
    class function CreateRemote(const MachineName: string): DispIHTMLInputImage;
  end;

implementation

uses ComObj;

class function CoHTMLStyle.Create: DispHTMLStyle;
begin
  Result := CreateComObject(CLASS_HTMLStyle) as DispHTMLStyle;
end;

class function CoHTMLStyle.CreateRemote(const MachineName: string): DispHTMLStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyle) as DispHTMLStyle;
end;

class function CoHTMLRuleStyle.Create: DispHTMLRuleStyle;
begin
  Result := CreateComObject(CLASS_HTMLRuleStyle) as DispHTMLRuleStyle;
end;

class function CoHTMLRuleStyle.CreateRemote(const MachineName: string): DispHTMLRuleStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLRuleStyle) as DispHTMLRuleStyle;
end;

class function CoHTMLCurrentStyle.Create: DispHTMLCurrentStyle;
begin
  Result := CreateComObject(CLASS_HTMLCurrentStyle) as DispHTMLCurrentStyle;
end;

class function CoHTMLCurrentStyle.CreateRemote(const MachineName: string): DispHTMLCurrentStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCurrentStyle) as DispHTMLCurrentStyle;
end;

class function CoHTMLFiltersCollection.Create: IHTMLFiltersCollection;
begin
  Result := CreateComObject(CLASS_HTMLFiltersCollection) as IHTMLFiltersCollection;
end;

class function CoHTMLFiltersCollection.CreateRemote(const MachineName: string): IHTMLFiltersCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFiltersCollection) as IHTMLFiltersCollection;
end;

class function CoHTMLDOMAttribute.Create: DispHTMLDOMAttribute;
begin
  Result := CreateComObject(CLASS_HTMLDOMAttribute) as DispHTMLDOMAttribute;
end;

class function CoHTMLDOMAttribute.CreateRemote(const MachineName: string): DispHTMLDOMAttribute;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMAttribute) as DispHTMLDOMAttribute;
end;

class function CoHTMLDOMTextNode.Create: DispHTMLDOMTextNode;
begin
  Result := CreateComObject(CLASS_HTMLDOMTextNode) as DispHTMLDOMTextNode;
end;

class function CoHTMLDOMTextNode.CreateRemote(const MachineName: string): DispHTMLDOMTextNode;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMTextNode) as DispHTMLDOMTextNode;
end;

class function CoHTMLAttributeCollection.Create: DispHTMLAttributeCollection;
begin
  Result := CreateComObject(CLASS_HTMLAttributeCollection) as DispHTMLAttributeCollection;
end;

class function CoHTMLAttributeCollection.CreateRemote(const MachineName: string): DispHTMLAttributeCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAttributeCollection) as DispHTMLAttributeCollection;
end;

class function CoDOMChildrenCollection.Create: DispDOMChildrenCollection;
begin
  Result := CreateComObject(CLASS_DOMChildrenCollection) as DispDOMChildrenCollection;
end;

class function CoDOMChildrenCollection.CreateRemote(const MachineName: string): DispDOMChildrenCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMChildrenCollection) as DispDOMChildrenCollection;
end;

class function CoHTCDefaultDispatch.Create: DispHTCDefaultDispatch;
begin
  Result := CreateComObject(CLASS_HTCDefaultDispatch) as DispHTCDefaultDispatch;
end;

class function CoHTCDefaultDispatch.CreateRemote(const MachineName: string): DispHTCDefaultDispatch;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCDefaultDispatch) as DispHTCDefaultDispatch;
end;

class function CoHTCPropertyBehavior.Create: DispHTCPropertyBehavior;
begin
  Result := CreateComObject(CLASS_HTCPropertyBehavior) as DispHTCPropertyBehavior;
end;

class function CoHTCPropertyBehavior.CreateRemote(const MachineName: string): DispHTCPropertyBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCPropertyBehavior) as DispHTCPropertyBehavior;
end;

class function CoHTCMethodBehavior.Create: DispHTCMethodBehavior;
begin
  Result := CreateComObject(CLASS_HTCMethodBehavior) as DispHTCMethodBehavior;
end;

class function CoHTCMethodBehavior.CreateRemote(const MachineName: string): DispHTCMethodBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCMethodBehavior) as DispHTCMethodBehavior;
end;

class function CoHTCEventBehavior.Create: DispHTCEventBehavior;
begin
  Result := CreateComObject(CLASS_HTCEventBehavior) as DispHTCEventBehavior;
end;

class function CoHTCEventBehavior.CreateRemote(const MachineName: string): DispHTCEventBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCEventBehavior) as DispHTCEventBehavior;
end;

class function CoHTCAttachBehavior.Create: DispHTCAttachBehavior;
begin
  Result := CreateComObject(CLASS_HTCAttachBehavior) as DispHTCAttachBehavior;
end;

class function CoHTCAttachBehavior.CreateRemote(const MachineName: string): DispHTCAttachBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCAttachBehavior) as DispHTCAttachBehavior;
end;

class function CoHTCDescBehavior.Create: DispHTCDescBehavior;
begin
  Result := CreateComObject(CLASS_HTCDescBehavior) as DispHTCDescBehavior;
end;

class function CoHTCDescBehavior.CreateRemote(const MachineName: string): DispHTCDescBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCDescBehavior) as DispHTCDescBehavior;
end;

class function CoHTMLUrnCollection.Create: IHTMLUrnCollection;
begin
  Result := CreateComObject(CLASS_HTMLUrnCollection) as IHTMLUrnCollection;
end;

class function CoHTMLUrnCollection.CreateRemote(const MachineName: string): IHTMLUrnCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLUrnCollection) as IHTMLUrnCollection;
end;

class function CoHTMLGenericElement.Create: DispHTMLGenericElement;
begin
  Result := CreateComObject(CLASS_HTMLGenericElement) as DispHTMLGenericElement;
end;

class function CoHTMLGenericElement.CreateRemote(const MachineName: string): DispHTMLGenericElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLGenericElement) as DispHTMLGenericElement;
end;

class function CoHTMLStyleSheetRule.Create: IHTMLStyleSheetRule;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetRule) as IHTMLStyleSheetRule;
end;

class function CoHTMLStyleSheetRule.CreateRemote(const MachineName: string): IHTMLStyleSheetRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetRule) as IHTMLStyleSheetRule;
end;

class function CoHTMLStyleSheetRulesCollection.Create: IHTMLStyleSheetRulesCollection;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetRulesCollection) as IHTMLStyleSheetRulesCollection;
end;

class function CoHTMLStyleSheetRulesCollection.CreateRemote(const MachineName: string): IHTMLStyleSheetRulesCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetRulesCollection) as IHTMLStyleSheetRulesCollection;
end;

class function CoHTMLStyleSheet.Create: IHTMLStyleSheet;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheet) as IHTMLStyleSheet;
end;

class function CoHTMLStyleSheet.CreateRemote(const MachineName: string): IHTMLStyleSheet;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheet) as IHTMLStyleSheet;
end;

class function CoHTMLStyleSheetsCollection.Create: IHTMLStyleSheetsCollection;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetsCollection) as IHTMLStyleSheetsCollection;
end;

class function CoHTMLStyleSheetsCollection.CreateRemote(const MachineName: string): IHTMLStyleSheetsCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetsCollection) as IHTMLStyleSheetsCollection;
end;

class function CoHTMLLinkElement.Create: DispHTMLLinkElement;
begin
  Result := CreateComObject(CLASS_HTMLLinkElement) as DispHTMLLinkElement;
end;

class function CoHTMLLinkElement.CreateRemote(const MachineName: string): DispHTMLLinkElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLinkElement) as DispHTMLLinkElement;
end;

class function CoHTMLFormElement.Create: DispHTMLFormElement;
begin
  Result := CreateComObject(CLASS_HTMLFormElement) as DispHTMLFormElement;
end;

class function CoHTMLFormElement.CreateRemote(const MachineName: string): DispHTMLFormElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFormElement) as DispHTMLFormElement;
end;

class function CoHTMLTextElement.Create: DispHTMLTextElement;
begin
  Result := CreateComObject(CLASS_HTMLTextElement) as DispHTMLTextElement;
end;

class function CoHTMLTextElement.CreateRemote(const MachineName: string): DispHTMLTextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTextElement) as DispHTMLTextElement;
end;

class function CoHTMLImg.Create: DispHTMLImg;
begin
  Result := CreateComObject(CLASS_HTMLImg) as DispHTMLImg;
end;

class function CoHTMLImg.CreateRemote(const MachineName: string): DispHTMLImg;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLImg) as DispHTMLImg;
end;

class function CoHTMLImageElementFactory.Create: IHTMLImageElementFactory;
begin
  Result := CreateComObject(CLASS_HTMLImageElementFactory) as IHTMLImageElementFactory;
end;

class function CoHTMLImageElementFactory.CreateRemote(const MachineName: string): IHTMLImageElementFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLImageElementFactory) as IHTMLImageElementFactory;
end;

class function CoHTMLBody.Create: DispHTMLBody;
begin
  Result := CreateComObject(CLASS_HTMLBody) as DispHTMLBody;
end;

class function CoHTMLBody.CreateRemote(const MachineName: string): DispHTMLBody;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBody) as DispHTMLBody;
end;

class function CoHTMLFontElement.Create: DispHTMLFontElement;
begin
  Result := CreateComObject(CLASS_HTMLFontElement) as DispHTMLFontElement;
end;

class function CoHTMLFontElement.CreateRemote(const MachineName: string): DispHTMLFontElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFontElement) as DispHTMLFontElement;
end;

class function CoHTMLAnchorElement.Create: DispHTMLAnchorElement;
begin
  Result := CreateComObject(CLASS_HTMLAnchorElement) as DispHTMLAnchorElement;
end;

class function CoHTMLAnchorElement.CreateRemote(const MachineName: string): DispHTMLAnchorElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAnchorElement) as DispHTMLAnchorElement;
end;

class function CoHTMLLabelElement.Create: DispHTMLLabelElement;
begin
  Result := CreateComObject(CLASS_HTMLLabelElement) as DispHTMLLabelElement;
end;

class function CoHTMLLabelElement.CreateRemote(const MachineName: string): DispHTMLLabelElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLabelElement) as DispHTMLLabelElement;
end;

class function CoHTMLListElement.Create: DispHTMLListElement;
begin
  Result := CreateComObject(CLASS_HTMLListElement) as DispHTMLListElement;
end;

class function CoHTMLListElement.CreateRemote(const MachineName: string): DispHTMLListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLListElement) as DispHTMLListElement;
end;

class function CoHTMLUListElement.Create: DispHTMLUListElement;
begin
  Result := CreateComObject(CLASS_HTMLUListElement) as DispHTMLUListElement;
end;

class function CoHTMLUListElement.CreateRemote(const MachineName: string): DispHTMLUListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLUListElement) as DispHTMLUListElement;
end;

class function CoHTMLOListElement.Create: DispHTMLOListElement;
begin
  Result := CreateComObject(CLASS_HTMLOListElement) as DispHTMLOListElement;
end;

class function CoHTMLOListElement.CreateRemote(const MachineName: string): DispHTMLOListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOListElement) as DispHTMLOListElement;
end;

class function CoHTMLLIElement.Create: DispHTMLLIElement;
begin
  Result := CreateComObject(CLASS_HTMLLIElement) as DispHTMLLIElement;
end;

class function CoHTMLLIElement.CreateRemote(const MachineName: string): DispHTMLLIElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLIElement) as DispHTMLLIElement;
end;

class function CoHTMLBlockElement.Create: DispHTMLBlockElement;
begin
  Result := CreateComObject(CLASS_HTMLBlockElement) as DispHTMLBlockElement;
end;

class function CoHTMLBlockElement.CreateRemote(const MachineName: string): DispHTMLBlockElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBlockElement) as DispHTMLBlockElement;
end;

class function CoHTMLDivElement.Create: DispHTMLDivElement;
begin
  Result := CreateComObject(CLASS_HTMLDivElement) as DispHTMLDivElement;
end;

class function CoHTMLDivElement.CreateRemote(const MachineName: string): DispHTMLDivElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDivElement) as DispHTMLDivElement;
end;

class function CoHTMLDDElement.Create: DispHTMLDDElement;
begin
  Result := CreateComObject(CLASS_HTMLDDElement) as DispHTMLDDElement;
end;

class function CoHTMLDDElement.CreateRemote(const MachineName: string): DispHTMLDDElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDDElement) as DispHTMLDDElement;
end;

class function CoHTMLDTElement.Create: DispHTMLDTElement;
begin
  Result := CreateComObject(CLASS_HTMLDTElement) as DispHTMLDTElement;
end;

class function CoHTMLDTElement.CreateRemote(const MachineName: string): DispHTMLDTElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDTElement) as DispHTMLDTElement;
end;

class function CoHTMLBRElement.Create: DispHTMLBRElement;
begin
  Result := CreateComObject(CLASS_HTMLBRElement) as DispHTMLBRElement;
end;

class function CoHTMLBRElement.CreateRemote(const MachineName: string): DispHTMLBRElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBRElement) as DispHTMLBRElement;
end;

class function CoHTMLDListElement.Create: DispHTMLDListElement;
begin
  Result := CreateComObject(CLASS_HTMLDListElement) as DispHTMLDListElement;
end;

class function CoHTMLDListElement.CreateRemote(const MachineName: string): DispHTMLDListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDListElement) as DispHTMLDListElement;
end;

class function CoHTMLHRElement.Create: DispHTMLHRElement;
begin
  Result := CreateComObject(CLASS_HTMLHRElement) as DispHTMLHRElement;
end;

class function CoHTMLHRElement.CreateRemote(const MachineName: string): DispHTMLHRElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHRElement) as DispHTMLHRElement;
end;

class function CoHTMLParaElement.Create: DispHTMLParaElement;
begin
  Result := CreateComObject(CLASS_HTMLParaElement) as DispHTMLParaElement;
end;

class function CoHTMLParaElement.CreateRemote(const MachineName: string): DispHTMLParaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLParaElement) as DispHTMLParaElement;
end;

class function CoHTMLElementCollection.Create: DispHTMLElementCollection;
begin
  Result := CreateComObject(CLASS_HTMLElementCollection) as DispHTMLElementCollection;
end;

class function CoHTMLElementCollection.CreateRemote(const MachineName: string): DispHTMLElementCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLElementCollection) as DispHTMLElementCollection;
end;

class function CoHTMLHeaderElement.Create: DispHTMLHeaderElement;
begin
  Result := CreateComObject(CLASS_HTMLHeaderElement) as DispHTMLHeaderElement;
end;

class function CoHTMLHeaderElement.CreateRemote(const MachineName: string): DispHTMLHeaderElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHeaderElement) as DispHTMLHeaderElement;
end;

class function CoHTMLSelectElement.Create: DispHTMLSelectElement;
begin
  Result := CreateComObject(CLASS_HTMLSelectElement) as DispHTMLSelectElement;
end;

class function CoHTMLSelectElement.CreateRemote(const MachineName: string): DispHTMLSelectElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSelectElement) as DispHTMLSelectElement;
end;

class function CoHTMLOptionElement.Create: DispHTMLOptionElement;
begin
  Result := CreateComObject(CLASS_HTMLOptionElement) as DispHTMLOptionElement;
end;

class function CoHTMLOptionElement.CreateRemote(const MachineName: string): DispHTMLOptionElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOptionElement) as DispHTMLOptionElement;
end;

class function CoHTMLOptionElementFactory.Create: IHTMLOptionElementFactory;
begin
  Result := CreateComObject(CLASS_HTMLOptionElementFactory) as IHTMLOptionElementFactory;
end;

class function CoHTMLOptionElementFactory.CreateRemote(const MachineName: string): IHTMLOptionElementFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOptionElementFactory) as IHTMLOptionElementFactory;
end;

class function CoHTMLInputElement.Create: DispHTMLInputElement;
begin
  Result := CreateComObject(CLASS_HTMLInputElement) as DispHTMLInputElement;
end;

class function CoHTMLInputElement.CreateRemote(const MachineName: string): DispHTMLInputElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputElement) as DispHTMLInputElement;
end;

class function CoHTMLTextAreaElement.Create: DispHTMLTextAreaElement;
begin
  Result := CreateComObject(CLASS_HTMLTextAreaElement) as DispHTMLTextAreaElement;
end;

class function CoHTMLTextAreaElement.CreateRemote(const MachineName: string): DispHTMLTextAreaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTextAreaElement) as DispHTMLTextAreaElement;
end;

class function CoHTMLRichtextElement.Create: DispHTMLRichtextElement;
begin
  Result := CreateComObject(CLASS_HTMLRichtextElement) as DispHTMLRichtextElement;
end;

class function CoHTMLRichtextElement.CreateRemote(const MachineName: string): DispHTMLRichtextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLRichtextElement) as DispHTMLRichtextElement;
end;

class function CoHTMLButtonElement.Create: DispHTMLButtonElement;
begin
  Result := CreateComObject(CLASS_HTMLButtonElement) as DispHTMLButtonElement;
end;

class function CoHTMLButtonElement.CreateRemote(const MachineName: string): DispHTMLButtonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLButtonElement) as DispHTMLButtonElement;
end;

class function CoHTMLMarqueeElement.Create: DispHTMLMarqueeElement;
begin
  Result := CreateComObject(CLASS_HTMLMarqueeElement) as DispHTMLMarqueeElement;
end;

class function CoHTMLMarqueeElement.CreateRemote(const MachineName: string): DispHTMLMarqueeElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMarqueeElement) as DispHTMLMarqueeElement;
end;

class function CoHTMLHtmlElement.Create: DispHTMLHtmlElement;
begin
  Result := CreateComObject(CLASS_HTMLHtmlElement) as DispHTMLHtmlElement;
end;

class function CoHTMLHtmlElement.CreateRemote(const MachineName: string): DispHTMLHtmlElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHtmlElement) as DispHTMLHtmlElement;
end;

class function CoHTMLHeadElement.Create: DispHTMLHeadElement;
begin
  Result := CreateComObject(CLASS_HTMLHeadElement) as DispHTMLHeadElement;
end;

class function CoHTMLHeadElement.CreateRemote(const MachineName: string): DispHTMLHeadElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHeadElement) as DispHTMLHeadElement;
end;

class function CoHTMLTitleElement.Create: DispHTMLTitleElement;
begin
  Result := CreateComObject(CLASS_HTMLTitleElement) as DispHTMLTitleElement;
end;

class function CoHTMLTitleElement.CreateRemote(const MachineName: string): DispHTMLTitleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTitleElement) as DispHTMLTitleElement;
end;

class function CoHTMLMetaElement.Create: DispHTMLMetaElement;
begin
  Result := CreateComObject(CLASS_HTMLMetaElement) as DispHTMLMetaElement;
end;

class function CoHTMLMetaElement.CreateRemote(const MachineName: string): DispHTMLMetaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMetaElement) as DispHTMLMetaElement;
end;

class function CoHTMLBaseElement.Create: DispHTMLBaseElement;
begin
  Result := CreateComObject(CLASS_HTMLBaseElement) as DispHTMLBaseElement;
end;

class function CoHTMLBaseElement.CreateRemote(const MachineName: string): DispHTMLBaseElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBaseElement) as DispHTMLBaseElement;
end;

class function CoHTMLIsIndexElement.Create: DispHTMLIsIndexElement;
begin
  Result := CreateComObject(CLASS_HTMLIsIndexElement) as DispHTMLIsIndexElement;
end;

class function CoHTMLIsIndexElement.CreateRemote(const MachineName: string): DispHTMLIsIndexElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLIsIndexElement) as DispHTMLIsIndexElement;
end;

class function CoHTMLNextIdElement.Create: DispHTMLNextIdElement;
begin
  Result := CreateComObject(CLASS_HTMLNextIdElement) as DispHTMLNextIdElement;
end;

class function CoHTMLNextIdElement.CreateRemote(const MachineName: string): DispHTMLNextIdElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNextIdElement) as DispHTMLNextIdElement;
end;

class function CoHTMLBaseFontElement.Create: DispHTMLBaseFontElement;
begin
  Result := CreateComObject(CLASS_HTMLBaseFontElement) as DispHTMLBaseFontElement;
end;

class function CoHTMLBaseFontElement.CreateRemote(const MachineName: string): DispHTMLBaseFontElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBaseFontElement) as DispHTMLBaseFontElement;
end;

class function CoHTMLUnknownElement.Create: DispHTMLUnknownElement;
begin
  Result := CreateComObject(CLASS_HTMLUnknownElement) as DispHTMLUnknownElement;
end;

class function CoHTMLUnknownElement.CreateRemote(const MachineName: string): DispHTMLUnknownElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLUnknownElement) as DispHTMLUnknownElement;
end;

class function CoHTMLHistory.Create: IOmHistory;
begin
  Result := CreateComObject(CLASS_HTMLHistory) as IOmHistory;
end;

class function CoHTMLHistory.CreateRemote(const MachineName: string): IOmHistory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHistory) as IOmHistory;
end;

class function CoCMimeTypes.Create: IHTMLMimeTypesCollection;
begin
  Result := CreateComObject(CLASS_CMimeTypes) as IHTMLMimeTypesCollection;
end;

class function CoCMimeTypes.CreateRemote(const MachineName: string): IHTMLMimeTypesCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CMimeTypes) as IHTMLMimeTypesCollection;
end;

class function CoCPlugins.Create: IHTMLPluginsCollection;
begin
  Result := CreateComObject(CLASS_CPlugins) as IHTMLPluginsCollection;
end;

class function CoCPlugins.CreateRemote(const MachineName: string): IHTMLPluginsCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CPlugins) as IHTMLPluginsCollection;
end;

class function CoCOpsProfile.Create: IHTMLOpsProfile;
begin
  Result := CreateComObject(CLASS_COpsProfile) as IHTMLOpsProfile;
end;

class function CoCOpsProfile.CreateRemote(const MachineName: string): IHTMLOpsProfile;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_COpsProfile) as IHTMLOpsProfile;
end;

class function CoHTMLNavigator.Create: IOmNavigator;
begin
  Result := CreateComObject(CLASS_HTMLNavigator) as IOmNavigator;
end;

class function CoHTMLNavigator.CreateRemote(const MachineName: string): IOmNavigator;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNavigator) as IOmNavigator;
end;

class function CoHTMLLocation.Create: IHTMLLocation;
begin
  Result := CreateComObject(CLASS_HTMLLocation) as IHTMLLocation;
end;

class function CoHTMLLocation.CreateRemote(const MachineName: string): IHTMLLocation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLocation) as IHTMLLocation;
end;

class function CoCEventObj.Create: DispCEventObj;
begin
  Result := CreateComObject(CLASS_CEventObj) as DispCEventObj;
end;

class function CoCEventObj.CreateRemote(const MachineName: string): DispCEventObj;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CEventObj) as DispCEventObj;
end;

class function CoHTMLScreen.Create: IHTMLScreen;
begin
  Result := CreateComObject(CLASS_HTMLScreen) as IHTMLScreen;
end;

class function CoHTMLScreen.CreateRemote(const MachineName: string): IHTMLScreen;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLScreen) as IHTMLScreen;
end;

class function CoHTMLWindow2.Create: DispHTMLWindow2;
begin
  Result := CreateComObject(CLASS_HTMLWindow2) as DispHTMLWindow2;
end;

class function CoHTMLWindow2.CreateRemote(const MachineName: string): DispHTMLWindow2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLWindow2) as DispHTMLWindow2;
end;

class function CoHTMLWindowProxy.Create: DispHTMLWindowProxy;
begin
  Result := CreateComObject(CLASS_HTMLWindowProxy) as DispHTMLWindowProxy;
end;

class function CoHTMLWindowProxy.CreateRemote(const MachineName: string): DispHTMLWindowProxy;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLWindowProxy) as DispHTMLWindowProxy;
end;

class function CoHTMLDocument.Create: DispHTMLDocument;
begin
  Result := CreateComObject(CLASS_HTMLDocument) as DispHTMLDocument;
end;

class function CoHTMLDocument.CreateRemote(const MachineName: string): DispHTMLDocument;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDocument) as DispHTMLDocument;
end;

class function CoHTMLDocumentFragment.Create: DispHTMLDocumentFragment;
begin
  Result := CreateComObject(CLASS_HTMLDocumentFragment) as DispHTMLDocumentFragment;
end;

class function CoHTMLDocumentFragment.CreateRemote(const MachineName: string): DispHTMLDocumentFragment;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDocumentFragment) as DispHTMLDocumentFragment;
end;

procedure TScriptlet.InitControlData;
const
  CEventDispIDs: array [0..1] of DWORD = (
    $00000001, $FFFFFD9F);
  CControlData: TControlData2 = (
    ClassID: '{AE24FDAE-03C6-11D1-8B76-0080C744F389}';
    EventIID: '{A6D897FF-0A95-11D1-B0BA-006008166E11}';
    EventCount: 2;
    EventDispIDs: @CEventDispIDs;
    LicenseKey: nil (*HR:$80040154*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
  TControlData2(CControlData).FirstEventOfs := Cardinal(@@FOnonscriptletevent) - Cardinal(Self);
end;

procedure TScriptlet.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IWebBridge;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TScriptlet.GetControlInterface: IWebBridge;
begin
  CreateControl;
  Result := FIntf;
end;

function  TScriptlet.Get_event: IDispatch;
begin
  Result := DefaultInterface.Get_event;
end;

procedure TScriptlet.AboutBox;
begin
  DefaultInterface.AboutBox;
end;

class function CoHTMLEmbed.Create: DispHTMLEmbed;
begin
  Result := CreateComObject(CLASS_HTMLEmbed) as DispHTMLEmbed;
end;

class function CoHTMLEmbed.CreateRemote(const MachineName: string): DispHTMLEmbed;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLEmbed) as DispHTMLEmbed;
end;

class function CoHTMLAreasCollection.Create: DispHTMLAreasCollection;
begin
  Result := CreateComObject(CLASS_HTMLAreasCollection) as DispHTMLAreasCollection;
end;

class function CoHTMLAreasCollection.CreateRemote(const MachineName: string): DispHTMLAreasCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAreasCollection) as DispHTMLAreasCollection;
end;

class function CoHTMLMapElement.Create: DispHTMLMapElement;
begin
  Result := CreateComObject(CLASS_HTMLMapElement) as DispHTMLMapElement;
end;

class function CoHTMLMapElement.CreateRemote(const MachineName: string): DispHTMLMapElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMapElement) as DispHTMLMapElement;
end;

class function CoHTMLAreaElement.Create: DispHTMLAreaElement;
begin
  Result := CreateComObject(CLASS_HTMLAreaElement) as DispHTMLAreaElement;
end;

class function CoHTMLAreaElement.CreateRemote(const MachineName: string): DispHTMLAreaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAreaElement) as DispHTMLAreaElement;
end;

class function CoHTMLTableCaption.Create: DispHTMLTableCaption;
begin
  Result := CreateComObject(CLASS_HTMLTableCaption) as DispHTMLTableCaption;
end;

class function CoHTMLTableCaption.CreateRemote(const MachineName: string): DispHTMLTableCaption;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableCaption) as DispHTMLTableCaption;
end;

class function CoHTMLCommentElement.Create: DispHTMLCommentElement;
begin
  Result := CreateComObject(CLASS_HTMLCommentElement) as DispHTMLCommentElement;
end;

class function CoHTMLCommentElement.CreateRemote(const MachineName: string): DispHTMLCommentElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCommentElement) as DispHTMLCommentElement;
end;

class function CoHTMLPhraseElement.Create: DispHTMLPhraseElement;
begin
  Result := CreateComObject(CLASS_HTMLPhraseElement) as DispHTMLPhraseElement;
end;

class function CoHTMLPhraseElement.CreateRemote(const MachineName: string): DispHTMLPhraseElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLPhraseElement) as DispHTMLPhraseElement;
end;

class function CoHTMLSpanElement.Create: DispHTMLSpanElement;
begin
  Result := CreateComObject(CLASS_HTMLSpanElement) as DispHTMLSpanElement;
end;

class function CoHTMLSpanElement.CreateRemote(const MachineName: string): DispHTMLSpanElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSpanElement) as DispHTMLSpanElement;
end;

class function CoHTMLTable.Create: DispHTMLTable;
begin
  Result := CreateComObject(CLASS_HTMLTable) as DispHTMLTable;
end;

class function CoHTMLTable.CreateRemote(const MachineName: string): DispHTMLTable;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTable) as DispHTMLTable;
end;

class function CoHTMLTableCol.Create: DispHTMLTableCol;
begin
  Result := CreateComObject(CLASS_HTMLTableCol) as DispHTMLTableCol;
end;

class function CoHTMLTableCol.CreateRemote(const MachineName: string): DispHTMLTableCol;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableCol) as DispHTMLTableCol;
end;

class function CoHTMLTableSection.Create: DispHTMLTableSection;
begin
  Result := CreateComObject(CLASS_HTMLTableSection) as DispHTMLTableSection;
end;

class function CoHTMLTableSection.CreateRemote(const MachineName: string): DispHTMLTableSection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableSection) as DispHTMLTableSection;
end;

class function CoHTMLTableRow.Create: DispHTMLTableRow;
begin
  Result := CreateComObject(CLASS_HTMLTableRow) as DispHTMLTableRow;
end;

class function CoHTMLTableRow.CreateRemote(const MachineName: string): DispHTMLTableRow;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableRow) as DispHTMLTableRow;
end;

class function CoHTMLTableCell.Create: DispHTMLTableCell;
begin
  Result := CreateComObject(CLASS_HTMLTableCell) as DispHTMLTableCell;
end;

class function CoHTMLTableCell.CreateRemote(const MachineName: string): DispHTMLTableCell;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableCell) as DispHTMLTableCell;
end;

class function CoHTMLScriptElement.Create: DispHTMLScriptElement;
begin
  Result := CreateComObject(CLASS_HTMLScriptElement) as DispHTMLScriptElement;
end;

class function CoHTMLScriptElement.CreateRemote(const MachineName: string): DispHTMLScriptElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLScriptElement) as DispHTMLScriptElement;
end;

class function CoHTMLNoShowElement.Create: DispHTMLNoShowElement;
begin
  Result := CreateComObject(CLASS_HTMLNoShowElement) as DispHTMLNoShowElement;
end;

class function CoHTMLNoShowElement.CreateRemote(const MachineName: string): DispHTMLNoShowElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNoShowElement) as DispHTMLNoShowElement;
end;

class function CoHTMLObjectElement.Create: DispHTMLObjectElement;
begin
  Result := CreateComObject(CLASS_HTMLObjectElement) as DispHTMLObjectElement;
end;

class function CoHTMLObjectElement.CreateRemote(const MachineName: string): DispHTMLObjectElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLObjectElement) as DispHTMLObjectElement;
end;

class function CoHTMLFrameBase.Create: DispHTMLFrameBase;
begin
  Result := CreateComObject(CLASS_HTMLFrameBase) as DispHTMLFrameBase;
end;

class function CoHTMLFrameBase.CreateRemote(const MachineName: string): DispHTMLFrameBase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFrameBase) as DispHTMLFrameBase;
end;

class function CoHTMLFrameElement.Create: DispHTMLFrameElement;
begin
  Result := CreateComObject(CLASS_HTMLFrameElement) as DispHTMLFrameElement;
end;

class function CoHTMLFrameElement.CreateRemote(const MachineName: string): DispHTMLFrameElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFrameElement) as DispHTMLFrameElement;
end;

class function CoHTMLIFrame.Create: DispHTMLIFrame;
begin
  Result := CreateComObject(CLASS_HTMLIFrame) as DispHTMLIFrame;
end;

class function CoHTMLIFrame.CreateRemote(const MachineName: string): DispHTMLIFrame;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLIFrame) as DispHTMLIFrame;
end;

class function CoHTMLDivPosition.Create: DispHTMLDivPosition;
begin
  Result := CreateComObject(CLASS_HTMLDivPosition) as DispHTMLDivPosition;
end;

class function CoHTMLDivPosition.CreateRemote(const MachineName: string): DispHTMLDivPosition;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDivPosition) as DispHTMLDivPosition;
end;

class function CoHTMLFieldSetElement.Create: DispHTMLFieldSetElement;
begin
  Result := CreateComObject(CLASS_HTMLFieldSetElement) as DispHTMLFieldSetElement;
end;

class function CoHTMLFieldSetElement.CreateRemote(const MachineName: string): DispHTMLFieldSetElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFieldSetElement) as DispHTMLFieldSetElement;
end;

class function CoHTMLLegendElement.Create: DispHTMLLegendElement;
begin
  Result := CreateComObject(CLASS_HTMLLegendElement) as DispHTMLLegendElement;
end;

class function CoHTMLLegendElement.CreateRemote(const MachineName: string): DispHTMLLegendElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLegendElement) as DispHTMLLegendElement;
end;

class function CoHTMLSpanFlow.Create: DispHTMLSpanFlow;
begin
  Result := CreateComObject(CLASS_HTMLSpanFlow) as DispHTMLSpanFlow;
end;

class function CoHTMLSpanFlow.CreateRemote(const MachineName: string): DispHTMLSpanFlow;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSpanFlow) as DispHTMLSpanFlow;
end;

class function CoHTMLFrameSetSite.Create: DispHTMLFrameSetSite;
begin
  Result := CreateComObject(CLASS_HTMLFrameSetSite) as DispHTMLFrameSetSite;
end;

class function CoHTMLFrameSetSite.CreateRemote(const MachineName: string): DispHTMLFrameSetSite;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFrameSetSite) as DispHTMLFrameSetSite;
end;

class function CoHTMLBGsound.Create: DispHTMLBGsound;
begin
  Result := CreateComObject(CLASS_HTMLBGsound) as DispHTMLBGsound;
end;

class function CoHTMLBGsound.CreateRemote(const MachineName: string): DispHTMLBGsound;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBGsound) as DispHTMLBGsound;
end;

class function CoHTMLStyleElement.Create: DispHTMLStyleElement;
begin
  Result := CreateComObject(CLASS_HTMLStyleElement) as DispHTMLStyleElement;
end;

class function CoHTMLStyleElement.CreateRemote(const MachineName: string): DispHTMLStyleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleElement) as DispHTMLStyleElement;
end;

class function CoHTMLStyleFontFace.Create: IHTMLStyleFontFace;
begin
  Result := CreateComObject(CLASS_HTMLStyleFontFace) as IHTMLStyleFontFace;
end;

class function CoHTMLStyleFontFace.CreateRemote(const MachineName: string): IHTMLStyleFontFace;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleFontFace) as IHTMLStyleFontFace;
end;

class function CoThreadDialogProcParam.Create: IHTMLModelessInit;
begin
  Result := CreateComObject(CLASS_ThreadDialogProcParam) as IHTMLModelessInit;
end;

class function CoThreadDialogProcParam.CreateRemote(const MachineName: string): IHTMLModelessInit;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ThreadDialogProcParam) as IHTMLModelessInit;
end;

class function CoHTMLDialog.Create: IHTMLDialog;
begin
  Result := CreateComObject(CLASS_HTMLDialog) as IHTMLDialog;
end;

class function CoHTMLDialog.CreateRemote(const MachineName: string): IHTMLDialog;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDialog) as IHTMLDialog;
end;

class function CoHTMLAppBehavior.Create: DispHTMLAppBehavior;
begin
  Result := CreateComObject(CLASS_HTMLAppBehavior) as DispHTMLAppBehavior;
end;

class function CoHTMLAppBehavior.CreateRemote(const MachineName: string): DispHTMLAppBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAppBehavior) as DispHTMLAppBehavior;
end;

class function CoOldHTMLDocument.Create: DispHTMLDocument;
begin
  Result := CreateComObject(CLASS_OldHTMLDocument) as DispHTMLDocument;
end;

class function CoOldHTMLDocument.CreateRemote(const MachineName: string): DispHTMLDocument;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OldHTMLDocument) as DispHTMLDocument;
end;

class function CoOldHTMLFormElement.Create: DispHTMLFormElement;
begin
  Result := CreateComObject(CLASS_OldHTMLFormElement) as DispHTMLFormElement;
end;

class function CoOldHTMLFormElement.CreateRemote(const MachineName: string): DispHTMLFormElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OldHTMLFormElement) as DispHTMLFormElement;
end;

class function CoHTMLInputButtonElement.Create: DispIHTMLInputButtonElement;
begin
  Result := CreateComObject(CLASS_HTMLInputButtonElement) as DispIHTMLInputButtonElement;
end;

class function CoHTMLInputButtonElement.CreateRemote(const MachineName: string): DispIHTMLInputButtonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputButtonElement) as DispIHTMLInputButtonElement;
end;

class function CoHTMLInputTextElement.Create: DispIHTMLInputTextElement;
begin
  Result := CreateComObject(CLASS_HTMLInputTextElement) as DispIHTMLInputTextElement;
end;

class function CoHTMLInputTextElement.CreateRemote(const MachineName: string): DispIHTMLInputTextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputTextElement) as DispIHTMLInputTextElement;
end;

class function CoHTMLInputFileElement.Create: DispIHTMLInputFileElement;
begin
  Result := CreateComObject(CLASS_HTMLInputFileElement) as DispIHTMLInputFileElement;
end;

class function CoHTMLInputFileElement.CreateRemote(const MachineName: string): DispIHTMLInputFileElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputFileElement) as DispIHTMLInputFileElement;
end;

class function CoHTMLOptionButtonElement.Create: DispIHTMLOptionButtonElement;
begin
  Result := CreateComObject(CLASS_HTMLOptionButtonElement) as DispIHTMLOptionButtonElement;
end;

class function CoHTMLOptionButtonElement.CreateRemote(const MachineName: string): DispIHTMLOptionButtonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOptionButtonElement) as DispIHTMLOptionButtonElement;
end;

class function CohtmlInputImage.Create: DispIHTMLInputImage;
begin
  Result := CreateComObject(CLASS_htmlInputImage) as DispIHTMLInputImage;
end;

class function CohtmlInputImage.CreateRemote(const MachineName: string): DispIHTMLInputImage;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_htmlInputImage) as DispIHTMLInputImage;
end;

end.

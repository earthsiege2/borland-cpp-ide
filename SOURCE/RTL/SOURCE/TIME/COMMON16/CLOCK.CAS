/*------------------------------------------------------------------------
 * filename - clock.cas
 *
 * function(s)
 *        clock     - ANSI standard; returns number of timer ticks
 *                    that have elapsed since this program started.
 *-----------------------------------------------------------------------*/

/*
 *      C/C++ Run Time Library - Version 6.5
 *
 *      Copyright (c) 1987, 1994 by Borland International
 *      All Rights Reserved.
 *
 */


#include <dos.h>
#include <time.h>
#include <sys\timeb.h>
#include <RtlData.h>

#if !defined( _RTLDLL )
static unsigned long _StartTimeSec;     /* beginning of program execution  */
static short         _StartTimeMilli;   /*   initialized by initproc       */
#endif

void _FARFUNC _ftime(struct timeb _FAR *TimeStructPtr);

clock_t clock(void)
{
    struct timeb NowTime;

   _ftime(&NowTime);

   /* return clock count */
   return((NowTime.time - _RTLInstanceData(_StartTimeSec)) * (unsigned)CLOCKS_PER_SEC +
          (NowTime.millitm - _RTLInstanceData(_StartTimeMilli)));
}

static void InitClock(void)
{
#pragma startup InitClock 31

     struct timeb StartTime;

     _ftime(&StartTime);
     _RTLInstanceData(_StartTimeSec) = StartTime.time;
     _RTLInstanceData(_StartTimeMilli) = StartTime.millitm;
}
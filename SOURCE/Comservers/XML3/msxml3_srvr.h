// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.0.1.0.1.1  $
// File generated on 1/24/2002 7:03:18 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: c:\winnt\system32\msxml3.dll (1)
// LIBID: {F5078F18-C551-11D3-89B9-0000F81FE221}
// LCID: 0
// Helpfile: 
// HelpString: Microsoft XML, v3.0
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINNT\System32\stdole2.tlb)
// ************************************************************************ //
#ifndef   MSXML3_SRVRH
#define   MSXML3_SRVRH

#pragma option push -b -w-inl

#include <oleserver.hpp>
#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0500)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "MSXML3.h"
namespace Msxml3
{

// *********************************************************************//
// HelpString: Microsoft XML, v3.0
// Version:    3.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsDOMDocument
// Help String      : W3C-DOM XML Document (Apartment)
// Default Interface: IXMLDOMDocument2
// Def. Intf. Object: IXMLDOMDocument2Ptr
// Def. Intf. DISP? : No
// Event   Interface: XMLDOMDocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsDOMDocument : public Oleserver::TOleServer
{
  IXMLDOMDocument2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsDOMDocument(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMDocument2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMDocument2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMSchemaCollectionPtr __fastcall get_namespaces(void)
  {
    return GetDefaultInterface()->get_namespaces();
  }

// StdProp:OleVariant
  TVariant __fastcall get_schemas(void)
  {
    return GetDefaultInterface()->get_schemas();
  }

// StdProp:OleVariant
  void __fastcall _set_schemas(VARIANT otherCollection/*[in]*/)
  {
    GetDefaultInterface()->_set_schemas(otherCollection/*[in]*/);
  }

  /*CoClassWriteMethods*/
  Msxml3::IXMLDOMParseErrorPtr __fastcall validate(void)
  {
    return GetDefaultInterface()->validate();
  }

  void __fastcall setProperty(BSTR name/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setProperty(name/*[in]*/, value/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR name/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(name/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMSchemaCollectionPtr namespaces={ read=get_namespaces }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant schemas={ read=get_schemas }; // 0, No
  */
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnondataavailable;
  TNotifyEvent                   FOnonreadystatechange;
__published:
  __property TNotifyEvent Onondataavailable={ read=FOnondataavailable, write=FOnondataavailable };
  __property TNotifyEvent Ononreadystatechange={ read=FOnonreadystatechange, write=FOnonreadystatechange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsDOMDocument26
// Help String      : W3C-DOM XML Document (Apartment)
// Default Interface: IXMLDOMDocument2
// Def. Intf. Object: IXMLDOMDocument2Ptr
// Def. Intf. DISP? : No
// Event   Interface: XMLDOMDocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsDOMDocument26 : public Oleserver::TOleServer
{
  IXMLDOMDocument2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsDOMDocument26(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMDocument2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMDocument2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMSchemaCollectionPtr __fastcall get_namespaces(void)
  {
    return GetDefaultInterface()->get_namespaces();
  }

// StdProp:OleVariant
  TVariant __fastcall get_schemas(void)
  {
    return GetDefaultInterface()->get_schemas();
  }

// StdProp:OleVariant
  void __fastcall _set_schemas(VARIANT otherCollection/*[in]*/)
  {
    GetDefaultInterface()->_set_schemas(otherCollection/*[in]*/);
  }

  /*CoClassWriteMethods*/
  Msxml3::IXMLDOMParseErrorPtr __fastcall validate(void)
  {
    return GetDefaultInterface()->validate();
  }

  void __fastcall setProperty(BSTR name/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setProperty(name/*[in]*/, value/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR name/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(name/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMSchemaCollectionPtr namespaces={ read=get_namespaces }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant schemas={ read=get_schemas }; // 0, No
  */
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnondataavailable;
  TNotifyEvent                   FOnonreadystatechange;
__published:
  __property TNotifyEvent Onondataavailable={ read=FOnondataavailable, write=FOnondataavailable };
  __property TNotifyEvent Ononreadystatechange={ read=FOnonreadystatechange, write=FOnonreadystatechange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsDOMDocument30
// Help String      : W3C-DOM XML Document (Apartment)
// Default Interface: IXMLDOMDocument2
// Def. Intf. Object: IXMLDOMDocument2Ptr
// Def. Intf. DISP? : No
// Event   Interface: XMLDOMDocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsDOMDocument30 : public Oleserver::TOleServer
{
  IXMLDOMDocument2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsDOMDocument30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMDocument2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMDocument2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMSchemaCollectionPtr __fastcall get_namespaces(void)
  {
    return GetDefaultInterface()->get_namespaces();
  }

// StdProp:OleVariant
  TVariant __fastcall get_schemas(void)
  {
    return GetDefaultInterface()->get_schemas();
  }

// StdProp:OleVariant
  void __fastcall _set_schemas(VARIANT otherCollection/*[in]*/)
  {
    GetDefaultInterface()->_set_schemas(otherCollection/*[in]*/);
  }

  /*CoClassWriteMethods*/
  Msxml3::IXMLDOMParseErrorPtr __fastcall validate(void)
  {
    return GetDefaultInterface()->validate();
  }

  void __fastcall setProperty(BSTR name/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setProperty(name/*[in]*/, value/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR name/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(name/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMSchemaCollectionPtr namespaces={ read=get_namespaces }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant schemas={ read=get_schemas }; // 0, No
  */
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnondataavailable;
  TNotifyEvent                   FOnonreadystatechange;
__published:
  __property TNotifyEvent Onondataavailable={ read=FOnondataavailable, write=FOnondataavailable };
  __property TNotifyEvent Ononreadystatechange={ read=FOnonreadystatechange, write=FOnonreadystatechange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsFreeThreadedDOMDocument
// Help String      : W3C-DOM XML Document (Free threaded)
// Default Interface: IXMLDOMDocument2
// Def. Intf. Object: IXMLDOMDocument2Ptr
// Def. Intf. DISP? : No
// Event   Interface: XMLDOMDocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsFreeThreadedDOMDocument : public Oleserver::TOleServer
{
  IXMLDOMDocument2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsFreeThreadedDOMDocument(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMDocument2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMDocument2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMSchemaCollectionPtr __fastcall get_namespaces(void)
  {
    return GetDefaultInterface()->get_namespaces();
  }

// StdProp:OleVariant
  TVariant __fastcall get_schemas(void)
  {
    return GetDefaultInterface()->get_schemas();
  }

// StdProp:OleVariant
  void __fastcall _set_schemas(VARIANT otherCollection/*[in]*/)
  {
    GetDefaultInterface()->_set_schemas(otherCollection/*[in]*/);
  }

  /*CoClassWriteMethods*/
  Msxml3::IXMLDOMParseErrorPtr __fastcall validate(void)
  {
    return GetDefaultInterface()->validate();
  }

  void __fastcall setProperty(BSTR name/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setProperty(name/*[in]*/, value/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR name/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(name/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMSchemaCollectionPtr namespaces={ read=get_namespaces }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant schemas={ read=get_schemas }; // 0, No
  */
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnondataavailable;
  TNotifyEvent                   FOnonreadystatechange;
__published:
  __property TNotifyEvent Onondataavailable={ read=FOnondataavailable, write=FOnondataavailable };
  __property TNotifyEvent Ononreadystatechange={ read=FOnonreadystatechange, write=FOnonreadystatechange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsFreeThreadedDOMDocument26
// Help String      : W3C-DOM XML Document (Free threaded)
// Default Interface: IXMLDOMDocument2
// Def. Intf. Object: IXMLDOMDocument2Ptr
// Def. Intf. DISP? : No
// Event   Interface: XMLDOMDocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsFreeThreadedDOMDocument26 : public Oleserver::TOleServer
{
  IXMLDOMDocument2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsFreeThreadedDOMDocument26(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMDocument2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMDocument2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMSchemaCollectionPtr __fastcall get_namespaces(void)
  {
    return GetDefaultInterface()->get_namespaces();
  }

// StdProp:OleVariant
  TVariant __fastcall get_schemas(void)
  {
    return GetDefaultInterface()->get_schemas();
  }

// StdProp:OleVariant
  void __fastcall _set_schemas(VARIANT otherCollection/*[in]*/)
  {
    GetDefaultInterface()->_set_schemas(otherCollection/*[in]*/);
  }

  /*CoClassWriteMethods*/
  Msxml3::IXMLDOMParseErrorPtr __fastcall validate(void)
  {
    return GetDefaultInterface()->validate();
  }

  void __fastcall setProperty(BSTR name/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setProperty(name/*[in]*/, value/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR name/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(name/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMSchemaCollectionPtr namespaces={ read=get_namespaces }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant schemas={ read=get_schemas }; // 0, No
  */
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnondataavailable;
  TNotifyEvent                   FOnonreadystatechange;
__published:
  __property TNotifyEvent Onondataavailable={ read=FOnondataavailable, write=FOnondataavailable };
  __property TNotifyEvent Ononreadystatechange={ read=FOnonreadystatechange, write=FOnonreadystatechange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsFreeThreadedDOMDocument30
// Help String      : W3C-DOM XML Document (Free threaded)
// Default Interface: IXMLDOMDocument2
// Def. Intf. Object: IXMLDOMDocument2Ptr
// Def. Intf. DISP? : No
// Event   Interface: XMLDOMDocumentEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsFreeThreadedDOMDocument30 : public Oleserver::TOleServer
{
  IXMLDOMDocument2Ptr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsFreeThreadedDOMDocument30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMDocument2Ptr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMDocument2Ptr intf);

  virtual void __fastcall InvokeEvent(int DispID, Oleserver::TVariantArray& params);

  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMSchemaCollectionPtr __fastcall get_namespaces(void)
  {
    return GetDefaultInterface()->get_namespaces();
  }

// StdProp:OleVariant
  TVariant __fastcall get_schemas(void)
  {
    return GetDefaultInterface()->get_schemas();
  }

// StdProp:OleVariant
  void __fastcall _set_schemas(VARIANT otherCollection/*[in]*/)
  {
    GetDefaultInterface()->_set_schemas(otherCollection/*[in]*/);
  }

  /*CoClassWriteMethods*/
  Msxml3::IXMLDOMParseErrorPtr __fastcall validate(void)
  {
    return GetDefaultInterface()->validate();
  }

  void __fastcall setProperty(BSTR name/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setProperty(name/*[in]*/, value/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR name/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(name/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMSchemaCollectionPtr namespaces={ read=get_namespaces }; // 0, Yes
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant schemas={ read=get_schemas }; // 0, No
  */
  /*CoClassWriteProperties*/
  /*CoClassWriteEventDecls*/
private:
  TNotifyEvent                   FOnondataavailable;
  TNotifyEvent                   FOnonreadystatechange;
__published:
  __property TNotifyEvent Onondataavailable={ read=FOnondataavailable, write=FOnondataavailable };
  __property TNotifyEvent Ononreadystatechange={ read=FOnonreadystatechange, write=FOnonreadystatechange };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXMLSchemaCache
// Help String      : object for caching schemas
// Default Interface: IXMLDOMSchemaCollection
// Def. Intf. Object: IXMLDOMSchemaCollectionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXMLSchemaCache : public Oleserver::TOleServer
{
  IXMLDOMSchemaCollectionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXMLSchemaCache(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMSchemaCollectionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMSchemaCollectionPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_length(void)
  {
    return GetDefaultInterface()->get_length();
  }

// StdProp:WideString
  BSTR __fastcall get_namespaceURI(long index/*[in]*/)
  {
    return GetDefaultInterface()->get_namespaceURI(index/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall add(BSTR namespaceURI/*[in]*/, VARIANT var/*[in]*/)
  {
    GetDefaultInterface()->add(namespaceURI/*[in]*/, var/*[in]*/);
  }

  Msxml3::IXMLDOMNodePtr __fastcall get(BSTR namespaceURI/*[in]*/)
  {
    return GetDefaultInterface()->get(namespaceURI/*[in]*/);
  }

  void __fastcall remove(BSTR namespaceURI/*[in]*/)
  {
    GetDefaultInterface()->remove(namespaceURI/*[in]*/);
  }

  void __fastcall addCollection(Msxml3::IXMLDOMSchemaCollection* otherCollection/*[in]*/)
  {
    GetDefaultInterface()->addCollection(otherCollection/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property long length={ read=get_length }; // 0, No
  __property BSTR namespaceURI[long index]={ read=get_namespaceURI }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXMLSchemaCache26
// Help String      : object for caching schemas
// Default Interface: IXMLDOMSchemaCollection
// Def. Intf. Object: IXMLDOMSchemaCollectionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXMLSchemaCache26 : public Oleserver::TOleServer
{
  IXMLDOMSchemaCollectionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXMLSchemaCache26(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMSchemaCollectionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMSchemaCollectionPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_length(void)
  {
    return GetDefaultInterface()->get_length();
  }

// StdProp:WideString
  BSTR __fastcall get_namespaceURI(long index/*[in]*/)
  {
    return GetDefaultInterface()->get_namespaceURI(index/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall add(BSTR namespaceURI/*[in]*/, VARIANT var/*[in]*/)
  {
    GetDefaultInterface()->add(namespaceURI/*[in]*/, var/*[in]*/);
  }

  Msxml3::IXMLDOMNodePtr __fastcall get(BSTR namespaceURI/*[in]*/)
  {
    return GetDefaultInterface()->get(namespaceURI/*[in]*/);
  }

  void __fastcall remove(BSTR namespaceURI/*[in]*/)
  {
    GetDefaultInterface()->remove(namespaceURI/*[in]*/);
  }

  void __fastcall addCollection(Msxml3::IXMLDOMSchemaCollection* otherCollection/*[in]*/)
  {
    GetDefaultInterface()->addCollection(otherCollection/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property long length={ read=get_length }; // 0, No
  __property BSTR namespaceURI[long index]={ read=get_namespaceURI }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXMLSchemaCache30
// Help String      : object for caching schemas
// Default Interface: IXMLDOMSchemaCollection
// Def. Intf. Object: IXMLDOMSchemaCollectionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXMLSchemaCache30 : public Oleserver::TOleServer
{
  IXMLDOMSchemaCollectionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXMLSchemaCache30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLDOMSchemaCollectionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLDOMSchemaCollectionPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_length(void)
  {
    return GetDefaultInterface()->get_length();
  }

// StdProp:WideString
  BSTR __fastcall get_namespaceURI(long index/*[in]*/)
  {
    return GetDefaultInterface()->get_namespaceURI(index/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall add(BSTR namespaceURI/*[in]*/, VARIANT var/*[in]*/)
  {
    GetDefaultInterface()->add(namespaceURI/*[in]*/, var/*[in]*/);
  }

  Msxml3::IXMLDOMNodePtr __fastcall get(BSTR namespaceURI/*[in]*/)
  {
    return GetDefaultInterface()->get(namespaceURI/*[in]*/);
  }

  void __fastcall remove(BSTR namespaceURI/*[in]*/)
  {
    GetDefaultInterface()->remove(namespaceURI/*[in]*/);
  }

  void __fastcall addCollection(Msxml3::IXMLDOMSchemaCollection* otherCollection/*[in]*/)
  {
    GetDefaultInterface()->addCollection(otherCollection/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property long length={ read=get_length }; // 0, No
  __property BSTR namespaceURI[long index]={ read=get_namespaceURI }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXSLTemplate
// Help String      : object for caching compiled XSL stylesheets
// Default Interface: IXSLTemplate
// Def. Intf. Object: IXSLTemplatePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXSLTemplate : public Oleserver::TOleServer
{
  IXSLTemplatePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXSLTemplate(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXSLTemplatePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXSLTemplatePtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  void __fastcall _set_stylesheet(Msxml3::IXMLDOMNode* stylesheet/*[in]*/)
  {
    GetDefaultInterface()->_set_stylesheet(stylesheet/*[in]*/);
  }

// StdProp:
  Msxml3::IXMLDOMNodePtr __fastcall get_stylesheet(void)
  {
    return GetDefaultInterface()->get_stylesheet();
  }

  /*CoClassWriteMethods*/
  Msxml3::IXSLProcessorPtr __fastcall createProcessor(void)
  {
    return GetDefaultInterface()->createProcessor();
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMNodePtr stylesheet={ read=get_stylesheet }; // 0, Yes
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXSLTemplate26
// Help String      : object for caching compiled XSL stylesheets
// Default Interface: IXSLTemplate
// Def. Intf. Object: IXSLTemplatePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXSLTemplate26 : public Oleserver::TOleServer
{
  IXSLTemplatePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXSLTemplate26(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXSLTemplatePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXSLTemplatePtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  void __fastcall _set_stylesheet(Msxml3::IXMLDOMNode* stylesheet/*[in]*/)
  {
    GetDefaultInterface()->_set_stylesheet(stylesheet/*[in]*/);
  }

// StdProp:
  Msxml3::IXMLDOMNodePtr __fastcall get_stylesheet(void)
  {
    return GetDefaultInterface()->get_stylesheet();
  }

  /*CoClassWriteMethods*/
  Msxml3::IXSLProcessorPtr __fastcall createProcessor(void)
  {
    return GetDefaultInterface()->createProcessor();
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMNodePtr stylesheet={ read=get_stylesheet }; // 0, Yes
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXSLTemplate30
// Help String      : object for caching compiled XSL stylesheets
// Default Interface: IXSLTemplate
// Def. Intf. Object: IXSLTemplatePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXSLTemplate30 : public Oleserver::TOleServer
{
  IXSLTemplatePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXSLTemplate30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXSLTemplatePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXSLTemplatePtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  void __fastcall _set_stylesheet(Msxml3::IXMLDOMNode* stylesheet/*[in]*/)
  {
    GetDefaultInterface()->_set_stylesheet(stylesheet/*[in]*/);
  }

// StdProp:
  Msxml3::IXMLDOMNodePtr __fastcall get_stylesheet(void)
  {
    return GetDefaultInterface()->get_stylesheet();
  }

  /*CoClassWriteMethods*/
  Msxml3::IXSLProcessorPtr __fastcall createProcessor(void)
  {
    return GetDefaultInterface()->createProcessor();
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMNodePtr stylesheet={ read=get_stylesheet }; // 0, Yes
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsDSOControl
// Help String      : XML Data Source Object
// Default Interface: IDSOControl
// Def. Intf. Object: IDSOControlPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsDSOControl : public Oleserver::TOleServer
{
  IDSOControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsDSOControl(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IDSOControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDSOControlPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMDocumentPtr __fastcall get_XMLDocument(void)
  {
    return GetDefaultInterface()->get_XMLDocument();
  }

// StdProp:
  void __fastcall set_XMLDocument(Msxml3::IXMLDOMDocument* ppDoc/*[in]*/)
  {
    GetDefaultInterface()->set_XMLDocument(ppDoc/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_JavaDSOCompatible(void)
  {
    return GetDefaultInterface()->get_JavaDSOCompatible();
  }

// StdProp:Integer
  void __fastcall set_JavaDSOCompatible(long fJavaDSOCompatible/*[in]*/)
  {
    GetDefaultInterface()->set_JavaDSOCompatible(fJavaDSOCompatible/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property long readyState={ read=get_readyState }; // 0, No
  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMDocumentPtr XMLDocument={ read=get_XMLDocument, stored=false }; // 0, Yes
  __property long JavaDSOCompatible={ read=get_JavaDSOCompatible, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsDSOControl26
// Help String      : XML Data Source Object
// Default Interface: IDSOControl
// Def. Intf. Object: IDSOControlPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsDSOControl26 : public Oleserver::TOleServer
{
  IDSOControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsDSOControl26(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IDSOControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDSOControlPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMDocumentPtr __fastcall get_XMLDocument(void)
  {
    return GetDefaultInterface()->get_XMLDocument();
  }

// StdProp:
  void __fastcall set_XMLDocument(Msxml3::IXMLDOMDocument* ppDoc/*[in]*/)
  {
    GetDefaultInterface()->set_XMLDocument(ppDoc/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_JavaDSOCompatible(void)
  {
    return GetDefaultInterface()->get_JavaDSOCompatible();
  }

// StdProp:Integer
  void __fastcall set_JavaDSOCompatible(long fJavaDSOCompatible/*[in]*/)
  {
    GetDefaultInterface()->set_JavaDSOCompatible(fJavaDSOCompatible/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property long readyState={ read=get_readyState }; // 0, No
  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMDocumentPtr XMLDocument={ read=get_XMLDocument, stored=false }; // 0, Yes
  __property long JavaDSOCompatible={ read=get_JavaDSOCompatible, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsDSOControl30
// Help String      : XML Data Source Object
// Default Interface: IDSOControl
// Def. Intf. Object: IDSOControlPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsDSOControl30 : public Oleserver::TOleServer
{
  IDSOControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsDSOControl30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IDSOControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDSOControlPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IXMLDOMDocumentPtr __fastcall get_XMLDocument(void)
  {
    return GetDefaultInterface()->get_XMLDocument();
  }

// StdProp:
  void __fastcall set_XMLDocument(Msxml3::IXMLDOMDocument* ppDoc/*[in]*/)
  {
    GetDefaultInterface()->set_XMLDocument(ppDoc/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_JavaDSOCompatible(void)
  {
    return GetDefaultInterface()->get_JavaDSOCompatible();
  }

// StdProp:Integer
  void __fastcall set_JavaDSOCompatible(long fJavaDSOCompatible/*[in]*/)
  {
    GetDefaultInterface()->set_JavaDSOCompatible(fJavaDSOCompatible/*[in]*/);
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

  /*CoClassWriteMethods*/
  /*CoClassWriteProperties*/
  __property long readyState={ read=get_readyState }; // 0, No
  /*CoClassWriteProperties*/
  __property Msxml3::IXMLDOMDocumentPtr XMLDocument={ read=get_XMLDocument, stored=false }; // 0, Yes
  __property long JavaDSOCompatible={ read=get_JavaDSOCompatible, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXMLHTTP
// Help String      : XML HTTP Request class.
// Default Interface: IXMLHTTPRequest
// Def. Intf. Object: IXMLHTTPRequestPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXMLHTTP : public Oleserver::TOleServer
{
  IXMLHTTPRequestPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXMLHTTP(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLHTTPRequestPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLHTTPRequestPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_status(void)
  {
    return GetDefaultInterface()->get_status();
  }

// StdProp:WideString
  BSTR __fastcall get_statusText(void)
  {
    return GetDefaultInterface()->get_statusText();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_responseXML(void)
  {
    return GetDefaultInterface()->get_responseXML();
  }

// StdProp:WideString
  BSTR __fastcall get_responseText(void)
  {
    return GetDefaultInterface()->get_responseText();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseBody(void)
  {
    return GetDefaultInterface()->get_responseBody();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseStream(void)
  {
    return GetDefaultInterface()->get_responseStream();
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

// StdProp:IDispatch
  void __fastcall set_onreadystatechange(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->set_onreadystatechange(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall open(BSTR bstrMethod/*[in]*/, BSTR bstrUrl/*[in]*/, 
                       VARIANT varAsync/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrUser/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->open(bstrMethod/*[in]*/, bstrUrl/*[in]*/, varAsync/*[in,opt]*/, 
                                bstrUser/*[in,opt]*/, bstrPassword/*[in,opt]*/);
  }

  void __fastcall setRequestHeader(BSTR bstrHeader/*[in]*/, BSTR bstrValue/*[in]*/)
  {
    GetDefaultInterface()->setRequestHeader(bstrHeader/*[in]*/, bstrValue/*[in]*/);
  }

  BSTR __fastcall getResponseHeader(BSTR bstrHeader/*[in]*/)
  {
    return GetDefaultInterface()->getResponseHeader(bstrHeader/*[in]*/);
  }

  BSTR __fastcall getAllResponseHeaders(void)
  {
    return GetDefaultInterface()->getAllResponseHeaders();
  }

  void __fastcall send(VARIANT varBody/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->send(varBody/*[in,opt]*/);
  }

  void __fastcall abort(void)
  {
    GetDefaultInterface()->abort();
  }

  /*CoClassWriteProperties*/
  __property long status={ read=get_status }; // 0, No
  __property BSTR statusText={ read=get_statusText }; // 0, No
  __property LPDISPATCH responseXML={ read=get_responseXML }; // 0, No
  __property BSTR responseText={ read=get_responseText }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseBody={ read=get_responseBody }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseStream={ read=get_responseStream }; // 0, No
  */
  __property long readyState={ read=get_readyState }; // 0, No
  __property LPDISPATCH onreadystatechange={ }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXMLHTTP26
// Help String      : XML HTTP Request class.
// Default Interface: IXMLHTTPRequest
// Def. Intf. Object: IXMLHTTPRequestPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXMLHTTP26 : public Oleserver::TOleServer
{
  IXMLHTTPRequestPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXMLHTTP26(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLHTTPRequestPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLHTTPRequestPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_status(void)
  {
    return GetDefaultInterface()->get_status();
  }

// StdProp:WideString
  BSTR __fastcall get_statusText(void)
  {
    return GetDefaultInterface()->get_statusText();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_responseXML(void)
  {
    return GetDefaultInterface()->get_responseXML();
  }

// StdProp:WideString
  BSTR __fastcall get_responseText(void)
  {
    return GetDefaultInterface()->get_responseText();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseBody(void)
  {
    return GetDefaultInterface()->get_responseBody();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseStream(void)
  {
    return GetDefaultInterface()->get_responseStream();
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

// StdProp:IDispatch
  void __fastcall set_onreadystatechange(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->set_onreadystatechange(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall open(BSTR bstrMethod/*[in]*/, BSTR bstrUrl/*[in]*/, 
                       VARIANT varAsync/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrUser/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->open(bstrMethod/*[in]*/, bstrUrl/*[in]*/, varAsync/*[in,opt]*/, 
                                bstrUser/*[in,opt]*/, bstrPassword/*[in,opt]*/);
  }

  void __fastcall setRequestHeader(BSTR bstrHeader/*[in]*/, BSTR bstrValue/*[in]*/)
  {
    GetDefaultInterface()->setRequestHeader(bstrHeader/*[in]*/, bstrValue/*[in]*/);
  }

  BSTR __fastcall getResponseHeader(BSTR bstrHeader/*[in]*/)
  {
    return GetDefaultInterface()->getResponseHeader(bstrHeader/*[in]*/);
  }

  BSTR __fastcall getAllResponseHeaders(void)
  {
    return GetDefaultInterface()->getAllResponseHeaders();
  }

  void __fastcall send(VARIANT varBody/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->send(varBody/*[in,opt]*/);
  }

  void __fastcall abort(void)
  {
    GetDefaultInterface()->abort();
  }

  /*CoClassWriteProperties*/
  __property long status={ read=get_status }; // 0, No
  __property BSTR statusText={ read=get_statusText }; // 0, No
  __property LPDISPATCH responseXML={ read=get_responseXML }; // 0, No
  __property BSTR responseText={ read=get_responseText }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseBody={ read=get_responseBody }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseStream={ read=get_responseStream }; // 0, No
  */
  __property long readyState={ read=get_readyState }; // 0, No
  __property LPDISPATCH onreadystatechange={ }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsXMLHTTP30
// Help String      : XML HTTP Request class.
// Default Interface: IXMLHTTPRequest
// Def. Intf. Object: IXMLHTTPRequestPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsXMLHTTP30 : public Oleserver::TOleServer
{
  IXMLHTTPRequestPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsXMLHTTP30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IXMLHTTPRequestPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IXMLHTTPRequestPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_status(void)
  {
    return GetDefaultInterface()->get_status();
  }

// StdProp:WideString
  BSTR __fastcall get_statusText(void)
  {
    return GetDefaultInterface()->get_statusText();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_responseXML(void)
  {
    return GetDefaultInterface()->get_responseXML();
  }

// StdProp:WideString
  BSTR __fastcall get_responseText(void)
  {
    return GetDefaultInterface()->get_responseText();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseBody(void)
  {
    return GetDefaultInterface()->get_responseBody();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseStream(void)
  {
    return GetDefaultInterface()->get_responseStream();
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

// StdProp:IDispatch
  void __fastcall set_onreadystatechange(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->set_onreadystatechange(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall open(BSTR bstrMethod/*[in]*/, BSTR bstrUrl/*[in]*/, 
                       VARIANT varAsync/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrUser/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->open(bstrMethod/*[in]*/, bstrUrl/*[in]*/, varAsync/*[in,opt]*/, 
                                bstrUser/*[in,opt]*/, bstrPassword/*[in,opt]*/);
  }

  void __fastcall setRequestHeader(BSTR bstrHeader/*[in]*/, BSTR bstrValue/*[in]*/)
  {
    GetDefaultInterface()->setRequestHeader(bstrHeader/*[in]*/, bstrValue/*[in]*/);
  }

  BSTR __fastcall getResponseHeader(BSTR bstrHeader/*[in]*/)
  {
    return GetDefaultInterface()->getResponseHeader(bstrHeader/*[in]*/);
  }

  BSTR __fastcall getAllResponseHeaders(void)
  {
    return GetDefaultInterface()->getAllResponseHeaders();
  }

  void __fastcall send(VARIANT varBody/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->send(varBody/*[in,opt]*/);
  }

  void __fastcall abort(void)
  {
    GetDefaultInterface()->abort();
  }

  /*CoClassWriteProperties*/
  __property long status={ read=get_status }; // 0, No
  __property BSTR statusText={ read=get_statusText }; // 0, No
  __property LPDISPATCH responseXML={ read=get_responseXML }; // 0, No
  __property BSTR responseText={ read=get_responseText }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseBody={ read=get_responseBody }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseStream={ read=get_responseStream }; // 0, No
  */
  __property long readyState={ read=get_readyState }; // 0, No
  __property LPDISPATCH onreadystatechange={ }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsServerXMLHTTP
// Help String      : Server XML HTTP Request class.
// Default Interface: IServerXMLHTTPRequest
// Def. Intf. Object: IServerXMLHTTPRequestPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsServerXMLHTTP : public Oleserver::TOleServer
{
  IServerXMLHTTPRequestPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsServerXMLHTTP(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IServerXMLHTTPRequestPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IServerXMLHTTPRequestPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_status(void)
  {
    return GetDefaultInterface()->get_status();
  }

// StdProp:WideString
  BSTR __fastcall get_statusText(void)
  {
    return GetDefaultInterface()->get_statusText();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_responseXML(void)
  {
    return GetDefaultInterface()->get_responseXML();
  }

// StdProp:WideString
  BSTR __fastcall get_responseText(void)
  {
    return GetDefaultInterface()->get_responseText();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseBody(void)
  {
    return GetDefaultInterface()->get_responseBody();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseStream(void)
  {
    return GetDefaultInterface()->get_responseStream();
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

// StdProp:IDispatch
  void __fastcall set_onreadystatechange(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->set_onreadystatechange(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall open(BSTR bstrMethod/*[in]*/, BSTR bstrUrl/*[in]*/, 
                       VARIANT varAsync/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrUser/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->open(bstrMethod/*[in]*/, bstrUrl/*[in]*/, varAsync/*[in,opt]*/, 
                                bstrUser/*[in,opt]*/, bstrPassword/*[in,opt]*/);
  }

  void __fastcall setRequestHeader(BSTR bstrHeader/*[in]*/, BSTR bstrValue/*[in]*/)
  {
    GetDefaultInterface()->setRequestHeader(bstrHeader/*[in]*/, bstrValue/*[in]*/);
  }

  BSTR __fastcall getResponseHeader(BSTR bstrHeader/*[in]*/)
  {
    return GetDefaultInterface()->getResponseHeader(bstrHeader/*[in]*/);
  }

  BSTR __fastcall getAllResponseHeaders(void)
  {
    return GetDefaultInterface()->getAllResponseHeaders();
  }

  void __fastcall send(VARIANT varBody/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->send(varBody/*[in,opt]*/);
  }

  void __fastcall abort(void)
  {
    GetDefaultInterface()->abort();
  }

  void __fastcall setTimeouts(long resolveTimeout/*[in]*/, long connectTimeout/*[in]*/, 
                              long sendTimeout/*[in]*/, long receiveTimeout/*[in]*/)
  {
    GetDefaultInterface()->setTimeouts(resolveTimeout/*[in]*/, connectTimeout/*[in]*/, 
                                       sendTimeout/*[in]*/, receiveTimeout/*[in]*/);
  }

  TOLEBOOL __fastcall waitForResponse(VARIANT timeoutInSeconds/*[in,opt]*/)
  {
    return GetDefaultInterface()->waitForResponse(timeoutInSeconds/*[in,opt]*/);
  }

  TVariant __fastcall getOption(Msxml3::SERVERXMLHTTP_OPTION option/*[in]*/)
  {
    return GetDefaultInterface()->getOption(option/*[in]*/);
  }

  void __fastcall setOption(Msxml3::SERVERXMLHTTP_OPTION option/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setOption(option/*[in]*/, value/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property long status={ read=get_status }; // 0, No
  __property BSTR statusText={ read=get_statusText }; // 0, No
  __property LPDISPATCH responseXML={ read=get_responseXML }; // 0, No
  __property BSTR responseText={ read=get_responseText }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseBody={ read=get_responseBody }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseStream={ read=get_responseStream }; // 0, No
  */
  __property long readyState={ read=get_readyState }; // 0, No
  __property LPDISPATCH onreadystatechange={ }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsServerXMLHTTP30
// Help String      : Server XML HTTP Request class.
// Default Interface: IServerXMLHTTPRequest
// Def. Intf. Object: IServerXMLHTTPRequestPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsServerXMLHTTP30 : public Oleserver::TOleServer
{
  IServerXMLHTTPRequestPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsServerXMLHTTP30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IServerXMLHTTPRequestPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IServerXMLHTTPRequestPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:Integer
  long __fastcall get_status(void)
  {
    return GetDefaultInterface()->get_status();
  }

// StdProp:WideString
  BSTR __fastcall get_statusText(void)
  {
    return GetDefaultInterface()->get_statusText();
  }

// StdProp:IDispatch
  LPDISPATCH __fastcall get_responseXML(void)
  {
    return GetDefaultInterface()->get_responseXML();
  }

// StdProp:WideString
  BSTR __fastcall get_responseText(void)
  {
    return GetDefaultInterface()->get_responseText();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseBody(void)
  {
    return GetDefaultInterface()->get_responseBody();
  }

// StdProp:OleVariant
  TVariant __fastcall get_responseStream(void)
  {
    return GetDefaultInterface()->get_responseStream();
  }

// StdProp:Integer
  long __fastcall get_readyState(void)
  {
    return GetDefaultInterface()->get_readyState();
  }

// StdProp:IDispatch
  void __fastcall set_onreadystatechange(LPDISPATCH Param1/*[in]*/)
  {
    GetDefaultInterface()->set_onreadystatechange(Param1/*[in]*/);
  }

  /*CoClassWriteMethods*/
  void __fastcall open(BSTR bstrMethod/*[in]*/, BSTR bstrUrl/*[in]*/, 
                       VARIANT varAsync/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrUser/*[in,opt]*/= TNoParam(), 
                       VARIANT bstrPassword/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->open(bstrMethod/*[in]*/, bstrUrl/*[in]*/, varAsync/*[in,opt]*/, 
                                bstrUser/*[in,opt]*/, bstrPassword/*[in,opt]*/);
  }

  void __fastcall setRequestHeader(BSTR bstrHeader/*[in]*/, BSTR bstrValue/*[in]*/)
  {
    GetDefaultInterface()->setRequestHeader(bstrHeader/*[in]*/, bstrValue/*[in]*/);
  }

  BSTR __fastcall getResponseHeader(BSTR bstrHeader/*[in]*/)
  {
    return GetDefaultInterface()->getResponseHeader(bstrHeader/*[in]*/);
  }

  BSTR __fastcall getAllResponseHeaders(void)
  {
    return GetDefaultInterface()->getAllResponseHeaders();
  }

  void __fastcall send(VARIANT varBody/*[in,opt]*/= TNoParam())
  {
    GetDefaultInterface()->send(varBody/*[in,opt]*/);
  }

  void __fastcall abort(void)
  {
    GetDefaultInterface()->abort();
  }

  void __fastcall setTimeouts(long resolveTimeout/*[in]*/, long connectTimeout/*[in]*/, 
                              long sendTimeout/*[in]*/, long receiveTimeout/*[in]*/)
  {
    GetDefaultInterface()->setTimeouts(resolveTimeout/*[in]*/, connectTimeout/*[in]*/, 
                                       sendTimeout/*[in]*/, receiveTimeout/*[in]*/);
  }

  TOLEBOOL __fastcall waitForResponse(VARIANT timeoutInSeconds/*[in,opt]*/)
  {
    return GetDefaultInterface()->waitForResponse(timeoutInSeconds/*[in,opt]*/);
  }

  TVariant __fastcall getOption(Msxml3::SERVERXMLHTTP_OPTION option/*[in]*/)
  {
    return GetDefaultInterface()->getOption(option/*[in]*/);
  }

  void __fastcall setOption(Msxml3::SERVERXMLHTTP_OPTION option/*[in]*/, VARIANT value/*[in]*/)
  {
    GetDefaultInterface()->setOption(option/*[in]*/, value/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property long status={ read=get_status }; // 0, No
  __property BSTR statusText={ read=get_statusText }; // 0, No
  __property LPDISPATCH responseXML={ read=get_responseXML }; // 0, No
  __property BSTR responseText={ read=get_responseText }; // 0, No
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseBody={ read=get_responseBody }; // 0, No
  */
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant responseStream={ read=get_responseStream }; // 0, No
  */
  __property long readyState={ read=get_readyState }; // 0, No
  __property LPDISPATCH onreadystatechange={ }; // 0, No
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsSAXXMLReader
// Help String      : SAX XML Reader (version independent) coclass
// Default Interface: IVBSAXXMLReader
// Def. Intf. Object: IVBSAXXMLReaderPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsSAXXMLReader : public Oleserver::TOleServer
{
  IVBSAXXMLReaderPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsSAXXMLReader(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IVBSAXXMLReaderPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IVBSAXXMLReaderPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IVBSAXEntityResolverPtr __fastcall get_entityResolver(void)
  {
    return GetDefaultInterface()->get_entityResolver();
  }

// StdProp:
  void __fastcall _set_entityResolver(Msxml3::IVBSAXEntityResolver* oResolver/*[in]*/)
  {
    GetDefaultInterface()->_set_entityResolver(oResolver/*[in]*/);
  }

// StdProp:
  Msxml3::IVBSAXContentHandlerPtr __fastcall get_contentHandler(void)
  {
    return GetDefaultInterface()->get_contentHandler();
  }

// StdProp:
  void __fastcall _set_contentHandler(Msxml3::IVBSAXContentHandler* oHandler/*[in]*/)
  {
    GetDefaultInterface()->_set_contentHandler(oHandler/*[in]*/);
  }

// StdProp:
  Msxml3::IVBSAXDTDHandlerPtr __fastcall get_dtdHandler(void)
  {
    return GetDefaultInterface()->get_dtdHandler();
  }

// StdProp:
  void __fastcall _set_dtdHandler(Msxml3::IVBSAXDTDHandler* oHandler/*[in]*/)
  {
    GetDefaultInterface()->_set_dtdHandler(oHandler/*[in]*/);
  }

// StdProp:
  Msxml3::IVBSAXErrorHandlerPtr __fastcall get_errorHandler(void)
  {
    return GetDefaultInterface()->get_errorHandler();
  }

// StdProp:
  void __fastcall _set_errorHandler(Msxml3::IVBSAXErrorHandler* oHandler/*[in]*/)
  {
    GetDefaultInterface()->_set_errorHandler(oHandler/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_baseURL(void)
  {
    return GetDefaultInterface()->get_baseURL();
  }

// StdProp:WideString
  void __fastcall set_baseURL(BSTR strBaseURL/*[in]*/)
  {
    GetDefaultInterface()->set_baseURL(strBaseURL/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_secureBaseURL(void)
  {
    return GetDefaultInterface()->get_secureBaseURL();
  }

// StdProp:WideString
  void __fastcall set_secureBaseURL(BSTR strSecureBaseURL/*[in]*/)
  {
    GetDefaultInterface()->set_secureBaseURL(strSecureBaseURL/*[in]*/);
  }

  /*CoClassWriteMethods*/
  TOLEBOOL __fastcall getFeature(BSTR strName/*[in]*/)
  {
    return GetDefaultInterface()->getFeature(strName/*[in]*/);
  }

  void __fastcall putFeature(BSTR strName/*[in]*/, VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->putFeature(strName/*[in]*/, fValue/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR strName/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(strName/*[in]*/);
  }

  void __fastcall putProperty(BSTR strName/*[in]*/, VARIANT varValue/*[in]*/)
  {
    GetDefaultInterface()->putProperty(strName/*[in]*/, varValue/*[in]*/);
  }

  void __fastcall parse(VARIANT varInput/*[in]*/)
  {
    GetDefaultInterface()->parse(varInput/*[in]*/);
  }

  void __fastcall parseURL(BSTR strURL/*[in]*/)
  {
    GetDefaultInterface()->parseURL(strURL/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IVBSAXEntityResolverPtr entityResolver={ read=get_entityResolver }; // 0, Yes
  __property Msxml3::IVBSAXContentHandlerPtr contentHandler={ read=get_contentHandler }; // 0, Yes
  __property Msxml3::IVBSAXDTDHandlerPtr dtdHandler={ read=get_dtdHandler }; // 0, Yes
  __property Msxml3::IVBSAXErrorHandlerPtr errorHandler={ read=get_errorHandler }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR baseURL={ read=get_baseURL, stored=false }; // 0, No
  __property BSTR secureBaseURL={ read=get_secureBaseURL, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsSAXXMLReader30
// Help String      : SAX XML Reader 3.0 coclass
// Default Interface: IVBSAXXMLReader
// Def. Intf. Object: IVBSAXXMLReaderPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsSAXXMLReader30 : public Oleserver::TOleServer
{
  IVBSAXXMLReaderPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsSAXXMLReader30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IVBSAXXMLReaderPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IVBSAXXMLReaderPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:
  Msxml3::IVBSAXEntityResolverPtr __fastcall get_entityResolver(void)
  {
    return GetDefaultInterface()->get_entityResolver();
  }

// StdProp:
  void __fastcall _set_entityResolver(Msxml3::IVBSAXEntityResolver* oResolver/*[in]*/)
  {
    GetDefaultInterface()->_set_entityResolver(oResolver/*[in]*/);
  }

// StdProp:
  Msxml3::IVBSAXContentHandlerPtr __fastcall get_contentHandler(void)
  {
    return GetDefaultInterface()->get_contentHandler();
  }

// StdProp:
  void __fastcall _set_contentHandler(Msxml3::IVBSAXContentHandler* oHandler/*[in]*/)
  {
    GetDefaultInterface()->_set_contentHandler(oHandler/*[in]*/);
  }

// StdProp:
  Msxml3::IVBSAXDTDHandlerPtr __fastcall get_dtdHandler(void)
  {
    return GetDefaultInterface()->get_dtdHandler();
  }

// StdProp:
  void __fastcall _set_dtdHandler(Msxml3::IVBSAXDTDHandler* oHandler/*[in]*/)
  {
    GetDefaultInterface()->_set_dtdHandler(oHandler/*[in]*/);
  }

// StdProp:
  Msxml3::IVBSAXErrorHandlerPtr __fastcall get_errorHandler(void)
  {
    return GetDefaultInterface()->get_errorHandler();
  }

// StdProp:
  void __fastcall _set_errorHandler(Msxml3::IVBSAXErrorHandler* oHandler/*[in]*/)
  {
    GetDefaultInterface()->_set_errorHandler(oHandler/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_baseURL(void)
  {
    return GetDefaultInterface()->get_baseURL();
  }

// StdProp:WideString
  void __fastcall set_baseURL(BSTR strBaseURL/*[in]*/)
  {
    GetDefaultInterface()->set_baseURL(strBaseURL/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_secureBaseURL(void)
  {
    return GetDefaultInterface()->get_secureBaseURL();
  }

// StdProp:WideString
  void __fastcall set_secureBaseURL(BSTR strSecureBaseURL/*[in]*/)
  {
    GetDefaultInterface()->set_secureBaseURL(strSecureBaseURL/*[in]*/);
  }

  /*CoClassWriteMethods*/
  TOLEBOOL __fastcall getFeature(BSTR strName/*[in]*/)
  {
    return GetDefaultInterface()->getFeature(strName/*[in]*/);
  }

  void __fastcall putFeature(BSTR strName/*[in]*/, VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->putFeature(strName/*[in]*/, fValue/*[in]*/);
  }

  TVariant __fastcall getProperty(BSTR strName/*[in]*/)
  {
    return GetDefaultInterface()->getProperty(strName/*[in]*/);
  }

  void __fastcall putProperty(BSTR strName/*[in]*/, VARIANT varValue/*[in]*/)
  {
    GetDefaultInterface()->putProperty(strName/*[in]*/, varValue/*[in]*/);
  }

  void __fastcall parse(VARIANT varInput/*[in]*/)
  {
    GetDefaultInterface()->parse(varInput/*[in]*/);
  }

  void __fastcall parseURL(BSTR strURL/*[in]*/)
  {
    GetDefaultInterface()->parseURL(strURL/*[in]*/);
  }

  /*CoClassWriteProperties*/
  __property Msxml3::IVBSAXEntityResolverPtr entityResolver={ read=get_entityResolver }; // 0, Yes
  __property Msxml3::IVBSAXContentHandlerPtr contentHandler={ read=get_contentHandler }; // 0, Yes
  __property Msxml3::IVBSAXDTDHandlerPtr dtdHandler={ read=get_dtdHandler }; // 0, Yes
  __property Msxml3::IVBSAXErrorHandlerPtr errorHandler={ read=get_errorHandler }; // 0, Yes
  /*CoClassWriteProperties*/
  __property BSTR baseURL={ read=get_baseURL, stored=false }; // 0, No
  __property BSTR secureBaseURL={ read=get_secureBaseURL, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsMXXMLWriter
// Help String      : Microsoft XML Writer (version independent) coclass
// Default Interface: IMXWriter
// Def. Intf. Object: IMXWriterPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsMXXMLWriter : public Oleserver::TOleServer
{
  IMXWriterPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsMXXMLWriter(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IMXWriterPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IMXWriterPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:OleVariant
  void __fastcall set_output(VARIANT varDestination/*[in]*/)
  {
    GetDefaultInterface()->set_output(varDestination/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_output(void)
  {
    return GetDefaultInterface()->get_output();
  }

// StdProp:WideString
  void __fastcall set_encoding(BSTR strEncoding/*[in]*/)
  {
    GetDefaultInterface()->set_encoding(strEncoding/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_encoding(void)
  {
    return GetDefaultInterface()->get_encoding();
  }

// StdProp:WordBool
  void __fastcall set_byteOrderMark(VARIANT_BOOL fWriteByteOrderMark/*[in]*/)
  {
    GetDefaultInterface()->set_byteOrderMark(fWriteByteOrderMark/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_byteOrderMark(void)
  {
    return GetDefaultInterface()->get_byteOrderMark();
  }

// StdProp:WordBool
  void __fastcall set_indent(VARIANT_BOOL fIndentMode/*[in]*/)
  {
    GetDefaultInterface()->set_indent(fIndentMode/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_indent(void)
  {
    return GetDefaultInterface()->get_indent();
  }

// StdProp:WordBool
  void __fastcall set_standalone(VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->set_standalone(fValue/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_standalone(void)
  {
    return GetDefaultInterface()->get_standalone();
  }

// StdProp:WordBool
  void __fastcall set_omitXMLDeclaration(VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->set_omitXMLDeclaration(fValue/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_omitXMLDeclaration(void)
  {
    return GetDefaultInterface()->get_omitXMLDeclaration();
  }

// StdProp:WideString
  void __fastcall set_version(BSTR strVersion/*[in]*/)
  {
    GetDefaultInterface()->set_version(strVersion/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_version(void)
  {
    return GetDefaultInterface()->get_version();
  }

// StdProp:WordBool
  void __fastcall set_disableOutputEscaping(VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->set_disableOutputEscaping(fValue/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_disableOutputEscaping(void)
  {
    return GetDefaultInterface()->get_disableOutputEscaping();
  }

  /*CoClassWriteMethods*/
  void __fastcall flush(void)
  {
    GetDefaultInterface()->flush();
  }

  /*CoClassWriteProperties*/
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant output={ read=get_output }; // 0, No
  */
  /*CoClassWriteProperties*/
  __property BSTR encoding={ read=get_encoding, stored=false }; // 0, No
  __property TOLEBOOL byteOrderMark={ read=get_byteOrderMark, stored=false }; // 0, No
  __property TOLEBOOL indent={ read=get_indent, stored=false }; // 0, No
  __property TOLEBOOL standalone={ read=get_standalone, stored=false }; // 0, No
  __property TOLEBOOL omitXMLDeclaration={ read=get_omitXMLDeclaration, stored=false }; // 0, No
  __property BSTR version={ read=get_version, stored=false }; // 0, No
  __property TOLEBOOL disableOutputEscaping={ read=get_disableOutputEscaping, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsMXXMLWriter30
// Help String      : Microsoft XML Writer 3.0 coclass
// Default Interface: IMXWriter
// Def. Intf. Object: IMXWriterPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsMXXMLWriter30 : public Oleserver::TOleServer
{
  IMXWriterPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsMXXMLWriter30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IMXWriterPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IMXWriterPtr intf);


  /*CoClassWriteArrayPropMethods*/
// StdProp:OleVariant
  void __fastcall set_output(VARIANT varDestination/*[in]*/)
  {
    GetDefaultInterface()->set_output(varDestination/*[in]*/);
  }

// StdProp:OleVariant
  TVariant __fastcall get_output(void)
  {
    return GetDefaultInterface()->get_output();
  }

// StdProp:WideString
  void __fastcall set_encoding(BSTR strEncoding/*[in]*/)
  {
    GetDefaultInterface()->set_encoding(strEncoding/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_encoding(void)
  {
    return GetDefaultInterface()->get_encoding();
  }

// StdProp:WordBool
  void __fastcall set_byteOrderMark(VARIANT_BOOL fWriteByteOrderMark/*[in]*/)
  {
    GetDefaultInterface()->set_byteOrderMark(fWriteByteOrderMark/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_byteOrderMark(void)
  {
    return GetDefaultInterface()->get_byteOrderMark();
  }

// StdProp:WordBool
  void __fastcall set_indent(VARIANT_BOOL fIndentMode/*[in]*/)
  {
    GetDefaultInterface()->set_indent(fIndentMode/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_indent(void)
  {
    return GetDefaultInterface()->get_indent();
  }

// StdProp:WordBool
  void __fastcall set_standalone(VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->set_standalone(fValue/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_standalone(void)
  {
    return GetDefaultInterface()->get_standalone();
  }

// StdProp:WordBool
  void __fastcall set_omitXMLDeclaration(VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->set_omitXMLDeclaration(fValue/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_omitXMLDeclaration(void)
  {
    return GetDefaultInterface()->get_omitXMLDeclaration();
  }

// StdProp:WideString
  void __fastcall set_version(BSTR strVersion/*[in]*/)
  {
    GetDefaultInterface()->set_version(strVersion/*[in]*/);
  }

// StdProp:WideString
  BSTR __fastcall get_version(void)
  {
    return GetDefaultInterface()->get_version();
  }

// StdProp:WordBool
  void __fastcall set_disableOutputEscaping(VARIANT_BOOL fValue/*[in]*/)
  {
    GetDefaultInterface()->set_disableOutputEscaping(fValue/*[in]*/);
  }

// StdProp:WordBool
  TOLEBOOL __fastcall get_disableOutputEscaping(void)
  {
    return GetDefaultInterface()->get_disableOutputEscaping();
  }

  /*CoClassWriteMethods*/
  void __fastcall flush(void)
  {
    GetDefaultInterface()->flush();
  }

  /*CoClassWriteProperties*/
  /* Warning: C++Builder is unable to validate the following property: 
  __property TVariant output={ read=get_output }; // 0, No
  */
  /*CoClassWriteProperties*/
  __property BSTR encoding={ read=get_encoding, stored=false }; // 0, No
  __property TOLEBOOL byteOrderMark={ read=get_byteOrderMark, stored=false }; // 0, No
  __property TOLEBOOL indent={ read=get_indent, stored=false }; // 0, No
  __property TOLEBOOL standalone={ read=get_standalone, stored=false }; // 0, No
  __property TOLEBOOL omitXMLDeclaration={ read=get_omitXMLDeclaration, stored=false }; // 0, No
  __property BSTR version={ read=get_version, stored=false }; // 0, No
  __property TOLEBOOL disableOutputEscaping={ read=get_disableOutputEscaping, stored=false }; // 0, No
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsSAXAttributes
// Help String      : SAX Attributes (version independent) coclass
// Default Interface: IMXAttributes
// Def. Intf. Object: IMXAttributesPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsSAXAttributes : public Oleserver::TOleServer
{
  IMXAttributesPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsSAXAttributes(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IMXAttributesPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IMXAttributesPtr intf);


  /*CoClassWriteArrayPropMethods*/
  /*CoClassWriteMethods*/
  void __fastcall addAttribute(BSTR strURI/*[in]*/, BSTR strLocalName/*[in]*/, BSTR strQName/*[in]*/, 
                               BSTR strType/*[in]*/, BSTR strValue/*[in]*/)
  {
    GetDefaultInterface()->addAttribute(strURI/*[in]*/, strLocalName/*[in]*/, strQName/*[in]*/, 
                                        strType/*[in]*/, strValue/*[in]*/);
  }

  void __fastcall addAttributeFromIndex(VARIANT varAtts/*[in]*/, int nIndex/*[in]*/)
  {
    GetDefaultInterface()->addAttributeFromIndex(varAtts/*[in]*/, nIndex/*[in]*/);
  }

  void __fastcall clear(void)
  {
    GetDefaultInterface()->clear();
  }

  void __fastcall removeAttribute(int nIndex/*[in]*/)
  {
    GetDefaultInterface()->removeAttribute(nIndex/*[in]*/);
  }

  void __fastcall setAttribute(int nIndex/*[in]*/, BSTR strURI/*[in]*/, BSTR strLocalName/*[in]*/, 
                               BSTR strQName/*[in]*/, BSTR strType/*[in]*/, BSTR strValue/*[in]*/)
  {
    GetDefaultInterface()->setAttribute(nIndex/*[in]*/, strURI/*[in]*/, strLocalName/*[in]*/, 
                                        strQName/*[in]*/, strType/*[in]*/, strValue/*[in]*/);
  }

  void __fastcall setAttributes(VARIANT varAtts/*[in]*/)
  {
    GetDefaultInterface()->setAttributes(varAtts/*[in]*/);
  }

  void __fastcall setLocalName(int nIndex/*[in]*/, BSTR strLocalName/*[in]*/)
  {
    GetDefaultInterface()->setLocalName(nIndex/*[in]*/, strLocalName/*[in]*/);
  }

  void __fastcall setQName(int nIndex/*[in]*/, BSTR strQName/*[in]*/)
  {
    GetDefaultInterface()->setQName(nIndex/*[in]*/, strQName/*[in]*/);
  }

  void __fastcall setType(int nIndex/*[in]*/, BSTR strType/*[in]*/)
  {
    GetDefaultInterface()->setType(nIndex/*[in]*/, strType/*[in]*/);
  }

  void __fastcall setURI(int nIndex/*[in]*/, BSTR strURI/*[in]*/)
  {
    GetDefaultInterface()->setURI(nIndex/*[in]*/, strURI/*[in]*/);
  }

  void __fastcall setValue(int nIndex/*[in]*/, BSTR strValue/*[in]*/)
  {
    GetDefaultInterface()->setValue(nIndex/*[in]*/, strValue/*[in]*/);
  }

  /*CoClassWriteProperties*/
  /*CoClassWriteProperties*/
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TmsSAXAttributes30
// Help String      : SAX Attributes 3.0 coclass
// Default Interface: IMXAttributes
// Def. Intf. Object: IMXAttributesPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TmsSAXAttributes30 : public Oleserver::TOleServer
{
  IMXAttributesPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TmsSAXAttributes30(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IMXAttributesPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IMXAttributesPtr intf);


  /*CoClassWriteArrayPropMethods*/
  /*CoClassWriteMethods*/
  void __fastcall addAttribute(BSTR strURI/*[in]*/, BSTR strLocalName/*[in]*/, BSTR strQName/*[in]*/, 
                               BSTR strType/*[in]*/, BSTR strValue/*[in]*/)
  {
    GetDefaultInterface()->addAttribute(strURI/*[in]*/, strLocalName/*[in]*/, strQName/*[in]*/, 
                                        strType/*[in]*/, strValue/*[in]*/);
  }

  void __fastcall addAttributeFromIndex(VARIANT varAtts/*[in]*/, int nIndex/*[in]*/)
  {
    GetDefaultInterface()->addAttributeFromIndex(varAtts/*[in]*/, nIndex/*[in]*/);
  }

  void __fastcall clear(void)
  {
    GetDefaultInterface()->clear();
  }

  void __fastcall removeAttribute(int nIndex/*[in]*/)
  {
    GetDefaultInterface()->removeAttribute(nIndex/*[in]*/);
  }

  void __fastcall setAttribute(int nIndex/*[in]*/, BSTR strURI/*[in]*/, BSTR strLocalName/*[in]*/, 
                               BSTR strQName/*[in]*/, BSTR strType/*[in]*/, BSTR strValue/*[in]*/)
  {
    GetDefaultInterface()->setAttribute(nIndex/*[in]*/, strURI/*[in]*/, strLocalName/*[in]*/, 
                                        strQName/*[in]*/, strType/*[in]*/, strValue/*[in]*/);
  }

  void __fastcall setAttributes(VARIANT varAtts/*[in]*/)
  {
    GetDefaultInterface()->setAttributes(varAtts/*[in]*/);
  }

  void __fastcall setLocalName(int nIndex/*[in]*/, BSTR strLocalName/*[in]*/)
  {
    GetDefaultInterface()->setLocalName(nIndex/*[in]*/, strLocalName/*[in]*/);
  }

  void __fastcall setQName(int nIndex/*[in]*/, BSTR strQName/*[in]*/)
  {
    GetDefaultInterface()->setQName(nIndex/*[in]*/, strQName/*[in]*/);
  }

  void __fastcall setType(int nIndex/*[in]*/, BSTR strType/*[in]*/)
  {
    GetDefaultInterface()->setType(nIndex/*[in]*/, strType/*[in]*/);
  }

  void __fastcall setURI(int nIndex/*[in]*/, BSTR strURI/*[in]*/)
  {
    GetDefaultInterface()->setURI(nIndex/*[in]*/, strURI/*[in]*/);
  }

  void __fastcall setValue(int nIndex/*[in]*/, BSTR strValue/*[in]*/)
  {
    GetDefaultInterface()->setValue(nIndex/*[in]*/, strValue/*[in]*/);
  }

  /*CoClassWriteProperties*/
  /*CoClassWriteProperties*/
};

};     // namespace Msxml3

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Msxml3;
#endif

#pragma option pop

#endif // MSXML3_SRVRH

##{cheader.snp}
#include <owl/pch.h>

##@OPT_APPL_TOOLBAR
#include <owl/buttonga.h>
##@OPT_APPL_STATUSBAR
#include <owl/statusba.h>
#include <owl/docmanag.h>
##@QUERY_APPL_OLE_AUTO 2
#include <owl/olefacto.h>
#include <ocf/ocreg.h>
##OPT_DV_RESET
##OPT_DV_NEXT
##QUERY_DV_TDOCUMENT [[TDocument]]
##GetIncludeFile(\\"[[TDocument]]") [[DocIncludeFile]]
#include [[DocIncludeFile]]

##--BEGIN-- @OPT_APPL_REGISTRY || @OPT_APPL_MAIL
##@OPT_APPL_REGISTRY
#include <classlib/cmdline.h>
##@OPT_APPL_MAIL
#include <classlib/filename.h>

##--END-- @OPT_APPL_REGISTRY || @OPT_APPL_MAIL
##QUERY_FILE_H [[FileName]]
#include "[[FileName]]"
##<<TMDIClient QUERY_FILE_H [[FileName]]
#include "[[FileName]]"
##<<TMDIChild QUERY_FILE_H [[FileName]]
#include "[[FileName]]"
##OPT_DV_RESET
##OPT_DV_NEXT
##QUERY_DV_TVIEW [[WindowClient]]
##<<*WindowClient QUERY_FILE_H [[FileName]]
#include "[[FileName]]"
##<<TDialog QUERY_FILE_H [[Filename]]
#include "[[Filename]]"                        // Definition of about dialog.

##--BEGIN-- @OPT_APPL_HELP
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 3
//
// Generated help file.
//
##@QUERY_APPL_HELP [[HelpFile]]
const char HelpFileName[] = "[[HelpFile]].hlp";


##--END-- @OPT_APPL_HELP
//{{[[TApplication]] Implementation}}


##--BEGIN-- @QUERY_APPL_OLE_AUTO
//
// OLE's ITypeInfo browses this symbol table for a list of all data,
// properties, and methods exposed by this automated class.
//
##@QUERY_APPL_OLE != VALUE_NOOLE
DEFINE_AUTOAGGREGATE([[TApplication]], OcApp->Aggregate)
##@QUERY_APPL_OLE == VALUE_NOOLE
DEFINE_AUTOCLASS([[TApplication]])
  EXPOSE_APPLICATION([[TApplication]], "Application", "Application object", 0)
  EXPOSE_QUIT("Quit", "Quit application", 0)
//{{[[TApplication]]SYM_TBL_BEGIN}}
//{{[[TApplication]]SYM_TBL_END}}
##@QUERY_APPL_OLE != VALUE_NOOLE
END_AUTOAGGREGATE([[TApplication]], tfAppObject | tfCanCreate, "[[TApplication]]", 0, 0);
##@QUERY_APPL_OLE == VALUE_NOOLE
END_AUTOCLASS([[TApplication]], tfAppObject | tfCanCreate, "[[TApplication]]", 0, 0);

##--END-- @QUERY_APPL_OLE_AUTO
## ((@QUERY_APPL_OLE != VALUE_NOOLE) || @QUERY_APPL_OLE_AUTO) 2
DEFINE_APP_DICTIONARY(AppDictionary);

## ((@QUERY_APPL_OLE == VALUE_NOOLE) && @QUERY_APPL_OLE_AUTO)
static TPointer<TRegistrar> Registrar;
## ((@QUERY_APPL_OLE != VALUE_NOOLE)
static TPointer<TOcRegistrar> Registrar;

##--BEGIN-- ((@QUERY_APPL_OLE != VALUE_NOOLE) || @QUERY_APPL_OLE_AUTO)
REGISTRATION_FORMAT_BUFFER(200)

BEGIN_REGISTRATION(ApplicationReg)
##@QUERY_OLE_GUID [[GUID]]
  REGDATA(clsid, "{[[GUID]]}")
##--BEGIN-- @QUERY_PRJ_NAME [[AppTitle]]
## ((@QUERY_APPL_OLE == VALUE_SERVER) || (@QUERY_APPL_OLE == VALUE_OLEBOTH) || @QUERY_APPL_OLE_AUTO) 2
  REGDATA(appname, "[[AppTitle]] Server")
  REGDATA(description, "[[AppTitle]] Server Application")
## ((@QUERY_APPL_OLE == VALUE_CONTAINER) && !@QUERY_APPL_OLE_AUTO) 2
  REGDATA(appname, "[[AppTitle]] Container")
  REGDATA(description, "[[AppTitle]] Container Application")
##@QUERY_APPL_OLE_AUTO
  REGDATA(progid, "[[AppTitle]].Application.1")
##--END-- @QUERY_PRJ_NAME [[AppTitle]]
##@QUERY_APPL_OLE_AUTO
  REGDATA(cmdline, "/Automation")
##!@QUERY_APPL_OLE_AUTO
  REGDATA(cmdline, "")
## ((@QUERY_APPL_OLE == VALUE_SERVER) || (@QUERY_APPL_OLE == VALUE_OLEBOTH))
  REGDATA(usage, ocrMultipleUse)
##--BEGIN-- @QUERY_APPL_OLE_AUTO
//  REGDATA(debugger, "TDW")
##--END-- @QUERY_APPL_OLE_AUTO
END_REGISTRATION

##--END-- @QUERY_APPL_OLE != VALUE_NOOLE
##@QUERY_APPL_OLE != VALUE_NOOLE
##: {AddOleDV.SNP}
##*
##@QUERY_APPL_OLE == VALUE_NOOLE
##: {AddDocV.SNP}
##*


##@QUERY_APPL_COMMENT == VALUE_VERBOSE 3
//
// Build a response table for all messages/commands handled by the application.
//
##@OPT_APPL_MRU
DEFINE_RESPONSE_TABLE2([[TApplication]], TRecentFiles, TApplication)
##!@OPT_APPL_MRU
DEFINE_RESPONSE_TABLE1([[TApplication]], TApplication)
//{{[[TApplication]]RSP_TBL_BEGIN}}
  EV_OWLVIEW(dnCreate, EvNewView),
  EV_OWLVIEW(dnClose,  EvCloseView),
##--BEGIN-- @OPT_APPL_MAIL
##:DBResponse(\\"[[TApplication]]", "CM_FILESEND", "CmFileSend", "", "COMMAND")
  EV_COMMAND(CM_FILESEND, CmFileSend),
##:DBResponse(\\"[[TApplication]]", "CM_FILESEND", "CeFileSend", "", "ENABLER")
  EV_COMMAND_ENABLE(CM_FILESEND, CeFileSend),
##--END-- @OPT_APPL_MAIL
##:DBResponse(\\"[[TApplication]]", "CM_HELPABOUT", "CmHelpAbout", "", "COMMAND")
  EV_COMMAND(CM_HELPABOUT, CmHelpAbout),
##@OPT_APPL_HELP 2
##:DBResponse(\\"[[TApplication]]", "CM_HELPCONTENTS", "CmHelpContents", "", "COMMAND")
##:DBResponse(\\"[[TApplication]]", "CM_HELPUSING", "CmHelpUsing", "", "COMMAND")
  EV_COMMAND(CM_HELPCONTENTS, CmHelpContents),
  EV_COMMAND(CM_HELPUSING, CmHelpUsing),
##@OPT_APPL_DRAGDROP
##:DBResponse(\\"[[TApplication]]", "", "", "WM_DROPFILES", "")
  EV_WM_DROPFILES,
##@OPT_APPL_PRINTING
##:DBResponse(\\"[[TApplication]]", "", "", "WM_WININICHANGE", "")
  EV_WM_WININICHANGE,
##--BEGIN-- @OPT_APPL_MRU
  EV_OWLDOCUMENT(dnCreate, EvOwlDocument),
  EV_OWLDOCUMENT(dnRename, EvOwlDocument),
  EV_REGISTERED(MruFileMessage, CmFileSelected),
##--END-- @OPT_APPL_MRU
//{{[[TApplication]]RSP_TBL_END}}
END_RESPONSE_TABLE;


##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~
//
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
##--BEGIN-- ((@QUERY_APPL_OLE != VALUE_NOOLE) || (@QUERY_APPL_OLE_AUTO))
##QUERY_WIND_TITLE [[Title]]
##@QUERY_TARGET_NAME [[Target]]
##@OPT_APPL_MRU
[[TApplication]]::[[TApplication]]() : TApplication(::ApplicationReg["appname"], ::Module, &::AppDictionary), TRecentFiles(".\\[[Target]].ini", 4)
##!@OPT_APPL_MRU
[[TApplication]]::[[TApplication]]() : TApplication(::ApplicationReg["appname"], ::Module, &::AppDictionary)
##--END-- ((@QUERY_APPL_OLE != VALUE_NOOLE) || (@QUERY_APPL_OLE_AUTO))
##--BEGIN-- ((@QUERY_APPL_OLE == VALUE_NOOLE) && (!@QUERY_APPL_OLE_AUTO))
##QUERY_WIND_TITLE [[Title]]
##@QUERY_TARGET_NAME [[Target]]
##@OPT_APPL_MRU
[[TApplication]]::[[TApplication]]() : TApplication("[[Title]]"), TRecentFiles(".\\[[Target]].ini", 4)
##QUERY_WIND_TITLE [[Title]]
##!@OPT_APPL_MRU
[[TApplication]]::[[TApplication]]() : TApplication("[[Title]]")
##--END-- ((@QUERY_APPL_OLE == VALUE_NOOLE) && (!@QUERY_APPL_OLE_AUTO))
{
##@OPT_APPL_HELP 4
  HelpState = false;
  ContextHelp = false;
  HelpCursor = 0;

##@OPT_APPL_PRINTING 3
  Printer = 0;
  Printing = 0;

  SetDocManager(new TDocManager(dmMDI, this));

##@OPT_APPL_MAIL 2
  ApxMail = new TMailer();

  // INSERT>> Your constructor code here.
}


[[TApplication]]::~[[TApplication]]()
{
##@OPT_APPL_PRINTING 2
  delete Printer;

##@OPT_APPL_MAIL 2
  delete ApxMail;

  // INSERT>> Your destructor code here.
}


##--BEGIN-- @OPT_APPL_HELP
bool [[TApplication]]::CanClose()
{
  bool result = TApplication::CanClose();

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Close the help engine if we used it.
  //
  if (result && HelpState)
    GetMainWindow()->WinHelp(HelpFileName, HELP_QUIT, 0);

  return result;
}


##--END-- @OPT_APPL_HELP
##--BEGIN-- @OPT_APPL_TOOLBAR
##@QUERY_APPL_OLE == VALUE_NOOLE
void [[TApplication]]::CreateGadgets(TDockableControlBar* cb, bool server)
##@QUERY_APPL_OLE != VALUE_NOOLE
void [[TApplication]]::CreateGadgets(TControlBar* cb, bool server)
{
  if (!server) {
    cb->Insert(*new TButtonGadget(CM_MDIFILENEW, CM_MDIFILENEW));
    cb->Insert(*new TButtonGadget(CM_MDIFILEOPEN, CM_MDIFILEOPEN));
    cb->Insert(*new TButtonGadget(CM_FILESAVE, CM_FILESAVE));
    cb->Insert(*new TSeparatorGadget(6));
  }

  cb->Insert(*new TButtonGadget(CM_EDITCUT, CM_EDITCUT));
  cb->Insert(*new TButtonGadget(CM_EDITCOPY, CM_EDITCOPY));
  cb->Insert(*new TButtonGadget(CM_EDITPASTE, CM_EDITPASTE));
  cb->Insert(*new TSeparatorGadget(6));
  cb->Insert(*new TButtonGadget(CM_EDITUNDO, CM_EDITUNDO));
  cb->Insert(*new TSeparatorGadget(6));
  cb->Insert(*new TButtonGadget(CM_EDITFIND, CM_EDITFIND));
  cb->Insert(*new TButtonGadget(CM_EDITFINDNEXT, CM_EDITFINDNEXT));
##--BEGIN-- @OPT_APPL_PRINTING

  if (!server) {
    cb->Insert(*new TSeparatorGadget(6));
    cb->Insert(*new TButtonGadget(CM_FILEPRINT, CM_FILEPRINT));
    cb->Insert(*new TButtonGadget(CM_FILEPRINTPREVIEW, CM_FILEPRINTPREVIEW));
  }
##--END-- @OPT_APPL_PRINTING
##@OPT_APPL_HELP 3

  cb->Insert(*new TSeparatorGadget(6));
  cb->Insert(*new TButtonGadget(CM_HELPCONTENTS, CM_HELPCONTENTS));

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Add caption and fly-over help hints.
  //
  cb->SetCaption("Toolbar");
  cb->SetHintMode(TGadgetWindow::EnterHints);
}


##@QUERY_APPL_OLE == VALUE_NOOLE
void [[TApplication]]::SetupSpeedBar(TDecoratedMDIFrame* frame)
##@QUERY_APPL_OLE != VALUE_NOOLE
void [[TApplication]]::SetupSpeedBar(TOleMDIFrame* frame)
{
##@QUERY_APPL_OLE == VALUE_NOOLE 2
  ApxHarbor = new THarbor(*frame);

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Create default toolbar New and associate toolbar buttons with commands.
  //
##@QUERY_APPL_OLE == VALUE_NOOLE
  TDockableControlBar* cb = new TDockableControlBar(frame);
##@QUERY_APPL_OLE != VALUE_NOOLE
  TControlBar* cb = new TControlBar(frame);
  CreateGadgets(cb);

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Setup the toolbar ID used by OLE 2 for toolbar negotiation.
  //
  cb->Attr.Id = IDW_TOOLBAR;

##@QUERY_APPL_OLE == VALUE_NOOLE
  ApxHarbor->Insert(*cb, alTop);
##@QUERY_APPL_OLE != VALUE_NOOLE
  frame->Insert(*cb, TDecoratedFrame::Top);
}


##--END-- @OPT_APPL_TOOLBAR
##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~
// Application main window construction & intialization.
//
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
void [[TApplication]]::InitMainWindow()
{
  if (nCmdShow != SW_HIDE)
##@QUERY_APPL_STARTUP == VALUE_NORMAL
    nCmdShow = (nCmdShow != SW_SHOWMINNOACTIVE) ? SW_SHOWNORMAL : nCmdShow;
##@QUERY_APPL_STARTUP == VALUE_MIN
    nCmdShow = (nCmdShow != SW_SHOWMINNOACTIVE) ? SW_SHOWMINIMIZED : nCmdShow;
##@QUERY_APPL_STARTUP == VALUE_MAX
    nCmdShow = (nCmdShow != SW_SHOWMINNOACTIVE) ? SW_SHOWMAXIMIZED : nCmdShow;

##<<TMDIClient QUERY_CLASS_NAME [[TMDIClient]]
  MdiClient = new [[TMDIClient]](this);
##@OPT_APPL_STATUSBAR 2
##@QUERY_APPL_OLE != VALUE_NOOLE
  TOleMDIFrame* frame = new TOleMDIFrame(Name, IDM_MDI, *MdiClient, true, this);
##@QUERY_APPL_OLE == VALUE_NOOLE
  TDecoratedMDIFrame* frame = new TDecoratedMDIFrame(Name, IDM_MDI, *MdiClient, true, this);
##!@OPT_APPL_STATUSBAR 2
##@QUERY_APPL_OLE != VALUE_NOOLE
  TOleMDIFrame* frame = new TOleMDIFrame(Name, IDM_MDI, *MdiClient, false, this);
##@QUERY_APPL_OLE == VALUE_NOOLE
  TDecoratedMDIFrame* frame = new TDecoratedMDIFrame(Name, IDM_MDI, *MdiClient, false, this);

##QUERY_WIND_STYLE [[StyleAttributes]]
##StyleAttributes != "" 4
  // Override the default window style for the main window.
  //
  [[StyleAttributes]]

##@OPT_APPL_DRAGDROP 4
  // Enable acceptance of dropped files
  //
  frame->Attr.ExStyle |= WS_EX_ACCEPTFILES;

##{fwndbkgd.snp}
##--BEGIN-- ((@QUERY_APPL_OLE != VALUE_SERVER) && (@QUERY_APPL_OLE != VALUE_OLEBOTH))
##@QUERY_APPL_STARTUP == VALUE_NORMAL
  nCmdShow = (nCmdShow != SW_SHOWMINNOACTIVE) ? SW_SHOWNORMAL : nCmdShow;
##@QUERY_APPL_STARTUP == VALUE_MIN
  nCmdShow = (nCmdShow != SW_SHOWMINNOACTIVE) ? SW_SHOWMINIMIZED : nCmdShow;
##@QUERY_APPL_STARTUP == VALUE_MAX
  nCmdShow = (nCmdShow != SW_SHOWMINNOACTIVE) ? SW_SHOWMAXIMIZED : nCmdShow;

##--END-- ((@QUERY_APPL_OLE != VALUE_SERVER) && (@QUERY_APPL_OLE != VALUE_OLEBOTH))
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Assign icons for this application.
  //
  frame->SetIcon(this, IDI_MDIAPPLICATION);
  frame->SetIconSm(this, IDI_MDIAPPLICATION);

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Associate with the accelerator table.
  //
  frame->Attr.AccelTable = IDM_MDI;

##@OPT_APPL_STATUSBAR 6
  TStatusBar* sb = new TStatusBar(frame, TGadget::Recessed,
                                  TStatusBar::CapsLock        |
                                  TStatusBar::NumLock         |
                                  TStatusBar::ScrollLock);
  frame->Insert(*sb, TDecoratedFrame::Bottom);

##@OPT_APPL_TOOLBAR 2
  SetupSpeedBar(frame);

  SetMainWindow(frame);

  frame->SetMenuDescr(TMenuDescr(IDM_MDI));

##--BEGIN-- @QUERY_APPL_CONTROL==VALUE_3D
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Windows 3-D controls.
  //
  EnableCtl3d(true);
##--END-- @QUERY_APPL_CONTROL==VALUE_3D
##--BEGIN-- @QUERY_APPL_CONTROL==VALUE_BWCC
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Borland Windows custom controls.
  //
  EnableBWCC();
##--END-- @QUERY_APPL_CONTROL==VALUE_BWCC
}


##--BEGIN-- @OPT_APPL_REGISTRY
##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~
// Application instance initialization.
//
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
void [[TApplication]]::InitInstance()
{
  TApplication::InitInstance();

  ProcessCmdLine(lpCmdLine);
}


##--END-- @OPT_APPL_REGISTRY
##{registry.snp}
##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~
// Response Table handlers:
//
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
void [[TApplication]]::EvNewView(TView& view)
{
##--BEGIN-- ((@QUERY_APPL_OLE == VALUE_SERVER) || (@QUERY_APPL_OLE == VALUE_OLEBOTH))
  TOleView* ov = TYPESAFE_DOWNCAST(&view, TOleView);

  // If  we're embedded and we're opening out of place then don't create the child window.
  //
  if (view.GetDocument().IsEmbedded() && ov && !ov->IsOpenEditing()) {
    TWindow* vw = view.GetWindow();
    vw->SetParent(TYPESAFE_DOWNCAST(GetMainWindow(), TOleFrame)->GetRemViewBucket());
    vw->Create();
  }
  else {
    TMDIClient* mdiClient = TYPESAFE_DOWNCAST(GetMainWindow()->GetClientWindow(), TMDIClient);
    if (mdiClient) {
##<<TMDIChild QUERY_CLASS_NAME [[TMDIChild]]
      [[TMDIChild]]* child = new [[TMDIChild]](*mdiClient, 0, 0);

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
      // Assign icons for this child window.
      //
      child->SetIcon(this, IDI_DOC);
      child->SetIconSm(this, IDI_DOC);

##@QUERY_APPL_OLE != VALUE_NOOLE 3
      if (view.GetViewMenu())
        child->SetMenuDescr(*view.GetViewMenu());

      child->Create();
      child->SetClientWindow(view.GetWindow());
    }
  }

  if (!ov || !ov->GetOcRemView())
    OcApp->SetOption(amEmbedding, false);
##--END-- ((@QUERY_APPL_OLE == VALUE_SERVER) || (@QUERY_APPL_OLE == VALUE_OLEBOTH))
##--BEGIN-- ((@QUERY_APPL_OLE != VALUE_SERVER) && (@QUERY_APPL_OLE != VALUE_OLEBOTH))
  TMDIClient* mdiClient = TYPESAFE_DOWNCAST(GetMainWindow()->GetClientWindow(), TMDIClient);
  if (mdiClient) {
##<<TMDIChild QUERY_CLASS_NAME [[TMDIChild]]
    [[TMDIChild]]* child = new [[TMDIChild]](*mdiClient, 0, view.GetWindow());

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
    // Set the menu descriptor for this view.
    //
    if (view.GetViewMenu())
      child->SetMenuDescr(*view.GetViewMenu());

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
    // Assign icons with this child window.
    //
    child->SetIcon(this, IDI_DOC);
    child->SetIconSm(this, IDI_DOC);

##@QUERY_APPL_OLE != VALUE_NOOLE 3
    if (view.GetViewMenu())
      child->SetMenuDescr(*view.GetViewMenu());

    child->Create();
  }
##--END-- ((@QUERY_APPL_OLE != VALUE_SERVER) && (@QUERY_APPL_OLE != VALUE_OLEBOTH))
}


void [[TApplication]]::EvCloseView(TView&)
{
}
##--BEGIN-- @OPT_APPL_MAIL


void [[TApplication]]::CeFileSend(TCommandEnabler& ce)
{
  ce.Enable((GetDocManager()->GetCurrentDoc() != 0)
            && ApxMail->IsMAPIAvailable());
}


void [[TApplication]]::CmFileSend ()
{
  // Check to see if a document exists
  //
  TDocument* currentDoc = GetDocManager()->GetCurrentDoc();

  if (currentDoc) {
    TAPointer<char> savedPath = new char[_MAX_PATH];
    TAPointer<char> docName = new char[_MAX_PATH];

    bool dirtyState = currentDoc->IsDirty();

    if (currentDoc->GetDocPath())
      strcpy(savedPath, currentDoc->GetDocPath());
    else
      strcpy(savedPath, "");

    if (currentDoc->GetTitle())
      strcpy(docName, currentDoc->GetTitle());
    else
      strcpy(docName, "Document");

    TFileName tempFile(TFileName::TempFile);

    currentDoc->SetDocPath(tempFile.Canonical().c_str());
    currentDoc->Commit(true);

    currentDoc->SetDocPath(savedPath);
    currentDoc->SetDirty(dirtyState);

    ApxMail->SendDocuments(GetMainWindow(), tempFile.Canonical().c_str(), docName, false);

    tempFile.Remove();
  }
}
##--END-- @OPT_APPL_MAIL
##--BEGIN-- @OPT_APPL_HELP


##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~
// Menu Help Contents command
//
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
void [[TApplication]]::CmHelpContents()
{
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Show the help table of contents.
  //
  HelpState = GetMainWindow()->WinHelp(HelpFileName, HELP_CONTENTS, 0);
}


##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~
// Menu Help Using Help command
//
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
void [[TApplication]]::CmHelpUsing()
{
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Display the contents of the Windows help file.
  //
  HelpState = GetMainWindow()->WinHelp(HelpFileName, HELP_HELPONHELP, 0);
}
##--END-- @OPT_APPL_HELP


##--BEGIN-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
//--------------------------------------------------------
// [[TApplication]]
// ~~~~~~~~~~~
##--END-- @QUERY_APPL_COMMENT == VALUE_VERBOSE
##@QUERY_TARGET_NAME [[Target]]
// Menu Help About [[Target]] command
void [[TApplication]]::CmHelpAbout()
{
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Show the modal dialog.
  //
##--BEGIN-- <<TDialog QUERY_CLASS_NAME [[TDialog]]
## ((@QUERY_APPL_OLE == VALUE_SERVER) || (@QUERY_APPL_OLE == VALUE_OLEBOTH))
  [[TDialog]](&TWindow(::GetFocus(), this)).Execute();
## ((@QUERY_APPL_OLE != VALUE_SERVER) && (@QUERY_APPL_OLE != VALUE_OLEBOTH))
  [[TDialog]](GetMainWindow()).Execute();
##--END-- <<TDialog QUERY_CLASS_NAME [[TDialog]]
}
##--BEGIN-- @OPT_APPL_DRAGDROP


void [[TApplication]]::EvDropFiles(TDropInfo drop)
{
  TFileDropletList files;

##@QUERY_APPL_COMMENT == VALUE_VERBOSE 3
  // Iterate thru the entries in drop and create FileDrops objects for each
  // one.
  //
  int fileCount = drop.DragQueryFileCount();  // Number of files dropped.
  for (int i = 0; i < fileCount; i++)
    files.Add(new TFileDroplet(drop, i));

##:@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Open the files that were dropped.
  //
  AddFiles(files);

##:@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Release the memory allocated for this handle with DragFinish.
  //
  drop.DragFinish();
}


void [[TApplication]]::AddFiles(TFileDropletList& files)
{
##@QUERY_APPL_COMMENT == VALUE_VERBOSE 2
  // Open all files dragged in.
  //
  for (TFileDropletListIter fileIter(files); fileIter; fileIter++) {
    TDocTemplate* tpl = GetDocManager()->MatchTemplate(fileIter.Current()->GetName());
    if (tpl)
      GetDocManager()->CreateDoc(tpl, fileIter.Current()->GetName());
  }
}
##--END-- @OPT_APPL_DRAGDROP
##--BEGIN-- @OPT_APPL_MRU


void [[TApplication]]::EvOwlDocument(TDocument& doc)
{
  if (doc.GetDocPath())
    SaveMenuChoice(doc.GetDocPath());
}


int32 [[TApplication]]::CmFileSelected(uint wp, int32)
{
  TAPointer<char> text = new char[_MAX_PATH];

  GetMenuText(wp, text, _MAX_PATH);
  TDocTemplate* tpl = GetDocManager()->MatchTemplate(text);
  if (tpl)
    GetDocManager()->CreateDoc(tpl, text);
  return 0;
}
##--END-- @OPT_APPL_MRU


##{main.owl}

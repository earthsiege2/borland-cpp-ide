//--------------------------------------------------------------------------
// Object Scripting
// Copyright (c) 1996 by Borland International, All Rights Reserved
//
// APIEXP.DAT: Windows API and C RTL expander data file.
//
// MAIN FILE: APIEXP.SPP
//--------------------------------------------------------------------------
_hread(HFILE, void _huge*, long); long 
_hwrite(HFILE, const void _huge*, long); long 
_lclose(HFILE); HFILE 
_lcreat(LPCSTR, int); HFILE 
_llseek(HFILE, LONG, int); LONG 
_lopen(LPCSTR, int); HFILE 
_lread(HFILE, void _huge*, UINT); UINT 
_lwrite(HFILE, const void _huge*, UINT); UINT 
AbortDoc(HDC); int 
AccessResource(HINSTANCE, HRSRC); int 
AddAtom(LPCSTR); ATOM 
AddFontResource(LPCSTR); int 
AdjustWindowRect(RECT FAR*, DWORD, BOOL); void 
AdjustWindowRectEx(RECT FAR*, DWORD, BOOL, DWORD); void 
AllocDStoCSAlias(UINT); UINT 
AllocResource(HINSTANCE, HRSRC, DWORD); HGLOBAL 
AllocSelector(UINT); UINT 
AnimatePalette(HPALETTE, UINT, UINT, const PALETTEENTRY FAR*); void 
AnsiLower(LPSTR); LPSTR 
AnsiLowerBuff(LPSTR, UINT); UINT 
AnsiNext(LPCSTR); LPSTR 
AnsiPrev(LPCSTR, LPCSTR); LPSTR 
AnsiToOem(const char _huge*, char _huge*); void 
AnsiToOemBuff(LPCSTR, LPSTR, UINT); void 
AnsiUpper(LPSTR); LPSTR 
AnsiUpperBuff(LPSTR, UINT); UINT 
AnyPopup(void); BOOL 
AppendMenu(HMENU, UINT, UINT, LPCSTR); BOOL 
Arc(HDC, int, int, int, int, int, int, int, int); BOOL 
ArrangeIconicWindows(HWND); UINT 
BeginDeferWindowPos(int); HDWP 
BeginPaint(HWND, PAINTSTRUCT FAR*); HDC 
BitBlt(HDC, int, int, int, int, HDC, int, int, DWORD); BOOL 
BringWindowToTop(HWND); BOOL 
BuildCommDCB(LPCSTR, DCB FAR*); int 
CallMsgFilter(MSG FAR*, int); BOOL 
CallNextHookEx(HHOOK hHook, int code, WPARAM wParam, LPARAM lParam); LRESULT 
CallWindowProc(WNDPROC, HWND, UINT, WPARAM, LPARAM); LRESULT 
Catch(int FAR*); int 
ChangeClipboardChain(HWND, HWND); BOOL 
ChangeMenu(HMENU, UINT, LPCSTR, UINT, UINT); BOOL 
CheckDlgButton(HWND, int, UINT); void 
CheckMenuItem(HMENU, UINT, UINT); BOOL 
CheckRadioButton(HWND, int, int, int); void 
ChildWindowFromPoint(HWND, POINT); HWND 
Chord(HDC, int, int, int, int, int, int, int, int); BOOL 
ClearCommBreak(int); int 
ClientToScreen(HWND, POINT FAR*); void 
ClipCursor(const RECT FAR*); void 
CloseClipboard(void); BOOL 
CloseComm(int); int 
CloseDriver(HDRVR hDriver, LPARAM lParam1, LPARAM lParam2); LRESULT 
CloseMetaFile(HDC); HMETAFILE 
CloseSound(void); void 
CloseWindow(HWND); void 
CombineRgn(HRGN, HRGN, HRGN, int); int 
CopyCursor(HINSTANCE, HCURSOR); HCURSOR 
CopyIcon(HINSTANCE, HICON); HICON 
CopyMetaFile(HMETAFILE, LPCSTR); HMETAFILE 
CopyRect(RECT FAR*, const RECT FAR*); void 
CountClipboardFormats(void); int 
CountVoiceNotes(int); int 
CreateBitmap(int, int, UINT, UINT, const void FAR*); HBITMAP 
CreateBitmapIndirect(BITMAP FAR* ); HBITMAP 
CreateBrushIndirect(LOGBRUSH FAR*); HBRUSH 
CreateCaret(HWND, HBITMAP, int, int); void 
CreateCompatibleBitmap(HDC, int, int); HBITMAP 
CreateCompatibleDC(HDC); HDC 
CreateCursor(HINSTANCE, int, int, int, int, const void FAR*, const void FAR*); HCURSOR 
CreateDC(LPCSTR, LPCSTR, LPCSTR, const void FAR*); HDC 
CreateDialog(HINSTANCE, LPCSTR, HWND, DLGPROC); HWND 
CreateDialogIndirect(HINSTANCE, const void FAR*, HWND, DLGPROC); HWND 
CreateDialogIndirectParam(HINSTANCE, const void FAR*, HWND, DLGPROC, LPARAM); HWND 
CreateDialogParam(HINSTANCE, LPCSTR, HWND, DLGPROC, LPARAM); HWND 
CreateDIBitmap(HDC, BITMAPINFOHEADER FAR*, DWORD, const void FAR*, BITMAPINFO FAR*, UINT); HBITMAP
CreateDIBPatternBrush(HGLOBAL, UINT); HBRUSH 
CreateDiscardableBitmap(HDC, int, int); HBITMAP 
CreateEllipticRgn(int, int, int, int); HRGN 
CreateEllipticRgnIndirect(const RECT FAR*); HRGN 
CreateFont(int, int, int, int, int, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, LPCSTR); HFONT 
CreateFontIndirect(const LOGFONT FAR*); HFONT 
CreateHatchBrush(int, COLORREF); HBRUSH 
CreateIC(LPCSTR, LPCSTR, LPCSTR, const void FAR*); HDC 
CreateIcon(HINSTANCE, int, int, BYTE, BYTE, const void FAR*, const void FAR*); HICON 
CreateMenu(void); HMENU 
CreateMetaFile(LPCSTR); HDC 
CreatePalette(const LOGPALETTE FAR*); HPALETTE 
CreatePatternBrush(HBITMAP); HBRUSH 
CreatePen(int, int, COLORREF); HPEN 
CreatePenIndirect(LOGPEN FAR*); HPEN 
CreatePolygonRgn(const POINT FAR*, int, int); HRGN 
CreatePolyPolygonRgn(const POINT FAR*, const int FAR*, int, int); HRGN 
CreatePopupMenu(void); HMENU 
CreateRectRgn(int, int, int, int); HRGN 
CreateRectRgnIndirect(const RECT FAR*); HRGN 
CreateRoundRectRgn(int, int, int, int, int, int); HRGN 
CreateScalableFontResource(UINT, LPCSTR, LPCSTR, LPCSTR); BOOL 
CreateSolidBrush(COLORREF); HBRUSH 
CreateWindow(LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, void FAR*); HWND 
CreateWindowEx(DWORD, LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, void FAR*); HWND 
DebugBreak(void); void 
DebugOutput(UINT flags, LPCSTR lpsz, ...); void FAR _cdecl 
DefDlgProc(HWND, UINT, WPARAM, LPARAM); LRESULT 
DefDriverProc(DWORD dwDriverIdentifier, HDRVR driverID, UINT message, LPARAM lParam1, LPARAM lParam2); LRESULT
DeferWindowPos(HDWP, HWND, HWND, int, int, int, int, UINT); HDWP 
DefFrameProc(HWND, HWND, UINT, WPARAM, LPARAM); LRESULT 
DefHookProc(int, WPARAM, LPARAM, HHOOK FAR*); LRESULT 
DefMDIChildProc(HWND, UINT, WPARAM, LPARAM); LRESULT 
DefWindowProc(HWND, UINT, WPARAM, LPARAM); LRESULT 
DeleteAtom(ATOM); ATOM 
DeleteDC(HDC); BOOL 
DeleteMenu(HMENU, UINT, UINT); BOOL 
DeleteMetaFile(HMETAFILE); BOOL 
DeleteObject(HGDIOBJ); BOOL 
DestroyCaret(void); void 
DestroyCursor(HCURSOR); BOOL 
DestroyIcon(HICON); BOOL 
DestroyMenu(HMENU); BOOL 
DestroyWindow(HWND); BOOL 
DialogBox(HINSTANCE, LPCSTR, HWND, DLGPROC); int 
DialogBoxIndirect(HINSTANCE, HGLOBAL, HWND, DLGPROC); int 
DialogBoxIndirectParam(HINSTANCE, HGLOBAL, HWND, DLGPROC, LPARAM); int 
DialogBoxParam(HINSTANCE, LPCSTR, HWND, DLGPROC, LPARAM); int 
DirectedYield(HTASK); void 
DispatchMessage(const MSG FAR*); LONG 
DlgDirList(HWND, LPSTR, int, int, UINT); int 
DlgDirListComboBox(HWND, LPSTR, int, int, UINT); int 
DlgDirSelect(HWND, LPSTR, int); BOOL 
DlgDirSelectComboBox(HWND, LPSTR, int); BOOL 
DlgDirSelectComboBoxEx(HWND, LPSTR, int, int); BOOL 
DlgDirSelectEx(HWND, LPSTR, int, int); BOOL 
DPtoLP(HDC, POINT FAR*, int); BOOL 
DrawFocusRect(HDC, const RECT FAR*); void 
DrawIcon(HDC, int, int, HICON); BOOL 
DrawMenuBar(HWND); void 
DrawText(HDC, LPCSTR, int, RECT FAR*, UINT); int 
Ellipse(HDC, int, int, int, int); BOOL 
EmptyClipboard(void); BOOL 
EnableCommNotification(int, HWND, int, int); BOOL 
EnableHardwareInput(BOOL); BOOL 
EnableMenuItem(HMENU, UINT, UINT); BOOL 
EnableScrollBar(HWND, int, UINT); BOOL 
EnableWindow(HWND,BOOL); BOOL 
EndDeferWindowPos(HDWP); BOOL 
EndDialog(HWND, int); void 
EndDoc(HDC); int 
EndPage(HDC); int 
EndPaint(HWND, const PAINTSTRUCT FAR*); void 
EnumChildWindows(HWND, WNDENUMPROC, LPARAM); BOOL 
EnumClipboardFormats(UINT); UINT 
EnumFontFamilies(HDC, LPCSTR, FONTENUMPROC, LPARAM); int 
EnumFonts(HDC, LPCSTR, OLDFONTENUMPROC, LPARAM); int 
EnumMetaFile(HDC, HMETAFILE, MFENUMPROC, LPARAM); BOOL 
EnumObjects(HDC, int, GOBJENUMPROC, LPARAM); int 
EnumProps(HWND, PROPENUMPROC); int 
EnumTaskWindows(HTASK, WNDENUMPROC, LPARAM); BOOL 
EnumWindows(WNDENUMPROC, LPARAM); BOOL 
EqualRect(const RECT FAR*, const RECT FAR*); BOOL 
EqualRgn(HRGN, HRGN); BOOL 
Escape(HDC, int, int, LPCSTR, void FAR*); int 
EscapeCommFunction(int, int); LONG 
ExcludeClipRect(HDC, int, int, int, int); int 
ExcludeUpdateRgn(HDC, HWND); int 
ExitWindows(DWORD dwReturnCode, UINT wReserved); BOOL 
ExitWindowsExec(LPCSTR, LPCSTR); BOOL 
ExtFloodFill(HDC, int, int, COLORREF, UINT); BOOL 
ExtTextOut(HDC, int, int, UINT, const RECT FAR*, LPCSTR, UINT, int FAR*); BOOL 
FatalAppExit(UINT, LPCSTR); void 
FatalExit(int); void 
FillRect(HDC, const RECT FAR*, HBRUSH); int 
FillRgn(HDC, HRGN, HBRUSH); BOOL 
FindAtom(LPCSTR); ATOM 
FindResource(HINSTANCE, LPCSTR, LPCSTR); HRSRC 
FindWindow(LPCSTR, LPCSTR); HWND 
FlashWindow(HWND, BOOL); BOOL 
FloodFill(HDC, int, int, COLORREF); BOOL 
FlushComm(int, int); int 
FrameRect(HDC, const RECT FAR*, HBRUSH); int 
FrameRgn(HDC, HRGN, HBRUSH, int, int); BOOL 
FreeLibrary(HINSTANCE); void 
FreeModule(HINSTANCE); BOOL 
FreeProcInstance(FARPROC); void 
FreeResource(HGLOBAL); BOOL 
FreeSelector(UINT); UINT 
GetActiveWindow(void); HWND 
GetAspectRatioFilter(HDC); DWORD 
GetAspectRatioFilterEx(HDC, SIZE FAR*); BOOL 
GetAsyncKeyState(int); int 
GetAtomHandle(ATOM); HLOCAL 
GetAtomName(ATOM, LPSTR, int); UINT 
GetBitmapBits(HBITMAP, LONG, void FAR*); LONG 
GetBitmapDimension(HBITMAP); DWORD 
GetBitmapDimensionEx(HBITMAP, SIZE FAR*); BOOL 
GetBkColor(HDC); COLORREF 
GetBkMode(HDC); int 
GetBoundsRect(HDC hDC, RECT FAR* lprcBounds, UINT flags); UINT 
GetBrushOrg(HDC); DWORD 
GetBrushOrgEx(HDC, POINT FAR*); BOOL 
GetCapture(void); HWND 
GetCaretBlinkTime(void); UINT 
GetCaretPos(POINT FAR*); void 
GetCharABCWidths(HDC, UINT, UINT, ABC FAR*); BOOL 
GetCharWidth(HDC, UINT, UINT, int FAR*); BOOL 
GetClassInfo(HINSTANCE, LPCSTR, WNDCLASS FAR*); BOOL 
GetClassLong(HWND, int); LONG 
GetClassName(HWND, LPSTR, int); int 
GetClassWord(HWND, int); WORD 
GetClientRect(HWND, RECT FAR*); void 
GetClipboardData(UINT); HANDLE 
GetClipboardFormatName(UINT, LPSTR, int); int 
GetClipboardOwner(void); HWND 
GetClipboardViewer(void); HWND 
GetClipBox(HDC, RECT FAR*); int 
GetClipCursor(RECT FAR*); void 
GetCodeHandle(FARPROC); HGLOBAL 
GetCodeInfo(FARPROC lpProc, SEGINFO FAR* lpSegInfo); void 
GetCommError(int, COMSTAT FAR* ); int 
GetCommEventMask(int, int); UINT 
GetCommState(int, DCB FAR*); int 
GetCurrentPDB(void); UINT 
GetCurrentPosition(HDC); DWORD 
GetCurrentPositionEx(HDC, POINT FAR*); BOOL 
GetCurrentTask(void); HTASK 
GetCurrentTime(void); DWORD 
GetCursor(void); HCURSOR 
GetCursorPos(POINT FAR*); void 
GetDC(HWND); HDC 
GetDCEx(register HWND hwnd, HRGN hrgnClip, DWORD flags); HDC 
GetDCOrg(HDC); DWORD 
GetDesktopWindow(void); HWND 
GetDeviceCaps(HDC, int); int 
GetDialogBaseUnits(void); DWORD 
GetDIBits(HDC, HBITMAP, UINT, UINT, void FAR*, BITMAPINFO FAR*, UINT); int 
GetDlgCtrlID(HWND); int 
GetDlgItem(HWND, int); HWND 
GetDlgItemInt(HWND, int, BOOL FAR* , BOOL); UINT 
GetDlgItemText(HWND, int, LPSTR, int); int 
GetDOSEnvironment(void); LPSTR 
GetDoubleClickTime(void); UINT 
GetDriverInfo(HDRVR, DRIVERINFOSTRUCT FAR*); BOOL
GetDriverModuleHandle(HDRVR hDriver); HINSTANCE 
GetDriveType(int); UINT 
GetEnvironment(LPCSTR, void FAR*, UINT); int 
GetFocus(void); HWND 
GetFontData(HDC, DWORD, DWORD, void FAR*, DWORD); DWORD 
GetFreeSpace(UINT); DWORD 
GetFreeSystemResources(UINT); UINT 
GetGlyphOutline(HDC, UINT, UINT, GLYPHMETRICS FAR*, DWORD, void FAR*, const MAT2 FAR*); DWORD 
GetInputState(void); BOOL 
GetInstanceData(HINSTANCE, PBYTE, int); int 
GetKBCodePage(void); int 
GetKerningPairs(HDC, int, KERNINGPAIR FAR*); int 
GetKeyboardState(BYTE FAR* ); void 
GetKeyboardType(int); int 
GetKeyNameText(LONG, LPSTR, int); int 
GetKeyState(int); int 
GetLastActivePopup(HWND); HWND 
GetMapMode(HDC); int 
GetMenu(HWND); HMENU 
GetMenuCheckMarkDimensions(void); DWORD 
GetMenuItemCount(HMENU); int 
GetMenuItemID(HMENU, int); UINT 
GetMenuState(HMENU, UINT, UINT); UINT 
GetMenuString(HMENU, UINT, LPSTR, int, UINT); int 
GetMessage(MSG FAR*, HWND, UINT, UINT); BOOL 
GetMessageExtraInfo(void); LPARAM 
GetMessagePos(void); DWORD 
GetMessageTime(void); LONG 
GetMetaFile(LPCSTR); HMETAFILE 
GetMetaFileBits(HMETAFILE); HGLOBAL 
GetModuleFileName(HINSTANCE, LPSTR, int); int 
GetModuleHandle(LPCSTR); HMODULE 
GetModuleUsage(HINSTANCE); int 
GetNearestColor(HDC, COLORREF); COLORREF 
GetNearestPaletteIndex(HPALETTE, COLORREF); UINT 
GetNextDlgGroupItem(HWND, HWND, BOOL); HWND 
GetNextDlgTabItem(HWND, HWND, BOOL); HWND 
GetNextDriver(HDRVR, DWORD); HDRVR 
GetNextWindow(HWND, UINT); HWND 
GetNumTasks(void); UINT 
GetObject(HGDIOBJ, int, void FAR*); int 
GetOpenClipboardWindow(void); HWND 
GetOutlineTextMetrics(HDC, UINT, OUTLINETEXTMETRIC FAR*); WORD 
GetPaletteEntries(HPALETTE, UINT, UINT, PALETTEENTRY FAR*); UINT 
GetParent(HWND); HWND 
GetPixel(HDC, int, int); COLORREF 
GetPolyFillMode(HDC); int 
GetPriorityClipboardFormat(UINT FAR*, int); int 
GetPrivateProfileInt(LPCSTR, LPCSTR, int, LPCSTR); UINT 
GetPrivateProfileString(LPCSTR, LPCSTR, LPCSTR, LPSTR, int, LPCSTR); int 
GetProcAddress(HINSTANCE, LPCSTR); FARPROC 
GetProfileInt(LPCSTR, LPCSTR, int); UINT 
GetProfileString(LPCSTR, LPCSTR, LPCSTR, LPSTR, int); int 
GetProp(HWND, LPCSTR); HANDLE 
GetQueueStatus(UINT flags); DWORD 
GetRasterizerCaps(RASTERIZER_STATUS FAR*, int); BOOL 
GetRgnBox(HRGN, RECT FAR*); int 
GetROP2(HDC); int 
GetScrollPos(HWND, int); int 
GetScrollRange(HWND, int, int FAR*, int FAR*); void 
GetSelectorBase(UINT); DWORD 
GetSelectorLimit(UINT); DWORD 
GetStockObject(int); HGDIOBJ 
GetStretchBltMode(HDC); int 
GetSubMenu(HMENU, int); HMENU 
GetSysColor(int); COLORREF 
GetSysModalWindow(void); HWND 
GetSystemDebugState(void); LONG 
GetSystemDirectory(LPSTR, UINT); UINT 
GetSystemMenu(HWND, BOOL); HMENU 
GetSystemMetrics(int); int 
GetSystemPaletteEntries(HDC, UINT, UINT, PALETTEENTRY FAR*); UINT 
GetSystemPaletteUse(HDC); UINT 
GetTabbedTextExtent(HDC, LPCSTR, int, int, int FAR*); DWORD 
GetTempDrive(char); BYTE 
GetTempFileName(BYTE, LPCSTR, UINT, LPSTR); int 
GetTextAlign(HDC); UINT 
GetTextCharacterExtra(HDC); int 
GetTextColor(HDC); COLORREF 
GetTextExtent(HDC, LPCSTR, int); DWORD 
GetTextExtentPoint(HDC, LPCSTR, int, SIZE FAR*); BOOL 
GetTextFace(HDC, int, LPSTR); int 
GetTextMetrics(HDC, TEXTMETRIC FAR*); BOOL 
GetThresholdEvent(void); int FAR* 
GetThresholdStatus(void); int 
GetTickCount(void); DWORD 
GetTimerResolution(void); DWORD 
GetTopWindow(HWND); HWND 
GetUpdateRect(HWND, RECT FAR*, BOOL); BOOL 
GetUpdateRgn(HWND, HRGN, BOOL); int 
GetVersion(void); DWORD 
GetViewportExt(HDC); DWORD 
GetViewportExtEx(HDC, SIZE FAR*); BOOL 
GetViewportOrg(HDC); DWORD 
GetViewportOrgEx(HDC, POINT FAR*); BOOL 
GetWinDebugInfo(WINDEBUGINFO FAR* lpwdi, UINT flags); BOOL 
GetWindow(HWND, UINT); HWND 
GetWindowDC(HWND); HDC 
GetWindowExt(HDC); DWORD 
GetWindowExtEx(HDC, SIZE FAR*); BOOL 
GetWindowLong(HWND, int); LONG 
GetWindowOrg(HDC); DWORD 
GetWindowOrgEx(HDC, POINT FAR*); BOOL 
GetWindowPlacement(HWND, WINDOWPLACEMENT FAR*); BOOL 
GetWindowRect(HWND, RECT FAR*); void 
GetWindowsDirectory(LPSTR, UINT); UINT 
GetWindowTask(HWND); HTASK 
GetWindowText(HWND, LPSTR, int); int 
GetWindowTextLength(HWND); int 
GetWindowWord(HWND, int); WORD 
GetWinFlags(void); DWORD 
GlobalAddAtom(LPCSTR); ATOM 
GlobalAlloc(UINT, DWORD); HGLOBAL 
GlobalCompact(DWORD); DWORD 
GlobalDeleteAtom(ATOM); ATOM 
GlobalDosAlloc(DWORD); DWORD 
GlobalDosFree(UINT); UINT 
GlobalFindAtom(LPCSTR); ATOM 
GlobalFix(HGLOBAL); void 
GlobalFlags(HGLOBAL); UINT 
GlobalFree(HGLOBAL); HGLOBAL 
GlobalGetAtomName(ATOM, LPSTR, int); UINT 
GlobalHandle(UINT); DWORD 
GlobalLock(HGLOBAL); void FAR* 
GlobalLRUNewest(HGLOBAL); HGLOBAL 
GlobalLRUOldest(HGLOBAL); HGLOBAL 
GlobalNotify(GNOTIFYPROC); void 
GlobalPageLock(HGLOBAL); UINT 
GlobalPageUnlock(HGLOBAL); UINT 
GlobalReAlloc(HGLOBAL, DWORD, UINT); HGLOBAL 
GlobalSize(HGLOBAL); DWORD 
GlobalUnfix(HGLOBAL); void 
GlobalUnlock(HGLOBAL); BOOL 
GlobalUnWire(HGLOBAL); BOOL 
GlobalWire(HGLOBAL); void FAR* 
GrayString(HDC, HBRUSH, GRAYSTRINGPROC, LPARAM, int, int, int, int, int); BOOL 
HideCaret(HWND); void 
HiliteMenuItem(HWND, HMENU, UINT, UINT); BOOL 
hmemcpy(void _huge*, const void _huge*, long); void 
InflateRect(RECT FAR*, int, int); void 
InitAtomTable(int); BOOL 
InSendMessage(void); BOOL 
InsertMenu(HMENU, UINT, UINT, UINT, LPCSTR); BOOL 
IntersectClipRect(HDC, int, int, int, int); int 
IntersectRect(RECT FAR*, const RECT FAR*, const RECT FAR*); BOOL 
InvalidateRect(HWND, const RECT FAR*, BOOL); void 
InvalidateRgn(HWND, HRGN, BOOL); void 
InvertRect(HDC, const RECT FAR*); void 
InvertRgn(HDC, HRGN); BOOL 
IsBadCodePtr(FARPROC lpfn); BOOL 
IsBadHugeReadPtr(const void _huge* lp, DWORD cb); BOOL 
IsBadHugeWritePtr(void _huge* lp, DWORD cb); BOOL 
IsBadReadPtr(const void FAR* lp, UINT cb); BOOL 
IsBadStringPtr(const void FAR* lpsz, UINT cchMax); BOOL 
IsBadWritePtr(void FAR* lp, UINT cb); BOOL 
IsCharAlpha(char); BOOL 
IsCharAlphaNumeric(char); BOOL 
IsCharLower(char); BOOL 
IsCharUpper(char); BOOL 
IsChild(HWND, HWND); BOOL 
IsClipboardFormatAvailable(UINT); BOOL 
IsDBCSLeadByte(BYTE); BOOL 
IsDialogMessage(HWND, MSG FAR*); BOOL 
IsDlgButtonChecked(HWND, int); UINT 
IsGDIObject(HGDIOBJ); BOOL 
IsIconic(HWND); BOOL 
IsMenu(HMENU); BOOL 
IsRectEmpty(const RECT FAR*); BOOL 
IsTask(HTASK); BOOL 
IsWindow(HWND); BOOL 
IsWindowEnabled(HWND); BOOL 
IsWindowVisible(HWND); BOOL 
IsZoomed(HWND); BOOL 
KillTimer(HWND, UINT); BOOL 
LimitEmsPages(DWORD); void 
LineDDA(int, int, int, int, LINEDDAPROC, LPARAM); void 
LineTo(HDC, int, int); BOOL 
LoadAccelerators(HINSTANCE, LPCSTR); HACCEL 
LoadBitmap(HINSTANCE, LPCSTR); HBITMAP 
LoadCursor(HINSTANCE, LPCSTR); HCURSOR 
LoadIcon(HINSTANCE, LPCSTR); HICON 
LoadLibrary(LPCSTR); HINSTANCE 
LoadMenu(HINSTANCE, LPCSTR); HMENU 
LoadMenuIndirect(const void FAR*); HMENU 
LoadModule(LPCSTR, LPVOID); HINSTANCE 
LoadResource(HINSTANCE, HRSRC); HGLOBAL 
LoadString(HINSTANCE, UINT, LPSTR, int); int 
LocalAlloc(UINT, UINT); HLOCAL 
LocalCompact(UINT); UINT 
LocalFlags(HLOCAL); UINT 
LocalFree(HLOCAL); HLOCAL 
LocalHandle(void NEAR*); HLOCAL 
LocalInit(UINT, UINT, UINT); BOOL 
LocalLock(HLOCAL); void NEAR*
LocalReAlloc(HLOCAL, UINT, UINT); HLOCAL 
LocalShrink(HLOCAL, UINT); UINT 
LocalSize(HLOCAL); UINT 
LocalUnlock(HLOCAL); BOOL 
LockInput(HANDLE h1, HWND hwndInput, BOOL fLock); BOOL 
LockResource(HGLOBAL); void FAR* 
LockSegment(UINT); HGLOBAL 
LockWindowUpdate(HWND hwndLock); BOOL 
LogError(UINT err, void FAR* lpInfo); void 
LogParamError(UINT err, FARPROC lpfn, void FAR* param); void 
LPtoDP(HDC, POINT FAR*, int); BOOL 
lstrcat(LPSTR, LPCSTR); LPSTR 
lstrcmp(LPCSTR, LPCSTR); int 
lstrcmpi(LPCSTR, LPCSTR); int 
lstrcpy(LPSTR, LPCSTR); LPSTR 
lstrcpyn(LPSTR, LPCSTR, int); LPSTR 
lstrlen(LPCSTR); int 
MakeProcInstance(FARPROC, HINSTANCE); FARPROC 
MapDialogRect(HWND, RECT FAR*); void 
MapVirtualKey(UINT, UINT); UINT 
MapWindowPoints(HWND hwndFrom, HWND hwndTo, POINT FAR* lppt, UINT cpt); void 
MessageBeep(UINT); void 
MessageBox(HWND, LPCSTR, LPCSTR, UINT); int 
ModifyMenu(HMENU, UINT, UINT, UINT, LPCSTR); BOOL 
MoveTo(HDC, int, int); DWORD 
MoveToEx(HDC, int, int, POINT FAR*); BOOL 
MoveWindow(HWND, int, int, int, int, BOOL); BOOL 
MulDiv(int, int, int); int 
OemKeyScan(UINT); DWORD 
OemToAnsi(const char _huge*, char _huge*); void 
OemToAnsiBuff(LPCSTR, LPSTR, UINT); void 
OffsetClipRgn(HDC, int, int); int 
OffsetRect(RECT FAR*, int, int); void 
OffsetRgn(HRGN, int, int); int 
OffsetViewportOrg(HDC, int, int); DWORD 
OffsetViewportOrgEx(HDC, int, int, POINT FAR*); BOOL 
OffsetWindowOrg(HDC, int, int); DWORD 
OffsetWindowOrgEx(HDC, int, int, POINT FAR*); BOOL 
OpenClipboard(HWND); BOOL 
OpenComm(LPCSTR, UINT, UINT); int 
OpenDriver(LPCSTR szDriverName, LPCSTR szSectionName, LPARAM lParam2); HDRVR 
OpenIcon(HWND); BOOL 
OpenSound(void); int 
OutputDebugString(LPCSTR); void 
PaintRgn(HDC, HRGN); BOOL 
PatBlt(HDC, int, int, int, int, DWORD); BOOL 
PeekMessage(MSG FAR*, HWND, UINT, UINT, UINT); BOOL 
Pie(HDC, int, int, int, int, int, int, int, int); BOOL 
PlayMetaFile(HDC, HMETAFILE); BOOL 
PlayMetaFileRecord(HDC, HANDLETABLE FAR*, METARECORD FAR*, UINT); void 
Polygon(HDC, const POINT FAR*, int); BOOL 
Polyline(HDC, const POINT FAR*, int); BOOL 
PolyPolygon(HDC, const POINT FAR*, int FAR*, int); BOOL 
PostAppMessage(HTASK, UINT, WPARAM, LPARAM); BOOL 
PostMessage(HWND, UINT, WPARAM, LPARAM); BOOL 
PostQuitMessage(int); void 
PrestoChangoSelector(UINT sourceSel, UINT destSel); UINT 
ProfClear(void); void 
ProfFinish(void); void 
ProfFlush(void); void 
ProfInsChk(void); int 
ProfSampRate(int,int); void 
ProfSetup(int,int); void 
ProfStart(void); void 
ProfStop(void); void 
PtInRect(const RECT FAR*, POINT); BOOL 
PtInRegion(HRGN, int, int); BOOL 
PtVisible(HDC, int, int); BOOL 
QueryAbort(HDC, int); BOOL 
QuerySendMessage(HANDLE h1, HANDLE h2, HANDLE h3, LPMSG lpmsg); BOOL 
ReadComm(int, void FAR*, int); int 
RealizePalette(HDC); UINT 
Rectangle(HDC, int, int, int, int); BOOL 
RectInRegion(HRGN, const RECT FAR*); BOOL 
RectVisible(HDC, const RECT FAR*); BOOL 
RedrawWindow(HWND hwnd, const RECT FAR* lprcUpdate, HRGN hrgnUpdate, UINT flags); BOOL 
RegisterClass(const WNDCLASS FAR*); ATOM 
RegisterClipboardFormat(LPCSTR); UINT 
RegisterWindowMessage(LPCSTR); UINT 
ReleaseCapture(void); void 
ReleaseDC(HWND, HDC); int 
RemoveFontResource(LPCSTR); BOOL 
RemoveMenu(HMENU, UINT, UINT); BOOL 
RemoveProp(HWND, LPCSTR); HANDLE 
ReplyMessage(LRESULT); void 
ResizePalette(HPALETTE, UINT); BOOL 
RestoreDC(HDC, int); BOOL 
RoundRect(HDC, int, int, int, int, int, int); BOOL 
SaveDC(HDC); int 
ScaleViewportExt(HDC, int, int, int, int); DWORD 
ScaleViewportExtEx(HDC, int, int, int, int, SIZE FAR*); BOOL 
ScaleWindowExt(HDC, int, int, int, int); DWORD 
ScaleWindowExtEx(HDC, int, int, int, int, SIZE FAR*); BOOL 
ScreenToClient(HWND, POINT FAR*); void 
ScrollDC(HDC, int, int, const RECT FAR*, const RECT FAR*, HRGN, RECT FAR*); BOOL 
ScrollWindow(HWND, int, int, const RECT FAR*, const RECT FAR*); void 
ScrollWindowEx(HWND hwnd, int dx, int dy, const RECT FAR* prcScroll, const RECT FAR* prcClip, HRGN hrgnUpdate, RECT FAR* prcUpdate, UINT flags); int
SelectClipRgn(HDC, HRGN); int 
SelectObject(HDC, HGDIOBJ); HGDIOBJ 
SelectPalette(HDC, HPALETTE, BOOL); HPALETTE 
SendDlgItemMessage(HWND, int, UINT, WPARAM, LPARAM); LRESULT 
SendDriverMessage(HDRVR hDriver, UINT message, LPARAM lParam1, LPARAM lParam2); LRESULT 
SendMessage(HWND, UINT, WPARAM, LPARAM); LRESULT 
SetAbortProc(HDC, ABORTPROC); int 
SetActiveWindow(HWND); HWND 
SetBitmapBits(HBITMAP, DWORD, const void FAR*); LONG 
SetBitmapDimension(HBITMAP, int, int); DWORD 
SetBitmapDimensionEx(HBITMAP, int, int, SIZE FAR*); BOOL 
SetBkColor(HDC, COLORREF); COLORREF 
SetBkMode(HDC, int); int 
SetBoundsRect(HDC hDC, const RECT FAR* lprcBounds, UINT flags); UINT 
SetBrushOrg(HDC, int, int); DWORD 
SetCapture(HWND); HWND 
SetCaretBlinkTime(UINT); void 
SetCaretPos(int, int); void 
SetClassLong(HWND, int, LONG); LONG 
SetClassWord(HWND, int, WORD); WORD 
SetClipboardData(UINT, HANDLE); HANDLE 
SetClipboardViewer(HWND); HWND 
SetCommBreak(int); int 
SetCommEventMask(int, UINT); UINT FAR* 
SetCommState(const DCB FAR*); int 
SetCursor(HCURSOR); HCURSOR 
SetCursorPos(int, int); void 
SetDIBits(HDC, HBITMAP, UINT, UINT, const void FAR*, BITMAPINFO FAR*, UINT); int 
SetDIBitsToDevice(HDC, int, int, int, int, int, int, UINT, UINT, void FAR*, BITMAPINFO FAR*, UINT); int 
SetDlgItemInt(HWND, int, UINT, BOOL); void 
SetDlgItemText(HWND, int, LPCSTR); void 
SetDoubleClickTime(UINT); void 
SetEnvironment(LPCSTR, const void FAR*, UINT); int 
SetErrorMode(UINT); UINT 
SetFocus(HWND); HWND 
SetHandleCount(UINT); UINT 
SetKeyboardState(BYTE FAR* ); void 
SetMapMode(HDC, int); int 
SetMapperFlags(HDC, DWORD); DWORD 
SetMenu(HWND, HMENU); BOOL 
SetMenuItemBitmaps(HMENU, UINT, UINT, HBITMAP, HBITMAP); BOOL 
SetMessageQueue(int); BOOL 
SetMetaFileBits(HGLOBAL); HMETAFILE 
SetMetaFileBitsBetter(HGLOBAL); HMETAFILE 
SetPaletteEntries(HPALETTE, UINT, UINT, const PALETTEENTRY FAR*); UINT 
SetParent(HWND, HWND); HWND 
SetPixel(HDC, int, int, COLORREF); COLORREF 
SetPolyFillMode(HDC, int); int 
SetProp(HWND, LPCSTR, HANDLE); BOOL 
SetRect(RECT FAR*, int, int, int, int); void 
SetRectEmpty(RECT FAR*); void 
SetRectRgn(HRGN, int, int, int, int); void 
SetResourceHandler(HINSTANCE, LPCSTR, RSRCHDLRPROC); RSRCHDLRPROC 
SetROP2(HDC, int); int 
SetScrollPos(HWND, int, int, BOOL); int 
SetScrollRange(HWND, int, int, int, BOOL); void 
SetSelectorBase(UINT, DWORD); UINT 
SetSelectorLimit(UINT, DWORD); UINT 
SetSoundNoise(int, int); int 
SetStretchBltMode(HDC, int); int 
SetSwapAreaSize(UINT); LONG 
SetSysColors(int, const int FAR*, const COLORREF FAR*); void 
SetSysModalWindow(HWND); HWND 
SetSystemPaletteUse(HDC, UINT); UINT 
SetTextAlign(HDC, UINT); UINT 
SetTextCharacterExtra(HDC, int); int 
SetTextColor(HDC, COLORREF); COLORREF 
SetTextJustification(HDC, int, int); int 
SetTimer(HWND, UINT, UINT, TIMERPROC); UINT 
SetViewportExt(HDC, int, int); DWORD 
SetViewportExtEx(HDC, int, int, SIZE FAR*); BOOL 
SetViewportOrg(HDC, int, int); DWORD 
SetViewportOrgEx(HDC, int, int, POINT FAR*); BOOL 
SetVoiceAccent(int, int, int, int, int); int 
SetVoiceEnvelope(int, int, int); int 
SetVoiceNote(int, int, int, int); int 
SetVoiceQueueSize(int, int); int 
SetVoiceSound(int, DWORD, int); int 
SetVoiceThreshold(int, int); int 
SetWinDebugInfo(const WINDEBUGINFO FAR* lpwdi); BOOL 
SetWindowExt(HDC, int, int); DWORD 
SetWindowExtEx(HDC, int, int, SIZE FAR*); BOOL 
SetWindowLong(HWND, int, LONG); LONG 
SetWindowOrg(HDC, int, int); DWORD 
SetWindowOrgEx(HDC, int, int, POINT FAR*); BOOL 
SetWindowPlacement(HWND, const WINDOWPLACEMENT FAR*); BOOL 
SetWindowPos(HWND, HWND, int, int, int, int, UINT); BOOL 
SetWindowsHook(int, HOOKPROC); HHOOK 
SetWindowsHookEx(int idHook, HOOKPROC lpfn, HINSTANCE hInstance, HTASK hTask); HHOOK 
SetWindowText(HWND, LPCSTR); void 
SetWindowWord(HWND, int, WORD); WORD 
ShowCaret(HWND); void 
ShowCursor(BOOL); int 
ShowOwnedPopups(HWND, BOOL); void 
ShowScrollBar(HWND, int, BOOL); void 
ShowWindow(HWND, int); BOOL 
SizeofResource(HINSTANCE, HRSRC); DWORD 
SpoolFile(LPSTR, LPSTR, LPSTR, LPSTR); HANDLE 
StartDoc(HDC, DOCINFO FAR*); int 
StartPage(HDC); int 
StartSound(void); int 
StopSound(void); int 
StretchBlt(HDC, int, int, int, int, HDC, int, int, int, int, DWORD); BOOL 
StretchDIBits(HDC, int, int, int, int, int, int, int, int, const void FAR*, LPBITMAPINFO, UINT, DWORD); int 
SubtractRect(RECT FAR*, const RECT FAR*, const RECT FAR*); BOOL 
SwapMouseButton(BOOL); BOOL 
SwapRecording(UINT); void 
SwitchStackBack(void); void 
SwitchStackTo(UINT, UINT, UINT); void 
SyncAllVoices(void); int 
SystemParametersInfo(UINT, UINT, VOID FAR*, UINT); BOOL 
TabbedTextOut(HDC, int, int, LPCSTR, int, int, int FAR*, int); LONG 
TextOut(HDC, int, int, LPCSTR, int); BOOL 
Throw(const int FAR*, int); void 
ToAscii(UINT wVirtKey, UINT wScanCode, BYTE FAR* lpKeyState, DWORD FAR* lpChar, UINT wFlags); int 
TrackPopupMenu(HMENU, UINT, int, int, int, HWND, const RECT FAR*); BOOL 
TranslateAccelerator(HWND, HACCEL, MSG FAR*); int 
TranslateMDISysAccel(HWND, MSG FAR*); BOOL 
TranslateMessage(const MSG FAR*); BOOL 
TransmitCommChar(int, char); int 
UngetCommChar(int, char); int 
UnhookWindowsHook(int, HOOKPROC); BOOL 
UnhookWindowsHookEx(HHOOK hHook); BOOL 
UnionRect(RECT FAR*, const RECT FAR*, const RECT FAR*); BOOL 
UnlockSegment(UINT); void 
UnrealizeObject(HGDIOBJ); BOOL 
UnregisterClass(LPCSTR, HINSTANCE); BOOL 
UpdateColors(HDC); int 
UpdateWindow(HWND); void 
ValidateCodeSegments(void); void 
ValidateFreeSpaces(void); void 
ValidateRect(HWND, const RECT FAR*); void 
ValidateRgn(HWND, HRGN); void 
VkKeyScan(UINT); UINT 
WaitMessage(void); void 
WaitSoundState(int); int 
WindowFromPoint(POINT); HWND 
WinExec(LPCSTR, UINT); UINT 
WinHelp(HWND hwndMain, LPCSTR lpszHelp, UINT usCommand, DWORD ulData); BOOL 
WNetAddConnection(LPSTR, LPSTR, LPSTR); UINT 
WNetCancelConnection(LPSTR, BOOL); UINT 
WNetGetConnection(LPSTR, LPSTR, UINT FAR*); UINT 
WriteComm(int, const void FAR*, int); int 
WritePrivateProfileString(LPCSTR, LPCSTR, LPCSTR, LPCSTR); BOOL 
WriteProfileString(LPCSTR, LPCSTR, LPCSTR); BOOL 
wsprintf(LPSTR lpszOut, LPCSTR lpszFmt, ...); int FAR CDECL 
wvsprintf(LPSTR lpszOut, LPCSTR lpszFmt, const void FAR* lpParams); int 
Yield(void); void 

__abs__(int);math.h
__alloca__(size_t __size);malloc.h
__emit__(unsigned char __byte, ...);dos.h
__fabs__(double __x);math.h
__inportb__(unsigned __portid);dos.h
__inportw__(unsigned __portid);dos.h
__int__(int __interruptnum);dos.h
__outportb__(unsigned __portid, unsigned char __value);dos.h
__outportw__(unsigned __portid, unsigned __value);dos.h
__size(x);stdarg.h
_atold(const char  *__s);math.h
_chmod();io.h
_chmod(const char  *__path, int __amode);io.h
_close(int __handle);io.h
_creat(const char  *__path, int __attribute);io.h
_csize(int __handle, long __size);io.h
_dos_close(int __fd);dos.h
_dos_commit(int __fd);dos.h
_dos_creat(const char _FAR *__pathP, unsigned __attr, int _FAR *__fd);dos.h
_dos_creatnew(const char _FAR *__pathP, unsigned __attr, int _FAR *__fd);dos.h
_dos_findfirst(const char _FAR *__path, unsigned __attrib, struct find_t _FAR *__finfo);dos.h
_dos_findnext(struct find_t _FAR *__finfo);dos.h
_dos_getdate(struct dosdate_t _FAR *__datep);dos.h
_dos_getdiskfree(unsigned __drive, struct diskfree_t _FAR *__dtable);dos.h
_dos_getdrive(unsigned _FAR *__drive);dos.h
_dos_getfileattr(const char _FAR *__filename, unsigned _FAR *__attrib);dos.h
_dos_getftime(int __fd, unsigned _FAR *__date, unsigned _FAR *__time);dos.h
_dos_gettime(struct dostime_t _FAR *__timep);dos.h
_dos_open(const char _FAR *__pathP, unsigned __oflag, int _FAR *__fd);dos.h
_dos_read(int __fd, void *__buf, unsigned __len, unsigned *__nread);dos.h
_dos_setdate(struct dosdate_t _FAR *__datep);dos.h
_dos_setdrive(unsigned __drive, unsigned _FAR *__ndrives);dos.h
_dos_setfileattr(const char _FAR *__filename, unsigned _FAR __attrib);dos.h
_dos_setftime(int __fd, unsigned __date, unsigned __time);dos.h
_dos_settime(struct dostime_t _FAR *__timep);dos.h
_dos_write(int __fd, const void *__buf, unsigned __len, unsigned *__nread );dos.h
_expand(void * __block, size_t __size);malloc.h
_fgetc(FILE  *__stream);stdio.h
_fmemccpy(void __far *__dest, const void __far *__src, int __c, size_t __n);mem.h
_fmemchr(const void __far *__s, int __c, size_t __n);mem.h
_fmemcmp(const void __far *__s1, const void __far *__s2, size_t __n);mem.h
_fmemcpy(void __far *__dest, const void __far *__src, size_t __n);mem.h
_fmemicmp(const void __far *__s1, const void __far *__s2, size_t __n);mem.h
_fmemmove(void __far *__dest, const void __far *__src, size_t __n);mem.h
_fmemset(void __far *__s, int __c, size_t __n);mem.h
_fmovmem(const void __far *__src, void __far *__dest, unsigned __length);mem.h
_fputc(char __c, FILE  *__stream);stdio.h
_fsetmem(void __far *__dest, unsigned __length, char __value);mem.h
_fsopen (const char  *__path, const char  *__mode, int __shflag);stdio.h
_get_osfhandle(int __handle);io.h
_getdrive(void);dos.h
_heapadd(void * __block, size_t __size);malloc.h
_heapchk(void);malloc.h
_heapmin(void);malloc.h
_heapset(unsigned int __fill);malloc.h
_heapwalk(_HEAPINFO *__entry);malloc.h
_lstrcoll(const char * __s1, const char * __s2);string.h
_lstrftime(char _FAR *__s, size_t __maxsize, const char _FAR *__fmt, const struct tm _FAR *__t);time.h
_lstrlwr(char  *__s);string.h
_lstrupr(char  *__s);string.h
_lstrxfrm(char * __s1, const char * __s2, size_t __n );string.h
_matherr (struct exception  *__e);math.h
_matherrl(struct _exceptionl  *__e);math.h
_msize(void * __block );malloc.h
_open (const char  *__path, int __oflags);io.h
_open_osfhandle(long __osfhandle, int __oflag);io.h
_read (int __handle, void  *__buf, unsigned __len);io.h
_rtl_creat(const char  *__path, int __attribute);io.h
_rtl_heapwalk(_HEAPINFO *__entry);malloc.h
_rtl_open (const char  *__path, int __oflags);io.h
_rtl_read (int __handle, void  *__buf, unsigned __len);io.h
_rtl_write(int __handle, const void  *__buf, unsigned __len);io.h
_stpcpy(char  *__dest, const char  *__src);string.h
_strdate(char _FAR *datestr);time.h
_strerror(const char  *__s);stdio.h
_strerror(const char  *__s);string.h
_strtime(char _FAR *timestr);time.h
_write(int __handle, const void  *__buf, unsigned __len);io.h
access(const char  *path, int amode);io.h
acos(double __x);math.h
acos(double __x);math.h
acosl(long double __x);math.h
acosl(long double __x);math.h
alloca(size_t __size);malloc.h
asctime(const struct tm _FAR *__tblock);time.h
asin(double __x);math.h
asin(double __x);math.h
asinl(long double __x);math.h
asinl(long double __x);math.h
atan(double __x);math.h
atan(double __x);math.h
atan2(double __y, double __x);math.h
atan2(double __y, double __x);math.h
atan2l(long double __x, long double __y);math.h
atan2l(long double __x, long double __y);math.h
atanl(long double __x);math.h
atanl(long double __x);math.h
atof(const char  *__s);math.h
bdosptr(int __dosfun, void _FAR *__argument, unsigned __dosal);dos.h
calloc(size_t __nitems, size_t __size);alloc.h
calloc(size_t __nitems, size_t __size);alloc.h
ceil(double __x);math.h
ceil(double __x);math.h
ceill(long double __x);math.h
ceill(long double __x);math.h
chdir( const char  *__path );dir.h
chmod();io.h
clearerr(FILE  *__stream);stdio.h
clock(void);time.h
close(int __handle);io.h
cos(double __x);math.h
cos(double __x);math.h
cosh(double __x);math.h
cosh(double __x);math.h
coshl(long double __x);math.h
coshl(long double __x);math.h
cosl(long double __x);math.h
cosl(long double __x);math.h
creat(const char  *__path, int __amode);io.h
creatnew(const char  *__path, int __mode);io.h
creattemp(char  *__path, int __amode);io.h
ctime(const time_t _FAR *__time);time.h
ctrlbrk(int _USERENTRY (*handler)(void));dos.h
difftime(time_t __time2, time_t __time1);time.h
disable(void);dos.h
dosexterr( struct DOSERROR _FAR *__eblkp );dos.h
dostounix(struct date _FAR *__d, struct time _FAR *__t);dos.h
dup(int __handle);io.h
dup2(int __oldhandle, int __newhandle);io.h
enable(void);dos.h
eof(int __handle);io.h
exp(double __x);math.h
exp(double __x);math.h
expl(long double __x);math.h
expl(long double __x);math.h
fabs(double __x);math.h
fabs(double __x);math.h
fabsl(long double __x);math.h
fabsl(long double __x);math.h
fclose(FILE  *__stream);stdio.h
fcloseall(void);stdio.h
fdopen(int __handle, char  *__type);stdio.h
feof(FILE  *__fp);stdio.h
ferror(FILE  *__fp);stdio.h
fexp(double __x, int  *__exponent);math.h
fflush(FILE  *__stream);stdio.h
fgetc(FILE  *__stream);stdio.h
fgetchar(void);stdio.h
fgetpos(FILE  *__stream, fpos_t  *__pos);stdio.h
fgets(char  *__s, int __n, FILE  *__stream);stdio.h
filelength(int __handle);io.h
fileno(FILE  *__fp);stdio.h
findfirst( const char  *__path, struct ffblk  *__ffblk, int __attrib );dir.h
findnext( struct ffblk  *__ffblk );dir.h
floor(double __x);math.h
floor(double __x);math.h
floorl(long double __x);math.h
floorl(long double __x);math.h
flushall(void);stdio.h
fmod(double __x, double __y);math.h
fmod(double __x, double __y);math.h
fmodl(long double __x, long double __y);math.h
fmodl(long double __x, long double __y);math.h
fnmerge( char  *__path, const char  *__drive, const char  *__dir, const char  *__name, const char  *__ext );dir.h
fnsplit(const char  *__path, char  *__drive, char  *__dir, char  *__name, char  *__ext );dir.h
fopen(const char  *__path, const char  *__mode);stdio.h
fprintf(FILE  *__stream, const char  *__format, ...);stdio.h
fputc(int __c, FILE  *__stream);stdio.h
fputchar(int __c);stdio.h
fputs(const char  *__s, FILE  *__stream);stdio.h
fread(void  *__ptr, size_t __size, size_t __n, FILE  *__stream);stdio.h
free(void * __block);alloc.h
free(void _FAR *__block);alloc.h
freopen(const char  *__path, const char  *__mode, FILE  *__stream);stdio.h
frexp(double __x, int * __exponent);math.h
frexpl(long double __x, int  *__exponent);math.h
frexpl(long double __x, int * __exponent);math.h
fscanf(FILE  *__stream, const char  *__format, ...);stdio.h
fseek(FILE  *__stream, long __offset, int __whence);stdio.h
fsetpos(FILE  *__stream, const fpos_t  *__pos);stdio.h
ftell(FILE  *__stream);stdio.h
fwrite(const void  *__ptr, size_t __size, size_t __n, FILE  *__stream);stdio.h
getc(FILE  *__fp);stdio.h
getcbrk(void);dos.h
getchar(void);stdio.h
getcurdir( int __drive, char  *__directory );dir.h
getcwd( char  *__buf, int __buflen );dir.h
getdate(struct date _FAR *__datep);dos.h
getdfree(unsigned char __drive, struct dfree _FAR *__dtable);dos.h
getdisk( void );dir.h
getdta(void);dos.h
getfat(unsigned char __drive, struct fatinfo _FAR *__dtable);dos.h
getfatd(struct fatinfo _FAR *__dtable);dos.h
getftime(int __handle, struct ftime  *__ftimep);io.h
getpsp(void);dos.h
gets(char  *__s);stdio.h
gettime(struct time _FAR *__timep);dos.h
getw(FILE  *__stream);stdio.h
gmtime(const time_t _FAR *__timer);time.h
heapcheck(void);alloc.h
heapcheckfree(unsigned int __fillvalue);alloc.h
heapchecknode(void *__node);alloc.h
heapfillfree(unsigned int __fillvalue);alloc.h
heapwalk(struct heapinfo *__hi);alloc.h
hypot (double __x, double __y);math.h
hypot(double __x, double __y);math.h
hypotl (long double __x, long double __y);math.h
hypotl(long double __x, long double __y);math.h
inp(unsigned __portid);dos.h
inport(unsigned __portid);dos.h
inportb(unsigned __portid);dos.h
inpw(unsigned __portid);dos.h
int386(int __intno, union REGS *__inregs, union REGS *__outregs);dos.h
int386x(int __intno, union REGS *__inregs, union REGS *__outregs, struct SREGS *__segregs );dos.h
ioctl();io.h
isatty(int __handle);io.h
labs(long __x);math.h
ldexp(double __x, int __exponent);math.h
ldexp(double __x, int __exponent);math.h
ldexpl(long double __x, int __exponent);math.h
ldexpl(long double __x, int __exponent);math.h
localtime(const time_t _FAR *__timer);time.h
lock(int __handle, long __offset, long __length);io.h
locking(int __handle, int __mode, long __length);io.h
log(double __x);math.h
log(double __x);math.h
log10(double __x);math.h
log10(double __x);math.h
log10l(long double __x);math.h
log10l(long double __x);math.h
logl(long double __x);math.h
logl(long double __x);math.h
lseek(int __handle, long __offset, int __fromwhere);io.h
malloc(size_t  __size);alloc.h
malloc(size_t __size);alloc.h
memccpy(void  *__dest, const void  *__src, int __c, size_t __n);mem.h
memccpy(void  *__dest, const void  *__src, int __c, size_t __n);string.h
memchr(const void  *__s, int __c, size_t __n);mem.h
memchr(const void  *__s, int __c, size_t __n);mem.h
memchr(const void  *__s, int __c, size_t __n);string.h
memchr(void  *__s, int __c, size_t __n);mem.h
memchr(void  *__s, int __c, size_t __n);string.h
memcmp(const void  *__s1, const void  *__s2, size_t __n);mem.h
memcmp(const void  *__s1, const void  *__s2, size_t __n);mem.h
memcmp(const void  *__s1, const void  *__s2, size_t __n);string.h
memcpy(void  *__dest, const void  *__src, size_t __n);mem.h
memcpy(void  *__dest, const void  *__src, size_t __n);string.h
memicmp(const void  *__s1, const void  *__s2, size_t __n);string.h
memmove(void  *__dest, const void  *__src, size_t __n);mem.h
memmove(void  *__dest, const void  *__src, size_t __n);string.h
memset(void  *__s, int __c, size_t __n);mem.h
memset(void  *__s, int __c, size_t __n);string.h
mkdir( const char  *__path );dir.h
mktemp( char  *__template );dir.h
mktemp( char  *__template );io.h
mktime(struct tm _FAR *__timeptr);time.h
modf(double __x, double  *__ipart);math.h
modf(double __x, double * __ipart);math.h
modfl(long double __x, long double  *__ipart);math.h
modfl(long double __x, long double * __ipart);math.h
open(const char  *__path, int __access,... /*unsigned mode*/);io.h
outp(unsigned __portid, int __value);dos.h
outport(unsigned __portid, unsigned __value);dos.h
outportb(unsigned __portid, unsigned char __value);dos.h
outpw(unsigned __portid, unsigned __value);dos.h
parsfnm(const char _FAR *__cmdline, struct fcb _FAR *__fcb, int __opt);dos.h
peek(unsigned __segment, unsigned __offset);dos.h
peekb(unsigned __segment, unsigned __offset);dos.h
perror(const char  *__s);stdio.h
poke(unsigned __segment, unsigned __offset, int __value);dos.h
pokeb(unsigned __segment, unsigned __offset, char __value);dos.h
poly  (double __x, int __degree, double  *__coeffs);math.h
poly(double __x, int __degree, double coeffs []);math.h
polyl  (long double __x, int __degree, long double  *__coeffs);math.h
polyl(long double __x, int __degree, long double coeffs []);math.h
pow(double __x, double __y);math.h
pow(double __x, double __y);math.h
pow10 (int __p);math.h
pow10l (int __p);math.h
pow10l(int __p);math.h
powl(long double __x, long double __y);math.h
powl(long double __x, long double __y);math.h
printf(const char  *__format, ...);stdio.h
putc(const int __c, FILE  *__fp);stdio.h
putchar(const int __c);stdio.h
puts(const char  *__s);stdio.h
putw(int __w, FILE  *__stream);stdio.h
read(int __handle, void  *__buf, unsigned __len);io.h
realloc(void * __block, size_t __size);alloc.h
realloc(void _FAR *__block, size_t __size);alloc.h
remove(const char  *__path);io.h
remove(const char  *__path);stdio.h
rename(const char  *__oldname,const char  *__newname);io.h
rename(const char  *__oldname,const char  *__newname);stdio.h
rewind(FILE  *__stream);stdio.h
rmdir( const char  *__path );dir.h
rmtmp(void);stdio.h
rtl_close(int __handle);io.h
scanf(const char  *__format, ...);stdio.h
searchpath( const char  *__file );dir.h
segread(struct SREGS _FAR *__segp);dos.h
setbuf(FILE  *__stream, char  *__buf);stdio.h
setcbrk(int __cbrkvalue);dos.h
setdate(struct date _FAR *__datep);dos.h
setdisk( int __drive );dir.h
setdta(char *__dta);dos.h
setftime(int __handle, struct ftime  *__ftimep);io.h
setmode(int __handle, int __amode);io.h
settime( struct time _FAR *__timep);dos.h
setvbuf(FILE  *__stream, char  *__buf, int __type, size_t __size);stdio.h
sin(double __x);math.h
sin(double __x);math.h
sinh(double __x);math.h
sinh(double __x);math.h
sinhl(long double __x);math.h
sinhl(long double __x);math.h
sinl(long double __x);math.h
sinl(long double __x);math.h
sopen (const char  *__path, int __access, int __shflag, ... /* unsigned mode */);io.h
sprintf(char  *__buffer, const char  *__format, ...);stdio.h
sqrt(double __x);math.h
sqrt(double __x);math.h
sqrtl(long double __x);math.h
sqrtl(long double __x);math.h
sscanf(const char  *__buffer, const char  *__format, ...);stdio.h
sscanf(const char  *__buffer, const char  *__format, void  *__arglist);stdio.h
stackavail(void);malloc.h
stime(time_t _FAR *__tp);time.h
stpcpy(char  *__dest, const char  *__src);string.h
strcat(char  *__dest, const char  *__src);string.h
strchr(char  * __s, int __c);string.h
strchr(const char  * __s, int __c);string.h
strcmp(const char  *__s1, const char  *__s2);string.h
strcoll(const char * __s1, const char * __s2);string.h
strcpy(char  *__dest, const char  *__src);string.h
strcspn(const char  *__s1, const char  *__s2);string.h
strdup(const char  *__s);string.h
strerror(int __errnum);stdio.h
strerror(int __errnum);string.h
strftime(char _FAR *__s, size_t __maxsize, const char _FAR *__fmt, const struct tm _FAR *__t);time.h
stricmp(const char  *__s1, const char  *__s2);string.h
strlen(const char  *__s);string.h
strlwr(char  *__s);string.h
strncat(char  *__dest, const char  *__src, size_t __maxlen);string.h
strncmp(const char  *__s1, const char  *__s2, size_t __maxlen);string.h
strncpy(char  *__dest, const char  *__src, size_t __maxlen);string.h
strnicmp(const char  *__s1, const char  *__s2, size_t __maxlen);string.h
strnset(char  *__s, int __ch, size_t __n);string.h
strpbrk(char  *__s1, const char  *__s2);string.h
strpbrk(const char  *__s1, const char  *__s2);string.h
strrchr(char  *__s, int __c);string.h
strrchr(const char  *__s, int __c);string.h
strrev(char  *__s);string.h
strset(char  *__s, int __ch);string.h
strspn(const char  *__s1, const char  *__s2);string.h
strstr(char  *__s1, const char  *__s2);string.h
strstr(const char  *__s1, const char  *__s2);string.h
strtok(char  *__s1, const char  *__s2);string.h
strupr(char  *__s);string.h
strxfrm(char * __s1, const char * __s2, size_t __n );string.h
tan(double __x);math.h
tan(double __x);math.h
tanh(double __x);math.h
tanh(double __x);math.h
tanhl(long double __x);math.h
tanhl(long double __x);math.h
tanl(long double __x);math.h
tanl(long double __x);math.h
tell(int __handle);io.h
tempnam(char  *__dir, char  *__pfx);stdio.h
time(time_t _FAR *__timer);time.h
tmpfile(void);stdio.h
tmpnam(char  *__s);stdio.h
tzset(void);time.h
umask(unsigned __cmask);io.h
ungetc(int __c, FILE  *__stream);stdio.h
unixtodos(long __time, struct date _FAR *__d, struct time _FAR *__t);dos.h
unlink(const char  *__path);io.h
unlink(const char  *__path);stdio.h
unlink(const char _FAR *__path);dos.h
unlock(int __handle, long __offset, long __length);io.h
va_arg(ap, type);stdarg.h
va_end(ap);stdarg.h
va_start(ap, parmN);stdarg.h
vfprintf(FILE  *__stream, const char  *__format, void  *__arglist);stdio.h
vfscanf(FILE  *__stream, const char  *__format, void  *__arglist);stdio.h
vprintf(const char  *__format, void  *__arglist);stdio.h
vscanf(const char  *__format, void  *__arglist);stdio.h
vsprintf(char  *__buffer, const char  *__format, void  *__arglist);stdio.h
write(int __handle, const void  *__buf, unsigned __len);io.h


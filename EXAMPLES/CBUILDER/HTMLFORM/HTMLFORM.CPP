//----------------------------------------------------------------------------
// ObjectWindows
// Copyright (c) 1997 by Borland International, All Rights Reserved
//
// HTMLFORM.CPP
//
// This file, originally generated by C++Builder, implements the VCL form
// this example instantiates as its client window.
//----------------------------------------------------------------------------
#define STRICT
// #include <owl\pch.h>
#include <services\defs.h>
#include <owl\window.h>
#include <owl\messageb.h>
#include <vcl\vcl.h>
#pragma hdrstop

#include "HTMLform.h"
//---------------------------------------------------------------------------
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
    : TForm(Owner)
{
  LoadButton->Enabled = !URLComboBox->Text.IsEmpty();
  ReloadButton->Enabled = HTML->URL > 0;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormCreate(TObject */*Sender*/)
{
}
//---------------------------------------------------------------------
void __fastcall TForm1::HTMLBeginRetrieval(TObject */*Sender*/)
{
  ReloadButton->Enabled = false;
}
//---------------------------------------------------------------------
void __fastcall TForm1::HTMLEndRetrieval(TObject */*Sender*/)
{
  ReloadButton->Enabled = true;
  SetStatusText("Done.");

  // Add newly retrieved URL to history list.  The history
  // list is sorted with the most recently accessed URL at
  // the top.  All items in the list are unique--no duplicates.
  //
  int ListPosition = URLComboBox->Items->IndexOf(HTML->URL);
  if (ListPosition == -1)
    URLComboBox->Items->Insert(0, HTML->URL);
  else
    URLComboBox->Items->Move(ListPosition, 0);
}
//---------------------------------------------------------------------
void __fastcall TForm1::HTMLError(TObject */*Sender*/, Smallint /*Number*/,
                                  String &/*Description*/, Integer /*Scode*/,
                                  const String /*Source*/,
                                  const String /*HelpFile*/,
                                  Integer /*HelpContext*/,
                                  WordBool &/*CancelDisplay*/)
{
  SetStatusText("Error retrieving " + HTML->RequestURL);
}
//---------------------------------------------------------------------

void __fastcall TForm1::LoadButtonClick(TObject */*Sender*/)
{
  RetrieveURL(URLComboBox->Text);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::HomeButtonClick(TObject */*Sender*/)
{
  RetrieveURL("http://www.borland.com");
}
//---------------------------------------------------------------------------
void __fastcall TForm1::ReloadButtonClick(TObject */*Sender*/)
{
  RetrieveURL(HTML->URL);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::URLComboBoxChange(TObject */*Sender*/)
{
  LoadButton->Enabled = !URLComboBox->Text.IsEmpty();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::RetrieveURL(AnsiString URL)
{
  SetStatusText("Retrieving document " + URL + "...");
  try
  {
    HTML->RequestDoc(URL);
  }
  catch (EOleException* e)
  {
    ShowMessage(e->Message);
  }
}
//---------------------------------------------------------------------------
// Set text in the OWL status bar
//
void __fastcall TForm1::SetStatusText(AnsiString text)
{
  // Get the OWL object that wraps the parent of this form--
  // in other words, the TDecoratedFrame
  //
  ::TWindow* frame = GetObjectPtr(ParentWindow);
  if (frame) {
    TMessageBar* mbar = TYPESAFE_DOWNCAST(
      frame->ChildWithId(IDW_STATUSBAR),
      TMessageBar);
    if (mbar)
      mbar->SetText(text.c_str());
  }    
}

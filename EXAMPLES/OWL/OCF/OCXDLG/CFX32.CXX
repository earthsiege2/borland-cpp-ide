#include <ocf/automacr.h>
#include "olectl.h"
#include "cfx32.HXX"

// TKIND_DISPATCH: _DChartfx {2DC488B0-D891-101B-8652-00AA003A5593}\409 Dispatch interface for ChartFX Control

short _DChartfx::GetThisSerie()     
{
  AUTONAMES0("ThisSerie")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetThisSerie(short val) 
{
  AUTONAMES0("ThisSerie")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetThisPoint()     
{
  AUTONAMES0("ThisPoint")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetThisPoint(short val) 
{
  AUTONAMES0("ThisPoint")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

bool _DChartfx::GetAutoInvalidate()     
{
  AUTONAMES0("AutoInvalidate")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetAutoInvalidate(bool val) 
{
  AUTONAMES0("AutoInvalidate")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

long _DChartfx::GetType()     
{
  AUTONAMES0("Type")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetType(long val) 
{
  AUTONAMES0("Type")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

long _DChartfx::GetStyle()     
{
  AUTONAMES0("Style")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetStyle(long val) 
{
  AUTONAMES0("Style")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetNSeries()     
{
  AUTONAMES0("NSeries")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetNSeries(short val) 
{
  AUTONAMES0("NSeries")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetNValues()     
{
  AUTONAMES0("NValues")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetNValues(short val) 
{
  AUTONAMES0("NValues")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetThisColor()     
{
  AUTONAMES0("ThisColor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetThisColor(OLE_COLOR val) 
{
  AUTONAMES0("ThisColor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetThisBkColor()     
{
  AUTONAMES0("ThisBkColor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetThisBkColor(OLE_COLOR val) 
{
  AUTONAMES0("ThisBkColor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetLeftGap()     
{
  AUTONAMES0("LeftGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLeftGap(short val) 
{
  AUTONAMES0("LeftGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetRightGap()     
{
  AUTONAMES0("RightGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRightGap(short val) 
{
  AUTONAMES0("RightGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetTopGap()     
{
  AUTONAMES0("TopGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetTopGap(short val) 
{
  AUTONAMES0("TopGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetBottomGap()     
{
  AUTONAMES0("BottomGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetBottomGap(short val) 
{
  AUTONAMES0("BottomGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetDecimals()     
{
  AUTONAMES0("Decimals")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetDecimals(short val) 
{
  AUTONAMES0("Decimals")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetPointType()     
{
  AUTONAMES0("PointType")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetPointType(short val) 
{
  AUTONAMES0("PointType")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetScheme()     
{
  AUTONAMES0("Scheme")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetScheme(short val) 
{
  AUTONAMES0("Scheme")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetStacked()     
{
  AUTONAMES0("Stacked")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetStacked(short val) 
{
  AUTONAMES0("Stacked")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetGrid()     
{
  AUTONAMES0("Grid")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetGrid(short val) 
{
  AUTONAMES0("Grid")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetWallWidth()     
{
  AUTONAMES0("WallWidth")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetWallWidth(short val) 
{
  AUTONAMES0("WallWidth")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetBarHorzGap()     
{
  AUTONAMES0("BarHorzGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetBarHorzGap(short val) 
{
  AUTONAMES0("BarHorzGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

bool _DChartfx::GetView3D()     
{
  AUTONAMES0("View3D")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetView3D(bool val) 
{
  AUTONAMES0("View3D")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

long _DChartfx::GetAngles3D()     
{
  AUTONAMES0("Angles3D")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetAngles3D(long val) 
{
  AUTONAMES0("Angles3D")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetPixFactor()     
{
  AUTONAMES0("PixFactor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetPixFactor(short val) 
{
  AUTONAMES0("PixFactor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetLineWidth()     
{
  AUTONAMES0("LineWidth")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLineWidth(short val) 
{
  AUTONAMES0("LineWidth")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetLineStyle()     
{
  AUTONAMES0("LineStyle")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLineStyle(short val) 
{
  AUTONAMES0("LineStyle")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetLineColor()     
{
  AUTONAMES0("LineColor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLineColor(OLE_COLOR val) 
{
  AUTONAMES0("LineColor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetLineBkColor()     
{
  AUTONAMES0("LineBkColor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLineBkColor(OLE_COLOR val) 
{
  AUTONAMES0("LineBkColor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetFixedWidth()     
{
  AUTONAMES0("FixedWidth")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixedWidth(short val) 
{
  AUTONAMES0("FixedWidth")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetFixedStyle()     
{
  AUTONAMES0("FixedStyle")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixedStyle(short val) 
{
  AUTONAMES0("FixedStyle")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetFixedColor()     
{
  AUTONAMES0("FixedColor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixedColor(OLE_COLOR val) 
{
  AUTONAMES0("FixedColor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetFixedBkColor()     
{
  AUTONAMES0("FixedBkColor")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixedBkColor(OLE_COLOR val) 
{
  AUTONAMES0("FixedBkColor")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetFixedGap()     
{
  AUTONAMES0("FixedGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixedGap(short val) 
{
  AUTONAMES0("FixedGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetRGBBarHorz()     
{
  AUTONAMES0("RGBBarHorz")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRGBBarHorz(OLE_COLOR val) 
{
  AUTONAMES0("RGBBarHorz")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetRGBBk()     
{
  AUTONAMES0("RGBBk")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRGBBk(OLE_COLOR val) 
{
  AUTONAMES0("RGBBk")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetRGB2DBk()     
{
  AUTONAMES0("RGB2DBk")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRGB2DBk(OLE_COLOR val) 
{
  AUTONAMES0("RGB2DBk")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetRGB3DBk()     
{
  AUTONAMES0("RGB3DBk")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRGB3DBk(OLE_COLOR val) 
{
  AUTONAMES0("RGB3DBk")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

bool _DChartfx::GetShowStatus()     
{
  AUTONAMES0("ShowStatus")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetShowStatus(bool val) 
{
  AUTONAMES0("ShowStatus")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

TAutoString _DChartfx::GetLanguage()     
{
  AUTONAMES0("Language")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLanguage(TAutoString val) 
{
  AUTONAMES0("Language")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetHText()     
{
  AUTONAMES0("HText")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetHText(TAutoString val) 
{
  AUTONAMES0("HText")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetExportFile()     
{
  AUTONAMES0("ExportFile")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetExportFile(TAutoString val) 
{
  AUTONAMES0("ExportFile")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetImportFile()     
{
  AUTONAMES0("ImportFile")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetImportFile(TAutoString val) 
{
  AUTONAMES0("ImportFile")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetWriteTemplate()     
{
  AUTONAMES0("WriteTemplate")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetWriteTemplate(TAutoString val) 
{
  AUTONAMES0("WriteTemplate")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetReadTemplate()     
{
  AUTONAMES0("ReadTemplate")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetReadTemplate(TAutoString val) 
{
  AUTONAMES0("ReadTemplate")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetChartStatus()     
{
  AUTONAMES0("ChartStatus")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetChartStatus(short val) 
{
  AUTONAMES0("ChartStatus")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetEdit()     
{
  AUTONAMES0("Edit")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetEdit(short val) 
{
  AUTONAMES0("Edit")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetCopyData()     
{
  AUTONAMES0("CopyData")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetCopyData(short val) 
{
  AUTONAMES0("CopyData")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetCopyBitmap()     
{
  AUTONAMES0("CopyBitmap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetCopyBitmap(short val) 
{
  AUTONAMES0("CopyBitmap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetPrint()     
{
  AUTONAMES0("Print")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetPrint(short val) 
{
  AUTONAMES0("Print")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetChartType()     
{
  AUTONAMES0("ChartType")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetChartType(short val) 
{
  AUTONAMES0("ChartType")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

bool _DChartfx::GetChart3D()     
{
  AUTONAMES0("Chart3D")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetChart3D(bool val) 
{
  AUTONAMES0("Chart3D")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

bool _DChartfx::GetToolBar()     
{
  AUTONAMES0("ToolBar")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetToolBar(bool val) 
{
  AUTONAMES0("ToolBar")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

bool _DChartfx::GetPaletteBar()     
{
  AUTONAMES0("PaletteBar")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetPaletteBar(bool val) 
{
  AUTONAMES0("PaletteBar")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

bool _DChartfx::GetPatternBar()     
{
  AUTONAMES0("PatternBar")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetPatternBar(bool val) 
{
  AUTONAMES0("PatternBar")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

long _DChartfx::GetCustTool()     
{
  AUTONAMES0("CustTool")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetCustTool(long val) 
{
  AUTONAMES0("CustTool")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GethCtlWnd()     
{
  AUTONAMES0("hCtlWnd")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SethCtlWnd(short val) 
{
  AUTONAMES0("hCtlWnd")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

long _DChartfx::GetReturnValue()     
{
  AUTONAMES0("ReturnValue")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetReturnValue(long val) 
{
  AUTONAMES0("ReturnValue")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

bool _DChartfx::GetAutoIncrement()     
{
  AUTONAMES0("AutoIncrement")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetAutoIncrement(bool val) 
{
  AUTONAMES0("AutoIncrement")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

double _DChartfx::GetThisValue()     
{
  AUTONAMES0("ThisValue")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetThisValue(double val) 
{
  AUTONAMES0("ThisValue")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetVertGridGap()     
{
  AUTONAMES0("VertGridGap")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetVertGridGap(short val) 
{
  AUTONAMES0("VertGridGap")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetXLegType()     
{
  AUTONAMES0("XLegType")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetXLegType(short val) 
{
  AUTONAMES0("XLegType")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetConstType()     
{
  AUTONAMES0("ConstType")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetConstType(short val) 
{
  AUTONAMES0("ConstType")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

#if defined(AUTOVAL_HAS_IDISPFONT_SUPPORT)

IFontDisp far* _DChartfx::GetLeftFont()     
{
  AUTONAMES0("LeftFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLeftFont(IFontDisp far* val) 
{
  AUTONAMES0("LeftFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetRightFont()     
{
  AUTONAMES0("RightFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRightFont(IFontDisp far* val) 
{
  AUTONAMES0("RightFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetTopFont()     
{
  AUTONAMES0("TopFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetTopFont(IFontDisp far* val) 
{
  AUTONAMES0("TopFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetBottomFont()     
{
  AUTONAMES0("BottomFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetBottomFont(IFontDisp far* val) 
{
  AUTONAMES0("BottomFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetXLegFont()     
{
  AUTONAMES0("XLegFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetXLegFont(IFontDisp far* val) 
{
  AUTONAMES0("XLegFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetYLegFont()     
{
  AUTONAMES0("YLegFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetYLegFont(IFontDisp far* val) 
{
  AUTONAMES0("YLegFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetFixedFont()     
{
  AUTONAMES0("FixedFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixedFont(IFontDisp far* val) 
{
  AUTONAMES0("FixedFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

IFontDisp far* _DChartfx::GetLegendFont()     
{
  AUTONAMES0("LegendFont")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLegendFont(IFontDisp far* val) 
{
  AUTONAMES0("LegendFont")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

#endif

bool _DChartfx::GetEnabled()     
{
  AUTONAMES0("Enabled")
  AUTOARGS0()
  AUTOCALL_PROP_CONV(TBool)
}

void _DChartfx::SetEnabled(bool val) 
{
  AUTONAMES0("Enabled")
  AUTOARGS0()
  AUTOCALL_PROP_SET(TBool(val))
}

OLE_HANDLE _DChartfx::GethWnd()     
{
  AUTONAMES0("hWnd")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SethWnd(OLE_HANDLE val) 
{
  AUTONAMES0("hWnd")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetBorderStyle()     
{
  AUTONAMES0("BorderStyle")
  AUTOARGS0()
  AUTOCALL_PROP_GET
}

void _DChartfx::SetBorderStyle(short val) 
{
  AUTONAMES0("BorderStyle")
  AUTOARGS0()
  AUTOCALL_PROP_SET(val)
}

double _DChartfx::GetValue(short index) 
{
  AUTONAMES0("Value")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetValue(short val, double index) 
{
  AUTONAMES0("Value")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

double _DChartfx::GetXValue(short index) 
{
  AUTONAMES0("XValue")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetXValue(short val, double index) 
{
  AUTONAMES0("XValue")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

double _DChartfx::GetIniValue(short index) 
{
  AUTONAMES0("IniValue")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetIniValue(short val, double index) 
{
  AUTONAMES0("IniValue")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

double _DChartfx::GetConst(short index) 
{
  AUTONAMES0("Const")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetConst(short val, double index) 
{
  AUTONAMES0("Const")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetColor(short index) 
{
  AUTONAMES0("Color")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetColor(short val, OLE_COLOR index) 
{
  AUTONAMES0("Color")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetBkColor(short index) 
{
  AUTONAMES0("BkColor")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetBkColor(short val, OLE_COLOR index) 
{
  AUTONAMES0("BkColor")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

double _DChartfx::GetAdm(short index) 
{
  AUTONAMES0("Adm")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetAdm(short val, double index) 
{
  AUTONAMES0("Adm")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetPattern(short index) 
{
  AUTONAMES0("Pattern")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetPattern(short val, short index) 
{
  AUTONAMES0("Pattern")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetDblClk(short index) 
{
  AUTONAMES0("DblClk")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetDblClk(short val, short index) 
{
  AUTONAMES0("DblClk")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetRigClk(short index) 
{
  AUTONAMES0("RigClk")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRigClk(short val, short index) 
{
  AUTONAMES0("RigClk")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

long _DChartfx::GetFont(short index) 
{
  AUTONAMES0("Font")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFont(short val, long index) 
{
  AUTONAMES0("Font")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetTitle(short index) 
{
  AUTONAMES0("Title")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetTitle(short val, TAutoString index) 
{
  AUTONAMES0("Title")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

long _DChartfx::GetStatus(short index) 
{
  AUTONAMES0("Status")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetStatus(short val, long index) 
{
  AUTONAMES0("Status")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetLegend(short index) 
{
  AUTONAMES0("Legend")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetLegend(short val, TAutoString index) 
{
  AUTONAMES0("Legend")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetSerLeg(short index) 
{
  AUTONAMES0("SerLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetSerLeg(short val, TAutoString index) 
{
  AUTONAMES0("SerLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetKeyLeg(short index) 
{
  AUTONAMES0("KeyLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetKeyLeg(short val, TAutoString index) 
{
  AUTONAMES0("KeyLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetFixLeg(short index) 
{
  AUTONAMES0("FixLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetFixLeg(short val, TAutoString index) 
{
  AUTONAMES0("FixLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetYLeg(short index) 
{
  AUTONAMES0("YLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetYLeg(short val, TAutoString index) 
{
  AUTONAMES0("YLeg")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetKeySer(short index) 
{
  AUTONAMES0("KeySer")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetKeySer(short val, TAutoString index) 
{
  AUTONAMES0("KeySer")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

TAutoString _DChartfx::GetStatusText(short index) 
{
  AUTONAMES0("StatusText")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetStatusText(short val, TAutoString index) 
{
  AUTONAMES0("StatusText")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetRGBFont(short index) 
{
  AUTONAMES0("RGBFont")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetRGBFont(short val, OLE_COLOR index) 
{
  AUTONAMES0("RGBFont")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetHFont(short index) 
{
  AUTONAMES0("HFont")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetHFont(short val, short index) 
{
  AUTONAMES0("HFont")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetItemWidth(short index) 
{
  AUTONAMES0("ItemWidth")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetItemWidth(short val, short index) 
{
  AUTONAMES0("ItemWidth")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetItemStyle(short index) 
{
  AUTONAMES0("ItemStyle")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetItemStyle(short val, short index) 
{
  AUTONAMES0("ItemStyle")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

OLE_COLOR _DChartfx::GetItemColor(short index) 
{
  AUTONAMES0("ItemColor")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetItemColor(short val, OLE_COLOR index) 
{
  AUTONAMES0("ItemColor")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetDecimalsNum(short index) 
{
  AUTONAMES0("DecimalsNum")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetDecimalsNum(short val, short index) 
{
  AUTONAMES0("DecimalsNum")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

long _DChartfx::GetOpenData(short index) 
{
  AUTONAMES0("OpenData")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetOpenData(short val, long index) 
{
  AUTONAMES0("OpenData")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

long _DChartfx::GetCloseData(short index) 
{
  AUTONAMES0("CloseData")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetCloseData(short val, long index) 
{
  AUTONAMES0("CloseData")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

short _DChartfx::GetShowDialog(short index) 
{
  AUTONAMES0("ShowDialog")
  AUTOARGS1(index)
  AUTOCALL_PROP_GET
}

void _DChartfx::SetShowDialog(short val, short index) 
{
  AUTONAMES0("ShowDialog")
  AUTOARGS1(index)
  AUTOCALL_PROP_SET(val)
}

void _DChartfx::AboutBox() 
{
  AUTONAMES0("AboutBox")
  AUTOARGS0()
  AUTOCALL_METHOD_VOID
}

void _DChartfx::Refresh() 
{
  AUTONAMES0("Refresh")
  AUTOARGS0()
  AUTOCALL_METHOD_VOID
}


// TKIND_DISPATCH: _DChartfxEvents {2DC488B1-D891-101B-8652-00AA003A5593}\409 Event interface for ChartFX Control

void _DChartfxEvents::LButtonDblClk(short far* X, short far* Y, short far* nSerie, short far* nPoint, short far* nRes) 
{
  AUTONAMES0("LButtonDblClk")
  AUTOARGS5(X, Y, nSerie, nPoint, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::RButtonDown(short far* X, short far* Y, short far* nSerie, short far* nPoint, short far* nRes) 
{
  AUTONAMES0("RButtonDown")
  AUTOARGS5(X, Y, nSerie, nPoint, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangeValue(double far* dValue, short far* nSerie, short far* nPoint, short far* nRes) 
{
  AUTONAMES0("ChangeValue")
  AUTOARGS4(dValue, nSerie, nPoint, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangeString(short far* nType, short far* nIndex, short far* nRes) 
{
  AUTONAMES0("ChangeString")
  AUTOARGS3(nType, nIndex, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangeColor(short far* nType, short far* nIndex, short far* nRes) 
{
  AUTONAMES0("ChangeColor")
  AUTOARGS3(nType, nIndex, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::Destroy() 
{
  AUTONAMES0("Destroy")
  AUTOARGS0()
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ReadFile() 
{
  AUTONAMES0("ReadFile")
  AUTOARGS0()
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangePalette(short far* nIndex, short far* nRes) 
{
  AUTONAMES0("ChangePalette")
  AUTOARGS2(nIndex, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangeFont(short far* nIndex, short far* nRes) 
{
  AUTONAMES0("ChangeFont")
  AUTOARGS2(nIndex, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ReadTemplate() 
{
  AUTONAMES0("ReadTemplate")
  AUTOARGS0()
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangePattern(short far* nType, short far* nIndex, short far* nRes) 
{
  AUTONAMES0("ChangePattern")
  AUTOARGS3(nType, nIndex, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangePattPal(short far* nIndex, short far* nRes) 
{
  AUTONAMES0("ChangePattPal")
  AUTOARGS2(nIndex, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::Menu(short far* wParam, short far* nSerie, short far* nPoint, short far* nRes) 
{
  AUTONAMES0("Menu")
  AUTOARGS4(wParam, nSerie, nPoint, nRes)
  AUTOCALL_METHOD_VOID
}

void _DChartfxEvents::ChangeType(short far* nType, short far* nRes) 
{
  AUTONAMES0("ChangeType")
  AUTOARGS2(nType, nRes)
  AUTOCALL_METHOD_VOID
}


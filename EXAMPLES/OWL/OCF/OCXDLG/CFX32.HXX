// Type Library: cfx32.ocx  ChartFX OLE Custom Control
// ChartfxLib 2.0 {8996B0A4-D7BE-101B-8650-00AA003A5593}\0

#include <ocf/automacr.h>

class _DChartfx;
class _DChartfxEvents;

// TKIND_DISPATCH: _DChartfx {2DC488B0-D891-101B-8652-00AA003A5593}\409 Dispatch interface for ChartFX Control

class _DChartfx : public TAutoProxy {
  public:
    _DChartfx() : TAutoProxy(0x409) {}
    short GetThisSerie();     // [id(1), prop r/w]
    void SetThisSerie(short); // [id(1), prop r/w]
    short GetThisPoint();     // [id(2), prop r/w]
    void SetThisPoint(short); // [id(2), prop r/w]
    bool GetAutoInvalidate();     // [id(3), prop r/w]
    void SetAutoInvalidate(bool); // [id(3), prop r/w]
    long GetType();     // [id(4), prop r/w]
    void SetType(long); // [id(4), prop r/w]
    long GetStyle();     // [id(5), prop r/w]
    void SetStyle(long); // [id(5), prop r/w]
    short GetNSeries();     // [id(6), prop r/w]
    void SetNSeries(short); // [id(6), prop r/w]
    short GetNValues();     // [id(7), prop r/w]
    void SetNValues(short); // [id(7), prop r/w]
    OLE_COLOR GetThisColor();     // [id(8), prop r/w]
    void SetThisColor(OLE_COLOR); // [id(8), prop r/w]
    OLE_COLOR GetThisBkColor();     // [id(9), prop r/w]
    void SetThisBkColor(OLE_COLOR); // [id(9), prop r/w]
    short GetLeftGap();     // [id(10), prop r/w]
    void SetLeftGap(short); // [id(10), prop r/w]
    short GetRightGap();     // [id(11), prop r/w]
    void SetRightGap(short); // [id(11), prop r/w]
    short GetTopGap();     // [id(12), prop r/w]
    void SetTopGap(short); // [id(12), prop r/w]
    short GetBottomGap();     // [id(13), prop r/w]
    void SetBottomGap(short); // [id(13), prop r/w]
    short GetDecimals();     // [id(14), prop r/w]
    void SetDecimals(short); // [id(14), prop r/w]
    short GetPointType();     // [id(15), prop r/w]
    void SetPointType(short); // [id(15), prop r/w]
    short GetScheme();     // [id(16), prop r/w]
    void SetScheme(short); // [id(16), prop r/w]
    short GetStacked();     // [id(17), prop r/w]
    void SetStacked(short); // [id(17), prop r/w]
    short GetGrid();     // [id(18), prop r/w]
    void SetGrid(short); // [id(18), prop r/w]
    short GetWallWidth();     // [id(19), prop r/w]
    void SetWallWidth(short); // [id(19), prop r/w]
    short GetBarHorzGap();     // [id(20), prop r/w]
    void SetBarHorzGap(short); // [id(20), prop r/w]
    bool GetView3D();     // [id(21), prop r/w]
    void SetView3D(bool); // [id(21), prop r/w]
    long GetAngles3D();     // [id(22), prop r/w]
    void SetAngles3D(long); // [id(22), prop r/w]
    short GetPixFactor();     // [id(23), prop r/w]
    void SetPixFactor(short); // [id(23), prop r/w]
    short GetLineWidth();     // [id(24), prop r/w]
    void SetLineWidth(short); // [id(24), prop r/w]
    short GetLineStyle();     // [id(25), prop r/w]
    void SetLineStyle(short); // [id(25), prop r/w]
    OLE_COLOR GetLineColor();     // [id(26), prop r/w]
    void SetLineColor(OLE_COLOR); // [id(26), prop r/w]
    OLE_COLOR GetLineBkColor();     // [id(27), prop r/w]
    void SetLineBkColor(OLE_COLOR); // [id(27), prop r/w]
    short GetFixedWidth();     // [id(28), prop r/w]
    void SetFixedWidth(short); // [id(28), prop r/w]
    short GetFixedStyle();     // [id(29), prop r/w]
    void SetFixedStyle(short); // [id(29), prop r/w]
    OLE_COLOR GetFixedColor();     // [id(30), prop r/w]
    void SetFixedColor(OLE_COLOR); // [id(30), prop r/w]
    OLE_COLOR GetFixedBkColor();     // [id(31), prop r/w]
    void SetFixedBkColor(OLE_COLOR); // [id(31), prop r/w]
    short GetFixedGap();     // [id(32), prop r/w]
    void SetFixedGap(short); // [id(32), prop r/w]
    OLE_COLOR GetRGBBarHorz();     // [id(33), prop r/w]
    void SetRGBBarHorz(OLE_COLOR); // [id(33), prop r/w]
    OLE_COLOR GetRGBBk();     // [id(34), prop r/w]
    void SetRGBBk(OLE_COLOR); // [id(34), prop r/w]
    OLE_COLOR GetRGB2DBk();     // [id(35), prop r/w]
    void SetRGB2DBk(OLE_COLOR); // [id(35), prop r/w]
    OLE_COLOR GetRGB3DBk();     // [id(36), prop r/w]
    void SetRGB3DBk(OLE_COLOR); // [id(36), prop r/w]
    bool GetShowStatus();     // [id(37), prop r/w]
    void SetShowStatus(bool); // [id(37), prop r/w]
    TAutoString GetLanguage();     // [id(38), prop r/w]
    void SetLanguage(TAutoString); // [id(38), prop r/w]
    TAutoString GetHText();     // [id(39), prop r/w]
    void SetHText(TAutoString); // [id(39), prop r/w]
    TAutoString GetExportFile();     // [id(40), prop r/w]
    void SetExportFile(TAutoString); // [id(40), prop r/w]
    TAutoString GetImportFile();     // [id(41), prop r/w]
    void SetImportFile(TAutoString); // [id(41), prop r/w]
    TAutoString GetWriteTemplate();     // [id(42), prop r/w]
    void SetWriteTemplate(TAutoString); // [id(42), prop r/w]
    TAutoString GetReadTemplate();     // [id(43), prop r/w]
    void SetReadTemplate(TAutoString); // [id(43), prop r/w]
    short GetChartStatus();     // [id(44), prop r/w]
    void SetChartStatus(short); // [id(44), prop r/w]
    short GetEdit();     // [id(45), prop r/w]
    void SetEdit(short); // [id(45), prop r/w]
    short GetCopyData();     // [id(46), prop r/w]
    void SetCopyData(short); // [id(46), prop r/w]
    short GetCopyBitmap();     // [id(47), prop r/w]
    void SetCopyBitmap(short); // [id(47), prop r/w]
    short GetPrint();     // [id(48), prop r/w]
    void SetPrint(short); // [id(48), prop r/w]
    short GetChartType();     // [id(49), prop r/w]
    void SetChartType(short); // [id(49), prop r/w]
    bool GetChart3D();     // [id(50), prop r/w]
    void SetChart3D(bool); // [id(50), prop r/w]
    bool GetToolBar();     // [id(51), prop r/w]
    void SetToolBar(bool); // [id(51), prop r/w]
    bool GetPaletteBar();     // [id(52), prop r/w]
    void SetPaletteBar(bool); // [id(52), prop r/w]
    bool GetPatternBar();     // [id(53), prop r/w]
    void SetPatternBar(bool); // [id(53), prop r/w]
    long GetCustTool();     // [id(54), prop r/w]
    void SetCustTool(long); // [id(54), prop r/w]
    short GethCtlWnd();     // [id(55), prop r/w]
    void SethCtlWnd(short); // [id(55), prop r/w]
    long GetReturnValue();     // [id(56), prop r/w]
    void SetReturnValue(long); // [id(56), prop r/w]
    bool GetAutoIncrement();     // [id(57), prop r/w]
    void SetAutoIncrement(bool); // [id(57), prop r/w]
    double GetThisValue();     // [id(58), prop r/w]
    void SetThisValue(double); // [id(58), prop r/w]
    short GetVertGridGap();     // [id(59), prop r/w]
    void SetVertGridGap(short); // [id(59), prop r/w]
    short GetXLegType();     // [id(60), prop r/w]
    void SetXLegType(short); // [id(60), prop r/w]
    short GetConstType();     // [id(61), prop r/w]
    void SetConstType(short); // [id(61), prop r/w]
    IFontDisp far* GetLeftFont();     // [id(62), prop r/w]
    void SetLeftFont(IFontDisp far*); // [id(62), prop r/w]
    IFontDisp far* GetRightFont();     // [id(63), prop r/w]
    void SetRightFont(IFontDisp far*); // [id(63), prop r/w]
    IFontDisp far* GetTopFont();     // [id(64), prop r/w]
    void SetTopFont(IFontDisp far*); // [id(64), prop r/w]
    IFontDisp far* GetBottomFont();     // [id(65), prop r/w]
    void SetBottomFont(IFontDisp far*); // [id(65), prop r/w]
    IFontDisp far* GetXLegFont();     // [id(66), prop r/w]
    void SetXLegFont(IFontDisp far*); // [id(66), prop r/w]
    IFontDisp far* GetYLegFont();     // [id(67), prop r/w]
    void SetYLegFont(IFontDisp far*); // [id(67), prop r/w]
    IFontDisp far* GetFixedFont();     // [id(68), prop r/w]
    void SetFixedFont(IFontDisp far*); // [id(68), prop r/w]
    IFontDisp far* GetLegendFont();     // [id(69), prop r/w]
    void SetLegendFont(IFontDisp far*); // [id(69), prop r/w]
    bool GetEnabled();     // [id(-514), prop r/w]
    void SetEnabled(bool); // [id(-514), prop r/w]
    OLE_HANDLE GethWnd();     // [id(-515), prop r/w]
    void SethWnd(OLE_HANDLE); // [id(-515), prop r/w]
    short GetBorderStyle();     // [id(-504), prop r/w]
    void SetBorderStyle(short); // [id(-504), prop r/w]
    double GetValue(short index); // [id(71), propget]
    void SetValue(short, double index); // [id(71), propset]
    double GetXValue(short index); // [id(72), propget]
    void SetXValue(short, double index); // [id(72), propset]
    double GetIniValue(short index); // [id(73), propget]
    void SetIniValue(short, double index); // [id(73), propset]
    double GetConst(short index); // [id(74), propget]
    void SetConst(short, double index); // [id(74), propset]
    OLE_COLOR GetColor(short index); // [id(75), propget]
    void SetColor(short, OLE_COLOR index); // [id(75), propset]
    OLE_COLOR GetBkColor(short index); // [id(76), propget]
    void SetBkColor(short, OLE_COLOR index); // [id(76), propset]
    double GetAdm(short index); // [id(77), propget]
    void SetAdm(short, double index); // [id(77), propset]
    short GetPattern(short index); // [id(78), propget]
    void SetPattern(short, short index); // [id(78), propset]
    short GetDblClk(short index); // [id(79), propget]
    void SetDblClk(short, short index); // [id(79), propset]
    short GetRigClk(short index); // [id(80), propget]
    void SetRigClk(short, short index); // [id(80), propset]
    long GetFont(short index); // [id(81), propget]
    void SetFont(short, long index); // [id(81), propset]
    TAutoString GetTitle(short index); // [id(82), propget]
    void SetTitle(short, TAutoString index); // [id(82), propset]
    long GetStatus(short index); // [id(83), propget]
    void SetStatus(short, long index); // [id(83), propset]
    TAutoString GetLegend(short index); // [id(84), propget]
    void SetLegend(short, TAutoString index); // [id(84), propset]
    TAutoString GetSerLeg(short index); // [id(85), propget]
    void SetSerLeg(short, TAutoString index); // [id(85), propset]
    TAutoString GetKeyLeg(short index); // [id(86), propget]
    void SetKeyLeg(short, TAutoString index); // [id(86), propset]
    TAutoString GetFixLeg(short index); // [id(87), propget]
    void SetFixLeg(short, TAutoString index); // [id(87), propset]
    TAutoString GetYLeg(short index); // [id(88), propget]
    void SetYLeg(short, TAutoString index); // [id(88), propset]
    TAutoString GetKeySer(short index); // [id(89), propget]
    void SetKeySer(short, TAutoString index); // [id(89), propset]
    TAutoString GetStatusText(short index); // [id(90), propget]
    void SetStatusText(short, TAutoString index); // [id(90), propset]
    OLE_COLOR GetRGBFont(short index); // [id(91), propget]
    void SetRGBFont(short, OLE_COLOR index); // [id(91), propset]
    short GetHFont(short index); // [id(92), propget]
    void SetHFont(short, short index); // [id(92), propset]
    short GetItemWidth(short index); // [id(93), propget]
    void SetItemWidth(short, short index); // [id(93), propset]
    short GetItemStyle(short index); // [id(94), propget]
    void SetItemStyle(short, short index); // [id(94), propset]
    OLE_COLOR GetItemColor(short index); // [id(95), propget]
    void SetItemColor(short, OLE_COLOR index); // [id(95), propset]
    short GetDecimalsNum(short index); // [id(96), propget]
    void SetDecimalsNum(short, short index); // [id(96), propset]
    long GetOpenData(short index); // [id(97), propget]
    void SetOpenData(short, long index); // [id(97), propset]
    long GetCloseData(short index); // [id(98), propget]
    void SetCloseData(short, long index); // [id(98), propset]
    short GetShowDialog(short index); // [id(99), propget]
    void SetShowDialog(short, short index); // [id(99), propset]
    void AboutBox(); // [id(-552), method]
    void Refresh(); // [id(-550), method]
};

// TKIND_DISPATCH: _DChartfxEvents {2DC488B1-D891-101B-8652-00AA003A5593}\409 Event interface for ChartFX Control

class _DChartfxEvents : public TAutoProxy {
  public:
    _DChartfxEvents() : TAutoProxy(0x409) {}
    void LButtonDblClk(short far* X, short far* Y, short far* nSerie, short far* nPoint, short far* nRes); // [id(1), method]
    void RButtonDown(short far* X, short far* Y, short far* nSerie, short far* nPoint, short far* nRes); // [id(2), method]
    void ChangeValue(double far* dValue, short far* nSerie, short far* nPoint, short far* nRes); // [id(3), method]
    void ChangeString(short far* nType, short far* nIndex, short far* nRes); // [id(4), method]
    void ChangeColor(short far* nType, short far* nIndex, short far* nRes); // [id(5), method]
    void Destroy(); // [id(6), method]
    void ReadFile(); // [id(7), method]
    void ChangePalette(short far* nIndex, short far* nRes); // [id(8), method]
    void ChangeFont(short far* nIndex, short far* nRes); // [id(9), method]
    void ReadTemplate(); // [id(10), method]
    void ChangePattern(short far* nType, short far* nIndex, short far* nRes); // [id(11), method]
    void ChangePattPal(short far* nIndex, short far* nRes); // [id(12), method]
    void Menu(short far* wParam, short far* nSerie, short far* nPoint, short far* nRes); // [id(13), method]
    void ChangeType(short far* nType, short far* nRes); // [id(14), method]
};
